///////////////////////////////////////////////////////////////////////////////
//  PLUCASES.CPP
//
//  Created by :            Date :
//      MichMa                  1/25/94
//
//  Description :
//      Implementation of the CPlusCases class
//

#include "stdafx.h"
#include "plucases.h"

#undef THIS_FILE
static char BASED_CODE THIS_FILE[] = __FILE__;

IMPLEMENT_TEST(CPlusCases, CDebugTestSet, "Plus", 288, CMiscSubSuite)


void CPlusCases::PreRun(void)
	{
	// call the base class
	CTest::PreRun();
	}


void CPlusCases::Run(void)

	{
	InitProject("plus");
	bps.SetBreakpoint("break_here");
	dbg.Go();
	cxx.Enable();

	WriteLog(cxx.ExpressionValueIs("pG->c + Jc[x_0][y_0]", 14) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->c", 14) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jsc[x_1][y_1]", 15) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->c", 15) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Js[x_2][y_2]", 16) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->c", 16) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Ji[x_3][y_3]", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->c", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Juc[x_4][y_4]", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->c", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jus[x_5][y_5]", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->c", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jui[x_6][y_6]", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->c", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jl[x_7][y_7]", 21L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->c", 21L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jul[x_8][y_8]", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->c", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jf[x_9][y_9]", 23.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->c", 23.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jd[x_10][y_10]", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->c", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->c + Jld[x_11][y_11]", 25.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->c", 25.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jc[x_0][y_0]", 15) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->sc", 15) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jsc[x_1][y_1]", 16) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->sc", 16) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Js[x_2][y_2]", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->sc", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Ji[x_3][y_3]", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->sc", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Juc[x_4][y_4]", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->sc", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jus[x_5][y_5]", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->sc", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jui[x_6][y_6]", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->sc", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jl[x_7][y_7]", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->sc", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jul[x_8][y_8]", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->sc", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jf[x_9][y_9]", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->sc", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jd[x_10][y_10]", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->sc", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->sc + Jld[x_11][y_11]", 26.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->sc", 26.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jc[x_0][y_0]", 16) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->s", 16) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jsc[x_1][y_1]", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->s", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Js[x_2][y_2]", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->s", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Ji[x_3][y_3]", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->s", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Juc[x_4][y_4]", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->s", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jus[x_5][y_5]", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->s", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jui[x_6][y_6]", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->s", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jl[x_7][y_7]", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->s", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jul[x_8][y_8]", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->s", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jf[x_9][y_9]", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->s", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jd[x_10][y_10]", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->s", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->s + Jld[x_11][y_11]", 27.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->s", 27.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jc[x_0][y_0]", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->i", 17) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jsc[x_1][y_1]", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->i", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Js[x_2][y_2]", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->i", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Ji[x_3][y_3]", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->i", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Juc[x_4][y_4]", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->i", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jus[x_5][y_5]", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->i", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jui[x_6][y_6]", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->i", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jl[x_7][y_7]", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->i", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jul[x_8][y_8]", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->i", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jf[x_9][y_9]", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->i", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jd[x_10][y_10]", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->i", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->i + Jld[x_11][y_11]", 28.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->i", 28.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jc[x_0][y_0]", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->uc", 18) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jsc[x_1][y_1]", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->uc", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Js[x_2][y_2]", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->uc", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Ji[x_3][y_3]", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->uc", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Juc[x_4][y_4]", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->uc", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jus[x_5][y_5]", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->uc", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jui[x_6][y_6]", 24) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->uc", 24) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jl[x_7][y_7]", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->uc", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jul[x_8][y_8]", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->uc", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jf[x_9][y_9]", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->uc", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jd[x_10][y_10]", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->uc", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->uc + Jld[x_11][y_11]", 29.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->uc", 29.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jc[x_0][y_0]", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->us", 19) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jsc[x_1][y_1]", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->us", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Js[x_2][y_2]", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->us", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Ji[x_3][y_3]", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->us", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Juc[x_4][y_4]", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->us", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jus[x_5][y_5]", 24) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->us", 24) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jui[x_6][y_6]", 25) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->us", 25) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jl[x_7][y_7]", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->us", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jul[x_8][y_8]", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->us", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jf[x_9][y_9]", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->us", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jd[x_10][y_10]", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->us", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->us + Jld[x_11][y_11]", 30.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->us", 30.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jc[x_0][y_0]", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->ui", 20) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jsc[x_1][y_1]", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->ui", 21) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Js[x_2][y_2]", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->ui", 22) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Ji[x_3][y_3]", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->ui", 23) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Juc[x_4][y_4]", 24) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->ui", 24) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jus[x_5][y_5]", 25) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->ui", 25) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jui[x_6][y_6]", 26) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->ui", 26) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jl[x_7][y_7]", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->ui", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jul[x_8][y_8]", 28L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->ui", 28L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jf[x_9][y_9]", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->ui", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jd[x_10][y_10]", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->ui", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ui + Jld[x_11][y_11]", 31.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->ui", 31.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jc[x_0][y_0]", 21L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->l", 21L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jsc[x_1][y_1]", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->l", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Js[x_2][y_2]", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->l", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Ji[x_3][y_3]", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->l", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Juc[x_4][y_4]", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->l", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jus[x_5][y_5]", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->l", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jui[x_6][y_6]", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->l", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jl[x_7][y_7]", 28L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->l", 28L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jul[x_8][y_8]", 29L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->l", 29L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jf[x_9][y_9]", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->l", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jd[x_10][y_10]", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->l", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->l + Jld[x_11][y_11]", 32.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->l", 32.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jc[x_0][y_0]", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->ul", 22L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jsc[x_1][y_1]", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->ul", 23L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Js[x_2][y_2]", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->ul", 24L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Ji[x_3][y_3]", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->ul", 25L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Juc[x_4][y_4]", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->ul", 26L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jus[x_5][y_5]", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->ul", 27L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jui[x_6][y_6]", 28L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->ul", 28L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jl[x_7][y_7]", 29L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->ul", 29L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jul[x_8][y_8]", 30L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->ul", 30L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jf[x_9][y_9]", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->ul", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jd[x_10][y_10]", 32.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->ul", 32.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ul + Jld[x_11][y_11]", 33.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->ul", 33.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jc[x_0][y_0]", 23.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->f", 23.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jsc[x_1][y_1]", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->f", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Js[x_2][y_2]", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->f", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Ji[x_3][y_3]", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->f", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Juc[x_4][y_4]", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->f", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jus[x_5][y_5]", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->f", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jui[x_6][y_6]", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->f", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jl[x_7][y_7]", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->f", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jul[x_8][y_8]", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->f", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jf[x_9][y_9]", 32.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->f", 32.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jd[x_10][y_10]", 33.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->f", 33.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->f + Jld[x_11][y_11]", 34.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->f", 34.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jc[x_0][y_0]", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->d", 24.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jsc[x_1][y_1]", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->d", 25.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Js[x_2][y_2]", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->d", 26.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Ji[x_3][y_3]", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->d", 27.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Juc[x_4][y_4]", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->d", 28.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jus[x_5][y_5]", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->d", 29.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jui[x_6][y_6]", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->d", 30.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jl[x_7][y_7]", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->d", 31.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jul[x_8][y_8]", 32.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->d", 32.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jf[x_9][y_9]", 33.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->d", 33.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jd[x_10][y_10]", 34.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->d", 34.) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->d + Jld[x_11][y_11]", 35.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->d", 35.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jc[x_0][y_0]", 25.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jc[x_0][y_0] + pG->ld", 25.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jsc[x_1][y_1]", 26.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jsc[x_1][y_1] + pG->ld", 26.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Js[x_2][y_2]", 27.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Js[x_2][y_2] + pG->ld", 27.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Ji[x_3][y_3]", 28.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Ji[x_3][y_3] + pG->ld", 28.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Juc[x_4][y_4]", 29.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Juc[x_4][y_4] + pG->ld", 29.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jus[x_5][y_5]", 30.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jus[x_5][y_5] + pG->ld", 30.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jui[x_6][y_6]", 31.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jui[x_6][y_6] + pG->ld", 31.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jl[x_7][y_7]", 32.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jl[x_7][y_7] + pG->ld", 32.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jul[x_8][y_8]", 33.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jul[x_8][y_8] + pG->ld", 33.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jf[x_9][y_9]", 34.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jf[x_9][y_9] + pG->ld", 34.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jd[x_10][y_10]", 35.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jd[x_10][y_10] + pG->ld", 35.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("pG->ld + Jld[x_11][y_11]", 36.L) ? PASSED : FAILED, "line = %d\n", __LINE__);
	WriteLog(cxx.ExpressionValueIs("Jld[x_11][y_11] + pG->ld", 36.L) ? PASSED : FAILED, "line = %d\n", __LINE__);

	cxx.Disable();
    }
