//
// Xbox copy Tool
//
// [colint]
//

#ifndef _INCLUDE_TOOLXBCP_CMN_H
#define _INCLUDE_TOOLXBCP_CMN_H

#include "schmztl.h"			// the CSchmoozeTool class
#include "optnxbcp.h"

#ifdef XBCP

class CXbcpTool : public CSchmoozeTool
{
	DECLARE_DYNAMIC (CXbcpTool)

	static const SchmoozeData m_XbcpSchmoozeData;
	virtual const SchmoozeData& GetMacs () const 
										{return m_XbcpSchmoozeData;};

public:
	CXbcpTool();

	// -> from CBuildTool
	// Return the files generated by the mecr tool
	virtual BOOL GenerateOutput(UINT type, CActionSlobList & actions, CErrorContext & EC);

 	// Generate command lines for the browser database maker
	virtual BOOL GetCommandLines(CActionSlobList &, CPtrList &, DWORD, CErrorContext &);
	virtual UINT PerformBuildActions(UINT type, UINT stage, CActionSlobList & lstActions,
							 DWORD aob, CErrorContext & EC);

#if 0
	virtual DAB DeferredAction(CActionSlob * pAction, CString * pstrAction = (CString *)NULL);
	virtual BOOL SetDeferredAction(CActionSlob * pAction, DAB dab);
#endif

	// Get command line options for this tool
	virtual BOOL GetCommandOptions(CActionSlob * pAction, CString & strOptions);
	// <- from CBuildTool

	virtual BOOL IsConsumableFile ( const CPath *pPath );	
	// Filter function to pick files this item migth make:
	virtual BOOL IsProductFile 	  ( const CPath *pPath );

	// Filter function to pick files to delete on rebuild:
	virtual BOOL IsDelOnRebuildFile	  ( const CPath *pPath );

	// Xbcp cannot handle response files, so we must write our own
	// build rule
	virtual BOOL DoWriteBuildRule 	(CActionSlob * pAction);

	// UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE
	// These methods exist to replace 'IsKindOf(Tool_Class)' functionality
	// they should be removed with a more extensive re-work of the build system.
	// [matthewt]
	virtual BOOL IsMecrTool() {return TRUE;}
	// UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE UNDONE
};

#endif // XBCP

#endif // _INCLUDE_TOOLXBCP_CMN_H
