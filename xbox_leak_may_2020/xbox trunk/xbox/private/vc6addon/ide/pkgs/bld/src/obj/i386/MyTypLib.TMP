

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    
    
    
    

    
    
    
    




















































































































































































































































































































































































































































































































































































 
















































































































































































































































































































































				    





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































[
  uuid(96961265-A819-11cf-AD07-00A0C9034965), 
  
  
  
  
  
  
  helpstring("Visual C++ Project System"),
  
  version(6.0),

  helpstringdll("DevTLDcD.dll")



] 

library DSProjectSystem
{
	importlib("stdole2.tlb");
	






































typedef [ helpstringcontext((((((1000+1)+1)+17)+14)+4)) ] enum tagDSWINDOWSTATE
{
	[ helpstringcontext(((((((1000+1)+1)+17)+14)+4)+1)) ]	dsWindowStateMaximized	= 1,
	[ helpstringcontext(((((((1000+1)+1)+17)+14)+4)+2)) ]	dsWindowStateMinimized	= 2,	
	[ helpstringcontext(((((((1000+1)+1)+17)+14)+4)+3)) ]		dsWindowStateNormal		= 3,
} DsWindowState;




typedef [ helpstringcontext(((((((1000+1)+1)+17)+14)+4)+4)) ] enum tagDSARRANGESTYLE
{
	[ helpstringcontext((((((((1000+1)+1)+17)+14)+4)+4)+1)) ]			dsMinimize			= 1,
	[ helpstringcontext((((((((1000+1)+1)+17)+14)+4)+4)+2)) ]	dsTileHorizontal	= 2,
	[ helpstringcontext((((((((1000+1)+1)+17)+14)+4)+4)+3)) ]		dsTileVertical		= 3,
	[ helpstringcontext((((((((1000+1)+1)+17)+14)+4)+4)+4)) ]			dsCascade			= 4
} DsArrangeStyle ;



typedef [ helpstringcontext((((((((1000+1)+1)+17)+14)+4)+4)+5)) ] enum tagDSBUTTONTYPE
{
	[ helpstringcontext(((((((((1000+1)+1)+17)+14)+4)+4)+5)+1)) ]	dsGlyph			= 1,
	[ helpstringcontext(((((((((1000+1)+1)+17)+14)+4)+4)+5)+2)) ]	dsText			= 2
} DsButtonType;



typedef [ helpstringcontext(((((((((1000+1)+1)+17)+14)+4)+4)+5)+3)) ] enum tagDSSAVECHANGES
{
	[ helpstringcontext((((((((((1000+1)+1)+17)+14)+4)+4)+5)+3)+1)) ]		dsSaveChangesYes	= 1, 
	[ helpstringcontext((((((((((1000+1)+1)+17)+14)+4)+4)+5)+3)+2)) ]		dsSaveChangesNo		= 2,
	[ helpstringcontext((((((((((1000+1)+1)+17)+14)+4)+4)+5)+3)+3)) ]	dsSaveChangesPrompt	= 3
} DsSaveChanges ;



typedef [ helpstringcontext((((((((((1000+1)+1)+17)+14)+4)+4)+5)+3)+4)) ] enum tagDSSAVESTATUS
{
	[ helpstringcontext(((((((((((1000+1)+1)+17)+14)+4)+4)+5)+3)+4)+1)) ]	dsSaveSucceeded = 1,	
	[ helpstringcontext(((((((((((1000+1)+1)+17)+14)+4)+4)+5)+3)+4)+2)) ]	dsSaveCanceled = 2		
} DsSaveStatus;




	















[	uuid(FB7FDAE1-89B8-11cf-9BE8-00A0C90A632C),
	helpstringcontext(((1000+1)+1)),
	oleautomation,
	hidden,
	dual
]
interface IGenericDocument: IDispatch
{
			[propget, id(0), helpstringcontext((((1000+1)+1)+1))] 
			HRESULT Name([out, retval] BSTR* pName);

			[propget, id(1), helpstringcontext((((1000+1)+1)+2))] 
			HRESULT FullName([out, retval] BSTR* pName) ;

			[propget, id(2), helpstringcontext(1000)] 
			HRESULT Application([out, retval] IDispatch** ppApplication);

			[propget, id(3), helpstringcontext((1000+1))] 
			HRESULT Parent([out, retval] IDispatch ** ppParent);

			[propget, id(4), helpstringcontext((((1000+1)+1)+3))] 
			HRESULT Path([out, retval] BSTR* pPath);

			[propget, id(5), helpstringcontext((((1000+1)+1)+4))] 
			HRESULT Saved([out, retval] boolean* pSaved);

			[propget, id(6), helpstringcontext((((1000+1)+1)+5))] 
			HRESULT ActiveWindow([out, retval] IDispatch ** ppWindow);

			[propget, id(7), helpstringcontext((((1000+1)+1)+6))] 
			HRESULT ReadOnly([out, retval] boolean* pReadOnly);

			[propput, id(7), helpstringcontext((((1000+1)+1)+6))] 
			HRESULT ReadOnly([in] boolean ReadOnly);

			[propget, id(8), helpstringcontext((((1000+1)+1)+7))] 
			HRESULT Type([out, retval] BSTR* pType);

			[propget, id(9), helpstringcontext((((1000+1)+1)+8))] 
			HRESULT Windows([out, retval] IDispatch **ppWindows);
			
			[propput, id(10), helpstringcontext(((((1000+1)+1)+17)+3))] 
			HRESULT Active([in] boolean bActive);

			[propget, id(10), helpstringcontext(((((1000+1)+1)+17)+3))]
			HRESULT Active([out, retval] boolean *pbActive);


			[id(11), helpstringcontext((((1000+1)+1)+9))] 
			HRESULT NewWindow([out, retval] IDispatch** ppWindow);

			[id(12), helpstringcontext((((1000+1)+1)+10))] 
			HRESULT Save([in, optional] VARIANT vFilename, [in, optional] VARIANT vBoolPrompt, [out, retval] DsSaveStatus* pSaved);

			[id(13), helpstringcontext((((1000+1)+1)+12))] 
			HRESULT Undo([out, retval] boolean* pSuccess);

			[id(14), helpstringcontext((((1000+1)+1)+13))] 
			HRESULT Redo([out, retval] boolean* pSuccess);

			[id(15), helpstringcontext((((1000+1)+1)+14))] 
			HRESULT PrintOut([out, retval] boolean* pSuccess);
			

			[id(16), helpstringcontext((((1000+1)+1)+11))] 
			HRESULT Close([in, optional] VARIANT vSaveChanges, [out, retval] DsSaveStatus* pSaved);

			[id(50), hidden, restricted]
			HRESULT Reserved1();

			[id(51), hidden, restricted]
			HRESULT Reserved2();

			[id(52), hidden, restricted]
			HRESULT Reserved3();

			[id(53), hidden, restricted]
			HRESULT Reserved4();

			[id(54), hidden, restricted]
			HRESULT Reserved5();

			[id(55), hidden, restricted]
			HRESULT Reserved6();

			[id(56), hidden, restricted]
			HRESULT Reserved7();

			[id(57), hidden, restricted]
			HRESULT Reserved8();

			[id(58), hidden, restricted]
			HRESULT Reserved9();

			[id(59), hidden, restricted]
			HRESULT Reserved10();
};



[ uuid(FD20FC80-A9D2-11cf-9C13-00A0C90A632C),
  helpstringcontext((((1000+1)+1)+17)),
  oleautomation,
  hidden,
  dual
]
interface IGenericWindow: IDispatch
{
			[propget, id(0), helpstringcontext(((((1000+1)+1)+17)+1))] 
			HRESULT Caption([out, retval] BSTR *pbstrCaption);

			[propget, id(1), helpstringcontext(((((1000+1)+1)+17)+2))] 
			HRESULT Type([out, retval] BSTR *pbstrCaption);

			[propput, id(2), helpstringcontext(((((1000+1)+1)+17)+3))] 
			HRESULT Active([in] boolean bActive);

			[propget, id(2), helpstringcontext(((((1000+1)+1)+17)+3))]
			HRESULT Active([out, retval] boolean *pbActive);

			[propput, id(3), helpstringcontext(((((1000+1)+1)+17)+4))]
			HRESULT Left([in] long lVal);

			[propget, id(3), helpstringcontext(((((1000+1)+1)+17)+4))] 
			HRESULT Left([out, retval] long *plVal);

			[propput, id(4), helpstringcontext(((((1000+1)+1)+17)+5))] 
			HRESULT Top([in] long lVal);

			[propget, id(4), helpstringcontext(((((1000+1)+1)+17)+5))] 
			HRESULT Top([out, retval] long *plVal);

			[propput, id(5), helpstringcontext(((((1000+1)+1)+17)+7))] 
			HRESULT Height([in] long lVal);

			[propget, id(5), helpstringcontext(((((1000+1)+1)+17)+7))] 
			HRESULT Height([out, retval] long *plVal);

			[propput, id(6), helpstringcontext(((((1000+1)+1)+17)+6))] 
			HRESULT Width([in] long lVal);

			[propget, id(6), helpstringcontext(((((1000+1)+1)+17)+6))] 
			HRESULT Width([out, retval] long *plVal);

			[propget, id(7), helpstringcontext(((((1000+1)+1)+17)+8))] 
			HRESULT Index([out, retval] long *plVal);

			[propget, id(8), helpstringcontext(((((1000+1)+1)+17)+9))] 
			HRESULT Next([out, retval] IDispatch** ppDispatch);

			[propget, id(9), helpstringcontext(((((1000+1)+1)+17)+10))] 
			HRESULT Previous([out, retval] IDispatch** ppDispatch);

			[propput, id(10), helpstringcontext(((((1000+1)+1)+17)+11))] 
			HRESULT WindowState([in] DsWindowState lVal);

			[propget, id(10), helpstringcontext(((((1000+1)+1)+17)+11))] 
			HRESULT WindowState([out, retval] DsWindowState *plVal);

			[propget, id(11), helpstringcontext(1000)] 
			HRESULT Application([out, retval] IDispatch** ppDispatch);

			[propget, id(12), helpstringcontext(((((1000+1)+1)+17)+13))] 
			HRESULT Parent([out, retval] IDispatch** ppDispatch);
			

			[id(13), helpstringcontext(((((1000+1)+1)+17)+12))] 
			HRESULT Close([in] VARIANT boolSaveChanges, [out, retval] DsSaveStatus* pSaved);

			[id(50), hidden, restricted]
			HRESULT Reserved1();

			[id(51), hidden, restricted]
			HRESULT Reserved2();

			[id(52), hidden, restricted]
			HRESULT Reserved3();

			[id(53), hidden, restricted]
			HRESULT Reserved4();

			[id(54), hidden, restricted]
			HRESULT Reserved5();

			[id(55), hidden, restricted]
			HRESULT Reserved6();

			[id(56), hidden, restricted]
			HRESULT Reserved7();

			[id(57), hidden, restricted]
			HRESULT Reserved8();

			[id(58), hidden, restricted]
			HRESULT Reserved9();

			[id(59), hidden, restricted]
			HRESULT Reserved10();
};




	
[ uuid(8CA5A960-FC7D-11cf-927D-00A0C9138C45),
  helpstringcontext(((((1000+1)+1)+17)+14)),
  oleautomation,
  hidden,
  dual
]
interface IGenericProject : IDispatch
{

		[id(0), propget, helpstringcontext((((((1000+1)+1)+17)+14)+1))] 
		HRESULT Name([out, retval] BSTR* Name);

		[id(1), propget, helpstringcontext((((((1000+1)+1)+17)+14)+2))] 
		HRESULT FullName([out, retval] BSTR* Name);

		[id(2), propget, helpstringcontext(1000)] 
		HRESULT Application([out, retval] IDispatch** Application);

		[id(3), propget, helpstringcontext((1000+1))] 
		HRESULT Parent([out, retval] IDispatch** Parent);

		[id(4), propget, helpstringcontext((((((1000+1)+1)+17)+14)+3))] 
		HRESULT Type([out, retval] BSTR* pType);



			[id(50), hidden, restricted]
			HRESULT Reserved1();

			[id(51), hidden, restricted]
			HRESULT Reserved2();

			[id(52), hidden, restricted]
			HRESULT Reserved3();

			[id(53), hidden, restricted]
			HRESULT Reserved4();

			[id(54), hidden, restricted]
			HRESULT Reserved5();

			[id(55), hidden, restricted]
			HRESULT Reserved6();

			[id(56), hidden, restricted]
			HRESULT Reserved7();

			[id(57), hidden, restricted]
			HRESULT Reserved8();

			[id(58), hidden, restricted]
			HRESULT Reserved9();

			[id(59), hidden, restricted]
			HRESULT Reserved10();
};



	interface IBuildProject;
	interface IConfiguration;

	
	

	
	
	[ uuid(96961260-A819-11cf-AD07-00A0C9034965),
	  oleautomation, hidden,
	  dual, helpstringcontext(10003)
	]
	interface IConfigurations : IDispatch
	{
	
			[id(1), propget, helpstringcontext(1000)]
			HRESULT Application([out, retval] IDispatch** Application);
			[id(2), propget, helpstringcontext(10000)]
			HRESULT Count([out, retval] long* Count);
			[id(4), propget, helpstringcontext(10006)]
			HRESULT Parent([out, retval] IBuildProject** Parent);
			[id(-4), hidden, propget]
			HRESULT _NewEnum([out, retval] IUnknown** _NewEnum);

	
			[id(0), helpstringcontext(10002)]
			HRESULT Item([in] VARIANT Index, [out, retval] IConfiguration** Item);
	};

	
	
	[ uuid(96961261-A819-11cf-AD07-00A0C9034965), helpstringcontext(10003), hidden ]
	dispinterface IDispConfigurations
	{
		properties:
			
			
			
			[id(1), readonly, helpstringcontext(1000)] IDispatch* Application;
			[id(2), readonly, helpstringcontext(10000)] long Count;
			[id(4), readonly, helpstringcontext(10001)] IDispatch* Parent;
			
			[id(-4), hidden, readonly] IUnknown* _NewEnum;

			
		methods:
			
			
			
			[id(0), helpstringcontext(10002)] IDispatch* Item(VARIANT Index);
			

	};


	

	[ uuid(96961262-A819-11cf-AD07-00A0C9034965), helpstringcontext(10003) ]
	coclass Configurations
	{
		[default] interface IConfigurations;
		dispinterface IDispConfigurations;
	};


	
	

	
	
	[ uuid(96961264-A819-11cf-AD07-00A0C9034965),
	  oleautomation, hidden,
	  dual, helpstringcontext(10010)
	]
	interface IBuildProject : IGenericProject
	{
	
			[id(100), propget, helpstringcontext(10011)]
			HRESULT Configurations ([out, retval] IConfigurations** Configurations);
	
	
			[id(101), helpstringcontext(10017)]
			HRESULT AddFile([in] BSTR szFile, [in, optional] VARIANT Reserved);
			[id(102), helpstringcontext(10018)]
			HRESULT AddConfiguration([in] BSTR szConfig, [in, optional] VARIANT Reserved);
	};


	
	
	[ uuid(0452FFE0-A81D-11CF-AD07-00A0C9034965), helpstringcontext(10010), hidden ]
	dispinterface IDispBuildProject
	{
		properties:
			
			
			
			[id(0), readonly, helpstringcontext((((((1000+1)+1)+17)+14)+1))] BSTR Name;
			[id(1), readonly, helpstringcontext((((((1000+1)+1)+17)+14)+2))] BSTR FullName;
			[id(2), readonly, helpstringcontext(1000)] IDispatch* Application;
			[id(3), readonly, helpstringcontext(1000)] IDispatch* Parent;
			[id(4), readonly, helpstringcontext((((((1000+1)+1)+17)+14)+3))] BSTR Type;
			[id(100), readonly, helpstringcontext(10011)] IDispatch* Configurations;
			
			
		methods:
			
			
			
			[id(101), helpstringcontext(10017)] void AddFile(BSTR szFile, [optional] VARIANT Reserved);
			[id(102), helpstringcontext(10018)] void AddConfiguration(BSTR szConfiguration, [optional] VARIANT Reserved);
			

	};

	

	[ uuid(0452FFE1-A81D-11CF-AD07-00A0C9034965), helpstringcontext(10010) ]
	coclass BuildProject
	{
		[default] interface IBuildProject;
		dispinterface IDispBuildProject;
	};


	
	

	

	[ uuid(96961263-A819-11cf-AD07-00A0C9034965),
	  oleautomation, hidden,
	  dual, helpstringcontext(10004)
	]
	interface IConfiguration : IDispatch
	{
	
			[id(0), propget, helpstringcontext(10005)]
			HRESULT Name ([out, retval] BSTR* Name);
			[id(1), propget, helpstringcontext(1000)]
			HRESULT Application([out, retval] IDispatch** Application);
			[id(2), propget, helpstringcontext(10006)]
			HRESULT Parent([out, retval] IDispatch** Parent);

	
			[id(3), helpstringcontext(10008)]
			HRESULT AddToolSettings([in] BSTR szTool, [in] BSTR szSettings, [in, optional] VARIANT Reserved);
			[id(4), helpstringcontext(10009)]
			HRESULT RemoveToolSettings([in] BSTR szTool, [in] BSTR szSettings, [in, optional] VARIANT Reserved);
			[id(5), helpstringcontext(10007)]
			HRESULT AddCustomBuildStep([in] BSTR szCommand, [in] BSTR szOutput, [in] BSTR szDescription, [in, optional] VARIANT Reserved);
			[id(6), propget, helpstringcontext(10014)]
			HRESULT Configurations([out, retval] IConfigurations** Configurations);
			[id(7), helpstringcontext(10016)]
			HRESULT Reserved11();
			[id(8), helpstringcontext(10015)]
			HRESULT MakeCurrentSettingsDefault([in, optional] VARIANT Reserved);
			[id(9), helpstringcontext(10008)]
			HRESULT AddFileSettings([in] BSTR szFile, [in] BSTR szSettings, [in, optional] VARIANT Reserved);
			[id(10),helpstringcontext(10009)]
			HRESULT RemoveFileSettings([in] BSTR szFile, [in] BSTR szSettings, [in, optional] VARIANT Reserved);
			[id(11),helpstringcontext(10007)]
			HRESULT AddCustomBuildStepToFile([in] BSTR szFile, [in] BSTR szCommand, [in] BSTR szOutput, [in] BSTR szDescription, [in, optional] VARIANT Reserved);
			
	};

	
	
	[ uuid(0452FFE2-A81D-11CF-AD07-00A0C9034965), helpstringcontext(10004), hidden ]
	dispinterface IDispConfiguration
	{
		properties:
			
			
			
			[id(1), helpstringcontext(1000)] IDispatch* Application;
			[id(2), helpstringcontext(10006)] IDispatch* Parent;
			[id(6), helpstringcontext(10014)] IDispatch* Configurations;
			
			[id(0), helpstringcontext(10005)] BSTR Name;
			
		methods:
			
			
			
			[id(3), helpstringcontext(10008)] void AddToolSettings(BSTR szTool, BSTR szSettings, [optional] VARIANT Reserved);
			[id(4), helpstringcontext(10009)] void RemoveToolSettings(BSTR szTool, BSTR szSettings, [optional] VARIANT Reserved);
			[id(5), helpstringcontext(10007)] void AddCustomBuildStep(BSTR szCommand, BSTR szOutput, BSTR szDescription, [optional] VARIANT Reserved);
			[id(7), helpstringcontext(10016)] void Reserved11();
			[id(8), helpstringcontext(10015)] void MakeCurrentSettingsDefault([optional] VARIANT Reserved);
			[id(9), helpstringcontext(10020)] void AddFileSettings(BSTR szFile, BSTR szSettings, [optional] VARIANT Reserved);
			[id(10), helpstringcontext(10021)] void RemoveFileSettings(BSTR szFile, BSTR szSettings, [optional] VARIANT Reserved);
			[id(11), helpstringcontext(10019)] void AddCustomBuildStepToFile(BSTR szFile, BSTR szCommand, BSTR szOutput, BSTR szDescription, [optional] VARIANT Reserved);
			

	};

	

	[ uuid(0452FFE3-A81D-11CF-AD07-00A0C9034965), helpstringcontext(10004) ]
	coclass Configuration
	{
		[default] interface IConfiguration;
		dispinterface IDispConfiguration;
	};

	
};
