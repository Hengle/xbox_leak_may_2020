//=--------------------------------------------------------------------------=
// AddinDesigner.IDL
//=--------------------------------------------------------------------------=
// Copyright  1995-1998  Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF 
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A 
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=
//
// ODL file for the control(s) and automation object(s) in this inproc server
//
#include <olectl.h>

// can't include oaidl.h, so this will have to do
//
#define DISPID_NEWENUM -4


//=--------------------------------------------------------------------------=
// the libid for this type libray
//
[
  uuid(AC0714F2-3D04-11d1-AE7D-00A0C90F26F4),
  helpstring("Addin Designer/Instance Control Library"),
  lcid(0x0000),
  version(1.0)
]
library AddinDesignerObjects 
{
  
  // standard imports
  //
  importlib("STDOLE2.TLB");
  importlib(STDTYPE_TLB);
  
  
  // Connection Modes
  //
  typedef [ uuid(289E9AF1-4973-11d1-AE81-00A0C90F26F4) ]
  enum ext_ConnectMode
  {
    ext_cm_AfterStartup	= 0,
    ext_cm_Startup		= 1,
    ext_cm_External		= 2,
    ext_cm_CommandLine	= 3
  } ext_ConnectMode;
  
  typedef [ uuid(289E9AF2-4973-11d1-AE81-00A0C90F26F4) ]
  enum ext_DisconnectMode
  {
    ext_dm_HostShutdown	= 0,
    ext_dm_UserClosed	= 1
  } ext_DisconnectMode;
  
  
  // primary dispatch interface for CAddinDesigner object
  //
  [ uuid(AC0714F3-3D04-11d1-AE7D-00A0C90F26F4), helpstring("AddinDesigner Control"), hidden, dual, odl ]
  interface IAddinDesigner : IDispatch 
  {
  };
  
  // primary dispatch interface for CAddinInstance object
  //
  [ uuid(AC0714F4-3D04-11d1-AE7D-00A0C90F26F4), helpstring("AddinInstance Object"), hidden, dual, odl ]
  interface IAddinInstance : IDispatch 
  {
    //	  [id(0), propget] HRESULT Something([out, retval] long *systemLCID);
  };
  
  // event interface for CAddinDesigner/CAddinInstance objects ...
  //
  [ uuid(B65AD801-ABAF-11d0-BB8B-00A0C90F2744), hidden, odl, dual ]
  interface _IDTExtensibility2 : IDispatch
  {
    [id(1)] HRESULT OnConnection( [in] IDispatch _far * Application, [in] ext_ConnectMode ConnectMode, [in] IDispatch _far *  AddInInst, [in] SAFEARRAY (Variant)* custom);
    [id(2)] HRESULT OnDisconnection([in] ext_DisconnectMode RemoveMode,	[in] SAFEARRAY (Variant)* custom);
    [id(3)] HRESULT OnAddInsUpdate([in] SAFEARRAY (Variant)* custom); 
    [id(4)] HRESULT OnStartupComplete([in] SAFEARRAY (Variant)* custom); 
    [id(5)] HRESULT BeginShutdown([in] SAFEARRAY (Variant)* custom); 
  }
  
  typedef [public] _IDTExtensibility2 IDTExtensibility2;
  //	typedef [public] _IAddinInstance IAddinInstance;
  
  // coclass for CAddinDesigner object
  //
  [ uuid(AC0714F6-3D04-11d1-AE7D-00A0C90F26F4), hidden, helpstring("AddinDesigner control") ]
  coclass AddinDesigner 
  {
    [default]	interface IAddinDesigner;
    [default, source]	interface _IDTExtensibility2;
  };
  
  
  // coclass for CAddinInstance objects
  //
  [ uuid(AC0714F7-3D04-11d1-AE7D-00A0C90F26F4), helpstring("AddinInstance Object") ]
  coclass AddinInstance 
  {
    [default]	interface IAddinInstance;
    [default, source]	interface _IDTExtensibility2;
  };
};
