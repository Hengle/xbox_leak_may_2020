/*
 *  ctxhelp.idl
 *
 *  This IDL file defines the interface for the help services needed
 *  by the context window.
 *
 *  It serves to abstract out the necessary calls to the HtmlHelp interfaces
 *  to make us compatible with older and newer versions of help.
 *
 */

import "oleidl.idl";
import "servprov.idl";
import "oaidl.idl";
import "ocidl.idl";

import "context.idl";

interface IVsContextWindowHelpService;
interface IVsHelpTopicList;
interface IVsHelpTopic;

typedef enum tagVsGetAttributeValues
{
  VSUC_AttrDisplayValues = 0,
  VSUC_AttrRawValues     = 1,
  VSUC_AttrAllValues     = 2,
} VSGETATTRIBUTEVALUES;

[
uuid(97128F7E-2F73-47b1-B244-82653ADD59B5),
version(1.0)
]
interface IVsContextWindowHelpService : IUnknown
{
  //Return a topic list filled with the hits generated by the given index.
  //Perform the lookup in the index specified by bstrIndexMoniker.
  //If the specified index does not exist, return E_FAIL.  If bstrIndexMoniker is NULL,
  //use the default index.
  HRESULT GetTopicsFromKeyword(
              [in] BSTR bstrKwd,
              [in] BSTR bstrIndexMoniker,
              [in] BOOL fCaseSensitiveLookup,
              [out] IVsHelpTopicList ** ppTopicList);

  //Return a list of all the possible values for the given attribute.
  //If the current help system does not support attributes, return E_FAIL.
  HRESULT GetAllAttrValues(
              [in] BSTR bstrAttrName,
              [in] VSGETATTRIBUTEVALUES lUserString,
              [out] IVsHelpAttributeList **ppAttrList);
};


[
uuid(0478A6AD-A2DD-46d8-81FE-8397DF1ABF86),
version(1.0)
]
interface IVsHelpTopicList : IUnknown
{
  HRESULT get_Count(
              [out] LONG * pcount);
  HRESULT ItemAt(
              [in] int index, // 1 Based index into the list
              [out] IVsHelpTopic ** ppTopic);
};

[
uuid(43CEAABF-712A-4aec-A987-4A51D99B5A40),
version(1.0)
]
interface IVsHelpTopic : IUnknown
{
  HRESULT HasAttribute(
              [in] BSTR bstrAttrName, 
              [in] BSTR bstrAttrValue, 
              [out] VARIANT_BOOL * pvfAttrMatch); //Is attrname=attrval defined for this topic

  HRESULT HasAttrName(
              [in] BSTR bstrAttrName, 
              [out] VARIANT_BOOL * pvfAttrDef); //Is attrname=* defined for this topic 

  HRESULT get_URL(
              [out] BSTR * pbstrURL);

  HRESULT get_Title(
              [out] BSTR * pbstrTitle);

  HRESULT HighlightDocument(
              [in] IDispatch * pDispWB);
};

//Define the service
cpp_quote("#define SID_SVsContextWindowHelpService IID_IVsContextWindowHelpService")

cpp_quote("const wchar_t c_KeywordNavDataMoniker[] = L\"!DefaultKeywordIndex\";")
cpp_quote("const wchar_t c_AlinkNavDataMoniker[] = L\"!DefaultAssociativeIndex\";")
// The name for the new F1 Index
cpp_quote("const wchar_t c_CWIndexDataMoniker[] = L\"!DefaultContextWindowIndex\";")

