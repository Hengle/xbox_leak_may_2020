/*++

Copyright (c) 1992-2000  Microsoft Corporation

Module Name:

    w_cases.bmh

Abstract:

    This module contains the case names and comments for the types beginning
    with 'W'. It also contains case names for funtions beginning with 'LPW'.
    For more information, please refer to BadMan.Doc.

Author:

    John Miller (johnmil) 02-Feb-1992

Environment:

    XBox

Revision History:

    01-Apr-2000     schanbai

        Ported to XBox and removed not needed cases

--*/


//
// LPWIN32_FIND_DATA type
//

        // valid pointer to allocated structure
#define LPWIN32_FIND_DATAA_VALID    1

        // null pointer
#define LPWIN32_FIND_DATAA_NULL     2


//
// LPWIN32_FIND_DATAW type
//

        // valid pointer to allocated structure
#define LPWIN32_FIND_DATAW_VALID    1

        // null pointer
#define LPWIN32_FIND_DATAW_NULL     2


//
// LPWORD type
//

        // null pointer
#define LPWORD_NULL                 1

        // valid address
#define LPWORD_VALID_ADDRESS        2

        // pointer to (WORD)-1
#define LPWORD_MINUS_ONE            3

        // freed local bock
#define LPWORD_FREED_LOCAL          4

        // 0 -64
#define LPWORD_65_VALID             5


//
// LPWSTR type
//

        // LPWSTR == NULL
#define LPWSTR_NULL                     2

        // buffer to store file name
#define LPWSTR_FILE_NAME                5

        // invalid LPWSTR
#define LPWSTR_INVALID                  7

        // pointer to a NULL LPWSTR
#define LPWSTR_NULL_STRING              8

        // pointer to a 2 byte buffer (native buffer)
#define LPWSTR_2BYTE_BUFFER             9

        // pointer to a 64k buffer
#define LPWSTR_64K_BUFFER               10

        // valid FAT filename
#define LPWSTR_FAT_FILENAME             13

        // filename with invalid chars
#define LPWSTR_FILENAME_BOGUS           14

        // first DWORD of WSTR valid, non-null chars
#define LPWSTR_INVALID_1                17

        // WSTR with all but last DWORD of length valid
#define LPWSTR_INVALID_N                19

        // path to a non-existent directory
#define LPWSTR_NON_EXISTENT_DIRECTORY   24

        // valid NTFS filename (includes unicode chars)
#define LPWSTR_NTFS_FILENAME            25

        // a relative path/filename
#define LPWSTR_RELATIVE_FILENAME        52

        // a string of characters which is > 64Kb
#define LPWSTR_TOO_LONG                 54

        // a UNC filename
#define LPWSTR_UNC_FILENAME             55

        // -> L""
#define LPWSTR_EMPTY                    58

        // 46 character string
#define LPWSTR_46CHAR                   64

        // bogus file name
#define LPWSTR_INVALID_FILE_NAME        65

        // aa\bb\cc\dd\ee etc.
#define LPWSTR_NON_EXISTANT_DIRECTORY   66

        // random pointer
#define LPWSTR_RANDOM                   67

        // "DISPLAY"
#define LPWSTR_DISPLAY                  68

        // "OPEN"
#define LPWSTR_OPEN                     70

        // 100 char block
#define LPWSTR_VALID_100                72

        // L"a b c d e f g h i j k l m"
#define LPWSTR_COMMAND_LINE             75

        // (LPWSTR)-1
#define LPWSTR_MINUS_ONE                76

        // 1k wchar buffer
#define LPWSTR_BUFFER_1K                78

        // string containging temp dir
#define LPWSTR_TEMP_DIR                 80

        // string containing root
#define LPWSTR_ROOT_DIR                 81

        // string containing lpwstr.tmp
#define LPWSTR_TEMP_FILE_NAME           84

        // source file exists
#define LPWSTR_SRC_FILE_EXISTS          90

        // source file does not exist
#define LPWSTR_SRC_FILE_NOT_EXISTS      91

        // Valid filename
#define LPWSTR_FILENAME_VALID           92

        // Invalid filename
#define LPWSTR_FILENAME_INVALID1        93

        // Invalid filename
#define LPWSTR_FILENAME_INVALID2        94

        // Invalid filename
#define LPWSTR_FILENAME_INVALID3        95

        // Invalid filename
#define LPWSTR_FILENAME_INVALID4        96

        // Invalid filename
#define LPWSTR_FILENAME_INVALID5        97

        // Invalid filename
#define LPWSTR_FILENAME_INVALID6        98

        // Invalid filename
#define LPWSTR_FILENAME_INVALID7        99

        // Invalid filename
#define LPWSTR_FILENAME_INVALID8        100

        // Invalid filename
#define LPWSTR_FILENAME_INVALID9        101

        // Invalid filename
#define LPWSTR_DIRNAME_INVALID1         102

        // Invalid filename
#define LPWSTR_DIRNAME_INVALID2         103

        // Invalid filename
#define LPWSTR_DIRNAME_INVALID3         104

        // Invalid filename
#define LPWSTR_DIRNAME_INVALID4         105

        // logical drive string buffer
#define LPWSTR_LOGICAL_DRIVE_STRING_BUFFER  106

        // temp path buffer
#define LPWSTR_TEMP_PATH_BUFFER         107

        // dest file exists
#define LPWSTR_DEST_FILE_EXISTS         108

        // dest file does not exist
#define LPWSTR_DEST_FILE_NOT_EXISTS     109

        // valid pathname
#define LPWSTR_DIRNAME_VALID            110

        // path to directory that exists
#define LPWSTR_PATH_EXISTS              111

        // path to directory that does not exist
#define LPWSTR_PATH_NOT_EXISTS          112

        // valid prefix string
#define LPWSTR_PREFIX_VALID             113

        // prefix string too long
#define LPWSTR_PREFIX_TOO_LONG          114

        // pointer to valid path buffer
#define LPWSTR_VALID_PATH_BUFFER        115

        // valid root path name
#define LPWSTR_VALID_ROOT_PATHNAME      116

        // invalid root path name
#define LPWSTR_INVALID_ROOT_PATHNAME    117

        // file exists
#define LPWSTR_FILE_EXISTS              118

        // file does not exist
#define LPWSTR_FILE_NOT_EXISTS          119

        // readonly file
#define LPWSTR_FILE_READONLY            120

        // buffer for the volume name
#define LPWSTR_VOLUME_NAME_BUFFER       121

        // valid file system name buffer
#define LPWSTR_FILE_SYSTEM_NAME_BUFFER  122

        // ill-formed path string
#define LPWSTR_SEARCH_PATH_ILL_FORMED   123

        // path with illegal chars
#define LPWSTR_SEARCH_PATH_BAD_CHARS    124

        // file in curr dir without extension
#define LPWSTR_FILE_IN_CURR_DIR_NO_EXT  125

        // extension of file in curr dir
#define LPWSTR_EXT_FILE_IN_CURR_DIR     126

        // ill-formed file extension (not beginning in .)
#define LPWSTR_EXT_ILL_FORMED           127

        // extension with illegal chars
#define LPWSTR_EXT_BAD_CHARS            128

        // existing file not on path, cur dir, ...
#define LPWSTR_FILE_NOT_EXISTS_ON_PATH  129


//
// WCHAR type
//
        // 'A'
#define WCHAR_A                         0


//
// WORD type
//

        // NULL (0)
#define WORD_NULL               13

        // MINUS ONE (-1)
#define WORD_MINUS_ONE          14

        // ONE (1)
#define WORD_ONE                15

        // A Random WORD value
#define WORD_RANDOM             16

        // valid DOS time
#define WORD_VALID_DOS_TIME     17

        // invalid DOS time
#define WORD_INVALID_DOS_TIME   18

        // valid DOS date
#define WORD_VALID_DOS_DATE     19

        // invalid DOS date
#define WORD_INVALID_DOS_DATE   20

        //  zero!
#define WORD_ZERO               38
