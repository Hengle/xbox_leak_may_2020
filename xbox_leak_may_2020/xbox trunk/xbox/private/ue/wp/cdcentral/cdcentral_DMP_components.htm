<td valign="TOP" width="125">

<P><a href="/BPProgInfo.asp?Page=content/pub_info.htm" title="Home">Home</a></P>

<P><a href="/BPProgInfo.asp?Page=content/cdcentral.htm" title="Content and Design Central">Content and Design Central</a></P>

<P><a href="/BPProgInfo.asp?Page=content/cdcentral_despro_corner.htm" title="Designer/Producer's Corner">Designer/Producer's Corner</a><BR>

<a href="/BPProgInfo.asp?Page=content/cdcentral_art_corner.htm" title="Artist's Corner">Artist's Corner</a><BR>

<a href="/BPProgInfo.asp?Page=content/cdcentral_audio_corner.htm" title="Audio Designer's Corner">Audio Designer's Corner</a></P>

<P><a href="/BPProgInfo.asp?Page=content/pub_guide_info.htm" 

title="Xbox Guide">Xbox Guide</a></P>

<P><a href="/BPProgInfo.asp?Page=content/pub_documentation.htm" title="Publisher Documentation">Publisher Documentation</a></P>

<P><a href="/BPProgInfo.asp?Page=content/pub_insider.htm" title="Xbox Insider">Xbox Insider</a></P>

<BR>
<BR>
</td><td><STYLE>
table.tblconcept
	{
	width: 70%;
	background: #999999;
	margin-top: .6em;
	margin-bottom: .3em;
	}
table.userdata td 
	{
	background: #ffffff;
	background-color: #F5F5F5;
	border-color: #ffffff;
	border: none;
	}	
table.tblconcept th
	{ 
	padding: 4px 8px;
	background: #cccccc;
	text-align: left;
	font-size: 70%;
	vertical-align: bottom;
	
	}
		
table.tblconcept td
	{ 
	padding: 4px 8px;
	background: #ffffff;
	vertical-align: top;
	font-size: 70%;	
	}
</STYLE><H1>DirectMusic Producer Components</H1>

<P><em>By Chanel Summers, Audio Manager, Microsoft<FONT SIZE="-1">&#174;</FONT> Xbox<FONT SIZE="-1">&#153;</FONT> Advanced Technology Group</em>
<BR>
<BR>
<BR>

<P>The purpose of this paper is to define the major components and file types of Microsoft<FONT SIZE="-1">&#174;</FONT> DirectMusic<FONT SIZE="-1">&#174;</FONT> Producer, the authoring tool for DirectMusic.  
<BR>
<BR>
<P>The following chart describes the various DirectMusic Producer components and how they relate to the composing process and interrelate to create interactive music.
<BR>
<BR> 
<P>A DirectMusic Producer project can contain the following components:
<BR>
<BR>

<TABLE class="tblconcept">

<TR VALIGN="top"><TH align=left style="width:100px"><B>Component Name </B></TH><TH align=left style="width:85px"><B>File Extensions </B></TH><TH align=left><B>Description </B></TH></TR>

	<TR><td>Segment</td><td>.sgp and .sgt   </td><td>Basic unit that combines various music elements. Provides length, measure placement, and beats where all music elements are positioned and timed.</td></TR>
	
	<TR><td>Style</td><td>.stp and .sty</td><td>A collection of melodic and rhythmic Patterns; also includes a list of Band choices. A typical Style contains special embellishment Patterns, such as an Introduction, Break, Fill, or Ending, as well as individual Motifs--musical or ambient figures that can be triggered on command (or at an appropriate boundary) and layered over the background Patterns.</td></TR>

	<TR><td>Band</td><td>.bnp and .bnd</td><td>A collection of instrument program changes and patch changes used to play the music. You can balance the relative volume of the instruments in the Band and adjust the left and right pan positions for each instrument.</td></TR>

	<TR><td>DLS Collection	</td><td>.dlp and .dls</td><td>A collection of downloadable sounds available as instrument sounds.</td></TR>

	<TR><td>Chordmap</td><td>.cdp and .cdm</td><td>A collection of variable chord progressions.</td></TR>

	<TR><td>Wave</td><td>.wvp and .wav</td><td>Digitally recorded sound files. A Wave can exist as a standalone component in the project tree or be included in a DLS instrument as a source of sound. Waves can be mono or stereo, looped, one-shot or streaming, and can be started from any offset into the Wave.</td></TR>

	<TR><td>Audiopath</td><td>.aup and .aud</td><td>A path from the sound data to the audio hardware. An Audiopath is used to play and manage sound effects and music.</td></TR>

	<TR><td>Container</td><td>.cop and .con</td><td>Containers allow users to package all the files used for a given purpose into a single parent file. Files can be referenced or embedded, or any combination of the two. When you save the Container, it keeps either a reference to the components you place in it or a complete run-time copy of the components.</td></TR>

	<TR><td>Script</td><td>.spp and .spt</td><td>A collection of routines, typically created by the audio designer in Producer.</td></TR>

	
</TABLE>

<BR>
<BR>
<P>In this table, each component type is shown with two file extensions. The first extension is used when the file is under construction in DirectMusic Producer (design-time). The second extension is used when the file is ready to play in an application (run-time mode). DirectMusic Producer can load files in both forms--it converts a run-time file into a design-time file.

<BR>
<BR>

<H3>Style Components</H3>

<P>Style components can contain three types of subcomponents:

<BR>
<BR>

<TABLE class="tblconcept">

<TR VALIGN="top"><TH align=left><B>Component</B></TH><TH align=left><B>Subcomponent</B></TH><TH align=left><B>Description</B></TH></TR>

	<TR><td>Style</td><td>Band</td><td>A collection of instrument program changes and patch changes designed specifically to play the Style.</td></TR>

	<TR><td>Style</td><td>Pattern</td><td>A sequence of melodic and rhythmic figures. Patterns contain Parts (this is where the notes reside), and you can have up to 32 variations for each Part. Patterns can be earmarked to provide different levels of music intensity, or <I>Groove Levels</I>.</td></TR>

	<TR><td>Style</td><td>Motif</td><td>A melodic figure, usually brief, or a combination of sounds to layer over other music.</td></TR>

</TABLE>


<H3>What Each Component Contributes to a Composition</H3>

<P>When composing music in the traditional way, you might first decide on a particular genre, such as &#146;70s guitar rock or classical Viennese. Then you might choose instrumentation, create melodic and rhythmic lines, and develop harmonies that evoke the nuances you want to create. You do not necessarily follow this order with every composition, but the basic elements remain fairly constant.
<BR>
<BR>
<P>Each DirectMusic Producer component and subcomponent is responsible for one of these basic elements when you compose music. To better understand the DirectMusic Producer components, think of what each contributes to the composing process. The following table gives you a general picture, while the descriptions beneath provide more detail:
<BR>
<BR>

<TABLE class="tblconcept">

<TR VALIGN="top"><TH align=left><B>Component or subcomponent</B></TH><TH align=left><B>Responsibility</B></TH></TR>

	<TR><td>Segment</td><td>Basic unit of musical performance: timeline where all compositional elements are positioned.</td></TR>

	<TR><td>Style</td><td>Related Patterns and their associated Bands.</td></TR>

	<TR><td>Band</td><td>Instrument selection and mix.</td></TR>

	<TR><td>DLS collection</td><td>Custom instruments and sound effects.</td></TR>

	<TR><td>Chordmap</td><td>Variable chord progression and scale.</td></TR>

	<TR><td>Pattern</td><td>Rhythmic and melodic phrases made up of notes and rests.</td></TR>

	<TR><td>Motif</td><td>Layering over existing music.</td></TR>

	<TR><td>Wave</td><td>Making up a DLS collection (individual instrument sounds); can also be premixed music, sound effects, dialog, stem mixes, and so on.</td></TR>

	<TR><td>Audiopath</td><td>Defining a configuration for the synth engine to use when playing DirectMusic content.</td></TR>

	<TR><td>Container</td><td>Packaging together all music files.</td></TR>

	<TR><td>Script</td><td>Providing custom access to computer commands.</td></TR>

	
</TABLE>

<BR>
<BR>


<H4>Segment</H4>
 
<P>A Segment is the basic unit of a DirectMusic Performance. A Segment is similar to a framework you use to combine multiple music elements, including Musical Instrument Digital Interface (MIDI) files and DirectMusic Producer components such as Styles and Bands. You use the Segment to control all playback of those elements, playing them individually or combined. You can specify the length of the Segment--the number of measures--and for any music elements you place in a Segment, you can specify parameters, such as tempo, start and stop times, number of repeats, and instrument substitution. 
You can create two basic types of Segments: Style-based and Sequence-based.
<BR>
<BR>
<P>A Style-based Segment is typically used to provide variable music. It uses the variable content of Style files to provide a musical performance that is different each time it plays. The Segment can vary even when it is simply repeating during playback. The Segment provides the overall structure to the musical performance, such as its length, key, chord structure, number of repeats, levels of intensity, and so on. The Style provides the notes. Because a Style contains multiple variations in its Patterns, the performance of a Style-based Segment sounds different each time it plays.
<BR>
<BR>
<P>A Segment can contain multiple Styles, so the type of music changes during the playback of a single Segment. Similarly, a Segment can contain multiple Bands, so the instrumentation changes. You can also change tempos, intensity levels, and other musical parameters to design a music performance.
<BR>
<BR>
<P>A Sequence-based Segment is typically used to play a fixed sequence of MIDI data, with options for added flexibility. The Segment contains a sequence of MIDI data that is either imported as a MIDI file or created in the Segment using the mouse or MIDI recording. The sequenced notes and rhythms are combined with Bands and other musical elements to create a complete musical piece.
<BR>
<BR>
<P>For either type of Segment, you can exercise as much control as you need over the form and shape of a musical piece by inserting commands and markers that instruct the Segment in playing with high or low intensity, in playing an embellishment, and in what chord sequence to play. The Segment performs the piece according to your direction without eliminating the variability that can make a DirectMusic Producer piece different each time it is heard. All musical elements in a Segment can be mixed together and controlled according to parameters you set for the tempo, start and stop time, number of repeats, instrument substitution, and more.
<BR>
<BR>

<P>Opening a Segment launches the Segment Designer, displaying a window similar to the following:


<BR>
<IMG src="/content/img/DMPC_SegDesig.gif" WIDTH="520" HEIGHT="370" ALT="" BORDER="0">
<BR>
<BR>


<P>A special type of Segment also exists, called a Template. The Template component is created using the Segment Designer and is more or less a Segment with special capabilities. The distinction between a Segment and a Template is that a Segment has a fixed set of chords that you design and a Template has a variable chord progression. A Template contains a Signpost Track and a Chordmap Track, while a Segment does not. If you add a Signpost Track to a Segment, it essentially becomes a Template, though the file extension remains .sgp. This progression adds an extra layer of variability to the playback of a Producer file. In all other ways, a Template functions exactly like a Segment. A Template also serves as a guide for triggering changes in harmony and Patterns. A software developer can use the Template to create music at run-time in an application.
<BR>
<BR>
<P>You can also use a Template with any Style and Chordmap file to yield a predictable yet generalized result. For example, a Template might specify a two-measure introduction, followed by the Style&#39;s first Pattern for eight measures, followed by the Style&#39;s next Pattern for eight measures, followed by a two-measure ending. The Style and Chordmap used with the Template determine the music content of the 20 measures. Music that uses this particular Template always has the same form (Introduction-A-B-Ending), but the chord progression can be variable.
<BR>
<BR>
<P>Following is an illustration of a Template Segment:

 
<BR>
<IMG src="/content/img/DMPC_TemplSeg.gif" WIDTH="320" HEIGHT="230" ALT="" BORDER="0">
<BR>
<BR>


<H4>Style</H4>
 
<P>A Style component stores Patterns, embellishments, Motifs, and Bands. The combination of Patterns, embellishments, Motifs, and Bands can evoke certain music genres, such as Rock, Country, Jazz, Latin, and Funk. 
<BR>
<BR>
<P>Styles are at the heart of DirectMusic Producer and its ability to create variable music. A modest Style that uses only six instruments with each playing 16 variations of a Pattern has over 16 million potential playback combinations. However, a Style usually contains far more potential than this. A typical Style contains several Patterns for playback--providing a choice of phrase lengths, various intensity levels, and other options--and within each Pattern there can be as many as 32 variations for each instrument.
<BR>
<BR>
<P>A well-composed Style results in each Pattern Part selecting any one of several variations and playing it in combination with other variations in other Parts. Each time playback of the Style loops or repeats, a new combination of variations is selected. This creates a blend of all the Parts in changing combinations of variations that rarely repeat. 
<BR>
<BR>
<P>An important aspect of a Style is the encoded functionality or music value, in which all notes in a music Pattern can be transposed to fit any chord or scale.
<BR>
<BR>
<P>This diagram shows off the anatomy of a Style:
 

<BR>
<IMG src="/content/img/DMPC_StyleAna.gif" WIDTH="500" HEIGHT="240" ALT="" BORDER="0">
<BR>
<BR>


<P>This diagram of a Style shows its subcomponents and how they interrelate to each other:
 

<BR>
<IMG src="/content/img/DMPC_StyleSub.gif" WIDTH="510" HEIGHT="350" ALT="" BORDER="0">
<BR>
<BR>


<H4>Band</H4>

<P>A Band is a collection of digital instrument sound settings that define an ensemble of instruments, such as piano, guitar, bass, brass, and drums. You design a Band so that the instrument settings for a piece of music are collected in one file. After you design a Band, you can use it to play numerous pieces, and you can insert it in a Style (it is common to have more than one Band assigned to a single Style; this makes a variety of arrangements possible) or a Segment so that it is always available for playback.
<BR>
<BR>
<P>The instrument sounds in a Band are typically designed to correspond to the instrumentation of a live music ensemble in a particular musical genre. For example, if the music to play is rock music, the Band might contain guitar, drums, bass, wind instruments, strings, or whatever instrumentation is appropriate for the genre. 
<BR>
<BR>
<P>A Band can be stored in a project in three ways:

<UL>
<LI><B>As a subcomponent in a Style</B><BR> 
The Band is located in the Band folder of the Style and is included in the Bands list in the Style Designer window.</LI> 
<BR><BR>
<LI><B>As part of a Segment</B><BR> 
The Band is located in the Band Track of a Segment.</LI> 
<BR><BR>
<LI><B>As a stand-alone component in the project</B><BR> 
The Band is located on the first level of components in a project.</LI> 
</UL>
<BR>


<H4><B>DLS Collection</B></H4>

<P>The technology used by DLS (Downloadable Sounds) is called wavetable synthesis, which is the synthesis of instrument sounds from digital samples. These samples are obtained from recordings of real musical instruments or from any sound you want to use for playback, such as a dog&#39;s bark or dripping water. The sampled sound is stored as digital information and then looped and manipulated to produce continuous sounds at various pitches and volumes.
<BR>
<BR>
<P>The sounds in a DLS collection are used to make up the instruments in Band components. The DLS collection defines musical instruments in terms of downloadable sounds.
<BR>
<BR>
<P>You can modify sounds in an existing DLS collection or create your own DLS collection from custom sounds. 
<BR>
<BR>
<P>Beginning with the Microsoft<FONT SIZE="-1">&#174;</FONT> DirectX<FONT SIZE="-1">&#174;</FONT> 8.0 release of DirectMusic Producer, you can design DLS collections to take full advantage of DLS Level 2 sounds. 
<BR>
<BR>
<P>DLS Level 2 provides several new options for designing DLS instruments:
<BR>
<BR>

<UL>
<LI><B>Ability to insert stereo waves</B><BR>
In addition to mono wave files, you can insert stereo waves into the Waves folder of a DLS collection and integrate them into DLS-2 instruments.</LI>
<BR><BR> 
<LI><B>128 regions for all DLS instruments</B><BR>
DLS Level 2 allows all DLS instruments to have a separate region (each referencing a single wave) for each of the 128 MIDI notes.</LI>
<BR><BR> 
<LI><B>Multiple layers of regions</B><BR>
DLS Level 2 allows each MIDI note to control multiple regions (each referencing a single wave). Regions can be layered (to achieve a richer timbre) or can have unique velocity ranges assigned.</LI>
<BR><BR> 
<LI><B>Two LFO generators</B><BR>
The low frequency oscillator (LFO) capabilities of the articulation are doubled, from one to two LFO controls. The first is designated for volume while the second is designated for pitch or filter modulation.</LI>
<BR><BR> 
<LI><B>Six Segment envelope generators</B><BR>
DLS Level 2 adds Delay and Hold to feature six Segment envelopes: Delay, Attack, Hold, Decay, Sustain, and Release.</LI>
</UL>

<BR>
<P>Opening a DLS collection launches DLS Designer and displays a window similar to the following:

 
<BR>
<IMG src="/content/img/DMPC_DLSDesig.gif" WIDTH="415" HEIGHT="370" ALT="" BORDER="0">
<BR>
<BR>


<H4>Chordmap</H4>

<P>The Chordmap component contains a collection of chords that define a varying harmonic structure for a music piece. The collection of chords is based on a scale, so a Chordmap usually reflects a particular tonality, such as major, harmonic minor, or natural minor. You organize the chords in a Chordmap to create musically sensible paths leading from one chord to another. Chordmaps also interact with Styles so that the Patterns of the Style are altered to fit the chords and scales of the Chordmap.
<BR>
<BR>
<P>Chordmaps add a high level of variability to your music because there are multiple paths to choose from as a piece moves toward a destination chord. Each time a new chord progression is needed, parameters for phrase lengths and start and end chords are taken into account, and suitable paths from one chord to another are selected. If more than one path is possible, a suitable path is selected at random.
<BR>
<BR>
<P>When using a Chordmap in a Template or supplying a Chordmap to a software developer, you are combining its data with that of a Style component to generate the greatest variability in a DirectMusic piece. As a Style plays over the chords in a Chordmap, the music Patterns of the Style are altered to fit the chords.
<BR>
<BR>
<P>The following illustration shows the components of the Chordmap Designer window:


<BR>
<IMG src="/content/img/DMPC_ChrdmpDe.gif" WIDTH="490" HEIGHT="415" ALT="" BORDER="0">
<BR>
<BR>
 

<H4>Pattern</H4>

<P>A Pattern is a subcomponent contained in a Style that establishes rhythmic and melodic lines for particular instruments. To increase musical interest, you can create as many as 32 variations for each instrument Part within a Pattern. As a Pattern plays, DirectMusic Producer combines variations from each Part in changing combinations. When a Part has multiple variations, the variations are selected at random when the Style is played. You can also choose an order (random order, sequential from first variation, sequential from random, no repeats, and shuffle--which means no variations are repeated until all available variations are played) in which the variations of a Part are played.
<BR>
<BR>
<P>A well-designed DirectMusic Producer piece can contain hundreds of Patterns and rhythms for each instrument. Thus, when DirectMusic performs a piece of music, the possible combinations and variations of Patterns are almost infinite.
<BR>
<BR>
<P>Double-clicking a Pattern (or Motif) in the Style Designer window opens Pattern Editor:


<BR>
<IMG src="/content/img/DMPC_PattEdtr.gif" WIDTH="495" HEIGHT="355" ALT="" BORDER="0">
<BR>
<BR>


<H4>Motif</H4>

<P>A Motif is a subcomponent contained in a Style that is a Pattern used for purposes other than a regular Style Pattern. It is a brief melodic or rhythmic figure or a sound you design to layer over other music. Motifs can play any time during a Performance. Think of Motifs as instrumental solos that play without interrupting the music that is already playing.
<BR>
<BR>
<P>A Motif is often designed to respond interactively to user events or to programmatic events. A Motif can contain typical music material, with melody and rhythm, played by one or more instruments, or it can be a sound wave that you use as a sound effect, such as the sound of two swords clashing together. The sound of the Motif may vary according to how its instruments are configured in the Band that is in use. 
<BR>
<BR>


<H4>Wave</H4>

<P>A Wave is usually an individual sound that is digitally recorded or sampled from a musical instrument or other sound source. A short wave file can be played repeatedly to create a sustained sound, and its pitch can be altered to play various frequencies for high notes and low notes. You can create a longer wave that lasts for several seconds by recording the sound output from a variety of sources.
<BR>
<BR>
<P>A Wave can exist as a stand-alone component in the project tree or included in a DLS instrument as a source of sound. Waves can be mono or stereo, looped, one shot or streaming, and can be started from any offset into the Wave.
<BR>
<BR>

<H4>Audiopath</H4>

<P>An Audiopath defines a configuration for the synthesis engine to use when playing DirectMusic content. Essentially, an Audiopath represents a path from the sound data to the audio hardware. An Audiopath is used to play and manage sound effects and music. They provide a direct handle on the audio process that the game developer can use to tweak in real-time.
<BR>
<BR>

<H4>Container</H4>

<P>A Container can be used to package together several music files into a single file that you can deliver to a developer for use in an application. You can create a Container file in the project tree and then insert references to any number of components into the folders of the Container. After creating a large number of components in a project, you can collect into a Container a set of references to only the files that are necessary for playing a particular DirectMusic Producer piece without actually moving files from their places in the project. For example, if you create a project with several Segments, Styles, Bands, DLS collections, and Audiopaths, you may want to put together a small group that includes only one from each of those component types and deliver them as a single run-time file to a developer. Without moving any of the five components from its original position in the project tree, you can insert a reference to each component in the Embed Runtime folder of a Container. Then you can save a run-time copy of the Container so that a copy of each referenced component is included in the Container run-time file.
<BR>
<BR>
<P>The run-time file is a complete package containing all the components necessary for playing music the way you designed it. By placing only a reference to the components you want in a Container, you create small collections of components for specific uses without making multiple copies of the components in a project tree. When you save a run-time file of the Container, a full copy of each component in the Embed Runtime folder is included in the run-time file of the Container. This simplifies the final delivery process of shipping a single file to the developer, ensuring that all of the needed files are available with much less effort on the part of the developer and without worry about references to other files outside the Container.
<BR>
<BR>
<P>Container files also exist in Script files as a way of referencing multiple files. They appear in Script files as Script content and also have Embed Runtime and Reference Runtime options. 
<BR>
<BR>


<H4>Script</H4>

<P>Scripts are collections of little programs (routines) that implement audio in your game. Audio Scripts can tie into game events and survey game state variables (e.g., player health) to make appropriate musical or sound decisions. You can create a Script in a DirectMusic Producer project and enter any Script commands you like in the Script.
<BR>
<BR>
<P>Double-clicking the internal icon of a Script file in the project tree opens Script Editor and displays a window similar to the following:

<BR>
<IMG src="/content/img/DMPC_ScrptEdt.gif" WIDTH="550" HEIGHT="335" ALT="" BORDER="0">
<BR>
<BR><BR>
<BR><SMALL>Friday, July 21, 2000</SMALL>

</td>


