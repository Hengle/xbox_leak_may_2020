{\rtf1\ansi \deff0\deflang1033

{\fonttbl
{\f0\froman Times New Roman;}
{\f2\fswiss Arial;}
{\f19\fmodern\fcharset0\fprq1 Courier New;}
}

{\colortbl;
\red0\green0\blue0;
\red0\green0\blue255;
\red0\green255\blue255;
\red0\green255\blue0;
\red255\green0\blue255;
\red255\green0\blue0;
\red255\green255\blue0;
\red255\green255\blue255;
\red0\green0\blue127;
\red0\green127\blue127;
\red0\green127\blue0;
\red127\green0\blue127;
\red127\green0\blue0;
\red127\green127\blue0;
\red127\green127\blue127;
\red192\green192\blue192;
}


{\stylesheet
{\s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 header;}
{\s251\sb160\sa40\sl-280\keepn \b\f2\lang1033 heading 4;}
{\s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 heading 3;}
{\s253\li-1800\sb160\sa60\sl-380\keepn \b\f0\fs34\lang1033 heading 2;}
{\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 heading 1;}
{\*\cs10 \additive Default Paragraph Font;}
{\sa160\sl240 \fs21\lang1033 Normal;}
{\s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Ex;}
{\s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 header rule;}
{\s45\li-1800\sa180\sl-440\keepn\tx0 \b\f2\fs40\up8\lang1033 Rh1;}
{\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Rmh;}
{\s50\sl-240\keepn \f0\fs21\lang1033 Term1;}
{\s53\li280\sl-240\keepn \f0\fs21\lang1033 Term2;}
{\s54\li280\sa80\sl-240 \f0\fs21\lang1033 Def1;}
{\s55\li560\sa80\sl-240 \f0\fs21\lang1033 Def2;}
{\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 Rule;}
{\s93\sl240 \fs21\lang1033 
Index Link;}
{\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 Table Text;}
}

\paperw12240\paperh15840\margl3330\margr1530\margt-2540\margb-2220\gutter420 
\facingp\deftab280\widowctrl\ftnbj 

\sectd \binfsxn1\binsxn1\linex0\headery1990\footery360\endnhere\titlepg 

{\headerl \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 4}}{\expnd50  }Autodoc Output - 01/30/98\par 
\pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 \par }

{\headerr \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 
\tab Autodoc Output - 01/30/98{\expnd50   }
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 3}}
\par \pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 
\par }
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 Coordinates global access to the DirectMusic Engine for other Jazz components.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::GetMusicEngine Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetMusicEngine(}{\b IUnknown**} {\i ppEngine}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns an AddRef()'d pointer to the MusicEngine interface. 
This method is replaced by the {\b GetPerformanceEnginge} method.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell A NULL was passed as {\i ppEngine}\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns one of the following:\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppEngine}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to return the engine pointer\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b GetPerformanceEnginge}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::GetOutputDevice Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetOutputDevice(}{\b ODevice*} {\i pODev}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns the currently selected output device for IME.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The {\i pODev} parameter is NULL\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pODev}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the resulting output device\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method needs to be updated for use with DirectMusic.  Perhaps it should 
return which port is currently active?\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b ODevice}, {\b SetOutputDevice}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::GetPerformanceEngine Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetPerformanceEngine(}{\b IUnknown**} {\i ppPerformance}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns an AddRef()'d pointer to the IDirectMusicPerformance interface. 
It replaces GetMusicEngine.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell A NULL was passed as {\i ppPerformance}\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppPerformance}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the location to return the IDirectMusicPerformance reference in\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::GetSynthEngine Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetSynthEngine(}{\b IUnknown**} {\i ppEngine}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns an AddRef()'d pointer to the SynthEngine interface. 
This method is replaced by {\b GetSynthPort}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell A NULL was passed as {\i ppEngine}\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppEngine}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to return the engine pointer\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b GetSynthPort}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::GetSynthPort Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetSynthPort(}{\b IUnknown**} {\i ppPort}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns an AddRef()'d pointer to a Port controlled by the software synthesizer. 
It replaces GetSynthEngine.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell A NULL was passed as {\i ppPort}\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppPort}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to return a reference to the synth port in\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::IsNodePlaying Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT IsNodePlaying(}{\b IJazzNode*} {\i pNode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns S_OK if {\i pNode} is playing, and 
S_FALSE if it is not.  If {\i pNode} is NULL, returns S_OK if nothing is playing, and 
S_FALSE if something is playing.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell If {\i pNode} is not NULL, the node is playing.  Otherwise, no node is playing.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_FALSE\cell If {\i pNode} is not NULL, the node is not playing.  Otherwise, a node is playing.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the node to check.  If NULL, check whether 
anything is playing.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method needs to be updated for use with DirectMusic. 
This really should be gotten rid of, and the nodes should query {\b IDirectMusicPerformance::IsPlaying}
 
with their segment or segment state.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::PlayMIDIEvent Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT PlayMIDIEvent(}{\b DWORD} {\i dwStatus}{\b , DWORD} {\i dwData1}
{\b , DWORD} {\i dwData2}
{\b , DWORD} {\i dwTime}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Play a MIDI event now, or in the future.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The event was successfully played or queued.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwStatus}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Status\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwData1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Data 1\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwData2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Data 2\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwTime}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The number of milliseconds into the future when to play this 
event.  If zero, play the event now.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method needs to be updated for use with DirectMusic.  Perhaps we should add 
a parameter specifying which performance channel to use, or get rid of the method 
entirely?\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::RegisterNotify Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RegisterNotify(}{\b IJazzTransport*} {\i pTransport}{\b , REFGUID} {\i guidNotify}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Adds a notification type to the list of 
types that should be send to this {\b IJazzTransport}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The Transport was successfully registered to received the specified events\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell {\i pTransport} is NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the transport to send the notification event to\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidNotify}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The guid corresponding to the type of events to send\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This is currently not implemented.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::RegisterTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT RegisterTransport(}{\b {\b IJazzNode}*} {\i pDocRootNode}{\b , {\b IJazzTransport}*} {\i pTransport}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Add {\i pDocRootNode} and {\i pTransport} 
to the list of items in our registry and in the Toolbar's Combo box.  If {\i pDocRootNode} 
is already in the registry, increment its reference count.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The node was successfully added.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell We were unable to add the node to the registry.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the {\b IJazzNode} to add\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the {\b IJazzTransport} to add\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::ResumeOutput Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT ResumeOutput(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function resumes output of the Music Engine, regaining control of system devices as necessary.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The operation failed.  The output device remains unchanged.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The most likely cause of failure for this method is that some other application has control of the MIDI and/or WAVE output device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 This method needs to be updated for use with DirectMusic.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b SuspendOutput}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::SetActiveNode Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetActiveNode(}{\b IJazzNode *} {\i pDocRootNode}{\b , DWORD} {\i btnFlags}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets {\i pDocRootNode} as the active node 
and use {\i btnFlags} to set the initial state of the buttons and determine if we are 
using the default music engine.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The active node was successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The node was not found in our registry.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IJazzNode} interface to become active.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i btnFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Flags determining whether we're using the default engine.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::SetActiveTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetActiveTransport(}{\b IJazzTransport*} {\i pTransport}{\b , DWORD} {\i btnFlags}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets {\i pTransport} as the active 
transport and use {\i btnFlags} to set the initial state of the buttons and determine 
if we are using the default music engine.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The active transport was successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The transport was not found in our registry.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Pointer to the {\b IJazzTransport} interface to become active.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i btnFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [in] Flags determining whether we're using the default engine.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::SetBtnStates Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetBtnStates(}{\b IJazzNode*} {\i pDocRootNode}{\b , DWORD} {\i btnFlags}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets the button states of {\i pDocRootNode} 
according to the flags in {\i btnFlags}.  The is typically only needed if the node 
is not using the Music Engine for playback.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The button states were successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The node is not the active or playing node.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the node to change the button states for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i btnFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The button states to set\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::SetOutputDevice Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetOutputDevice(}{\b ODevice} {\i oDev}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function sets the desired output device for IME.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The {\i oDev} parameter is invalid\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The operation failed.  The output device remains unchanged.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i oDev}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The desired output device\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method needs to be updated for use with DirectMusic.  Perhaps it should 
set which port should become active?\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b ODevice}, {\b GetOutputDevice}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::SetTempo Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetTempo(}{\b IJazzNode*} {\i pDocRootNode}{\b , double} {\i dblTempo}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets the tempo displayed in the toolbar if 
{\i pDocRootNode} is the node that currently "owns" the toolbar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The tempo was successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The node does not currently "own" the toolbar.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the node to change the button states for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dblTempo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The tempo to change to.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::SetTempoModifier Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SetTempoModifier(}{\b IJazzNode*} {\i pDocRootNode}{\b , double} {\i dblModifier}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Sets the tempo modifier displayed in 
the toolbar if {\i pDocRootNode} is the node that currently "owns" the toolbar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The tempo modifier was successfully set.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell The node does not currently "own" the toolbar.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the node to change the button states for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dblModifier}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The tempo modifier to change to.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::SuspendOutput Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT SuspendOutput(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function suspends output of the Music Engine, freeing up resources that may be desired by other apps.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The operation failed.  The output device remains unchanged.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This method needs to be updated for use with DirectMusic.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b ResumeOutput}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::UnregisterNotify Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT UnregisterNotify(}{\b IJazzTransport*} {\i pTransport}{\b , REFGUID} {\i guidNotify}
{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Removes a notification type from the list of 
types that should be send to this {\b IJazzTransport}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The Transport was successfully registered to received the specified events\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_INVALIDARG\cell pTransport is NULL.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTransport}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the transport to stop sending the notification event to\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidNotify}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The guid corresponding to the type of events to stop sending\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IConductor::UnRegisterTransport Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT UnRegisterTransport(}{\b IJazzNode*} {\i pDocRootNode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 In the conductor's registry, 
decrement the reference count of the entry that points to {\i pDocRootNode}.  If it 
has no more references, stop it if it is playing, remove it from the registry, and 
remove it from the Toolbar's Combo box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The node was successfully removed.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell The node was not found in the registry.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A pointer to the node to remove\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IJazzTransport Interface\par
\pard\plain \sa160\sl240 \fs21\lang1033 The Conductor uses this interface to interact with the editors that 
need to use the functionality provided by the transport toolbar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/IJAZZTRANSPORT.D\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IJazzTransport::GetName Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT GetName(}{\b BSTR*} {\i pbstrName}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Returns text used for this {\b Transport}'s label.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/IJAZZTRANSPORT.D\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The name was returned successfully.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_POINTER\cell The address in {\i pbstrName} is not valid.  For example, it may be NULL.\cell }\pard \intbl \row \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 E_FAIL\cell An error occurred and the name was not returned.\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbstrName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 [out,retval] Pointer to the caller-allocated variable that 
receives a copy of the name.  The caller must free {\i pbstrName} with SysFreeString 
when it is no longer needed.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IJazzTransport::Play Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Play(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method starts playback of the associated transport. 
It is called in response to the user clicking on the play button in the transport toolbar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/IJAZZTRANSPORT.D\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If this method succeeds, the conductor assumes the transport was able to start playback. 
If this method fails, the conductor assumes the transport was not able to start playback.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IJazzTransport::Record Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Record(}{\b BOOL} {\i fPressed}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method starts or stops recording of the associated transport. 
It is called in response to the user clicking on the record button in the transport toolbar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/IJAZZTRANSPORT.D\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fPressed}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 TRUE if the button was pressed. FALSE if the button was unpressed.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If this method succeeds, the conductor assumes the transport was able to start or stop recording. 
If this method fails, the conductor assumes the transport was not able to start or 
stop recording and will set the record button to its previous state.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IJazzTransport::Stop Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Stop(}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method stops playback of the associated transport. 
It is called in response to the user clicking on the stop button in the transport toolbar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/IJAZZTRANSPORT.D\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If this method succeeds, the conductor assumes the transport was able to stop playback. 
If this method fails, the conductor assumes the transport was not able to stop playback.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IJazzTransport::Transition Method\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT Transition(}{\b {\b IJazzNode*}} {\i pDocRootNode}{\b )}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method starts a transition to the associated transport. 
It is called in response to the user clicking on the transition button in the transport toolbar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/IJAZZTRANSPORT.D\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Codes\par
\trowd \trgaph72\trleft-72 \cellx3078\cellx7038 \pard\plain \intbl\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 {\fs18 S_OK\cell The operation was successful\cell }\pard \intbl \row \pard\plain \li240\sa0\sl240 \f2\fs20\lang1033 \par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDocRootNode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the {\b IJazzNode} that is currently playing\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If this method succeeds, the conductor assumes the transport was able to successfully 
transition from the passed {\i pDocRootNode}. 
If this method fails, the conductor assumes the transport was unable to transition 
successfully.  As a default transition, it will call {\b Stop} on the 
currently playing transport, and if it succeeds it will call {\b Play} 
on the currently active transport.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ButtonStateFlags\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum ButtonStateFlags \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_ENGINEDEFAULT,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_PLAYENABLED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_PLAYCHECKED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_PLAYDISABLED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_STOPENABLED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_STOPCHECKED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_STOPDISABLED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_RECORDENABLED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_RECORDCHECKED,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BS_RECORDDISABLED\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 State flags for the toolbar buttons\par
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_ENGINEDEFAULT}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Use the default music engine\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_PLAYENABLED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Enable the play button\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_PLAYCHECKED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Depress the play button\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_PLAYDISABLED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Disable the play button\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_STOPENABLED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Use the default music engine\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_STOPCHECKED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Use the default music engine\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_STOPDISABLED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Use the default music engine\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_RECORDENABLED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Use the default music engine\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_RECORDCHECKED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Use the default music engine\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b BS_RECORDDISABLED}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Use the default music engine\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 These will probably be changed to: 
BS_ENGINEDEFAULT\tab - Use the default music engine 
BS_PLAY_ENABLED\tab \tab - Enable the play button 
BS_PLAY_CHECKED\tab \tab - Depress the play button 
BS_STOP_ENABLED\tab \tab - Enable the stop button 
BS_STOP_CHECKED\tab \tab - Depress the stop button 
BS_REC_ENABLED\tab \tab - Enable the record button 
BS_REC_CHECKED\tab \tab - Depress the record button 
BS_TRANS_ENABLED\tab - Enable the transition button 
BS_TRANS_CHECKED\tab - Depress the transition button\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ODevice\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum ODevice \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab OD_MIDI,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab OD_SYNTH\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 Output device values\par
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: D:/SOURCE/JAZZ/CONDUCTOR/CCONDUCT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b OD_MIDI}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Output is to the MIDI device\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b OD_SYNTH}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Output is to the software synthesis DLL\par 
}
