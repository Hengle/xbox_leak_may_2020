; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@CLP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GHLG@hdc?5?$DN?$DN?5m_hdc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@EKAA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@KNKG@XACT?3GUI?3MainFrame?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@KKPP@XACT?3GUI?3MainSplitter?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LHGB@Wave?5Bank?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@HDHK@XACT?3GUI?3WorkspaceChild?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07FEMJ@XACTGUI?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07HGPI@WinMain?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@MODD@InitCommonControlsEx?5failed?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLLE@Failed?5to?5load?5application?5title@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08POFP@?5?$CIdebug?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@MPJF@CApplication?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@OMJN@Software?2Microsoft?2XACT?2GUI?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@PDGB@Project?5MRU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFFG@MainFramePlacement?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@EPCD@WM_QUIT?5?$DN?$DN?5msg?4message?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@OAPA@Invalid?5forward?5type?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@BJDK@msctls_statusbar32?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@BGMP@MainSplitterPosition?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@LGEM@WorkspaceChildPlacement?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadResourceIconLarge@@YGPAUHICON__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadPopupMenu@@YGPAUHMENU__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnActivate@CMDIChildWindow@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDeactivate@CMDIChildWindow@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RestoreObject@CTempSelectObject@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetResolution@CWaveformRenderer@@UAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableButton@CToolBar@@UAEHIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CMainStatusBar@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CMainStatusBar@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CMainToolBar@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CMainToolBar@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CMainProjectTree@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CMainProjectTree@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CMainSplitter@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CMainSplitter@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CMainWorkspace@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CMainWorkspace@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CMainFrame@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CMainFrame@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CApplication@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCApplication@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CApplication@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainFrame@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainFrame@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainFrame@@UAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PumpMessages@CMainFrame@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HandleMessage@CMainFrame@@UAEHIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CMainFrame@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CMainFrame@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CMainFrame@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CMainFrame@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CMainFrame@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CMainFrame@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnToolTipDisplayInfo@CMainFrame@@UAEXPAUtagNMTTDISPINFOA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainFrame@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ForwardCommand@CMainFrame@@UAEHIIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdNewProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdOpenProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdReloadProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdSaveProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdSaveProjectAs@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdAddWaveBank@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdBuild@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdConnect@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdDisconnect@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdExit@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdAbout@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdWindowPrev@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdWindowNext@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdWindowCascade@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdWindowTileHorz@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdWindowTileVert@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdWindowClose@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdWindowCloseAll@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LayoutControls@CMainFrame@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LayoutControls@CMainFrame@@UAEXIIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableCommand@CMainFrame@@UAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckCommand@CMainFrame@@UAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDefaultCommandState@CMainFrame@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainStatusBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainStatusBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainStatusBar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainStatusBar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainToolBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainToolBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainToolBar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainToolBar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainProjectTree@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainProjectTree@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainProjectTree@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainProjectTree@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainProjectTree@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainProjectTreeItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainProjectTreeItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainProjectTreeItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainProjectTreeCategory@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainProjectTreeCategory@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainProjectTreeCategory@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainProjectTreeCategory@@UAEHPAVCMainProjectTree@@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainSplitter@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainSplitter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainSplitter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainSplitter@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HandleMessage@CMainSplitter@@UAEHIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseButtonDown@CMainSplitter@@UAEHKHHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseButtonUp@CMainSplitter@@UAEHKHHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseMove@CMainSplitter@@UAEHKHHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CMainSplitter@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainWorkspace@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainWorkspace@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainWorkspace@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainWorkspace@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWorkspaceChild@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWorkspaceChild@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWorkspaceChild@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CWorkspaceChild@@UAEHPBDIPAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMainSplitter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainStatusBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainProjectTreeCategory@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainProjectTreeItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainToolBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CApplication@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWorkspaceChild@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainProjectTree@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainFrame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainWorkspace@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?m_pszWaveBankType@CMainProjectTree@@2QBDB	; CMainProjectTree::m_pszWaveBankType
PUBLIC	?m_pszClassName@CMainSplitter@@2QBDB		; CMainSplitter::m_pszClassName
PUBLIC	?m_nWidth@CMainSplitter@@2IB			; CMainSplitter::m_nWidth
PUBLIC	?m_pszClassName@CWorkspaceChild@@2QBDB		; CWorkspaceChild::m_pszClassName
PUBLIC	?m_pszClassName@CMainFrame@@2QBDB		; CMainFrame::m_pszClassName
PUBLIC	?g_pApplication@@3PAVCApplication@@A		; g_pApplication
PUBLIC	??_C@_0BD@KNKG@XACT?3GUI?3MainFrame?$AA@	; `string'
PUBLIC	??_C@_0BG@KKPP@XACT?3GUI?3MainSplitter?$AA@	; `string'
PUBLIC	??_C@_09LHGB@Wave?5Bank?$AA@			; `string'
PUBLIC	??_C@_0BI@HDHK@XACT?3GUI?3WorkspaceChild?$AA@	; `string'
_BSS	SEGMENT
?g_pApplication@@3PAVCApplication@@A DD 01H DUP (?)	; g_pApplication
_BSS	ENDS
;	COMDAT ??_C@_0BD@KNKG@XACT?3GUI?3MainFrame?$AA@
CONST	SEGMENT
??_C@_0BD@KNKG@XACT?3GUI?3MainFrame?$AA@ DB 'XACT:GUI:MainFrame', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?m_pszClassName@CMainFrame@@2QBDB DD FLAT:??_C@_0BD@KNKG@XACT?3GUI?3MainFrame?$AA@ ; CMainFrame::m_pszClassName
CONST	ENDS
;	COMDAT ??_C@_0BG@KKPP@XACT?3GUI?3MainSplitter?$AA@
CONST	SEGMENT
??_C@_0BG@KKPP@XACT?3GUI?3MainSplitter?$AA@ DB 'XACT:GUI:MainSplitter', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?m_pszClassName@CMainSplitter@@2QBDB DD FLAT:??_C@_0BG@KKPP@XACT?3GUI?3MainSplitter?$AA@ ; CMainSplitter::m_pszClassName
?m_nWidth@CMainSplitter@@2IB DD 04H			; CMainSplitter::m_nWidth
CONST	ENDS
;	COMDAT ??_C@_09LHGB@Wave?5Bank?$AA@
CONST	SEGMENT
??_C@_09LHGB@Wave?5Bank?$AA@ DB 'Wave Bank', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
?m_pszWaveBankType@CMainProjectTree@@2QBDB DD FLAT:??_C@_09LHGB@Wave?5Bank?$AA@ ; CMainProjectTree::m_pszWaveBankType
CONST	ENDS
;	COMDAT ??_C@_0BI@HDHK@XACT?3GUI?3WorkspaceChild?$AA@
CONST	SEGMENT
??_C@_0BI@HDHK@XACT?3GUI?3WorkspaceChild?$AA@ DB 'XACT:GUI:WorkspaceChild'
	DB	00H						; `string'
CONST	ENDS
CONST	SEGMENT
?m_pszClassName@CWorkspaceChild@@2QBDB DD FLAT:??_C@_0BI@HDHK@XACT?3GUI?3WorkspaceChild?$AA@ ; CWorkspaceChild::m_pszClassName
?dwExStyle@?1??Create@CMainFrame@@UAEHH@Z@4KB DD 00H	; `CMainFrame::Create'::`2'::dwExStyle
?anDisabled@?1??SetDefaultCommandState@CMainFrame@@UAEXXZ@4QBIB DD 09c54H ; `CMainFrame::SetDefaultCommandState'::`2'::anDisabled
	DD	09c48H
	DD	09c49H
	DD	09c4aH
	DD	09c4cH
	DD	09c4dH
	DD	0ea60H
	DD	09c60H
?dwExStyle@?1??Create@CMainStatusBar@@UAEHXZ@4KB DD 00H	; `CMainStatusBar::Create'::`2'::dwExStyle
?dwStyle@?1??Create@CMainStatusBar@@UAEHXZ@4KB DD 050000103H ; `CMainStatusBar::Create'::`2'::dwStyle
?dwExStyle@?1??Create@CMainToolBar@@UAEHXZ@4KB DD 00H	; `CMainToolBar::Create'::`2'::dwExStyle
?dwStyle@?1??Create@CMainToolBar@@UAEHXZ@4KB DD 050008901H ; `CMainToolBar::Create'::`2'::dwStyle
?dwExStyle@?1??Create@CMainProjectTree@@UAEHXZ@4KB DD 0200H ; `CMainProjectTree::Create'::`2'::dwExStyle
?dwStyle@?1??Create@CMainProjectTree@@UAEHXZ@4KB DD 05000003fH ; `CMainProjectTree::Create'::`2'::dwStyle
?dwExStyle@?1??Create@CMainSplitter@@UAEHXZ@4KB DD 00H	; `CMainSplitter::Create'::`2'::dwExStyle
?dwStyle@?1??Create@CMainSplitter@@UAEHXZ@4KB DD 050000000H ; `CMainSplitter::Create'::`2'::dwStyle
?dwExStyle@?1??Create@CMainWorkspace@@UAEHXZ@4KB DD 0200H ; `CMainWorkspace::Create'::`2'::dwExStyle
?dwStyle@?1??Create@CMainWorkspace@@UAEHXZ@4KB DD 052300000H ; `CMainWorkspace::Create'::`2'::dwStyle
?dwExStyle@?1??Create@CWorkspaceChild@@UAEHPBDIPAH@Z@4KB DD 00H ; `CWorkspaceChild::Create'::`2'::dwExStyle
CONST	ENDS
PUBLIC	_WinMain@16
PUBLIC	??0CApplication@@QAE@XZ				; CApplication::CApplication
PUBLIC	??_C@_07FEMJ@XACTGUI?$AA@			; `string'
PUBLIC	??_C@_07HGPI@WinMain?$AA@			; `string'
PUBLIC	??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0BM@MODD@InitCommonControlsEx?5failed?$AA@ ; `string'
PUBLIC	??_C@_0CB@DLLE@Failed?5to?5load?5application?5title@ ; `string'
PUBLIC	??_C@_08POFP@?5?$CIdebug?$CJ?$AA@		; `string'
PUBLIC	??_C@_0N@MPJF@CApplication?$AA@			; `string'
EXTRN	_g_szAppTitle:BYTE
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
EXTRN	_strcat:NEAR
EXTRN	?DumpMemoryUsage@CMemoryManager@DirectSound@@SGXH@Z:NEAR ; DirectSound::CMemoryManager::DumpMemoryUsage
EXTRN	__imp__LoadStringA@16:NEAR
EXTRN	?m_fAutoLoad@CWaveBankEntry@@2HA:DWORD		; CWaveBankEntry::m_fAutoLoad
EXTRN	__imp__InitCommonControlsEx@4:NEAR
;	COMDAT ??_C@_07FEMJ@XACTGUI?$AA@
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
CONST	SEGMENT
??_C@_07FEMJ@XACTGUI?$AA@ DB 'XACTGUI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGPI@WinMain?$AA@
CONST	SEGMENT
??_C@_07HGPI@WinMain?$AA@ DB 'WinMain', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\main\mainfrm.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MODD@InitCommonControlsEx?5failed?$AA@
CONST	SEGMENT
??_C@_0BM@MODD@InitCommonControlsEx?5failed?$AA@ DB 'InitCommonControlsEx'
	DB	' failed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLLE@Failed?5to?5load?5application?5title@
CONST	SEGMENT
??_C@_0CB@DLLE@Failed?5to?5load?5application?5title@ DB 'Failed to load a'
	DB	'pplication title', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08POFP@?5?$CIdebug?$CJ?$AA@
CONST	SEGMENT
??_C@_08POFP@?5?$CIdebug?$CJ?$AA@ DB ' (debug)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MPJF@CApplication?$AA@
CONST	SEGMENT
??_C@_0N@MPJF@CApplication?$AA@ DB 'CApplication', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
$T53496 = -16
$T53499 = -20
$T53500 = -24
_hInstance$ = 8
_nShowCmd$ = 20
_icc$ = -8
_nResult$ = -12
_WinMain@16 PROC NEAR					; COMDAT

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 58   :     INITCOMMONCONTROLSEX    icc;
; 59   :     int                     nResult;
; 60   : 
; 61   :     //
; 62   :     // Initialize globals
; 63   :     //
; 64   : 
; 65   :     CWaveBankEntry::m_fAutoLoad = FALSE;

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_fAutoLoad@CWaveBankEntry@@2HA, 0 ; CWaveBankEntry::m_fAutoLoad

; 66   : 
; 67   :     //
; 68   :     // Initialize the common controls library
; 69   :     //
; 70   : 
; 71   :     icc.dwSize = sizeof(icc);

  00010	c7 45 f8 08 00
	00 00		 mov	 DWORD PTR _icc$[ebp], 8

; 72   :     icc.dwICC = ICC_BAR_CLASSES | ICC_LISTVIEW_CLASSES | ICC_PROGRESS_CLASS | ICC_TAB_CLASSES | ICC_TREEVIEW_CLASSES | ICC_UPDOWN_CLASS;

  00017	c7 45 fc 3f 00
	00 00		 mov	 DWORD PTR _icc$[ebp+4], 63 ; 0000003fH

; 73   :     
; 74   :     if(!InitCommonControlsEx(&icc))

  0001e	8d 45 f8	 lea	 eax, DWORD PTR _icc$[ebp]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitCommonControlsEx@4
  00028	85 c0		 test	 eax, eax
  0002a	75 32		 jne	 SHORT $L52584

; 75   :     {
; 76   :         DPF_ERROR("InitCommonControlsEx failed");

  0002c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FEMJ@XACTGUI?$AA@ ; `string'
  00031	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07HGPI@WinMain?$AA@ ; `string'
  00036	6a 4c		 push	 76			; 0000004cH
  00038	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0003d	6a 01		 push	 1
  0003f	6a 09		 push	 9
  00041	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00046	83 c4 18	 add	 esp, 24			; 00000018H
  00049	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@MODD@InitCommonControlsEx?5failed?$AA@ ; `string'
  0004e	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00053	83 c4 04	 add	 esp, 4

; 77   :         return -1;

  00056	83 c8 ff	 or	 eax, -1
  00059	e9 14 01 00 00	 jmp	 $L52581
$L52584:

; 78   :     }
; 79   : 
; 80   :     //
; 81   :     // Load the application title
; 82   :     //
; 83   :     
; 84   :     if(!LoadString(hInstance, IDS_APPTITLE, g_szAppTitle, NUMELMS(g_szAppTitle)))

  0005e	68 00 01 00 00	 push	 256			; 00000100H
  00063	68 00 00 00 00	 push	 OFFSET FLAT:_g_szAppTitle
  00068	6a 01		 push	 1
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  0006d	51		 push	 ecx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16
  00074	85 c0		 test	 eax, eax
  00076	75 32		 jne	 SHORT $L52589

; 85   :     {
; 86   :         DPF_ERROR("Failed to load application title");

  00078	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FEMJ@XACTGUI?$AA@ ; `string'
  0007d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07HGPI@WinMain?$AA@ ; `string'
  00082	6a 56		 push	 86			; 00000056H
  00084	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00089	6a 01		 push	 1
  0008b	6a 09		 push	 9
  0008d	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@DLLE@Failed?5to?5load?5application?5title@ ; `string'
  0009a	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0009f	83 c4 04	 add	 esp, 4

; 87   :         return -1;

  000a2	83 c8 ff	 or	 eax, -1
  000a5	e9 c8 00 00 00	 jmp	 $L52581
$L52589:

; 88   :     }
; 89   : 
; 90   : #ifdef _DEBUG
; 91   : 
; 92   :     strcat(g_szAppTitle, " (debug)");

  000aa	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08POFP@?5?$CIdebug?$CJ?$AA@ ; `string'
  000af	68 00 00 00 00	 push	 OFFSET FLAT:_g_szAppTitle
  000b4	e8 00 00 00 00	 call	 _strcat
  000b9	83 c4 08	 add	 esp, 8

; 93   : 
; 94   : #endif // _DEBUG
; 95   : 
; 96   :     //
; 97   :     // Create the application object
; 98   :     //
; 99   :     
; 100  :     if(!(g_pApplication = NEW(CApplication)))

  000bc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@MPJF@CApplication?$AA@ ; `string'
  000c1	6a 64		 push	 100			; 00000064H
  000c3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000c8	68 7c 09 00 00	 push	 2428			; 0000097cH
  000cd	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  000d2	83 c4 10	 add	 esp, 16			; 00000010H
  000d5	89 45 f0	 mov	 DWORD PTR $T53496[ebp], eax
  000d8	83 7d f0 00	 cmp	 DWORD PTR $T53496[ebp], 0
  000dc	74 0d		 je	 SHORT $L53497
  000de	8b 4d f0	 mov	 ecx, DWORD PTR $T53496[ebp]
  000e1	e8 00 00 00 00	 call	 ??0CApplication@@QAE@XZ	; CApplication::CApplication
  000e6	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  000e9	eb 07		 jmp	 SHORT $L53498
$L53497:
  000eb	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L53498:
  000f2	8b 55 e4	 mov	 edx, DWORD PTR -28+[ebp]
  000f5	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_pApplication@@3PAVCApplication@@A, edx ; g_pApplication
  000fb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pApplication@@3PAVCApplication@@A, 0 ; g_pApplication
  00102	75 05		 jne	 SHORT $L52594

; 101  :     {
; 102  :         return -1;

  00104	83 c8 ff	 or	 eax, -1
  00107	eb 69		 jmp	 SHORT $L52581
$L52594:

; 103  :     }
; 104  :     
; 105  :     nResult = g_pApplication->m_MainFrame.Create(nShowCmd);

  00109	8b 45 14	 mov	 eax, DWORD PTR _nShowCmd$[ebp]
  0010c	50		 push	 eax
  0010d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00113	83 c1 10	 add	 ecx, 16			; 00000010H
  00116	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0011c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0011f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00125	89 45 f4	 mov	 DWORD PTR _nResult$[ebp], eax

; 106  : 
; 107  :     DELETE(g_pApplication);

  00128	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pApplication@@3PAVCApplication@@A, 0 ; g_pApplication
  0012f	74 37		 je	 SHORT $L52596
  00131	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00137	89 4d e8	 mov	 DWORD PTR $T53500[ebp], ecx
  0013a	8b 55 e8	 mov	 edx, DWORD PTR $T53500[ebp]
  0013d	89 55 ec	 mov	 DWORD PTR $T53499[ebp], edx
  00140	83 7d ec 00	 cmp	 DWORD PTR $T53499[ebp], 0
  00144	74 11		 je	 SHORT $L53501
  00146	6a 01		 push	 1
  00148	8b 45 ec	 mov	 eax, DWORD PTR $T53499[ebp]
  0014b	8b 10		 mov	 edx, DWORD PTR [eax]
  0014d	8b 4d ec	 mov	 ecx, DWORD PTR $T53499[ebp]
  00150	ff 12		 call	 DWORD PTR [edx]
  00152	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00155	eb 07		 jmp	 SHORT $L53502
$L53501:
  00157	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L53502:
  0015e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pApplication@@3PAVCApplication@@A, 0 ; g_pApplication
$L52596:

; 108  : 
; 109  :     //
; 110  :     // Check for leaks
; 111  :     //
; 112  : 
; 113  :     CMemoryManager::DumpMemoryUsage(TRUE);

  00168	6a 01		 push	 1
  0016a	e8 00 00 00 00	 call	 ?DumpMemoryUsage@CMemoryManager@DirectSound@@SGXH@Z ; DirectSound::CMemoryManager::DumpMemoryUsage

; 114  : 
; 115  :     return nResult;

  0016f	8b 45 f4	 mov	 eax, DWORD PTR _nResult$[ebp]
$L52581:

; 116  : }

  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c2 10 00	 ret	 16			; 00000010H
_WinMain@16 ENDP
_TEXT	ENDS
EXTRN	?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolAlloc
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT
_cbBuffer$ = 8
_pszFile$ = 12
_nLine$ = 16
_pszClass$ = 20
??2@YAPAXIPBDK0@Z PROC NEAR				; operator new, COMDAT

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 233  :     return DirectSound::CMemoryManager::TrackingMemAlloc(pszFile, nLine, pszClass, DSOUND_OBJECT_POOL_TAG, cbBuffer, TRUE); 

  00003	6a 01		 push	 1
  00005	8b 45 08	 mov	 eax, DWORD PTR _cbBuffer$[ebp]
  00008	50		 push	 eax
  00009	68 44 53 6f 62	 push	 1651462980		; 626f5344H
  0000e	8b 4d 14	 mov	 ecx, DWORD PTR _pszClass$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 10	 mov	 edx, DWORD PTR _nLine$[ebp]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc

; 234  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??2@YAPAXIPBDK0@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??0CMainFrame@@QAE@XZ				; CMainFrame::CMainFrame
PUBLIC	??_7CApplication@@6B@				; CApplication::`vftable'
PUBLIC	??_GCApplication@@UAEPAXI@Z			; CApplication::`scalar deleting destructor'
PUBLIC	??_ECApplication@@UAEPAXI@Z			; CApplication::`vector deleting destructor'
PUBLIC	??_C@_0BM@OMJN@Software?2Microsoft?2XACT?2GUI?$AA@ ; `string'
PUBLIC	??_C@_0M@PDGB@Project?5MRU?$AA@			; `string'
EXTRN	??0CRegistry@@QAE@PAUHKEY__@@PBD@Z:NEAR		; CRegistry::CRegistry
EXTRN	??0CProject@@QAE@XZ:NEAR			; CProject::CProject
EXTRN	??0CMRU@@QAE@PAUHKEY__@@PBD@Z:NEAR		; CMRU::CMRU
EXTRN	??0CRemoteAudition@@QAE@XZ:NEAR			; CRemoteAudition::CRemoteAudition
;	COMDAT ??_C@_0BM@OMJN@Software?2Microsoft?2XACT?2GUI?$AA@
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
CONST	SEGMENT
??_C@_0BM@OMJN@Software?2Microsoft?2XACT?2GUI?$AA@ DB 'Software\Microsoft'
	DB	'\XACT\GUI', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PDGB@Project?5MRU?$AA@
CONST	SEGMENT
??_C@_0M@PDGB@Project?5MRU?$AA@ DB 'Project MRU', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CApplication@@6B@
CONST	SEGMENT
??_7CApplication@@6B@ DD FLAT:??_ECApplication@@UAEPAXI@Z ; CApplication::`vftable'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CApplication@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CApplication@@QAE@XZ PROC NEAR			; CApplication::CApplication, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@OMJN@Software?2Microsoft?2XACT?2GUI?$AA@ ; `string'
  0000c	68 01 00 00 80	 push	 -2147483647		; 80000001H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 04	 add	 ecx, 4
  00017	e8 00 00 00 00	 call	 ??0CRegistry@@QAE@PAUHKEY__@@PBD@Z ; CRegistry::CRegistry
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 10	 add	 ecx, 16			; 00000010H
  00022	e8 00 00 00 00	 call	 ??0CMainFrame@@QAE@XZ	; CMainFrame::CMainFrame
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00030	e8 00 00 00 00	 call	 ??0CProject@@QAE@XZ	; CProject::CProject
  00035	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@PDGB@Project?5MRU?$AA@ ; `string'
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 04	 add	 ecx, 4
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00046	ff 52 1c	 call	 DWORD PTR [edx+28]
  00049	50		 push	 eax
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  00053	e8 00 00 00 00	 call	 ??0CMRU@@QAE@PAUHKEY__@@PBD@Z ; CMRU::CMRU
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 74 09 00
	00		 add	 ecx, 2420		; 00000974H
  00061	e8 00 00 00 00	 call	 ??0CRemoteAudition@@QAE@XZ ; CRemoteAudition::CRemoteAudition
  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CApplication@@6B@ ; CApplication::`vftable'

; 144  : }

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
??0CApplication@@QAE@XZ ENDP				; CApplication::CApplication
_TEXT	ENDS
PUBLIC	??1CApplication@@UAE@XZ				; CApplication::~CApplication
; Function compile flags: /Odt
;	COMDAT ??_GCApplication@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCApplication@@UAEPAXI@Z PROC NEAR			; CApplication::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CApplication@@UAE@XZ	; CApplication::~CApplication
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L52611
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L52611:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCApplication@@UAEPAXI@Z ENDP			; CApplication::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??1CMainFrame@@UAE@XZ				; CMainFrame::~CMainFrame
EXTRN	??1CRegistry@@UAE@XZ:NEAR			; CRegistry::~CRegistry
EXTRN	??1CProject@@UAE@XZ:NEAR			; CProject::~CProject
EXTRN	??1CMRU@@UAE@XZ:NEAR				; CMRU::~CMRU
EXTRN	??1CRemoteAudition@@UAE@XZ:NEAR			; CRemoteAudition::~CRemoteAudition
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CApplication@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CApplication@@UAE@XZ PROC NEAR			; CApplication::~CApplication, COMDAT
; _this$ = ecx

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CApplication@@6B@ ; CApplication::`vftable'

; 170  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 74 09 00
	00		 add	 ecx, 2420		; 00000974H
  00019	e8 00 00 00 00	 call	 ??1CRemoteAudition@@UAE@XZ ; CRemoteAudition::~CRemoteAudition
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  00027	e8 00 00 00 00	 call	 ??1CMRU@@UAE@XZ		; CMRU::~CMRU
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00035	e8 00 00 00 00	 call	 ??1CProject@@UAE@XZ	; CProject::~CProject
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 10	 add	 ecx, 16			; 00000010H
  00040	e8 00 00 00 00	 call	 ??1CMainFrame@@UAE@XZ	; CMainFrame::~CMainFrame
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 04	 add	 ecx, 4
  0004b	e8 00 00 00 00	 call	 ??1CRegistry@@UAE@XZ	; CRegistry::~CRegistry
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
??1CApplication@@UAE@XZ ENDP				; CApplication::~CApplication
_TEXT	ENDS
PUBLIC	??0CMainToolBar@@QAE@XZ				; CMainToolBar::CMainToolBar
PUBLIC	??0CMainProjectTree@@QAE@XZ			; CMainProjectTree::CMainProjectTree
PUBLIC	?IsWindow@CWindow@@UAEHXZ			; CWindow::IsWindow
PUBLIC	?SendMessageA@CWindow@@UAEJIIJ@Z		; CWindow::SendMessageA
PUBLIC	?PostMessageA@CWindow@@UAEJIIJ@Z		; CWindow::PostMessageA
PUBLIC	?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z	; CWindow::SendDlgItemMessageA
PUBLIC	?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z		; CWindow::GetDlgItem
PUBLIC	?SetWindowTextA@CWindow@@UAEHPBD@Z		; CWindow::SetWindowTextA
PUBLIC	?SetDlgItemTextA@CWindow@@UAEHHPBD@Z		; CWindow::SetDlgItemTextA
PUBLIC	?SetDlgItemInt@CWindow@@UAEHHIH@Z		; CWindow::SetDlgItemInt
PUBLIC	??0CMainSplitter@@QAE@XZ			; CMainSplitter::CMainSplitter
PUBLIC	?GetDlgItemTextA@CWindow@@UAEHHPADH@Z		; CWindow::GetDlgItemTextA
PUBLIC	?GetDlgItemInt@CWindow@@UAEIHPAHH@Z		; CWindow::GetDlgItemInt
PUBLIC	?MoveWindow@CWindow@@UAEHHHHHH@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z	; CWindow::MoveWindow
PUBLIC	?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetWindowRect
PUBLIC	?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetClientRect
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z	; CWindow::ScreenToClient
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::ScreenToClient
PUBLIC	?DragAcceptFiles@CWindow@@UAEXH@Z		; CWindow::DragAcceptFiles
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	??0CMainWorkspace@@QAE@XZ			; CMainWorkspace::CMainWorkspace
PUBLIC	?OnSysCommand@CWindow@@UAEHIPAJ@Z		; CWindow::OnSysCommand
PUBLIC	?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z	; CWindow::OnEraseBackground
PUBLIC	?OnPaint@CWindow@@UAEHPAJ@Z			; CWindow::OnPaint
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
PUBLIC	?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z	; CWindow::OnDropFiles
PUBLIC	?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z	; CWindow::OnScroll
PUBLIC	?AddRef@CMainFrame@@UAGKXZ			; CMainFrame::AddRef
PUBLIC	?Release@CMainFrame@@UAGKXZ			; CMainFrame::Release
PUBLIC	?Create@CMainFrame@@UAEHH@Z			; CMainFrame::Create
PUBLIC	?LayoutControls@CMainFrame@@UAEXH@Z		; CMainFrame::LayoutControls
PUBLIC	?LayoutControls@CMainFrame@@UAEXIIH@Z		; CMainFrame::LayoutControls
PUBLIC	?EnableCommand@CMainFrame@@UAEXIH@Z		; CMainFrame::EnableCommand
PUBLIC	?CheckCommand@CMainFrame@@UAEXIH@Z		; CMainFrame::CheckCommand
PUBLIC	?SetDefaultCommandState@CMainFrame@@UAEXXZ	; CMainFrame::SetDefaultCommandState
PUBLIC	?PumpMessages@CMainFrame@@UAEHXZ		; CMainFrame::PumpMessages
PUBLIC	?HandleMessage@CMainFrame@@UAEHIIJPAJ@Z		; CMainFrame::HandleMessage
PUBLIC	?OnCreate@CMainFrame@@UAEHPAXPAJ@Z		; CMainFrame::OnCreate
PUBLIC	?OnSize@CMainFrame@@UAEHIIIPAJ@Z		; CMainFrame::OnSize
PUBLIC	?OnClose@CMainFrame@@UAEHPAJ@Z			; CMainFrame::OnClose
PUBLIC	?OnDestroy@CMainFrame@@UAEHPAJ@Z		; CMainFrame::OnDestroy
PUBLIC	?OnMenuSelect@CMainFrame@@UAEHIIPAUHMENU__@@PAJ@Z ; CMainFrame::OnMenuSelect
PUBLIC	?OnCommand@CMainFrame@@UAEHIIPAUHWND__@@PAJ@Z	; CMainFrame::OnCommand
PUBLIC	?OnNotify@CMainFrame@@UAEHPAUtagNMHDR@@PAJ@Z	; CMainFrame::OnNotify
PUBLIC	?ForwardCommand@CMainFrame@@UAEHIIIPAUHWND__@@PAJ@Z ; CMainFrame::ForwardCommand
PUBLIC	?OnCmdNewProject@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdNewProject
PUBLIC	?OnCmdOpenProject@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdOpenProject
PUBLIC	?OnCmdReloadProject@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdReloadProject
PUBLIC	?OnCmdSaveProject@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdSaveProject
PUBLIC	?OnCmdSaveProjectAs@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdSaveProjectAs
PUBLIC	?OnCmdExit@CMainFrame@@UAEXXZ			; CMainFrame::OnCmdExit
PUBLIC	?OnCmdAbout@CMainFrame@@UAEXXZ			; CMainFrame::OnCmdAbout
PUBLIC	?OnCmdWindowNext@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdWindowNext
PUBLIC	?OnCmdWindowPrev@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdWindowPrev
PUBLIC	?OnCmdWindowCascade@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdWindowCascade
PUBLIC	?OnCmdWindowTileHorz@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdWindowTileHorz
PUBLIC	?OnCmdWindowTileVert@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdWindowTileVert
PUBLIC	?OnCmdWindowClose@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdWindowClose
PUBLIC	?OnCmdWindowCloseAll@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdWindowCloseAll
PUBLIC	?OnCmdAddWaveBank@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdAddWaveBank
PUBLIC	?OnCmdBuild@CMainFrame@@UAEXXZ			; CMainFrame::OnCmdBuild
PUBLIC	?OnCmdConnect@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdConnect
PUBLIC	?OnCmdDisconnect@CMainFrame@@UAEXXZ		; CMainFrame::OnCmdDisconnect
PUBLIC	?OnToolTipDisplayInfo@CMainFrame@@UAEXPAUtagNMTTDISPINFOA@@@Z ; CMainFrame::OnToolTipDisplayInfo
PUBLIC	??_7CMainFrame@@6B@				; CMainFrame::`vftable'
PUBLIC	??_GCMainFrame@@UAEPAXI@Z			; CMainFrame::`scalar deleting destructor'
PUBLIC	??_ECMainFrame@@UAEPAXI@Z			; CMainFrame::`vector deleting destructor'
PUBLIC	??0CMainStatusBar@@QAE@XZ			; CMainStatusBar::CMainStatusBar
EXTRN	?Destroy@CWindow@@UAEXXZ:NEAR			; CWindow::Destroy
EXTRN	?SetRedraw@CWindow@@UAEHH@Z:NEAR		; CWindow::SetRedraw
EXTRN	?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z:NEAR ; CWindow::DispatchMessageA
EXTRN	?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CWindow::OnScroll
EXTRN	?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z:NEAR	; CWindow::Create
EXTRN	??0CMDIFrameWindow@@QAE@II@Z:NEAR		; CMDIFrameWindow::CMDIFrameWindow
EXTRN	?Create@CMDIFrameWindow@@MAEHPBD0KKHHHHPAX@Z:NEAR ; CMDIFrameWindow::Create
EXTRN	?DefWindowProcA@CMDIFrameWindow@@MAEJPAUHWND__@@IIJ@Z:NEAR ; CMDIFrameWindow::DefWindowProcA
;	COMDAT ??_7CMainFrame@@6B@
CONST	SEGMENT
??_7CMainFrame@@6B@ DD FLAT:??_ECMainFrame@@UAEPAXI@Z	; CMainFrame::`vftable'
	DD	FLAT:?AddRef@CMainFrame@@UAGKXZ
	DD	FLAT:?Release@CMainFrame@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CMainFrame@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CMainFrame@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CMainFrame@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CMainFrame@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CMainFrame@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CMainFrame@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CMainFrame@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CMDIFrameWindow@@MAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CMDIFrameWindow@@MAEHPBD0KKHHHHPAX@Z
	DD	FLAT:?Create@CMainFrame@@UAEHH@Z
	DD	FLAT:?LayoutControls@CMainFrame@@UAEXIIH@Z
	DD	FLAT:?LayoutControls@CMainFrame@@UAEXH@Z
	DD	FLAT:?EnableCommand@CMainFrame@@UAEXIH@Z
	DD	FLAT:?CheckCommand@CMainFrame@@UAEXIH@Z
	DD	FLAT:?SetDefaultCommandState@CMainFrame@@UAEXXZ
	DD	FLAT:?PumpMessages@CMainFrame@@UAEHXZ
	DD	FLAT:?OnMenuSelect@CMainFrame@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?ForwardCommand@CMainFrame@@UAEHIIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnCmdNewProject@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdOpenProject@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdReloadProject@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdSaveProject@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdSaveProjectAs@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdExit@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdAbout@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdWindowNext@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdWindowPrev@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdWindowCascade@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdWindowTileHorz@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdWindowTileVert@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdWindowClose@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdWindowCloseAll@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdAddWaveBank@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdBuild@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdConnect@CMainFrame@@UAEXXZ
	DD	FLAT:?OnCmdDisconnect@CMainFrame@@UAEXXZ
	DD	FLAT:?OnToolTipDisplayInfo@CMainFrame@@UAEXPAUtagNMTTDISPINFOA@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainFrame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainFrame@@QAE@XZ PROC NEAR				; CMainFrame::CMainFrame, COMDAT
; _this$ = ecx

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 68		 push	 104			; 00000068H
  00009	6a 67		 push	 103			; 00000067H
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CMDIFrameWindow@@QAE@II@Z ; CMDIFrameWindow::CMDIFrameWindow
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 34	 add	 ecx, 52			; 00000034H
  00019	e8 00 00 00 00	 call	 ??0CMainToolBar@@QAE@XZ	; CMainToolBar::CMainToolBar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  00027	e8 00 00 00 00	 call	 ??0CMainStatusBar@@QAE@XZ ; CMainStatusBar::CMainStatusBar
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  00035	e8 00 00 00 00	 call	 ??0CMainProjectTree@@QAE@XZ ; CMainProjectTree::CMainProjectTree
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 18 02 00
	00		 add	 ecx, 536		; 00000218H
  00043	e8 00 00 00 00	 call	 ??0CMainSplitter@@QAE@XZ ; CMainSplitter::CMainSplitter
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00051	e8 00 00 00 00	 call	 ??0CMainWorkspace@@QAE@XZ ; CMainWorkspace::CMainWorkspace
  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainFrame@@6B@ ; CMainFrame::`vftable'

; 197  : }

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
??0CMainFrame@@QAE@XZ ENDP				; CMainFrame::CMainFrame
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysCommand@CWindow@@UAEHIPAJ@Z PROC NEAR		; CWindow::OnSysCommand, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 266  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 267  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnSysCommand@CWindow@@UAEHIPAJ@Z ENDP			; CWindow::OnSysCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z PROC NEAR ; CWindow::OnEraseBackground, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 276  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 277  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z ENDP	; CWindow::OnEraseBackground
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnPaint@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnPaint, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 282  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnPaint@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnPaint
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z PROC NEAR	; CWindow::OnScroll, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 287  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z ENDP		; CWindow::OnScroll
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 292  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
_TEXT	ENDS
PUBLIC	??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_04BEIE@this?$AA@				; `string'
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\base\wndwrap.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT
??_C@_04BEIE@this?$AA@ DB 'this', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 301  :     ASSERT(this);

  00007	68 2d 01 00 00	 push	 301			; 0000012dH
  0000c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04BEIE@this?$AA@ ; `string'
  00016	33 c0		 xor	 eax, eax
  00018	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001c	0f 94 c0	 sete	 al
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00025	83 c4 10	 add	 esp, 16			; 00000010H

; 302  :     return m_hWnd;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 303  : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
_TEXT	ENDS
PUBLIC	??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@	; `string'
EXTRN	__imp__IsWindow@4:NEAR
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ DB '::IsWindow(m_hWnd)', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsWindow@CWindow@@UAEHXZ PROC NEAR			; CWindow::IsWindow, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  :     if(!m_hWnd)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0000e	75 04		 jne	 SHORT $L49126

; 308  :     {
; 309  :         return FALSE;

  00010	33 c0		 xor	 eax, eax
  00012	eb 2f		 jmp	 SHORT $L49125
$L49126:

; 310  :     }
; 311  : 
; 312  :     ASSERT(::IsWindow(m_hWnd));

  00014	68 38 01 00 00	 push	 312			; 00000138H
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ ; `string'
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00029	52		 push	 edx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00030	f7 d8		 neg	 eax
  00032	1b c0		 sbb	 eax, eax
  00034	40		 inc	 eax
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 313  : 
; 314  :     return TRUE;

  0003e	b8 01 00 00 00	 mov	 eax, 1
$L49125:

; 315  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?IsWindow@CWindow@@UAEHXZ ENDP				; CWindow::IsWindow
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?SendMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::SendMessageA, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  :     return ::SendMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 320  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SendMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::SendMessageA
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::PostMessageA, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  :     return ::PostMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 325  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?PostMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::PostMessageA
_TEXT	ENDS
EXTRN	__imp__SetWindowTextA@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?SetWindowTextA@CWindow@@UAEHPBD@Z PROC NEAR		; CWindow::SetWindowTextA, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :     return ::SetWindowText(m_hWnd, pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 330  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetWindowTextA@CWindow@@UAEHPBD@Z ENDP			; CWindow::SetWindowTextA
_TEXT	ENDS
EXTRN	__imp__MoveWindow@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_nWidth$ = 16
_nHeight$ = 20
_fRepaint$ = 24
_this$ = -4
?MoveWindow@CWindow@@UAEHHHHHH@Z PROC NEAR		; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 334  :     return ::MoveWindow(m_hWnd, x, y, nWidth, nHeight, fRepaint);

  00007	8b 45 18	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 14	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 10	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 335  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 14 00	 ret	 20			; 00000014H
?MoveWindow@CWindow@@UAEHHHHHH@Z ENDP			; CWindow::MoveWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_fRepaint$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  :     return ::MoveWindow(m_hWnd, prcWindow->left, prcWindow->top, prcWindow->right - prcWindow->left, prcWindow->bottom - prcWindow->top, fRepaint);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 340  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z ENDP		; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetWindowRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_this$ = -4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetWindowRect, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  :     return ::GetWindowRect(m_hWnd, prcWindow);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 345  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetWindowRect
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcClient$ = 8
_this$ = -4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetClientRect, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 349  :     return ::GetClientRect(m_hWnd, prcClient);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcClient$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 350  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetClientRect
_TEXT	ENDS
EXTRN	__imp__ScreenToClient@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT
_ppt$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  :     return ::ScreenToClient(m_hWnd, ppt);

  00007	8b 45 08	 mov	 eax, DWORD PTR _ppt$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 355  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z ENDP	; CWindow::ScreenToClient
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prc$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 359  :     if(!::ScreenToClient(m_hWnd, (LPPOINT)&prc->left))

  00007	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $L49174

; 360  :     {
; 361  :         return FALSE;

  0001c	33 c0		 xor	 eax, eax
  0001e	eb 14		 jmp	 SHORT $L49172
$L49174:

; 362  :     }
; 363  : 
; 364  :     return ::ScreenToClient(m_hWnd, (LPPOINT)&prc->right);

  00020	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	50		 push	 eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0002d	52		 push	 edx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
$L49172:

; 365  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z ENDP	; CWindow::ScreenToClient
_TEXT	ENDS
EXTRN	__imp__SendDlgItemMessageA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT
_nItemId$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z PROC NEAR	; CWindow::SendDlgItemMessageA, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  :     return ::SendDlgItemMessage(m_hWnd, nItemId, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0001d	52		 push	 edx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 370  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z ENDP		; CWindow::SendDlgItemMessageA
_TEXT	ENDS
EXTRN	__imp__GetDlgItem@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT
_nItemId$ = 8
_this$ = -4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z PROC NEAR	; CWindow::GetDlgItem, COMDAT
; _this$ = ecx

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 374  :     return ::GetDlgItem(m_hWnd, nItemId);

  00007	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8

; 375  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z ENDP		; CWindow::GetDlgItem
_TEXT	ENDS
EXTRN	__imp__SetDlgItemTextA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_this$ = -4
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z PROC NEAR		; CWindow::SetDlgItemTextA, COMDAT
; _this$ = ecx

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 379  :     return ::SetDlgItemText(m_hWnd, nItemId, pszString);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _nItemId$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 380  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z ENDP		; CWindow::SetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__SetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_nValue$ = 12
_fSigned$ = 16
_this$ = -4
?SetDlgItemInt@CWindow@@UAEHHIH@Z PROC NEAR		; CWindow::SetDlgItemInt, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  :     return ::SetDlgItemInt(m_hWnd, nItemId, nValue, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _nValue$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 385  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SetDlgItemInt@CWindow@@UAEHHIH@Z ENDP			; CWindow::SetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__GetDlgItemTextA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_nLength$ = 16
_this$ = -4
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z PROC NEAR		; CWindow::GetDlgItemTextA, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  :     return ::GetDlgItemText(m_hWnd, nItemId, pszString, nLength);

  00007	8b 45 10	 mov	 eax, DWORD PTR _nLength$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pszString$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 390  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z ENDP		; CWindow::GetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__GetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pfTranslated$ = 12
_fSigned$ = 16
_this$ = -4
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z PROC NEAR		; CWindow::GetDlgItemInt, COMDAT
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 394  :     return ::GetDlgItemInt(m_hWnd, nItemId, pfTranslated, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pfTranslated$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16

; 395  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z ENDP		; CWindow::GetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__DragAcceptFiles@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fAccept$ = 8
_this$ = -4
?DragAcceptFiles@CWindow@@UAEXH@Z PROC NEAR		; CWindow::DragAcceptFiles, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 399  :     ::DragAcceptFiles(m_hWnd, fAccept);

  00007	8b 45 08	 mov	 eax, DWORD PTR _fAccept$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragAcceptFiles@8

; 400  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?DragAcceptFiles@CWindow@@UAEXH@Z ENDP			; CWindow::DragAcceptFiles
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z PROC NEAR	; CWindow::OnDropFiles, COMDAT
; _this$ = ecx

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 404  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 405  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z ENDP	; CWindow::OnDropFiles
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?AddRef@CMainFrame@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CMainFrame@@UAGKXZ PROC NEAR			; CMainFrame::AddRef, COMDAT

; 419  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 420  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 421  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CMainFrame@@UAGKXZ ENDP				; CMainFrame::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CMainFrame@@UAGKXZ
_TEXT	SEGMENT
?Release@CMainFrame@@UAGKXZ PROC NEAR			; CMainFrame::Release, COMDAT

; 424  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 425  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 426  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CMainFrame@@UAGKXZ ENDP			; CMainFrame::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainFrame@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainFrame@@UAEPAXI@Z PROC NEAR			; CMainFrame::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainFrame@@UAE@XZ	; CMainFrame::~CMainFrame
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L52623
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L52623:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainFrame@@UAEPAXI@Z ENDP				; CMainFrame::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CMainToolBar@@UAE@XZ				; CMainToolBar::~CMainToolBar
PUBLIC	??1CMainProjectTree@@UAE@XZ			; CMainProjectTree::~CMainProjectTree
PUBLIC	??1CMainSplitter@@UAE@XZ			; CMainSplitter::~CMainSplitter
PUBLIC	??1CMainWorkspace@@UAE@XZ			; CMainWorkspace::~CMainWorkspace
PUBLIC	??1CMainStatusBar@@UAE@XZ			; CMainStatusBar::~CMainStatusBar
EXTRN	??1CMDIFrameWindow@@UAE@XZ:NEAR			; CMDIFrameWindow::~CMDIFrameWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CMainFrame@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainFrame@@UAE@XZ PROC NEAR				; CMainFrame::~CMainFrame, COMDAT
; _this$ = ecx

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainFrame@@6B@ ; CMainFrame::`vftable'

; 223  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00019	e8 00 00 00 00	 call	 ??1CMainWorkspace@@UAE@XZ ; CMainWorkspace::~CMainWorkspace
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 18 02 00
	00		 add	 ecx, 536		; 00000218H
  00027	e8 00 00 00 00	 call	 ??1CMainSplitter@@UAE@XZ ; CMainSplitter::~CMainSplitter
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  00035	e8 00 00 00 00	 call	 ??1CMainProjectTree@@UAE@XZ ; CMainProjectTree::~CMainProjectTree
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  00043	e8 00 00 00 00	 call	 ??1CMainStatusBar@@UAE@XZ ; CMainStatusBar::~CMainStatusBar
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 34	 add	 ecx, 52			; 00000034H
  0004e	e8 00 00 00 00	 call	 ??1CMainToolBar@@UAE@XZ	; CMainToolBar::~CMainToolBar
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ??1CMDIFrameWindow@@UAE@XZ ; CMDIFrameWindow::~CMDIFrameWindow
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??1CMainFrame@@UAE@XZ ENDP				; CMainFrame::~CMainFrame
_TEXT	ENDS
PUBLIC	?LoadResourceIconLarge@@YGPAUHICON__@@I@Z	; LoadResourceIconLarge
PUBLIC	?LoadResourceIconSmall@@YGPAUHICON__@@I@Z	; LoadResourceIconSmall
PUBLIC	??_C@_0BD@DFFG@MainFramePlacement?$AA@		; `string'
EXTRN	_ParseCommandLine@12:NEAR
EXTRN	_g_hInstance:DWORD
EXTRN	__imp__RegisterClassExA@4:NEAR
EXTRN	__imp__ShowWindow@8:NEAR
EXTRN	?WindowProc@CWindow@@SGJPAUHWND__@@IIJ@Z:NEAR	; CWindow::WindowProc
EXTRN	__imp__GetCommandLineA@0:NEAR
EXTRN	_strlen:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
;	COMDAT ??_C@_0BD@DFFG@MainFramePlacement?$AA@
CONST	SEGMENT
??_C@_0BD@DFFG@MainFramePlacement?$AA@ DB 'MainFramePlacement', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CMainFrame@@UAEHH@Z
_TEXT	SEGMENT
_nShowCmd$ = 8
_this$ = -112
_dwStyle$ = -108
_wc$ = -96
_pszCmdLine$ = -104
_pszProject$ = -48
_wp$ = -44
?Create@CMainFrame@@UAEHH@Z PROC NEAR			; CMainFrame::Create, COMDAT
; _this$ = ecx

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	57		 push	 edi
  00007	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx

; 250  :     static const DWORD      dwExStyle   = 0;
; 251  :     DWORD                   dwStyle     = WS_OVERLAPPEDWINDOW;

  0000a	c7 45 94 00 00
	cf 00		 mov	 DWORD PTR _dwStyle$[ebp], 13565952 ; 00cf0000H

; 252  :     WNDCLASSEX              wc          = { 0 };

  00011	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 0
  00018	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0001d	33 c0		 xor	 eax, eax
  0001f	8d 7d a4	 lea	 edi, DWORD PTR _wc$[ebp+4]
  00022	f3 ab		 rep stosd

; 253  :     LPTSTR                  pszCmdLine  = NULL;

  00024	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _pszCmdLine$[ebp], 0

; 254  :     LPTSTR                  pszProject  = NULL;

  0002b	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pszProject$[ebp], 0

; 255  :     WINDOWPLACEMENT         wp;
; 256  :     HRESULT                 hr;
; 257  : 
; 258  :     //
; 259  :     // Register the window class
; 260  :     //
; 261  : 
; 262  :     wc.cbSize = sizeof(wc);

  00032	c7 45 a0 30 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 48	; 00000030H

; 263  :     wc.hbrBackground = (HBRUSH)(COLOR_3DFACE + 1);

  00039	c7 45 c0 10 00
	00 00		 mov	 DWORD PTR _wc$[ebp+32], 16 ; 00000010H

; 264  :     wc.lpfnWndProc = WindowProc;

  00040	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp+8], OFFSET FLAT:?WindowProc@CWindow@@SGJPAUHWND__@@IIJ@Z ; CWindow::WindowProc

; 265  :     wc.hIcon = LoadResourceIconLarge(IDI_XACT);

  00047	6a 65		 push	 101			; 00000065H
  00049	e8 00 00 00 00	 call	 ?LoadResourceIconLarge@@YGPAUHICON__@@I@Z ; LoadResourceIconLarge
  0004e	89 45 b8	 mov	 DWORD PTR _wc$[ebp+24], eax

; 266  :     wc.hIconSm = LoadResourceIconSmall(IDI_XACT);

  00051	6a 65		 push	 101			; 00000065H
  00053	e8 00 00 00 00	 call	 ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ; LoadResourceIconSmall
  00058	89 45 cc	 mov	 DWORD PTR _wc$[ebp+44], eax

; 267  :     wc.hCursor = LoadCursor(NULL, IDC_ARROW);

  0005b	68 00 7f 00 00	 push	 32512			; 00007f00H
  00060	6a 00		 push	 0
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00068	89 45 bc	 mov	 DWORD PTR _wc$[ebp+28], eax

; 268  :     wc.hInstance = g_hInstance;

  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  00070	89 45 b4	 mov	 DWORD PTR _wc$[ebp+20], eax

; 269  :     wc.lpszClassName = m_pszClassName;

  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pszClassName@CMainFrame@@2QBDB ; CMainFrame::m_pszClassName
  00079	89 4d c8	 mov	 DWORD PTR _wc$[ebp+40], ecx

; 270  : 
; 271  :     RegisterClassEx(&wc);

  0007c	8d 55 a0	 lea	 edx, DWORD PTR _wc$[ebp]
  0007f	52		 push	 edx
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassExA@4

; 272  : 
; 273  :     //
; 274  :     // Load window placement data
; 275  :     //
; 276  :     
; 277  :     if(g_pApplication->m_Registry.GetBinaryValue(REGKEY_MAINFRAME_PLACEMENT, &wp, sizeof(wp)))

  00086	6a 2c		 push	 44			; 0000002cH
  00088	8d 45 d4	 lea	 eax, DWORD PTR _wp$[ebp]
  0008b	50		 push	 eax
  0008c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DFFG@MainFramePlacement?$AA@ ; `string'
  00091	6a 00		 push	 0
  00093	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00099	83 c1 04	 add	 ecx, 4
  0009c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000a2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a5	ff 50 14	 call	 DWORD PTR [eax+20]
  000a8	85 c0		 test	 eax, eax
  000aa	74 27		 je	 SHORT $L52644

; 278  :     {
; 279  :         wp.rcNormalPosition.right -= wp.rcNormalPosition.left;

  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _wp$[ebp+36]
  000af	2b 4d f0	 sub	 ecx, DWORD PTR _wp$[ebp+28]
  000b2	89 4d f8	 mov	 DWORD PTR _wp$[ebp+36], ecx

; 280  :         wp.rcNormalPosition.bottom -= wp.rcNormalPosition.top;

  000b5	8b 55 fc	 mov	 edx, DWORD PTR _wp$[ebp+40]
  000b8	2b 55 f4	 sub	 edx, DWORD PTR _wp$[ebp+32]
  000bb	89 55 fc	 mov	 DWORD PTR _wp$[ebp+40], edx

; 281  : 
; 282  :         if((SW_SHOWNORMAL == nShowCmd) && (SW_MAXIMIZE == wp.showCmd))

  000be	83 7d 08 01	 cmp	 DWORD PTR _nShowCmd$[ebp], 1
  000c2	75 0d		 jne	 SHORT $L52646
  000c4	83 7d dc 03	 cmp	 DWORD PTR _wp$[ebp+8], 3
  000c8	75 07		 jne	 SHORT $L52646

; 283  :         {
; 284  :             nShowCmd = SW_SHOWMAXIMIZED;

  000ca	c7 45 08 03 00
	00 00		 mov	 DWORD PTR _nShowCmd$[ebp], 3
$L52646:

; 285  :         }
; 286  :     }
; 287  :     else

  000d1	eb 1c		 jmp	 SHORT $L52647
$L52644:

; 288  :     {
; 289  :         wp.rcNormalPosition.left = CW_USEDEFAULT;

  000d3	c7 45 f0 00 00
	00 80		 mov	 DWORD PTR _wp$[ebp+28], -2147483648 ; 80000000H

; 290  :         wp.rcNormalPosition.top = CW_USEDEFAULT;

  000da	c7 45 f4 00 00
	00 80		 mov	 DWORD PTR _wp$[ebp+32], -2147483648 ; 80000000H

; 291  :         wp.rcNormalPosition.right = CW_USEDEFAULT;

  000e1	c7 45 f8 00 00
	00 80		 mov	 DWORD PTR _wp$[ebp+36], -2147483648 ; 80000000H

; 292  :         wp.rcNormalPosition.bottom = CW_USEDEFAULT;

  000e8	c7 45 fc 00 00
	00 80		 mov	 DWORD PTR _wp$[ebp+40], -2147483648 ; 80000000H
$L52647:

; 293  :     }
; 294  : 
; 295  :     //
; 296  :     // Create the window
; 297  :     //
; 298  : 
; 299  :     if(!CMDIFrameWindow::Create(m_pszClassName, g_szAppTitle, dwExStyle, dwStyle, wp.rcNormalPosition.left, wp.rcNormalPosition.top, wp.rcNormalPosition.right, wp.rcNormalPosition.bottom))

  000ef	6a 00		 push	 0
  000f1	8b 45 fc	 mov	 eax, DWORD PTR _wp$[ebp+40]
  000f4	50		 push	 eax
  000f5	8b 4d f8	 mov	 ecx, DWORD PTR _wp$[ebp+36]
  000f8	51		 push	 ecx
  000f9	8b 55 f4	 mov	 edx, DWORD PTR _wp$[ebp+32]
  000fc	52		 push	 edx
  000fd	8b 45 f0	 mov	 eax, DWORD PTR _wp$[ebp+28]
  00100	50		 push	 eax
  00101	8b 4d 94	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  00104	51		 push	 ecx
  00105	6a 00		 push	 0
  00107	68 00 00 00 00	 push	 OFFSET FLAT:_g_szAppTitle
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pszClassName@CMainFrame@@2QBDB ; CMainFrame::m_pszClassName
  00112	52		 push	 edx
  00113	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	e8 00 00 00 00	 call	 ?Create@CMDIFrameWindow@@MAEHPBD0KKHHHHPAX@Z ; CMDIFrameWindow::Create
  0011b	85 c0		 test	 eax, eax
  0011d	75 08		 jne	 SHORT $L52652

; 300  :     {
; 301  :         return -1;

  0011f	83 c8 ff	 or	 eax, -1
  00122	e9 b4 00 00 00	 jmp	 $L52631
$L52652:

; 302  :     }
; 303  : 
; 304  :     ShowWindow(m_hWnd, nShowCmd);

  00127	8b 45 08	 mov	 eax, DWORD PTR _nShowCmd$[ebp]
  0012a	50		 push	 eax
  0012b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00131	52		 push	 edx
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 305  : 
; 306  :     //
; 307  :     // Load project data
; 308  :     //
; 309  : 
; 310  :     if(ParseCommandLine(GetCommandLine(), &pszCmdLine, NULL))

  00138	6a 00		 push	 0
  0013a	8d 45 98	 lea	 eax, DWORD PTR _pszCmdLine$[ebp]
  0013d	50		 push	 eax
  0013e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCommandLineA@0
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 _ParseCommandLine@12
  0014a	85 c0		 test	 eax, eax
  0014c	74 27		 je	 SHORT $L52653

; 311  :     {
; 312  :         pszProject = pszCmdLine + _tcslen(pszCmdLine) + 1;

  0014e	8b 4d 98	 mov	 ecx, DWORD PTR _pszCmdLine$[ebp]
  00151	51		 push	 ecx
  00152	e8 00 00 00 00	 call	 _strlen
  00157	83 c4 04	 add	 esp, 4
  0015a	8b 55 98	 mov	 edx, DWORD PTR _pszCmdLine$[ebp]
  0015d	8d 44 02 01	 lea	 eax, DWORD PTR [edx+eax+1]
  00161	89 45 d0	 mov	 DWORD PTR _pszProject$[ebp], eax

; 313  : 
; 314  :         if(!*pszProject)

  00164	8b 4d d0	 mov	 ecx, DWORD PTR _pszProject$[ebp]
  00167	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  0016a	85 d2		 test	 edx, edx
  0016c	75 07		 jne	 SHORT $L52654

; 315  :         {
; 316  :             pszProject = NULL;

  0016e	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pszProject$[ebp], 0
$L52654:
$L52653:

; 317  :         }
; 318  :     }
; 319  : 
; 320  :     if(pszProject)

  00175	83 7d d0 00	 cmp	 DWORD PTR _pszProject$[ebp], 0
  00179	74 21		 je	 SHORT $L52655

; 321  :     {
; 322  :         g_pApplication->m_Project.Open(pszProject);

  0017b	8b 45 d0	 mov	 eax, DWORD PTR _pszProject$[ebp]
  0017e	50		 push	 eax
  0017f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00185	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00191	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  00197	ff 50 10	 call	 DWORD PTR [eax+16]

; 323  :     }
; 324  :     else

  0019a	eb 1b		 jmp	 SHORT $L52656
$L52655:

; 325  :     {
; 326  :         g_pApplication->m_Project.New();

  0019c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  001a2	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  001a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  001ae	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  001b4	ff 50 08	 call	 DWORD PTR [eax+8]
$L52656:

; 327  :     }
; 328  :         
; 329  :     MEMFREE(pszCmdLine);

  001b7	83 7d 98 00	 cmp	 DWORD PTR _pszCmdLine$[ebp], 0
  001bb	74 10		 je	 SHORT $L52657
  001bd	8b 4d 98	 mov	 ecx, DWORD PTR _pszCmdLine$[ebp]
  001c0	51		 push	 ecx
  001c1	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree
  001c6	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _pszCmdLine$[ebp], 0
$L52657:

; 330  : 
; 331  :     //
; 332  :     // Enter the message pump
; 333  :     //
; 334  : 
; 335  :     return PumpMessages();

  001cd	8b 55 90	 mov	 edx, DWORD PTR _this$[ebp]
  001d0	8b 02		 mov	 eax, DWORD PTR [edx]
  001d2	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001d5	ff 90 bc 00 00
	00		 call	 DWORD PTR [eax+188]
$L52631:

; 336  : }

  001db	5f		 pop	 edi
  001dc	8b e5		 mov	 esp, ebp
  001de	5d		 pop	 ebp
  001df	c2 04 00	 ret	 4
?Create@CMainFrame@@UAEHH@Z ENDP			; CMainFrame::Create
_TEXT	ENDS
EXTRN	__imp__LoadImageA@24:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
;	COMDAT ?LoadResourceIconLarge@@YGPAUHICON__@@I@Z
_TEXT	SEGMENT
_nResourceId$ = 8
?LoadResourceIconLarge@@YGPAUHICON__@@I@Z PROC NEAR	; LoadResourceIconLarge, COMDAT

; 446  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 447  :     return (HICON)LoadImage(g_hInstance, MAKEINTRESOURCE(nResourceId), IMAGE_ICON, 32, 32, LR_SHARED);

  00003	68 00 80 00 00	 push	 32768			; 00008000H
  00008	6a 20		 push	 32			; 00000020H
  0000a	6a 20		 push	 32			; 00000020H
  0000c	6a 01		 push	 1
  0000e	8b 45 08	 mov	 eax, DWORD PTR _nResourceId$[ebp]
  00011	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00016	50		 push	 eax
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0001d	51		 push	 ecx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageA@24

; 448  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?LoadResourceIconLarge@@YGPAUHICON__@@I@Z ENDP		; LoadResourceIconLarge
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z
_TEXT	SEGMENT
_nResourceId$ = 8
?LoadResourceIconSmall@@YGPAUHICON__@@I@Z PROC NEAR	; LoadResourceIconSmall, COMDAT

; 451  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 452  :     return (HICON)LoadImage(g_hInstance, MAKEINTRESOURCE(nResourceId), IMAGE_ICON, 16, 16, LR_SHARED);

  00003	68 00 80 00 00	 push	 32768			; 00008000H
  00008	6a 10		 push	 16			; 00000010H
  0000a	6a 10		 push	 16			; 00000010H
  0000c	6a 01		 push	 1
  0000e	8b 45 08	 mov	 eax, DWORD PTR _nResourceId$[ebp]
  00011	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00016	50		 push	 eax
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0001d	51		 push	 ecx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageA@24

; 453  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ENDP		; LoadResourceIconSmall
_TEXT	ENDS
PUBLIC	??_C@_0BH@EPCD@WM_QUIT?5?$DN?$DN?5msg?4message?$AA@ ; `string'
EXTRN	__imp__GetMessageA@16:NEAR
EXTRN	__imp__TranslateMessage@4:NEAR
EXTRN	__imp__DispatchMessageA@4:NEAR
;	COMDAT ??_C@_0BH@EPCD@WM_QUIT?5?$DN?$DN?5msg?4message?$AA@
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
CONST	SEGMENT
??_C@_0BH@EPCD@WM_QUIT?5?$DN?$DN?5msg?4message?$AA@ DB 'WM_QUIT == msg.me'
	DB	'ssage', 00H					; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?PumpMessages@CMainFrame@@UAEHXZ
_TEXT	SEGMENT
_this$ = -32
_msg$ = -28
?PumpMessages@CMainFrame@@UAEHXZ PROC NEAR		; CMainFrame::PumpMessages, COMDAT
; _this$ = ecx

; 362  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
$L52664:

; 363  :     MSG                     msg;
; 364  : 
; 365  :     while(GetMessage(&msg, NULL, 0, 0) > 0)

  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
  00019	85 c0		 test	 eax, eax
  0001b	7e 29		 jle	 SHORT $L52665

; 366  :     {
; 367  :         if(!DispatchMessage(&msg))

  0001d	8d 4d e4	 lea	 ecx, DWORD PTR _msg$[ebp]
  00020	51		 push	 ecx
  00021	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 02		 mov	 eax, DWORD PTR [edx]
  00026	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	ff 50 5c	 call	 DWORD PTR [eax+92]
  0002c	85 c0		 test	 eax, eax
  0002e	75 14		 jne	 SHORT $L52666

; 368  :         {
; 369  :             ::TranslateMessage(&msg);

  00030	8d 4d e4	 lea	 ecx, DWORD PTR _msg$[ebp]
  00033	51		 push	 ecx
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4

; 370  :             ::DispatchMessage(&msg);

  0003a	8d 55 e4	 lea	 edx, DWORD PTR _msg$[ebp]
  0003d	52		 push	 edx
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
$L52666:

; 371  :         }
; 372  :     }

  00044	eb c3		 jmp	 SHORT $L52664
$L52665:

; 373  : 
; 374  :     ASSERT(WM_QUIT == msg.message);

  00046	68 76 01 00 00	 push	 374			; 00000176H
  0004b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00050	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@EPCD@WM_QUIT?5?$DN?$DN?5msg?4message?$AA@ ; `string'
  00055	33 c0		 xor	 eax, eax
  00057	83 7d e8 12	 cmp	 DWORD PTR _msg$[ebp+4], 18 ; 00000012H
  0005b	0f 95 c0	 setne	 al
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00064	83 c4 10	 add	 esp, 16			; 00000010H

; 375  : 
; 376  :     return msg.wParam;

  00067	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]

; 377  : }

  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?PumpMessages@CMainFrame@@UAEHXZ ENDP			; CMainFrame::PumpMessages
_TEXT	ENDS
EXTRN	?HandleMessage@CWindow@@UAEHIIJPAJ@Z:NEAR	; CWindow::HandleMessage
; Function compile flags: /Odt
;	COMDAT ?HandleMessage@CMainFrame@@UAEHIIJPAJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_plResult$ = 20
_this$ = -8
_fHandled$ = -4
?HandleMessage@CMainFrame@@UAEHIIJPAJ@Z PROC NEAR	; CMainFrame::HandleMessage, COMDAT
; _this$ = ecx

; 409  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 410  :     BOOL                    fHandled;
; 411  :     
; 412  :     switch(uMsg)
; 413  :     {

  00009	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0000f	81 7d f4 1f 01
	00 00		 cmp	 DWORD PTR -12+[ebp], 287 ; 0000011fH
  00016	74 02		 je	 SHORT $L52680
  00018	eb 37		 jmp	 SHORT $L52686
$L52680:

; 414  :         case WM_MENUSELECT:
; 415  :             fHandled = OnMenuSelect(LOWORD(wParam), HIWORD(wParam), (HMENU)lParam, plResult);

  0001a	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  00021	52		 push	 edx
  00022	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  00025	c1 e8 10	 shr	 eax, 16			; 00000010H
  00028	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0002d	50		 push	 eax
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00031	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00037	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0003d	51		 push	 ecx
  0003e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 02		 mov	 eax, DWORD PTR [edx]
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	ff 90 c0 00 00
	00		 call	 DWORD PTR [eax+192]
  0004c	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 416  :             break;

  0004f	eb 1b		 jmp	 SHORT $L52677
$L52686:

; 417  : 
; 418  :         default:
; 419  :             fHandled = CMDIFrameWindow::HandleMessage(uMsg, wParam, lParam, plResult);

  00051	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  00054	51		 push	 ecx
  00055	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  00058	52		 push	 edx
  00059	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00060	51		 push	 ecx
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?HandleMessage@CWindow@@UAEHIIJPAJ@Z ; CWindow::HandleMessage
  00069	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax
$L52677:

; 420  :             break;
; 421  :     }
; 422  : 
; 423  :     return fHandled;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 424  : }

  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 10 00	 ret	 16			; 00000010H
?HandleMessage@CMainFrame@@UAEHIIJPAJ@Z ENDP		; CMainFrame::HandleMessage
_TEXT	ENDS
PUBLIC	?OnCreate@CWindow@@UAEHPAXPAJ@Z			; CWindow::OnCreate
PUBLIC	?LoadPopupMenu@@YGPAUHMENU__@@I@Z		; LoadPopupMenu
EXTRN	__imp__SetMenuDefaultItem@12:NEAR
EXTRN	__imp__GetSubMenu@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CMainFrame@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -16
_hFileMenu$ = -8
_hMRUMenu$ = -4
_fSuccess$ = -12
?OnCreate@CMainFrame@@UAEHPAXPAJ@Z PROC NEAR		; CMainFrame::OnCreate, COMDAT
; _this$ = ecx

; 452  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 453  :     HMENU                   hFileMenu;
; 454  :     HMENU                   hMRUMenu;
; 455  :     BOOL                    fSuccess;
; 456  : 
; 457  :     if(CMDIFrameWindow::OnCreate(pvContext, plResult))

  00009	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?OnCreate@CWindow@@UAEHPAXPAJ@Z ; CWindow::OnCreate
  00019	85 c0		 test	 eax, eax
  0001b	74 0a		 je	 SHORT $L52695

; 458  :     {
; 459  :         return TRUE;

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	e9 5f 01 00 00	 jmp	 $L52691
$L52695:

; 460  :     }
; 461  : 
; 462  :     //
; 463  :     // Create main window controls
; 464  :     //
; 465  :     
; 466  :     fSuccess = m_ToolBar.Create();

  00027	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 34	 add	 ecx, 52			; 00000034H
  0002d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00030	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00033	ff 90 b8 00 00
	00		 call	 DWORD PTR [eax+184]
  00039	89 45 f4	 mov	 DWORD PTR _fSuccess$[ebp], eax

; 467  :     
; 468  :     if(fSuccess)

  0003c	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00040	74 1b		 je	 SHORT $L52696

; 469  :     {
; 470  :         fSuccess = m_StatusBar.Create();

  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  0004b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	8b 82 68 01 00
	00		 mov	 eax, DWORD PTR [edx+360]
  00054	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
  0005a	89 45 f4	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L52696:

; 471  :     }
; 472  :     
; 473  :     if(fSuccess)

  0005d	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00061	74 1b		 je	 SHORT $L52697

; 474  :     {
; 475  :         fSuccess = m_ProjectTree.Create();

  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  0006c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 82 98 01 00
	00		 mov	 eax, DWORD PTR [edx+408]
  00075	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]
  0007b	89 45 f4	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L52697:

; 476  :     }
; 477  :     
; 478  :     if(fSuccess)

  0007e	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00082	74 1b		 je	 SHORT $L52698

; 479  :     {
; 480  :         fSuccess = m_Splitter.Create();

  00084	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	81 c1 18 02 00
	00		 add	 ecx, 536		; 00000218H
  0008d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00090	8b 82 18 02 00
	00		 mov	 eax, DWORD PTR [edx+536]
  00096	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
  0009c	89 45 f4	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L52698:

; 481  :     }
; 482  :     
; 483  :     if(fSuccess)

  0009f	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000a3	74 1b		 je	 SHORT $L52699

; 484  :     {
; 485  :         fSuccess = m_Workspace.Create();

  000a5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  000ae	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b1	8b 82 50 02 00
	00		 mov	 eax, DWORD PTR [edx+592]
  000b7	ff 90 ac 00 00
	00		 call	 DWORD PTR [eax+172]
  000bd	89 45 f4	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L52699:

; 486  :     }
; 487  : 
; 488  :     //
; 489  :     // Attach the MRU object
; 490  :     //
; 491  : 
; 492  :     if(fSuccess)

  000c0	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000c4	74 40		 je	 SHORT $L52700

; 493  :     {
; 494  :         hFileMenu = GetSubMenu(m_hMenu, MENUPOS_FILE);

  000c6	6a 00		 push	 0
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000ce	52		 push	 edx
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8
  000d5	89 45 f8	 mov	 DWORD PTR _hFileMenu$[ebp], eax

; 495  :         hMRUMenu = GetSubMenu(hFileMenu, MENUPOS_FILE_MRU);

  000d8	6a 07		 push	 7
  000da	8b 45 f8	 mov	 eax, DWORD PTR _hFileMenu$[ebp]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8
  000e4	89 45 fc	 mov	 DWORD PTR _hMRUMenu$[ebp], eax

; 496  :         
; 497  :         g_pApplication->m_MRU.AttachMenu(hMRUMenu);

  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _hMRUMenu$[ebp]
  000ea	51		 push	 ecx
  000eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000f1	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  000f7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000fd	8b 82 20 04 00
	00		 mov	 eax, DWORD PTR [edx+1056]
  00103	ff 50 04	 call	 DWORD PTR [eax+4]
$L52700:

; 498  :     }
; 499  : 
; 500  :     //
; 501  :     // Load secondary menus
; 502  :     //
; 503  : 
; 504  :     if(fSuccess)

  00106	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  0010a	74 4e		 je	 SHORT $L52701

; 505  :     {
; 506  :         m_ahMenus[MENUIDX_WAVEBANK_POPUP] = LoadPopupMenu(IDM_WAVEBANK_POPUP);

  0010c	6a 72		 push	 114			; 00000072H
  0010e	e8 00 00 00 00	 call	 ?LoadPopupMenu@@YGPAUHMENU__@@I@Z ; LoadPopupMenu
  00113	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	89 81 80 02 00
	00		 mov	 DWORD PTR [ecx+640], eax

; 507  :         SetMenuDefaultItem(m_ahMenus[MENUIDX_WAVEBANK_POPUP], 0, MF_BYPOSITION);

  0011c	68 00 04 00 00	 push	 1024			; 00000400H
  00121	6a 00		 push	 0
  00123	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00126	8b 82 80 02 00
	00		 mov	 eax, DWORD PTR [edx+640]
  0012c	50		 push	 eax
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetMenuDefaultItem@12

; 508  : 
; 509  :         m_ahMenus[MENUIDX_WAVEBANK_ENTRY_POPUP] = LoadPopupMenu(IDM_WAVEBANK_ENTRY_POPUP);

  00133	6a 71		 push	 113			; 00000071H
  00135	e8 00 00 00 00	 call	 ?LoadPopupMenu@@YGPAUHMENU__@@I@Z ; LoadPopupMenu
  0013a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	89 81 84 02 00
	00		 mov	 DWORD PTR [ecx+644], eax

; 510  :         SetMenuDefaultItem(m_ahMenus[MENUIDX_WAVEBANK_ENTRY_POPUP], 0, MF_BYPOSITION);

  00143	68 00 04 00 00	 push	 1024			; 00000400H
  00148	6a 00		 push	 0
  0014a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0014d	8b 82 84 02 00
	00		 mov	 eax, DWORD PTR [edx+644]
  00153	50		 push	 eax
  00154	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetMenuDefaultItem@12
$L52701:

; 511  :     }
; 512  : 
; 513  :     //
; 514  :     // Set default command states
; 515  :     //
; 516  :     
; 517  :     if(fSuccess)

  0015a	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  0015e	74 0e		 je	 SHORT $L52702

; 518  :     {
; 519  :         SetDefaultCommandState();

  00160	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00163	8b 11		 mov	 edx, DWORD PTR [ecx]
  00165	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00168	ff 92 b8 00 00
	00		 call	 DWORD PTR [edx+184]
$L52702:

; 520  :     }
; 521  : 
; 522  :     if(!fSuccess)

  0016e	83 7d f4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00172	75 10		 jne	 SHORT $L52703

; 523  :     {
; 524  :         *plResult = -1;

  00174	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  00177	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 525  :         return TRUE;

  0017d	b8 01 00 00 00	 mov	 eax, 1
  00182	eb 02		 jmp	 SHORT $L52691
$L52703:

; 526  :     }
; 527  : 
; 528  :     return FALSE;

  00184	33 c0		 xor	 eax, eax
$L52691:

; 529  : }

  00186	8b e5		 mov	 esp, ebp
  00188	5d		 pop	 ebp
  00189	c2 08 00	 ret	 8
?OnCreate@CMainFrame@@UAEHPAXPAJ@Z ENDP			; CMainFrame::OnCreate
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCreate@CWindow@@UAEHPAXPAJ@Z PROC NEAR		; CWindow::OnCreate, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 242  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnCreate@CWindow@@UAEHPAXPAJ@Z ENDP			; CWindow::OnCreate
_TEXT	ENDS
EXTRN	__imp__LoadMenuA@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?LoadPopupMenu@@YGPAUHMENU__@@I@Z
_TEXT	SEGMENT
_nResourceId$ = 8
_hMenu$ = -4
?LoadPopupMenu@@YGPAUHMENU__@@I@Z PROC NEAR		; LoadPopupMenu, COMDAT

; 456  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 457  :     HMENU                   hMenu;
; 458  : 
; 459  :     hMenu = LoadMenu(g_hInstance, MAKEINTRESOURCE(nResourceId));

  00004	8b 45 08	 mov	 eax, DWORD PTR _nResourceId$[ebp]
  00007	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000c	50		 push	 eax
  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  00013	51		 push	 ecx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadMenuA@8
  0001a	89 45 fc	 mov	 DWORD PTR _hMenu$[ebp], eax

; 460  : 
; 461  :     return GetSubMenu(hMenu, 0);

  0001d	6a 00		 push	 0
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _hMenu$[ebp]
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8

; 462  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?LoadPopupMenu@@YGPAUHMENU__@@I@Z ENDP			; LoadPopupMenu
_TEXT	ENDS
PUBLIC	?OnSize@CWindow@@UAEHIIIPAJ@Z			; CWindow::OnSize
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ?OnSize@CMainFrame@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_nType$ = 8
_nWidth$ = 12
_nHeight$ = 16
_plResult$ = 20
_this$ = -4
?OnSize@CMainFrame@@UAEHIIIPAJ@Z PROC NEAR		; CMainFrame::OnSize, COMDAT
; _this$ = ecx

; 561  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 562  :     if(CMDIFrameWindow::OnSize(nType, nWidth, nHeight, plResult))

  00007	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nType$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?OnSize@CWindow@@UAEHIIIPAJ@Z ; CWindow::OnSize
  0001f	85 c0		 test	 eax, eax
  00021	74 07		 je	 SHORT $L52711

; 563  :     {
; 564  :         return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	eb 24		 jmp	 SHORT $L52710
$L52711:

; 565  :     }
; 566  : 
; 567  :     if(SIZE_MINIMIZED == nType)

  0002a	83 7d 08 01	 cmp	 DWORD PTR _nType$[ebp], 1
  0002e	75 04		 jne	 SHORT $L52712

; 568  :     {
; 569  :         return FALSE;

  00030	33 c0		 xor	 eax, eax
  00032	eb 1a		 jmp	 SHORT $L52710
$L52712:

; 570  :     }
; 571  :     
; 572  :     LayoutControls(nWidth, nHeight);

  00034	6a 01		 push	 1
  00036	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  00039	51		 push	 ecx
  0003a	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  0003d	52		 push	 edx
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 10		 mov	 edx, DWORD PTR [eax]
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 573  : 
; 574  :     return FALSE;

  0004c	33 c0		 xor	 eax, eax
$L52710:

; 575  : }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 10 00	 ret	 16			; 00000010H
?OnSize@CMainFrame@@UAEHIIIPAJ@Z ENDP			; CMainFrame::OnSize
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHIIIPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 256  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 257  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHIIIPAJ@Z ENDP			; CWindow::OnSize
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnClose@CMainFrame@@UAEHPAJ@Z
_TEXT	SEGMENT
_plResult$ = 8
_this$ = -4
?OnClose@CMainFrame@@UAEHPAJ@Z PROC NEAR		; CMainFrame::OnClose, COMDAT
; _this$ = ecx

; 601  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 602  :     if(!g_pApplication->m_Project.CheckDirty())

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 38	 call	 DWORD PTR [edx+56]
  00021	85 c0		 test	 eax, eax
  00023	75 10		 jne	 SHORT $L52717

; 603  :     {
; 604  :         *plResult = 0;

  00025	8b 45 08	 mov	 eax, DWORD PTR _plResult$[ebp]
  00028	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 605  :         return TRUE;

  0002e	b8 01 00 00 00	 mov	 eax, 1
  00033	eb 02		 jmp	 SHORT $L52716
$L52717:

; 606  :     }
; 607  : 
; 608  :     return FALSE;

  00035	33 c0		 xor	 eax, eax
$L52716:

; 609  : }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?OnClose@CMainFrame@@UAEHPAJ@Z ENDP			; CMainFrame::OnClose
_TEXT	ENDS
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
EXTRN	__imp__PostQuitMessage@4:NEAR
EXTRN	__imp__GetWindowPlacement@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnDestroy@CMainFrame@@UAEHPAJ@Z
_TEXT	SEGMENT
_plResult$ = 8
_this$ = -48
_wp$ = -44
?OnDestroy@CMainFrame@@UAEHPAJ@Z PROC NEAR		; CMainFrame::OnDestroy, COMDAT
; _this$ = ecx

; 635  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 636  :     WINDOWPLACEMENT         wp;
; 637  :     
; 638  :     if(CMDIFrameWindow::OnDestroy(plResult))

  00009	8b 45 08	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?OnDestroy@CWindow@@UAEHPAJ@Z ; CWindow::OnDestroy
  00015	85 c0		 test	 eax, eax
  00017	74 07		 je	 SHORT $L52723

; 639  :     {
; 640  :         return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	eb 52		 jmp	 SHORT $L52721
$L52723:

; 641  :     }
; 642  : 
; 643  :     //
; 644  :     // Close all MDI child windows
; 645  :     //
; 646  : 
; 647  :     OnCmdWindowCloseAll();

  00020	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 92 fc 00 00
	00		 call	 DWORD PTR [edx+252]

; 648  : 
; 649  :     //
; 650  :     // Save the window placement data
; 651  :     //
; 652  : 
; 653  :     wp.length = sizeof(wp);

  0002e	c7 45 d4 2c 00
	00 00		 mov	 DWORD PTR _wp$[ebp], 44	; 0000002cH

; 654  :     
; 655  :     GetWindowPlacement(m_hWnd, &wp);

  00035	8d 45 d4	 lea	 eax, DWORD PTR _wp$[ebp]
  00038	50		 push	 eax
  00039	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0003f	52		 push	 edx
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowPlacement@8

; 656  : 
; 657  :     g_pApplication->m_Registry.SetBinaryValue(REGKEY_MAINFRAME_PLACEMENT, &wp, sizeof(wp));

  00046	6a 2c		 push	 44			; 0000002cH
  00048	8d 45 d4	 lea	 eax, DWORD PTR _wp$[ebp]
  0004b	50		 push	 eax
  0004c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DFFG@MainFramePlacement?$AA@ ; `string'
  00051	6a 00		 push	 0
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00059	83 c1 04	 add	 ecx, 4
  0005c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00062	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00065	ff 50 18	 call	 DWORD PTR [eax+24]

; 658  : 
; 659  :     //
; 660  :     // Terminate the main thread
; 661  :     //
; 662  :     
; 663  :     PostQuitMessage(0);

  00068	6a 00		 push	 0
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4

; 664  : 
; 665  :     return FALSE;

  00070	33 c0		 xor	 eax, eax
$L52721:

; 666  : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?OnDestroy@CMainFrame@@UAEHPAJ@Z ENDP			; CMainFrame::OnDestroy
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 252  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CMainFrame@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT
_nMenuItem$ = 8
_nFlags$ = 12
_this$ = -260
_szText$ = -256
?OnMenuSelect@CMainFrame@@UAEHIIPAUHMENU__@@PAJ@Z PROC NEAR ; CMainFrame::OnMenuSelect, COMDAT
; _this$ = ecx

; 698  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	89 8d fc fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 699  :     TCHAR                   szText[0x100];
; 700  : 
; 701  :     szText[0] = 0;

  0000f	c6 85 00 ff ff
	ff 00		 mov	 BYTE PTR _szText$[ebp], 0

; 702  : 
; 703  :     if(g_pApplication->m_MRU.TranslateCommand(nMenuItem))

  00016	8b 45 08	 mov	 eax, DWORD PTR _nMenuItem$[ebp]
  00019	50		 push	 eax
  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00020	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  00026	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0002c	8b 82 20 04 00
	00		 mov	 eax, DWORD PTR [edx+1056]
  00032	ff 50 14	 call	 DWORD PTR [eax+20]
  00035	85 c0		 test	 eax, eax
  00037	74 07		 je	 SHORT $L52732

; 704  :     {
; 705  :         nMenuItem = ID_RECENT_FILE_0;

  00039	c7 45 08 60 ea
	00 00		 mov	 DWORD PTR _nMenuItem$[ebp], 60000 ; 0000ea60H
$L52732:

; 706  :     }
; 707  :     
; 708  :     if(!(nFlags & (MF_SYSMENU | MF_POPUP)))

  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  00043	81 e1 10 20 00
	00		 and	 ecx, 8208		; 00002010H
  00049	85 c9		 test	 ecx, ecx
  0004b	75 1d		 jne	 SHORT $L52733

; 709  :     {
; 710  :         LoadString(g_hInstance, nMenuItem, szText, NUMELMS(szText));

  0004d	68 00 01 00 00	 push	 256			; 00000100H
  00052	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00058	52		 push	 edx
  00059	8b 45 08	 mov	 eax, DWORD PTR _nMenuItem$[ebp]
  0005c	50		 push	 eax
  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  00063	51		 push	 ecx
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16
$L52733:

; 711  :     }
; 712  : 
; 713  :     m_StatusBar.SetWindowText(szText);

  0006a	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00070	52		 push	 edx
  00071	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00077	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  0007d	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 90 68 01 00
	00		 mov	 edx, DWORD PTR [eax+360]
  00089	ff 52 28	 call	 DWORD PTR [edx+40]

; 714  : 
; 715  :     return FALSE;

  0008c	33 c0		 xor	 eax, eax

; 716  : }

  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c2 10 00	 ret	 16			; 00000010H
?OnMenuSelect@CMainFrame@@UAEHIIPAUHMENU__@@PAJ@Z ENDP	; CMainFrame::OnMenuSelect
_TEXT	ENDS
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
; Function compile flags: /Odt
;	COMDAT ?OnNotify@CMainFrame@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_pHdr$ = 8
_plResult$ = 12
_this$ = -4
?OnNotify@CMainFrame@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CMainFrame::OnNotify, COMDAT
; _this$ = ecx

; 744  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 745  :     if(CMDIFrameWindow::OnNotify(pHdr, plResult))

  00009	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ; CWindow::OnNotify
  00019	85 c0		 test	 eax, eax
  0001b	74 07		 je	 SHORT $L52739

; 746  :     {
; 747  :         return TRUE;

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	eb 28		 jmp	 SHORT $L52738
$L52739:

; 748  :     }
; 749  :     
; 750  :     switch(pHdr->code)
; 751  :     {

  00024	8b 55 08	 mov	 edx, DWORD PTR _pHdr$[ebp]
  00027	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0002a	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  0002d	81 7d f8 f8 fd
	ff ff		 cmp	 DWORD PTR -8+[ebp], -520 ; fffffdf8H
  00034	74 02		 je	 SHORT $L52744
  00036	eb 12		 jmp	 SHORT $L52741
$L52744:

; 752  :         case TTN_GETDISPINFO:
; 753  :             OnToolTipDisplayInfo((LPNMTTDISPINFO)pHdr);

  00038	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  0003b	51		 push	 ecx
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	ff 90 10 01 00
	00		 call	 DWORD PTR [eax+272]
$L52741:

; 754  :             break;
; 755  :     }
; 756  : 
; 757  :     return FALSE;

  0004a	33 c0		 xor	 eax, eax
$L52738:

; 758  : }

  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
?OnNotify@CMainFrame@@UAEHPAUtagNMHDR@@PAJ@Z ENDP	; CMainFrame::OnNotify
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 272  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ?OnToolTipDisplayInfo@CMainFrame@@UAEXPAUtagNMTTDISPINFOA@@@Z
_TEXT	SEGMENT
_pInfo$ = 8
_this$ = -4
?OnToolTipDisplayInfo@CMainFrame@@UAEXPAUtagNMTTDISPINFOA@@@Z PROC NEAR ; CMainFrame::OnToolTipDisplayInfo, COMDAT
; _this$ = ecx

; 784  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 785  :     pInfo->hinst = g_hInstance;

  00007	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  00010	89 48 60	 mov	 DWORD PTR [eax+96], ecx

; 786  :     pInfo->lpszText = MAKEINTRESOURCE(pInfo->hdr.idFrom);

  00013	8b 55 08	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00016	33 c0		 xor	 eax, eax
  00018	66 8b 42 04	 mov	 ax, WORD PTR [edx+4]
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  0001f	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 787  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?OnToolTipDisplayInfo@CMainFrame@@UAEXPAUtagNMTTDISPINFOA@@@Z ENDP ; CMainFrame::OnToolTipDisplayInfo
_TEXT	ENDS
PUBLIC	?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z	; CWindow::OnCommand
; Function compile flags: /Odt
;	COMDAT ?OnCommand@CMainFrame@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hWndControl$ = 16
_plResult$ = 20
_this$ = -8
_pszPath$ = -4
?OnCommand@CMainFrame@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CMainFrame::OnCommand, COMDAT
; _this$ = ecx

; 819  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 820  :     LPCTSTR                 pszPath;
; 821  :     
; 822  :     if(CMDIFrameWindow::OnCommand(nCommandId, nControlId, hWndControl, plResult))

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWindow::OnCommand
  00021	85 c0		 test	 eax, eax
  00023	74 0a		 je	 SHORT $L52761

; 823  :     {
; 824  :         return TRUE;

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	e9 41 02 00 00	 jmp	 $L52759
$L52761:

; 825  :     }
; 826  : 
; 827  :     if(pszPath = g_pApplication->m_MRU.TranslateCommand(nControlId))

  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  00032	51		 push	 ecx
  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00039	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00045	8b 82 20 04 00
	00		 mov	 eax, DWORD PTR [edx+1056]
  0004b	ff 50 14	 call	 DWORD PTR [eax+20]
  0004e	89 45 fc	 mov	 DWORD PTR _pszPath$[ebp], eax
  00051	83 7d fc 00	 cmp	 DWORD PTR _pszPath$[ebp], 0
  00055	74 26		 je	 SHORT $L52762

; 828  :     {
; 829  :         g_pApplication->m_Project.Open(pszPath);

  00057	8b 4d fc	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00061	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00067	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0006d	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  00073	ff 50 10	 call	 DWORD PTR [eax+16]

; 830  :         return FALSE;

  00076	33 c0		 xor	 eax, eax
  00078	e9 f3 01 00 00	 jmp	 $L52759
$L52762:

; 831  :     }
; 832  :     
; 833  :     switch(nControlId)
; 834  :     {

  0007d	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  00080	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  00083	81 7d f4 32 e1
	00 00		 cmp	 DWORD PTR -12+[ebp], 57650 ; 0000e132H
  0008a	77 35		 ja	 SHORT $L53659
  0008c	81 7d f4 32 e1
	00 00		 cmp	 DWORD PTR -12+[ebp], 57650 ; 0000e132H
  00093	0f 84 f2 00 00
	00		 je	 $L52776
  00099	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  0009c	81 ea 41 9c 00
	00		 sub	 edx, 40001		; 00009c41H
  000a2	89 55 f4	 mov	 DWORD PTR -12+[ebp], edx
  000a5	83 7d f4 1f	 cmp	 DWORD PTR -12+[ebp], 31	; 0000001fH
  000a9	0f 87 9d 01 00
	00		 ja	 $L52786
  000af	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]
  000b2	33 c9		 xor	 ecx, ecx
  000b4	8a 88 00 00 00
	00		 mov	 cl, BYTE PTR $L53660[eax]
  000ba	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $L53661[ecx*4]
$L53659:
  000c1	81 7d f4 33 e1
	00 00		 cmp	 DWORD PTR -12+[ebp], 57651 ; 0000e133H
  000c8	0f 84 d0 00 00
	00		 je	 $L52777
  000ce	81 7d f4 34 e1
	00 00		 cmp	 DWORD PTR -12+[ebp], 57652 ; 0000e134H
  000d5	0f 84 d6 00 00
	00		 je	 $L52778
  000db	e9 6c 01 00 00	 jmp	 $L52786
$L52767:

; 835  :         case ID_NEW_PROJECT:
; 836  :             OnCmdNewProject();

  000e0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	8b 02		 mov	 eax, DWORD PTR [edx]
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]

; 837  :             break;

  000ee	e9 7b 01 00 00	 jmp	 $L52764
$L52768:

; 838  :         
; 839  :         case ID_OPEN_PROJECT:
; 840  :             OnCmdOpenProject();

  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	ff 92 cc 00 00
	00		 call	 DWORD PTR [edx+204]

; 841  :             break;

  00101	e9 68 01 00 00	 jmp	 $L52764
$L52769:

; 842  : 
; 843  :         case ID_RELOAD_PROJECT:
; 844  :             OnCmdReloadProject();

  00106	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00109	8b 10		 mov	 edx, DWORD PTR [eax]
  0010b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 845  :             break;

  00114	e9 55 01 00 00	 jmp	 $L52764
$L52770:

; 846  : 
; 847  :         case ID_SAVE_PROJECT:
; 848  :             OnCmdSaveProject();

  00119	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011c	8b 10		 mov	 edx, DWORD PTR [eax]
  0011e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	ff 92 d4 00 00
	00		 call	 DWORD PTR [edx+212]

; 849  :             break;

  00127	e9 42 01 00 00	 jmp	 $L52764
$L52771:

; 850  : 
; 851  :         case ID_SAVE_PROJECT_AS:
; 852  :             OnCmdSaveProjectAs();

  0012c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	8b 10		 mov	 edx, DWORD PTR [eax]
  00131	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	ff 92 d8 00 00
	00		 call	 DWORD PTR [edx+216]

; 853  :             break;

  0013a	e9 2f 01 00 00	 jmp	 $L52764
$L52772:

; 854  :         
; 855  :         case ID_EXIT:
; 856  :             OnCmdExit();

  0013f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00142	8b 10		 mov	 edx, DWORD PTR [eax]
  00144	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 857  :             break;

  0014d	e9 1c 01 00 00	 jmp	 $L52764
$L52773:

; 858  : 
; 859  :         case ID_ABOUT:
; 860  :             OnCmdAbout();

  00152	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00155	8b 10		 mov	 edx, DWORD PTR [eax]
  00157	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015a	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]

; 861  :             break;

  00160	e9 09 01 00 00	 jmp	 $L52764
$L52774:

; 862  : 
; 863  :         case ID_WINDOW_NEXT:
; 864  :             OnCmdWindowNext();

  00165	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00168	8b 10		 mov	 edx, DWORD PTR [eax]
  0016a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]

; 865  :             break;

  00173	e9 f6 00 00 00	 jmp	 $L52764
$L52775:

; 866  : 
; 867  :         case ID_WINDOW_PREV:
; 868  :             OnCmdWindowPrev();

  00178	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	ff 92 e8 00 00
	00		 call	 DWORD PTR [edx+232]

; 869  :             break;

  00186	e9 e3 00 00 00	 jmp	 $L52764
$L52776:

; 870  : 
; 871  :         case ID_WINDOW_CASCADE:
; 872  :             OnCmdWindowCascade();

  0018b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018e	8b 10		 mov	 edx, DWORD PTR [eax]
  00190	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00193	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 873  :             break;

  00199	e9 d0 00 00 00	 jmp	 $L52764
$L52777:

; 874  : 
; 875  :         case ID_WINDOW_TILE_HORZ:
; 876  :             OnCmdWindowTileHorz();

  0019e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a1	8b 10		 mov	 edx, DWORD PTR [eax]
  001a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	ff 92 f0 00 00
	00		 call	 DWORD PTR [edx+240]

; 877  :             break;

  001ac	e9 bd 00 00 00	 jmp	 $L52764
$L52778:

; 878  :         
; 879  :         case ID_WINDOW_TILE_VERT:
; 880  :             OnCmdWindowTileVert();

  001b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001b4	8b 10		 mov	 edx, DWORD PTR [eax]
  001b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b9	ff 92 f4 00 00
	00		 call	 DWORD PTR [edx+244]

; 881  :             break;

  001bf	e9 aa 00 00 00	 jmp	 $L52764
$L52779:

; 882  :         
; 883  :         case ID_WINDOW_CLOSE:
; 884  :             OnCmdWindowClose();

  001c4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c7	8b 10		 mov	 edx, DWORD PTR [eax]
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cc	ff 92 f8 00 00
	00		 call	 DWORD PTR [edx+248]

; 885  :             break;

  001d2	e9 97 00 00 00	 jmp	 $L52764
$L52780:

; 886  : 
; 887  :         case ID_WINDOW_CLOSE_ALL:
; 888  :             OnCmdWindowCloseAll();

  001d7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001da	8b 10		 mov	 edx, DWORD PTR [eax]
  001dc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001df	ff 92 fc 00 00
	00		 call	 DWORD PTR [edx+252]

; 889  :             break;

  001e5	e9 84 00 00 00	 jmp	 $L52764
$L52781:

; 890  : 
; 891  :         case ID_ADD_WAVEBANK:
; 892  :             OnCmdAddWaveBank();

  001ea	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ed	8b 10		 mov	 edx, DWORD PTR [eax]
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	ff 92 00 01 00
	00		 call	 DWORD PTR [edx+256]

; 893  :             break;

  001f8	eb 74		 jmp	 SHORT $L52764
$L52782:

; 894  : 
; 895  :         case ID_BUILD:
; 896  :             OnCmdBuild();

  001fa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001fd	8b 10		 mov	 edx, DWORD PTR [eax]
  001ff	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00202	ff 92 04 01 00
	00		 call	 DWORD PTR [edx+260]

; 897  :             break;

  00208	eb 64		 jmp	 SHORT $L52764
$L52783:

; 898  : 
; 899  :         case ID_CONNECT:
; 900  :             OnCmdConnect();

  0020a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0020d	8b 10		 mov	 edx, DWORD PTR [eax]
  0020f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00212	ff 92 08 01 00
	00		 call	 DWORD PTR [edx+264]

; 901  :             break;

  00218	eb 54		 jmp	 SHORT $L52764
$L52784:

; 902  : 
; 903  :         case ID_DISCONNECT:
; 904  :             OnCmdDisconnect();

  0021a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021d	8b 10		 mov	 edx, DWORD PTR [eax]
  0021f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00222	ff 92 0c 01 00
	00		 call	 DWORD PTR [edx+268]

; 905  :             break;

  00228	eb 44		 jmp	 SHORT $L52764
$L52785:

; 906  : 
; 907  :         case ID_ADD_WAVEBANK_ENTRY:
; 908  :             return ForwardCommand(FORWARD_ACTIVE_WORKSPACE_CHILD, nCommandId, nControlId, hWndControl, plResult);

  0022a	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0022d	50		 push	 eax
  0022e	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  00231	51		 push	 ecx
  00232	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00235	52		 push	 edx
  00236	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00239	50		 push	 eax
  0023a	6a 01		 push	 1
  0023c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0023f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00241	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00244	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
  0024a	eb 24		 jmp	 SHORT $L52759
$L52786:

; 909  : 
; 910  :         default:
; 911  :             return ForwardCommand(FORWARD_FOCUS, nCommandId, nControlId, hWndControl, plResult);

  0024c	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0024f	50		 push	 eax
  00250	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  00253	51		 push	 ecx
  00254	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00257	52		 push	 edx
  00258	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  0025b	50		 push	 eax
  0025c	6a 00		 push	 0
  0025e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00261	8b 11		 mov	 edx, DWORD PTR [ecx]
  00263	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00266	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
  0026c	eb 02		 jmp	 SHORT $L52759
$L52764:

; 912  :     }
; 913  : 
; 914  :     return FALSE;

  0026e	33 c0		 xor	 eax, eax
$L52759:

; 915  : }

  00270	8b e5		 mov	 esp, ebp
  00272	5d		 pop	 ebp
  00273	c2 10 00	 ret	 16			; 00000010H
$L53661:
  00276	00 00 00 00	 DD	 $L52772
  0027a	00 00 00 00	 DD	 $L52773
  0027e	00 00 00 00	 DD	 $L52767
  00282	00 00 00 00	 DD	 $L52768
  00286	00 00 00 00	 DD	 $L52770
  0028a	00 00 00 00	 DD	 $L52771
  0028e	00 00 00 00	 DD	 $L52781
  00292	00 00 00 00	 DD	 $L52785
  00296	00 00 00 00	 DD	 $L52782
  0029a	00 00 00 00	 DD	 $L52774
  0029e	00 00 00 00	 DD	 $L52775
  002a2	00 00 00 00	 DD	 $L52779
  002a6	00 00 00 00	 DD	 $L52780
  002aa	00 00 00 00	 DD	 $L52769
  002ae	00 00 00 00	 DD	 $L52783
  002b2	00 00 00 00	 DD	 $L52784
  002b6	00 00 00 00	 DD	 $L52786
$L53660:
  002ba	00		 DB	 0
  002bb	01		 DB	 1
  002bc	02		 DB	 2
  002bd	03		 DB	 3
  002be	04		 DB	 4
  002bf	05		 DB	 5
  002c0	06		 DB	 6
  002c1	07		 DB	 7
  002c2	10		 DB	 16			; 00000010H
  002c3	10		 DB	 16			; 00000010H
  002c4	08		 DB	 8
  002c5	10		 DB	 16			; 00000010H
  002c6	10		 DB	 16			; 00000010H
  002c7	10		 DB	 16			; 00000010H
  002c8	10		 DB	 16			; 00000010H
  002c9	09		 DB	 9
  002ca	0a		 DB	 10			; 0000000aH
  002cb	0b		 DB	 11			; 0000000bH
  002cc	0c		 DB	 12			; 0000000cH
  002cd	0d		 DB	 13			; 0000000dH
  002ce	10		 DB	 16			; 00000010H
  002cf	10		 DB	 16			; 00000010H
  002d0	10		 DB	 16			; 00000010H
  002d1	10		 DB	 16			; 00000010H
  002d2	10		 DB	 16			; 00000010H
  002d3	10		 DB	 16			; 00000010H
  002d4	10		 DB	 16			; 00000010H
  002d5	10		 DB	 16			; 00000010H
  002d6	10		 DB	 16			; 00000010H
  002d7	10		 DB	 16			; 00000010H
  002d8	0e		 DB	 14			; 0000000eH
  002d9	0f		 DB	 15			; 0000000fH
?OnCommand@CMainFrame@@UAEHIIPAUHWND__@@PAJ@Z ENDP	; CMainFrame::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CWindow::OnCommand, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 261  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 262  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CWindow::OnCommand
_TEXT	ENDS
PUBLIC	??_C@_0BF@OAPA@Invalid?5forward?5type?$AA@	; `string'
EXTRN	?GetWindowContext@CWindow@@KGPAV1@PAUHWND__@@@Z:NEAR ; CWindow::GetWindowContext
EXTRN	__imp__GetFocus@0:NEAR
EXTRN	__imp__GetParent@4:NEAR
;	COMDAT ??_C@_0BF@OAPA@Invalid?5forward?5type?$AA@
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
CONST	SEGMENT
??_C@_0BF@OAPA@Invalid?5forward?5type?$AA@ DB 'Invalid forward type', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?ForwardCommand@CMainFrame@@UAEHIIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nForward$ = 8
_nCommandId$ = 12
_nControlId$ = 16
_hWndControl$ = 20
_plResult$ = 24
_this$ = -16
_pWindow$ = -12
_pMDIChild$ = -8
_hWnd$ = -4
?ForwardCommand@CMainFrame@@UAEHIIIPAUHWND__@@PAJ@Z PROC NEAR ; CMainFrame::ForwardCommand, COMDAT
; _this$ = ecx

; 949  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 950  :     CWindow *               pWindow;
; 951  :     CMDIChildWindow *       pMDIChild;
; 952  :     HWND                    hWnd;
; 953  : 
; 954  :     if(FORWARD_FOCUS == nForward)

  00009	83 7d 08 00	 cmp	 DWORD PTR _nForward$[ebp], 0
  0000d	75 43		 jne	 SHORT $L52798

; 955  :     {
; 956  :         //
; 957  :         // We really want to send this to the first window in the chain that has
; 958  :         // a registered handler we recognize (i.e. derived from CWindow)
; 959  :         //
; 960  :         // WARNING: if we forward this to a window who turns around and forwards
; 961  :         // it back to us, we're screwed.
; 962  :         //
; 963  : 
; 964  :         hWnd = GetFocus();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00015	89 45 fc	 mov	 DWORD PTR _hWnd$[ebp], eax
$L52800:

; 965  :         
; 966  :         while(TRUE)

  00018	b8 01 00 00 00	 mov	 eax, 1
  0001d	85 c0		 test	 eax, eax
  0001f	74 23		 je	 SHORT $L52801

; 967  :         {
; 968  :             if(pWindow = GetWindowContext(hWnd))

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?GetWindowContext@CWindow@@KGPAV1@PAUHWND__@@@Z ; CWindow::GetWindowContext
  0002a	89 45 f4	 mov	 DWORD PTR _pWindow$[ebp], eax
  0002d	83 7d f4 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  00031	74 02		 je	 SHORT $L52802

; 969  :             {
; 970  :                 break;

  00033	eb 0f		 jmp	 SHORT $L52801
$L52802:

; 971  :             }
; 972  : 
; 973  :             hWnd = GetParent(hWnd);

  00035	8b 55 fc	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00038	52		 push	 edx
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  0003f	89 45 fc	 mov	 DWORD PTR _hWnd$[ebp], eax

; 974  :         }

  00042	eb d4		 jmp	 SHORT $L52800
$L52801:

; 975  : 
; 976  :         if(this == pWindow)

  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	3b 45 f4	 cmp	 eax, DWORD PTR _pWindow$[ebp]
  0004a	75 04		 jne	 SHORT $L52803

; 977  :         {
; 978  :             return FALSE;

  0004c	33 c0		 xor	 eax, eax
  0004e	eb 6a		 jmp	 SHORT $L52794
$L52803:

; 979  :         }
; 980  :     }
; 981  :     else if(FORWARD_ACTIVE_WORKSPACE_CHILD == nForward)

  00050	eb 4d		 jmp	 SHORT $L52804
$L52798:
  00052	83 7d 08 01	 cmp	 DWORD PTR _nForward$[ebp], 1
  00056	75 2a		 jne	 SHORT $L52805

; 982  :     {
; 983  :         if(m_Workspace.GetActiveChild(&pMDIChild))

  00058	6a 00		 push	 0
  0005a	8d 4d f8	 lea	 ecx, DWORD PTR _pMDIChild$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00067	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 82 50 02 00
	00		 mov	 eax, DWORD PTR [edx+592]
  00070	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
  00076	85 c0		 test	 eax, eax
  00078	74 06		 je	 SHORT $L52806

; 984  :         {
; 985  :             pWindow = pMDIChild;

  0007a	8b 4d f8	 mov	 ecx, DWORD PTR _pMDIChild$[ebp]
  0007d	89 4d f4	 mov	 DWORD PTR _pWindow$[ebp], ecx
$L52806:

; 986  :         }
; 987  :     }
; 988  :     else

  00080	eb 1d		 jmp	 SHORT $L52807
$L52805:

; 989  :     {
; 990  :         ASSERTMSG("Invalid forward type");

  00082	68 de 03 00 00	 push	 990			; 000003deH
  00087	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@MOIE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0008c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@OAPA@Invalid?5forward?5type?$AA@ ; `string'
  00091	6a 01		 push	 1
  00093	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00098	83 c4 10	 add	 esp, 16			; 00000010H

; 991  :         return FALSE;

  0009b	33 c0		 xor	 eax, eax
  0009d	eb 1b		 jmp	 SHORT $L52794
$L52807:
$L52804:

; 992  :     }
; 993  : 
; 994  :     return pWindow->OnCommand(nCommandId, nControlId, hWndControl, plResult);

  0009f	8b 55 18	 mov	 edx, DWORD PTR _plResult$[ebp]
  000a2	52		 push	 edx
  000a3	8b 45 14	 mov	 eax, DWORD PTR _hWndControl$[ebp]
  000a6	50		 push	 eax
  000a7	8b 4d 10	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  000aa	51		 push	 ecx
  000ab	8b 55 0c	 mov	 edx, DWORD PTR _nCommandId$[ebp]
  000ae	52		 push	 edx
  000af	8b 45 f4	 mov	 eax, DWORD PTR _pWindow$[ebp]
  000b2	8b 10		 mov	 edx, DWORD PTR [eax]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  000b7	ff 52 70	 call	 DWORD PTR [edx+112]
$L52794:

; 995  : }

  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 14 00	 ret	 20			; 00000014H
?ForwardCommand@CMainFrame@@UAEHIIIPAUHWND__@@PAJ@Z ENDP ; CMainFrame::ForwardCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdNewProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdNewProject@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdNewProject, COMDAT
; _this$ = ecx

; 1021 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1022 :     g_pApplication->m_Project.New();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 08	 call	 DWORD PTR [edx+8]

; 1023 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdNewProject@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdNewProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdOpenProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdOpenProject@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdOpenProject, COMDAT
; _this$ = ecx

; 1049 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1050 :     g_pApplication->m_Project.Open();

  00007	6a 00		 push	 0
  00009	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000f	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0001a	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  00020	ff 52 10	 call	 DWORD PTR [edx+16]

; 1051 : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?OnCmdOpenProject@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdOpenProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdReloadProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdReloadProject@CMainFrame@@UAEXXZ PROC NEAR	; CMainFrame::OnCmdReloadProject, COMDAT
; _this$ = ecx

; 1077 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1078 :     g_pApplication->m_Project.Reopen();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 18	 call	 DWORD PTR [edx+24]

; 1079 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdReloadProject@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdReloadProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdSaveProject@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdSaveProject@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdSaveProject, COMDAT
; _this$ = ecx

; 1105 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1106 :     g_pApplication->m_Project.Save();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 1c	 call	 DWORD PTR [edx+28]

; 1107 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdSaveProject@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdSaveProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdSaveProjectAs@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdSaveProjectAs@CMainFrame@@UAEXXZ PROC NEAR	; CMainFrame::OnCmdSaveProjectAs, COMDAT
; _this$ = ecx

; 1133 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1134 :     g_pApplication->m_Project.SaveAs();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 20	 call	 DWORD PTR [edx+32]

; 1135 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdSaveProjectAs@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdSaveProjectAs
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdAddWaveBank@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdAddWaveBank@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdAddWaveBank, COMDAT
; _this$ = ecx

; 1161 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1162 :     g_pApplication->m_Project.AddWaveBank();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 28	 call	 DWORD PTR [edx+40]

; 1163 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdAddWaveBank@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdAddWaveBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdBuild@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdBuild@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdBuild, COMDAT
; _this$ = ecx

; 1189 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1190 :     g_pApplication->m_Project.Build();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 24	 call	 DWORD PTR [edx+36]

; 1191 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdBuild@CMainFrame@@UAEXXZ ENDP			; CMainFrame::OnCmdBuild
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdConnect@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdConnect@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdConnect, COMDAT
; _this$ = ecx

; 1217 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1218 :     g_pApplication->m_RemoteAudition.Connect();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 74 09 00
	00		 add	 ecx, 2420		; 00000974H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 74 09 00
	00		 mov	 edx, DWORD PTR [eax+2420]
  0001e	ff 52 04	 call	 DWORD PTR [edx+4]

; 1219 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdConnect@CMainFrame@@UAEXXZ ENDP			; CMainFrame::OnCmdConnect
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdDisconnect@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdDisconnect@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdDisconnect, COMDAT
; _this$ = ecx

; 1245 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1246 :     g_pApplication->m_RemoteAudition.Disconnect();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 74 09 00
	00		 add	 ecx, 2420		; 00000974H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 74 09 00
	00		 mov	 edx, DWORD PTR [eax+2420]
  0001e	ff 52 08	 call	 DWORD PTR [edx+8]

; 1247 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdDisconnect@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdDisconnect
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdExit@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdExit@CMainFrame@@UAEXXZ PROC NEAR			; CMainFrame::OnCmdExit, COMDAT
; _this$ = ecx

; 1273 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1274 :     PostMessage(WM_DESTROY);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	6a 02		 push	 2
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 10		 mov	 edx, DWORD PTR [eax]
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 52 1c	 call	 DWORD PTR [edx+28]

; 1275 : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?OnCmdExit@CMainFrame@@UAEXXZ ENDP			; CMainFrame::OnCmdExit
_TEXT	ENDS
EXTRN	_FormatStringResourceStatic:NEAR
EXTRN	_GetXDKVersion@4:NEAR
EXTRN	__imp__SetFocus@4:NEAR
EXTRN	__imp__ShellAboutA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnCmdAbout@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -272
_szVersion$ = -264
_pszString$ = -268
_hIcon$ = -8
_hWndFocus$ = -4
?OnCmdAbout@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdAbout, COMDAT
; _this$ = ecx

; 1301 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1302 :     TCHAR                   szVersion[0x100];
; 1303 :     LPCTSTR                 pszString;
; 1304 :     HICON                   hIcon;
; 1305 :     HWND                    hWndFocus;
; 1306 : 
; 1307 :     GetXDKVersion(szVersion);

  0000f	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szVersion$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 _GetXDKVersion@4

; 1308 : 
; 1309 :     pszString = FormatStringResourceStatic(IDS_XDKVERSION, szVersion);

  0001b	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szVersion$[ebp]
  00021	51		 push	 ecx
  00022	6a 02		 push	 2
  00024	e8 00 00 00 00	 call	 _FormatStringResourceStatic
  00029	83 c4 08	 add	 esp, 8
  0002c	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _pszString$[ebp], eax

; 1310 :     hIcon = LoadResourceIconLarge(IDI_XACT);

  00032	6a 65		 push	 101			; 00000065H
  00034	e8 00 00 00 00	 call	 ?LoadResourceIconLarge@@YGPAUHICON__@@I@Z ; LoadResourceIconLarge
  00039	89 45 f8	 mov	 DWORD PTR _hIcon$[ebp], eax

; 1311 : 
; 1312 :     hWndFocus = GetFocus();

  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00042	89 45 fc	 mov	 DWORD PTR _hWndFocus$[ebp], eax

; 1313 :     
; 1314 :     ShellAbout(m_hWnd, g_szAppTitle, pszString, hIcon);

  00045	8b 55 f8	 mov	 edx, DWORD PTR _hIcon$[ebp]
  00048	52		 push	 edx
  00049	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _pszString$[ebp]
  0004f	50		 push	 eax
  00050	68 00 00 00 00	 push	 OFFSET FLAT:_g_szAppTitle
  00055	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0005e	52		 push	 edx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShellAboutA@16

; 1315 : 
; 1316 :     SetFocus(hWndFocus);

  00065	8b 45 fc	 mov	 eax, DWORD PTR _hWndFocus$[ebp]
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4

; 1317 : }

  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
?OnCmdAbout@CMainFrame@@UAEXXZ ENDP			; CMainFrame::OnCmdAbout
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdWindowPrev@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdWindowPrev@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdWindowPrev, COMDAT
; _this$ = ecx

; 1343 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1344 :     m_Workspace.SendMessage(WM_MDINEXT, NULL, TRUE);

  00007	6a 01		 push	 1
  00009	6a 00		 push	 0
  0000b	68 24 02 00 00	 push	 548			; 00000224H
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 90 50 02 00
	00		 mov	 edx, DWORD PTR [eax+592]
  00022	ff 52 18	 call	 DWORD PTR [edx+24]

; 1345 : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?OnCmdWindowPrev@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdWindowPrev
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdWindowNext@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdWindowNext@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdWindowNext, COMDAT
; _this$ = ecx

; 1371 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1372 :     m_Workspace.SendMessage(WM_MDINEXT, NULL, FALSE);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 24 02 00 00	 push	 548			; 00000224H
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 90 50 02 00
	00		 mov	 edx, DWORD PTR [eax+592]
  00022	ff 52 18	 call	 DWORD PTR [edx+24]

; 1373 : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?OnCmdWindowNext@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdWindowNext
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdWindowCascade@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdWindowCascade@CMainFrame@@UAEXXZ PROC NEAR	; CMainFrame::OnCmdWindowCascade, COMDAT
; _this$ = ecx

; 1399 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1400 :     m_Workspace.SendMessage(WM_MDICASCADE);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 27 02 00 00	 push	 551			; 00000227H
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 90 50 02 00
	00		 mov	 edx, DWORD PTR [eax+592]
  00022	ff 52 18	 call	 DWORD PTR [edx+24]

; 1401 : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?OnCmdWindowCascade@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdWindowCascade
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdWindowTileHorz@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdWindowTileHorz@CMainFrame@@UAEXXZ PROC NEAR	; CMainFrame::OnCmdWindowTileHorz, COMDAT
; _this$ = ecx

; 1427 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1428 :     m_Workspace.SendMessage(WM_MDITILE, MDITILE_HORIZONTAL);

  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	68 26 02 00 00	 push	 550			; 00000226H
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 90 50 02 00
	00		 mov	 edx, DWORD PTR [eax+592]
  00022	ff 52 18	 call	 DWORD PTR [edx+24]

; 1429 : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?OnCmdWindowTileHorz@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdWindowTileHorz
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdWindowTileVert@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdWindowTileVert@CMainFrame@@UAEXXZ PROC NEAR	; CMainFrame::OnCmdWindowTileVert, COMDAT
; _this$ = ecx

; 1455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1456 :     m_Workspace.SendMessage(WM_MDITILE, MDITILE_VERTICAL);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 26 02 00 00	 push	 550			; 00000226H
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 90 50 02 00
	00		 mov	 edx, DWORD PTR [eax+592]
  00022	ff 52 18	 call	 DWORD PTR [edx+24]

; 1457 : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?OnCmdWindowTileVert@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdWindowTileVert
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdWindowClose@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8
_hWnd$ = -4
?OnCmdWindowClose@CMainFrame@@UAEXXZ PROC NEAR		; CMainFrame::OnCmdWindowClose, COMDAT
; _this$ = ecx

; 1483 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1484 :     HWND                    hWnd;
; 1485 : 
; 1486 :     hWnd = (HWND)m_Workspace.SendMessage(WM_MDIGETACTIVE);

  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	68 29 02 00 00	 push	 553			; 00000229H
  00012	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  0001b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 90 50 02 00
	00		 mov	 edx, DWORD PTR [eax+592]
  00024	ff 52 18	 call	 DWORD PTR [edx+24]
  00027	89 45 fc	 mov	 DWORD PTR _hWnd$[ebp], eax

; 1487 :     
; 1488 :     m_Workspace.SendMessage(WM_MDIDESTROY, (WPARAM)hWnd);

  0002a	6a 00		 push	 0
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0002f	50		 push	 eax
  00030	68 21 02 00 00	 push	 545			; 00000221H
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  0003e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 82 50 02 00
	00		 mov	 eax, DWORD PTR [edx+592]
  00047	ff 50 18	 call	 DWORD PTR [eax+24]

; 1489 : }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnCmdWindowClose@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdWindowClose
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdWindowCloseAll@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8
_hWnd$ = -4
?OnCmdWindowCloseAll@CMainFrame@@UAEXXZ PROC NEAR	; CMainFrame::OnCmdWindowCloseAll, COMDAT
; _this$ = ecx

; 1515 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$L52890:

; 1516 :     HWND                    hWnd;
; 1517 : 
; 1518 :     while(TRUE)

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	85 c0		 test	 eax, eax
  00010	74 4b		 je	 SHORT $L52891

; 1519 :     {
; 1520 :         if(!(hWnd = (HWND)m_Workspace.SendMessage(WM_MDIGETACTIVE)))

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	68 29 02 00 00	 push	 553			; 00000229H
  0001b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00024	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 82 50 02 00
	00		 mov	 eax, DWORD PTR [edx+592]
  0002d	ff 50 18	 call	 DWORD PTR [eax+24]
  00030	89 45 fc	 mov	 DWORD PTR _hWnd$[ebp], eax
  00033	83 7d fc 00	 cmp	 DWORD PTR _hWnd$[ebp], 0
  00037	75 02		 jne	 SHORT $L52893

; 1521 :         {
; 1522 :             break;

  00039	eb 22		 jmp	 SHORT $L52891
$L52893:

; 1523 :         }
; 1524 :     
; 1525 :         m_Workspace.SendMessage(WM_MDIDESTROY, (WPARAM)hWnd);

  0003b	6a 00		 push	 0
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00040	51		 push	 ecx
  00041	68 21 02 00 00	 push	 545			; 00000221H
  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  0004f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00052	8b 82 50 02 00
	00		 mov	 eax, DWORD PTR [edx+592]
  00058	ff 50 18	 call	 DWORD PTR [eax+24]

; 1526 :     }

  0005b	eb ac		 jmp	 SHORT $L52890
$L52891:

; 1527 : }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?OnCmdWindowCloseAll@CMainFrame@@UAEXXZ ENDP		; CMainFrame::OnCmdWindowCloseAll
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?LayoutControls@CMainFrame@@UAEXH@Z
_TEXT	SEGMENT
_fRepaint$ = 8
_this$ = -20
_rcClient$ = -16
?LayoutControls@CMainFrame@@UAEXH@Z PROC NEAR		; CMainFrame::LayoutControls, COMDAT
; _this$ = ecx

; 1553 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1554 :     RECT                    rcClient;
; 1555 : 
; 1556 :     GetClientRect(&rcClient);

  00009	8d 45 f0	 lea	 eax, DWORD PTR _rcClient$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 52 48	 call	 DWORD PTR [edx+72]

; 1557 : 
; 1558 :     LayoutControls(rcClient.right - rcClient.left, rcClient.bottom - rcClient.top, fRepaint);

  00018	8b 45 08	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _rcClient$[ebp+12]
  0001f	2b 4d f4	 sub	 ecx, DWORD PTR _rcClient$[ebp+4]
  00022	51		 push	 ecx
  00023	8b 55 f8	 mov	 edx, DWORD PTR _rcClient$[ebp+8]
  00026	2b 55 f0	 sub	 edx, DWORD PTR _rcClient$[ebp]
  00029	52		 push	 edx
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 1559 : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?LayoutControls@CMainFrame@@UAEXH@Z ENDP		; CMainFrame::LayoutControls
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?LayoutControls@CMainFrame@@UAEXIIH@Z
_TEXT	SEGMENT
_nWidth$ = 8
_nHeight$ = 12
_fRepaint$ = 16
_this$ = -100
_rcClient$ = -96
_rcToolBar$ = -16
_rcStatusBar$ = -64
_rcProjectTree$ = -80
_rcSplitter$ = -48
_rcWorkspace$ = -32
?LayoutControls@CMainFrame@@UAEXIIH@Z PROC NEAR		; CMainFrame::LayoutControls, COMDAT
; _this$ = ecx

; 1588 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	89 4d 9c	 mov	 DWORD PTR _this$[ebp], ecx

; 1589 :     RECT                    rcClient        = { 0, 0, nWidth, nHeight };

  00009	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _rcClient$[ebp], 0
  00010	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _rcClient$[ebp+4], 0
  00017	8b 45 08	 mov	 eax, DWORD PTR _nWidth$[ebp]
  0001a	89 45 a8	 mov	 DWORD PTR _rcClient$[ebp+8], eax
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  00020	89 4d ac	 mov	 DWORD PTR _rcClient$[ebp+12], ecx

; 1590 :     RECT                    rcToolBar;
; 1591 :     RECT                    rcStatusBar;
; 1592 :     RECT                    rcProjectTree;
; 1593 :     RECT                    rcSplitter;
; 1594 :     RECT                    rcWorkspace;
; 1595 :     
; 1596 :     //
; 1597 :     // The basic window layout is as follows:
; 1598 :     //
; 1599 :     //   +-----------------------------+
; 1600 :     //   | Title bar                   |
; 1601 :     //   +-----------------------------+
; 1602 :     //   | Menu bar                    |
; 1603 :     //   +-----------------------------+
; 1604 :     //   | Tool bar                    |
; 1605 :     //   +-----------------------------+
; 1606 :     //   | T   |S|  MDI Workspace      |
; 1607 :     //   | r   |p|                     |
; 1608 :     //   | e   |l|                     |
; 1609 :     //   | e   |i|                     |
; 1610 :     //   |     |t|                     |
; 1611 :     //   | v   |t|                     |
; 1612 :     //   | i   |e|                     |
; 1613 :     //   | e   |r|                     |
; 1614 :     //   | w   | |                     |
; 1615 :     //   |     | |                     |
; 1616 :     //   +-----------------------------+
; 1617 :     //   | Status bar                  |
; 1618 :     //   +-----------------------------+
; 1619 :     //
; 1620 : 
; 1621 :     //
; 1622 :     // Trim the width and height down to account for the toolbar and status
; 1623 :     // bar sizes
; 1624 :     //
; 1625 : 
; 1626 :     m_ToolBar.SendMessage(WM_SIZE, SIZE_RESTORED, MAKELONG(nWidth, nHeight));

  00023	8b 55 08	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00026	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0002c	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00032	8b 45 0c	 mov	 eax, DWORD PTR _nHeight$[ebp]
  00035	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003f	c1 e0 10	 shl	 eax, 16			; 00000010H
  00042	0b d0		 or	 edx, eax
  00044	52		 push	 edx
  00045	6a 00		 push	 0
  00047	6a 05		 push	 5
  00049	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	83 c1 34	 add	 ecx, 52			; 00000034H
  0004f	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  00052	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00055	ff 50 18	 call	 DWORD PTR [eax+24]

; 1627 :     m_StatusBar.SendMessage(WM_SIZE, SIZE_RESTORED, MAKELONG(nWidth, nHeight));

  00058	8b 4d 08	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  0005b	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00061	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00067	8b 55 0c	 mov	 edx, DWORD PTR _nHeight$[ebp]
  0006a	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00070	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00076	c1 e2 10	 shl	 edx, 16			; 00000010H
  00079	0b ca		 or	 ecx, edx
  0007b	51		 push	 ecx
  0007c	6a 00		 push	 0
  0007e	6a 05		 push	 5
  00080	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  00089	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 90 68 01 00
	00		 mov	 edx, DWORD PTR [eax+360]
  00092	ff 52 18	 call	 DWORD PTR [edx+24]

; 1628 :     
; 1629 :     m_ToolBar.GetWindowRect(&rcToolBar);

  00095	8d 45 f0	 lea	 eax, DWORD PTR _rcToolBar$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	83 c1 34	 add	 ecx, 52			; 00000034H
  0009f	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000a5	ff 50 44	 call	 DWORD PTR [eax+68]

; 1630 :     m_StatusBar.GetWindowRect(&rcStatusBar);

  000a8	8d 4d c0	 lea	 ecx, DWORD PTR _rcStatusBar$[ebp]
  000ab	51		 push	 ecx
  000ac	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	81 c1 68 01 00
	00		 add	 ecx, 360		; 00000168H
  000b5	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	8b 82 68 01 00
	00		 mov	 eax, DWORD PTR [edx+360]
  000be	ff 50 44	 call	 DWORD PTR [eax+68]

; 1631 : 
; 1632 :     rcClient.top += rcToolBar.bottom - rcToolBar.top;

  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _rcToolBar$[ebp+12]
  000c4	2b 4d f4	 sub	 ecx, DWORD PTR _rcToolBar$[ebp+4]
  000c7	8b 55 a4	 mov	 edx, DWORD PTR _rcClient$[ebp+4]
  000ca	03 d1		 add	 edx, ecx
  000cc	89 55 a4	 mov	 DWORD PTR _rcClient$[ebp+4], edx

; 1633 :     rcClient.bottom -= rcStatusBar.bottom - rcStatusBar.top;

  000cf	8b 45 cc	 mov	 eax, DWORD PTR _rcStatusBar$[ebp+12]
  000d2	2b 45 c4	 sub	 eax, DWORD PTR _rcStatusBar$[ebp+4]
  000d5	8b 4d ac	 mov	 ecx, DWORD PTR _rcClient$[ebp+12]
  000d8	2b c8		 sub	 ecx, eax
  000da	89 4d ac	 mov	 DWORD PTR _rcClient$[ebp+12], ecx

; 1634 : 
; 1635 :     //
; 1636 :     // The splitter defines the size of the other two windows
; 1637 :     // 
; 1638 : 
; 1639 :     if(m_Splitter.m_nPosition < 0)

  000dd	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	83 ba 48 02 00
	00 00		 cmp	 DWORD PTR [edx+584], 0
  000e7	7d 0f		 jge	 SHORT $L52924

; 1640 :     {
; 1641 :         m_Splitter.m_nPosition = 0;

  000e9	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	c7 80 48 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+584], 0

; 1642 :     }
; 1643 :     else if(m_Splitter.m_nPosition + m_Splitter.m_nWidth > nWidth)

  000f6	eb 20		 jmp	 SHORT $L52925
$L52924:
  000f8	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	8b 91 48 02 00
	00		 mov	 edx, DWORD PTR [ecx+584]
  00101	83 c2 04	 add	 edx, 4
  00104	3b 55 08	 cmp	 edx, DWORD PTR _nWidth$[ebp]
  00107	76 0f		 jbe	 SHORT $L52926

; 1644 :     {
; 1645 :         m_Splitter.m_nPosition = nWidth - m_Splitter.m_nWidth;

  00109	8b 45 08	 mov	 eax, DWORD PTR _nWidth$[ebp]
  0010c	83 e8 04	 sub	 eax, 4
  0010f	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	89 81 48 02 00
	00		 mov	 DWORD PTR [ecx+584], eax
$L52926:
$L52925:

; 1646 :     }
; 1647 :     
; 1648 :     rcSplitter.left = rcClient.left + m_Splitter.m_nPosition;

  00118	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  0011b	8b 45 a0	 mov	 eax, DWORD PTR _rcClient$[ebp]
  0011e	03 82 48 02 00
	00		 add	 eax, DWORD PTR [edx+584]
  00124	89 45 d0	 mov	 DWORD PTR _rcSplitter$[ebp], eax

; 1649 :     rcSplitter.top = rcClient.top;

  00127	8b 4d a4	 mov	 ecx, DWORD PTR _rcClient$[ebp+4]
  0012a	89 4d d4	 mov	 DWORD PTR _rcSplitter$[ebp+4], ecx

; 1650 :     rcSplitter.right = rcSplitter.left + m_Splitter.m_nWidth;

  0012d	8b 55 d0	 mov	 edx, DWORD PTR _rcSplitter$[ebp]
  00130	83 c2 04	 add	 edx, 4
  00133	89 55 d8	 mov	 DWORD PTR _rcSplitter$[ebp+8], edx

; 1651 :     rcSplitter.bottom = rcClient.bottom;

  00136	8b 45 ac	 mov	 eax, DWORD PTR _rcClient$[ebp+12]
  00139	89 45 dc	 mov	 DWORD PTR _rcSplitter$[ebp+12], eax

; 1652 :     
; 1653 :     // 
; 1654 :     // Resize the tree-view up to the splitter
; 1655 :     //
; 1656 : 
; 1657 :     rcProjectTree.left = rcClient.left;

  0013c	8b 4d a0	 mov	 ecx, DWORD PTR _rcClient$[ebp]
  0013f	89 4d b0	 mov	 DWORD PTR _rcProjectTree$[ebp], ecx

; 1658 :     rcProjectTree.top = rcClient.top;

  00142	8b 55 a4	 mov	 edx, DWORD PTR _rcClient$[ebp+4]
  00145	89 55 b4	 mov	 DWORD PTR _rcProjectTree$[ebp+4], edx

; 1659 :     rcProjectTree.right = rcSplitter.left;

  00148	8b 45 d0	 mov	 eax, DWORD PTR _rcSplitter$[ebp]
  0014b	89 45 b8	 mov	 DWORD PTR _rcProjectTree$[ebp+8], eax

; 1660 :     rcProjectTree.bottom = rcClient.bottom;

  0014e	8b 4d ac	 mov	 ecx, DWORD PTR _rcClient$[ebp+12]
  00151	89 4d bc	 mov	 DWORD PTR _rcProjectTree$[ebp+12], ecx

; 1661 : 
; 1662 :     //
; 1663 :     // Resize the workspace to take the remaining area
; 1664 :     //
; 1665 : 
; 1666 :     rcWorkspace.left = rcSplitter.right;

  00154	8b 55 d8	 mov	 edx, DWORD PTR _rcSplitter$[ebp+8]
  00157	89 55 e0	 mov	 DWORD PTR _rcWorkspace$[ebp], edx

; 1667 :     rcWorkspace.top = rcClient.top;

  0015a	8b 45 a4	 mov	 eax, DWORD PTR _rcClient$[ebp+4]
  0015d	89 45 e4	 mov	 DWORD PTR _rcWorkspace$[ebp+4], eax

; 1668 :     rcWorkspace.right = rcClient.right;

  00160	8b 4d a8	 mov	 ecx, DWORD PTR _rcClient$[ebp+8]
  00163	89 4d e8	 mov	 DWORD PTR _rcWorkspace$[ebp+8], ecx

; 1669 :     rcWorkspace.bottom = rcClient.bottom;

  00166	8b 55 ac	 mov	 edx, DWORD PTR _rcClient$[ebp+12]
  00169	89 55 ec	 mov	 DWORD PTR _rcWorkspace$[ebp+12], edx

; 1670 : 
; 1671 :     m_ProjectTree.MoveWindow(&rcProjectTree, fRepaint);

  0016c	8b 45 10	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0016f	50		 push	 eax
  00170	8d 4d b0	 lea	 ecx, DWORD PTR _rcProjectTree$[ebp]
  00173	51		 push	 ecx
  00174	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  0017d	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  00180	8b 82 98 01 00
	00		 mov	 eax, DWORD PTR [edx+408]
  00186	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1672 :     m_Splitter.MoveWindow(&rcSplitter, fRepaint);

  00189	8b 4d 10	 mov	 ecx, DWORD PTR _fRepaint$[ebp]
  0018c	51		 push	 ecx
  0018d	8d 55 d0	 lea	 edx, DWORD PTR _rcSplitter$[ebp]
  00190	52		 push	 edx
  00191	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	81 c1 18 02 00
	00		 add	 ecx, 536		; 00000218H
  0019a	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  0019d	8b 90 18 02 00
	00		 mov	 edx, DWORD PTR [eax+536]
  001a3	ff 52 3c	 call	 DWORD PTR [edx+60]

; 1673 :     m_Workspace.MoveWindow(&rcWorkspace, fRepaint);

  001a6	8b 45 10	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  001a9	50		 push	 eax
  001aa	8d 4d e0	 lea	 ecx, DWORD PTR _rcWorkspace$[ebp]
  001ad	51		 push	 ecx
  001ae	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  001b1	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  001b7	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  001ba	8b 82 50 02 00
	00		 mov	 eax, DWORD PTR [edx+592]
  001c0	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1674 : }

  001c3	8b e5		 mov	 esp, ebp
  001c5	5d		 pop	 ebp
  001c6	c2 0c 00	 ret	 12			; 0000000cH
?LayoutControls@CMainFrame@@UAEXIIH@Z ENDP		; CMainFrame::LayoutControls
_TEXT	ENDS
EXTRN	__imp__EnableMenuItem@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?EnableCommand@CMainFrame@@UAEXIH@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_fEnable$ = 12
_this$ = -12
_dwMenuFlags$ = -4
_i$ = -8
?EnableCommand@CMainFrame@@UAEXIH@Z PROC NEAR		; CMainFrame::EnableCommand, COMDAT
; _this$ = ecx

; 1702 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1703 :     const DWORD             dwMenuFlags = MF_BYCOMMAND | (fEnable ? MF_ENABLED : MF_GRAYED);

  00009	33 c0		 xor	 eax, eax
  0000b	83 7d 0c 00	 cmp	 DWORD PTR _fEnable$[ebp], 0
  0000f	0f 94 c0	 sete	 al
  00012	89 45 fc	 mov	 DWORD PTR _dwMenuFlags$[ebp], eax

; 1704 :     UINT                    i;
; 1705 :     
; 1706 :     //
; 1707 :     // Update the toolbar
; 1708 :     //
; 1709 : 
; 1710 :     m_ToolBar.EnableButton(nCommandId, fEnable);

  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR _nCommandId$[ebp]
  0001c	52		 push	 edx
  0001d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 34	 add	 ecx, 52			; 00000034H
  00023	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00029	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]

; 1711 : 
; 1712 :     //
; 1713 :     // Update the main menu
; 1714 :     //
; 1715 : 
; 1716 :     EnableMenuItem(m_hMenu, nCommandId, dwMenuFlags);

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _dwMenuFlags$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _nCommandId$[ebp]
  00036	51		 push	 ecx
  00037	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0003a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0003d	50		 push	 eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableMenuItem@12

; 1717 : 
; 1718 :     //
; 1719 :     // Update the secondary menus
; 1720 :     //
; 1721 : 
; 1722 :     for(i = 0; i < NUMELMS(m_ahMenus); i++)

  00044	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0004b	eb 09		 jmp	 SHORT $L52934
$L52935:
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00050	83 c1 01	 add	 ecx, 1
  00053	89 4d f8	 mov	 DWORD PTR _i$[ebp], ecx
$L52934:
  00056	83 7d f8 02	 cmp	 DWORD PTR _i$[ebp], 2
  0005a	73 1e		 jae	 SHORT $L52936

; 1723 :     {
; 1724 :         EnableMenuItem(m_ahMenus[i], nCommandId, dwMenuFlags);

  0005c	8b 55 fc	 mov	 edx, DWORD PTR _dwMenuFlags$[ebp]
  0005f	52		 push	 edx
  00060	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00063	50		 push	 eax
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00067	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 84 8a 80 02
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+640]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableMenuItem@12

; 1725 :     }

  00078	eb d3		 jmp	 SHORT $L52935
$L52936:

; 1726 : 
; 1727 :     //
; 1728 :     // Update check state
; 1729 :     //
; 1730 : 
; 1731 :     if(!fEnable)

  0007a	83 7d 0c 00	 cmp	 DWORD PTR _fEnable$[ebp], 0
  0007e	75 14		 jne	 SHORT $L52937

; 1732 :     {
; 1733 :         CheckCommand(nCommandId, FALSE);

  00080	6a 00		 push	 0
  00082	8b 4d 08	 mov	 ecx, DWORD PTR _nCommandId$[ebp]
  00085	51		 push	 ecx
  00086	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 02		 mov	 eax, DWORD PTR [edx]
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	ff 90 b4 00 00
	00		 call	 DWORD PTR [eax+180]
$L52937:

; 1734 :     }
; 1735 : }

  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 08 00	 ret	 8
?EnableCommand@CMainFrame@@UAEXIH@Z ENDP		; CMainFrame::EnableCommand
_TEXT	ENDS
EXTRN	__imp__CheckMenuItem@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?CheckCommand@CMainFrame@@UAEXIH@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_fCheck$ = 12
_this$ = -12
_dwMenuFlags$ = -4
_i$ = -8
?CheckCommand@CMainFrame@@UAEXIH@Z PROC NEAR		; CMainFrame::CheckCommand, COMDAT
; _this$ = ecx

; 1763 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1764 :     const DWORD             dwMenuFlags = MF_BYCOMMAND | (fCheck ? MF_CHECKED : MF_UNCHECKED);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _fCheck$[ebp]
  0000c	f7 d8		 neg	 eax
  0000e	1b c0		 sbb	 eax, eax
  00010	83 e0 08	 and	 eax, 8
  00013	89 45 fc	 mov	 DWORD PTR _dwMenuFlags$[ebp], eax

; 1765 :     UINT                    i;
; 1766 :     
; 1767 :     //
; 1768 :     // Update the toolbar
; 1769 :     //
; 1770 : 
; 1771 :     m_ToolBar.SetButtonState(nCommandId, TBSTATE_CHECKED, fCheck ? TBSTATE_CHECKED : 0);

  00016	33 c9		 xor	 ecx, ecx
  00018	83 7d 0c 00	 cmp	 DWORD PTR _fCheck$[ebp], 0
  0001c	0f 95 c1	 setne	 cl
  0001f	51		 push	 ecx
  00020	6a 01		 push	 1
  00022	8b 55 08	 mov	 edx, DWORD PTR _nCommandId$[ebp]
  00025	52		 push	 edx
  00026	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 34	 add	 ecx, 52			; 00000034H
  0002c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00032	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]

; 1772 : 
; 1773 :     //
; 1774 :     // Update the main menu
; 1775 :     //
; 1776 : 
; 1777 :     CheckMenuItem(m_hMenu, nCommandId, dwMenuFlags);

  00038	8b 45 fc	 mov	 eax, DWORD PTR _dwMenuFlags$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _nCommandId$[ebp]
  0003f	51		 push	 ecx
  00040	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00046	50		 push	 eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckMenuItem@12

; 1778 : 
; 1779 :     //
; 1780 :     // Update the secondary menus
; 1781 :     //
; 1782 : 
; 1783 :     for(i = 0; i < NUMELMS(m_ahMenus); i++)

  0004d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00054	eb 09		 jmp	 SHORT $L52945
$L52946:
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00059	83 c1 01	 add	 ecx, 1
  0005c	89 4d f8	 mov	 DWORD PTR _i$[ebp], ecx
$L52945:
  0005f	83 7d f8 02	 cmp	 DWORD PTR _i$[ebp], 2
  00063	73 1e		 jae	 SHORT $L52947

; 1784 :     {
; 1785 :         CheckMenuItem(m_ahMenus[i], nCommandId, dwMenuFlags);

  00065	8b 55 fc	 mov	 edx, DWORD PTR _dwMenuFlags$[ebp]
  00068	52		 push	 edx
  00069	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00070	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00073	8b 84 8a 80 02
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+640]
  0007a	50		 push	 eax
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckMenuItem@12

; 1786 :     }

  00081	eb d3		 jmp	 SHORT $L52946
$L52947:

; 1787 : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
?CheckCommand@CMainFrame@@UAEXIH@Z ENDP			; CMainFrame::CheckCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetDefaultCommandState@CMainFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8
_i$ = -4
?SetDefaultCommandState@CMainFrame@@UAEXXZ PROC NEAR	; CMainFrame::SetDefaultCommandState, COMDAT
; _this$ = ecx

; 1815 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1816 :     static const UINT       anDisabled[] =
; 1817 :     {
; 1818 :         ID_RELOAD_PROJECT,
; 1819 :         ID_ADD_WAVEBANK_ENTRY,
; 1820 :         ID_WAVEBANK_ENTRY_ADPCM,
; 1821 :         ID_WAVEBANK_ENTRY_8BIT,
; 1822 :         ID_PLAY,
; 1823 :         ID_STOP,
; 1824 :         ID_RECENT_FILE_0,
; 1825 :         ID_DISCONNECT,
; 1826 :     };
; 1827 : 
; 1828 :     UINT                    i;
; 1829 : 
; 1830 :     for(i = 0; i < NUMELMS(anDisabled); i++)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00010	eb 09		 jmp	 SHORT $L52955
$L52956:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L52955:
  0001b	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  0001f	73 1d		 jae	 SHORT $L52957

; 1831 :     {
; 1832 :         EnableCommand(anDisabled[i], FALSE);

  00021	6a 00		 push	 0
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00026	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?anDisabled@?1??SetDefaultCommandState@CMainFrame@@UAEXXZ@4QBIB[ecx*4]
  0002d	52		 push	 edx
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 10		 mov	 edx, DWORD PTR [eax]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]

; 1833 :     }

  0003c	eb d4		 jmp	 SHORT $L52956
$L52957:

; 1834 : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?SetDefaultCommandState@CMainFrame@@UAEXXZ ENDP		; CMainFrame::SetDefaultCommandState
_TEXT	ENDS
PUBLIC	?OnClose@CWindow@@UAEHPAJ@Z			; CWindow::OnClose
PUBLIC	?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z	; CWindow::DefWindowProcA
PUBLIC	?AddRef@CMainStatusBar@@UAGKXZ			; CMainStatusBar::AddRef
PUBLIC	?Release@CMainStatusBar@@UAGKXZ			; CMainStatusBar::Release
PUBLIC	?Create@CMainStatusBar@@UAEHXZ			; CMainStatusBar::Create
PUBLIC	??_7CMainStatusBar@@6B@				; CMainStatusBar::`vftable'
PUBLIC	??_GCMainStatusBar@@UAEPAXI@Z			; CMainStatusBar::`scalar deleting destructor'
PUBLIC	??_ECMainStatusBar@@UAEPAXI@Z			; CMainStatusBar::`vector deleting destructor'
EXTRN	??0CWindow@@QAE@III@Z:NEAR			; CWindow::CWindow
;	COMDAT ??_7CMainStatusBar@@6B@
CONST	SEGMENT
??_7CMainStatusBar@@6B@ DD FLAT:??_ECMainStatusBar@@UAEPAXI@Z ; CMainStatusBar::`vftable'
	DD	FLAT:?AddRef@CMainStatusBar@@UAGKXZ
	DD	FLAT:?Release@CMainStatusBar@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CWindow@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CMainStatusBar@@UAEHXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainStatusBar@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainStatusBar@@QAE@XZ PROC NEAR			; CMainStatusBar::CMainStatusBar, COMDAT
; _this$ = ecx

; 1859 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a ff		 push	 -1
  0000b	6a ff		 push	 -1
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ??0CWindow@@QAE@III@Z	; CWindow::CWindow
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainStatusBar@@6B@ ; CMainStatusBar::`vftable'

; 1860 : }

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??0CMainStatusBar@@QAE@XZ ENDP				; CMainStatusBar::CMainStatusBar
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnClose, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 247  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnClose@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnClose
_TEXT	ENDS
EXTRN	__imp__DefWindowProcA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z PROC NEAR	; CWindow::DefWindowProcA, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 296  :     return ::DefWindowProc(hWnd, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00016	50		 push	 eax
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 297  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z ENDP	; CWindow::DefWindowProcA
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?AddRef@CMainStatusBar@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CMainStatusBar@@UAGKXZ PROC NEAR		; CMainStatusBar::AddRef, COMDAT

; 49   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 50   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 51   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CMainStatusBar@@UAGKXZ ENDP			; CMainStatusBar::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CMainStatusBar@@UAGKXZ
_TEXT	SEGMENT
?Release@CMainStatusBar@@UAGKXZ PROC NEAR		; CMainStatusBar::Release, COMDAT

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 55   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 56   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CMainStatusBar@@UAGKXZ ENDP			; CMainStatusBar::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainStatusBar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainStatusBar@@UAEPAXI@Z PROC NEAR			; CMainStatusBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainStatusBar@@UAE@XZ ; CMainStatusBar::~CMainStatusBar
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L52965
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L52965:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainStatusBar@@UAEPAXI@Z ENDP			; CMainStatusBar::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWindow@@UAE@XZ:NEAR				; CWindow::~CWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CMainStatusBar@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainStatusBar@@UAE@XZ PROC NEAR			; CMainStatusBar::~CMainStatusBar, COMDAT
; _this$ = ecx

; 1885 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainStatusBar@@6B@ ; CMainStatusBar::`vftable'

; 1886 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMainStatusBar@@UAE@XZ ENDP				; CMainStatusBar::~CMainStatusBar
_TEXT	ENDS
PUBLIC	??_C@_0BD@BJDK@msctls_statusbar32?$AA@		; `string'
;	COMDAT ??_C@_0BD@BJDK@msctls_statusbar32?$AA@
CONST	SEGMENT
??_C@_0BD@BJDK@msctls_statusbar32?$AA@ DB 'msctls_statusbar32', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CMainStatusBar@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?Create@CMainStatusBar@@UAEHXZ PROC NEAR		; CMainStatusBar::Create, COMDAT
; _this$ = ecx

; 1912 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1913 :     static const DWORD      dwExStyle   = 0;
; 1914 :     static const DWORD      dwStyle     = WS_CHILD | WS_VISIBLE | CCS_BOTTOM | SBARS_SIZEGRIP;
; 1915 :     
; 1916 :     //
; 1917 :     // Create the window
; 1918 :     //
; 1919 : 
; 1920 :     return CWindow::Create(&g_pApplication->m_MainFrame, STATUSCLASSNAME, NULL, dwExStyle, dwStyle, 0, 0, 0, 0, CMainFrame::IDC_MAIN_STATUSBAR);

  00007	6a 00		 push	 0
  00009	6a 05		 push	 5
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	6a 00		 push	 0
  00013	68 03 01 00 50	 push	 1342177539		; 50000103H
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@BJDK@msctls_statusbar32?$AA@ ; `string'
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00026	83 c0 10	 add	 eax, 16			; 00000010H
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z ; CWindow::Create

; 1921 : }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
?Create@CMainStatusBar@@UAEHXZ ENDP			; CMainStatusBar::Create
_TEXT	ENDS
PUBLIC	?AddRef@CMainToolBar@@UAGKXZ			; CMainToolBar::AddRef
PUBLIC	?Release@CMainToolBar@@UAGKXZ			; CMainToolBar::Release
PUBLIC	?Create@CMainToolBar@@UAEHXZ			; CMainToolBar::Create
PUBLIC	??_7CMainToolBar@@6B@				; CMainToolBar::`vftable'
PUBLIC	??_GCMainToolBar@@UAEPAXI@Z			; CMainToolBar::`scalar deleting destructor'
PUBLIC	??_ECMainToolBar@@UAEPAXI@Z			; CMainToolBar::`vector deleting destructor'
PUBLIC	?EnableButton@CToolBar@@UAEHIH@Z		; CToolBar::EnableButton
EXTRN	??0CToolBar@@QAE@XZ:NEAR			; CToolBar::CToolBar
EXTRN	?Create@CToolBar@@UAEHPAVCWindow@@KKI@Z:NEAR	; CToolBar::Create
EXTRN	?LoadImages@CToolBar@@UAEIIIPAUHINSTANCE__@@@Z:NEAR ; CToolBar::LoadImages
EXTRN	?AddButton@CToolBar@@UAEHIII@Z:NEAR		; CToolBar::AddButton
EXTRN	?AddSeparator@CToolBar@@UAEHXZ:NEAR		; CToolBar::AddSeparator
EXTRN	?SetButtonState@CToolBar@@UAEHIKK@Z:NEAR	; CToolBar::SetButtonState
;	COMDAT ??_7CMainToolBar@@6B@
CONST	SEGMENT
??_7CMainToolBar@@6B@ DD FLAT:??_ECMainToolBar@@UAEPAXI@Z ; CMainToolBar::`vftable'
	DD	FLAT:?AddRef@CMainToolBar@@UAGKXZ
	DD	FLAT:?Release@CMainToolBar@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CWindow@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CToolBar@@UAEHPAVCWindow@@KKI@Z
	DD	FLAT:?LoadImages@CToolBar@@UAEIIIPAUHINSTANCE__@@@Z
	DD	FLAT:?AddButton@CToolBar@@UAEHIII@Z
	DD	FLAT:?AddSeparator@CToolBar@@UAEHXZ
	DD	FLAT:?EnableButton@CToolBar@@UAEHIH@Z
	DD	FLAT:?SetButtonState@CToolBar@@UAEHIKK@Z
	DD	FLAT:?Create@CMainToolBar@@UAEHXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainToolBar@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainToolBar@@QAE@XZ PROC NEAR			; CMainToolBar::CMainToolBar, COMDAT
; _this$ = ecx

; 1946 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CToolBar@@QAE@XZ	; CToolBar::CToolBar
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainToolBar@@6B@ ; CMainToolBar::`vftable'

; 1947 : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CMainToolBar@@QAE@XZ ENDP				; CMainToolBar::CMainToolBar
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\toolbar.h
_TEXT	ENDS
;	COMDAT ?EnableButton@CToolBar@@UAEHIH@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_fEnable$ = 12
_this$ = -4
?EnableButton@CToolBar@@UAEHIH@Z PROC NEAR		; CToolBar::EnableButton, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   :     return SendMessage(TB_ENABLEBUTTON, nCommandId, MAKELONG(fEnable, 0));

  00007	8b 45 0c	 mov	 eax, DWORD PTR _fEnable$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nCommandId$[ebp]
  00018	51		 push	 ecx
  00019	68 01 04 00 00	 push	 1025			; 00000401H
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 02		 mov	 eax, DWORD PTR [edx]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 50 18	 call	 DWORD PTR [eax+24]

; 63   : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?EnableButton@CToolBar@@UAEHIH@Z ENDP			; CToolBar::EnableButton
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?AddRef@CMainToolBar@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CMainToolBar@@UAGKXZ PROC NEAR			; CMainToolBar::AddRef, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 101  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CMainToolBar@@UAGKXZ ENDP			; CMainToolBar::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CMainToolBar@@UAGKXZ
_TEXT	SEGMENT
?Release@CMainToolBar@@UAGKXZ PROC NEAR			; CMainToolBar::Release, COMDAT

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 106  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CMainToolBar@@UAGKXZ ENDP			; CMainToolBar::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainToolBar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainToolBar@@UAEPAXI@Z PROC NEAR			; CMainToolBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainToolBar@@UAE@XZ	; CMainToolBar::~CMainToolBar
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L52986
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L52986:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainToolBar@@UAEPAXI@Z ENDP			; CMainToolBar::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CToolBar@@UAE@XZ:NEAR			; CToolBar::~CToolBar
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CMainToolBar@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainToolBar@@UAE@XZ PROC NEAR			; CMainToolBar::~CMainToolBar, COMDAT
; _this$ = ecx

; 1972 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainToolBar@@6B@ ; CMainToolBar::`vftable'

; 1973 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CToolBar@@UAE@XZ	; CToolBar::~CToolBar
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMainToolBar@@UAE@XZ ENDP				; CMainToolBar::~CMainToolBar
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Create@CMainToolBar@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8
_nBitmapIndex$ = -4
?Create@CMainToolBar@@UAEHXZ PROC NEAR			; CMainToolBar::Create, COMDAT
; _this$ = ecx

; 1999 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2000 :     static const DWORD      dwExStyle       = 0;
; 2001 :     static const DWORD      dwStyle         = WS_CHILD | WS_VISIBLE | CCS_TOP | TBSTYLE_FLAT | TBSTYLE_TRANSPARENT | TBSTYLE_TOOLTIPS;
; 2002 :     UINT                    nBitmapIndex;
; 2003 :     
; 2004 :     //
; 2005 :     // Create the window
; 2006 :     //
; 2007 :     
; 2008 :     if(!CToolBar::Create(&g_pApplication->m_MainFrame, dwExStyle, dwStyle, CMainFrame::IDC_MAIN_TOOLBAR))

  00009	6a 01		 push	 1
  0000b	68 01 89 00 50	 push	 1342212353		; 50008901H
  00010	6a 00		 push	 0
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00017	83 c0 10	 add	 eax, 16			; 00000010H
  0001a	50		 push	 eax
  0001b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?Create@CToolBar@@UAEHPAVCWindow@@KKI@Z ; CToolBar::Create
  00023	85 c0		 test	 eax, eax
  00025	75 07		 jne	 SHORT $L53000

; 2009 :     {
; 2010 :         return FALSE;

  00027	33 c0		 xor	 eax, eax
  00029	e9 96 01 00 00	 jmp	 $L52994
$L53000:

; 2011 :     }
; 2012 : 
; 2013 :     //
; 2014 :     // Add the main toolbar bitmap
; 2015 :     //
; 2016 : 
; 2017 :     nBitmapIndex = LoadImages(IDB_MAIN_TOOLBAR, BTN_COUNT);

  0002e	6a 00		 push	 0
  00030	6a 09		 push	 9
  00032	6a 69		 push	 105			; 00000069H
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 11		 mov	 edx, DWORD PTR [ecx]
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	ff 92 a4 00 00
	00		 call	 DWORD PTR [edx+164]
  00042	89 45 fc	 mov	 DWORD PTR _nBitmapIndex$[ebp], eax

; 2018 : 
; 2019 :     //
; 2020 :     // Add buttons
; 2021 :     //
; 2022 : 
; 2023 :     AddButton(IML_STD, STD_FILENEW, ID_NEW_PROJECT);

  00045	68 43 9c 00 00	 push	 40003			; 00009c43H
  0004a	6a 06		 push	 6
  0004c	6a 01		 push	 1
  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 10		 mov	 edx, DWORD PTR [eax]
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2024 : 
; 2025 :     AddSeparator();

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 2026 : 
; 2027 :     AddButton(IML_STD, STD_FILEOPEN, ID_OPEN_PROJECT);

  0006a	68 44 9c 00 00	 push	 40004			; 00009c44H
  0006f	6a 07		 push	 7
  00071	6a 01		 push	 1
  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 10		 mov	 edx, DWORD PTR [eax]
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2028 :     AddButton(IML_STD, STD_FILESAVE, ID_SAVE_PROJECT);

  00081	68 45 9c 00 00	 push	 40005			; 00009c45H
  00086	6a 08		 push	 8
  00088	6a 01		 push	 1
  0008a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 10		 mov	 edx, DWORD PTR [eax]
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2029 : 
; 2030 :     AddSeparator();

  00098	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 10		 mov	 edx, DWORD PTR [eax]
  0009d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 2031 : 
; 2032 :     AddButton(nBitmapIndex, BTN_WAVEBANK, ID_ADD_WAVEBANK);

  000a6	68 47 9c 00 00	 push	 40007			; 00009c47H
  000ab	6a 00		 push	 0
  000ad	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2033 :     AddButton(nBitmapIndex, BTN_WAVEBANK_ENTRY, ID_ADD_WAVEBANK_ENTRY);

  000bf	68 48 9c 00 00	 push	 40008			; 00009c48H
  000c4	6a 01		 push	 1
  000c6	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2034 : 
; 2035 :     AddSeparator();

  000d8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000db	8b 10		 mov	 edx, DWORD PTR [eax]
  000dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 2036 : 
; 2037 :     AddButton(nBitmapIndex, BTN_ADPCM, ID_WAVEBANK_ENTRY_ADPCM);

  000e6	68 49 9c 00 00	 push	 40009			; 00009c49H
  000eb	6a 03		 push	 3
  000ed	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2038 :     AddButton(nBitmapIndex, BTN_8BIT, ID_WAVEBANK_ENTRY_8BIT);

  000ff	68 4a 9c 00 00	 push	 40010			; 00009c4aH
  00104	6a 04		 push	 4
  00106	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  00109	50		 push	 eax
  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2039 : 
; 2040 :     AddSeparator();

  00118	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	8b 10		 mov	 edx, DWORD PTR [eax]
  0011d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 2041 : 
; 2042 :     AddButton(nBitmapIndex, BTN_CONNECT, ID_CONNECT);

  00126	68 5f 9c 00 00	 push	 40031			; 00009c5fH
  0012b	6a 07		 push	 7
  0012d	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  00130	50		 push	 eax
  00131	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	8b 11		 mov	 edx, DWORD PTR [ecx]
  00136	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2043 :     AddButton(nBitmapIndex, BTN_DISCONNECT, ID_DISCONNECT);

  0013f	68 60 9c 00 00	 push	 40032			; 00009c60H
  00144	6a 08		 push	 8
  00146	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  00149	50		 push	 eax
  0014a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2044 : 
; 2045 :     AddSeparator();

  00158	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015b	8b 10		 mov	 edx, DWORD PTR [eax]
  0015d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 2046 : 
; 2047 :     AddButton(nBitmapIndex, BTN_PLAY, ID_PLAY);

  00166	68 4c 9c 00 00	 push	 40012			; 00009c4cH
  0016b	6a 05		 push	 5
  0016d	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  00170	50		 push	 eax
  00171	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	8b 11		 mov	 edx, DWORD PTR [ecx]
  00176	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2048 :     AddButton(nBitmapIndex, BTN_STOP, ID_STOP);

  0017f	68 4d 9c 00 00	 push	 40013			; 00009c4dH
  00184	6a 06		 push	 6
  00186	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  00189	50		 push	 eax
  0018a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2049 : 
; 2050 :     AddSeparator();

  00198	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0019b	8b 10		 mov	 edx, DWORD PTR [eax]
  0019d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a0	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 2051 : 
; 2052 :     AddButton(nBitmapIndex, BTN_BUILD, ID_BUILD);

  001a6	68 4b 9c 00 00	 push	 40011			; 00009c4bH
  001ab	6a 02		 push	 2
  001ad	8b 45 fc	 mov	 eax, DWORD PTR _nBitmapIndex$[ebp]
  001b0	50		 push	 eax
  001b1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b9	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 2053 : 
; 2054 :     return TRUE;

  001bf	b8 01 00 00 00	 mov	 eax, 1
$L52994:

; 2055 : }

  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c3		 ret	 0
?Create@CMainToolBar@@UAEHXZ ENDP			; CMainToolBar::Create
_TEXT	ENDS
PUBLIC	??0CMainProjectTreeCategory@@QAE@XZ		; CMainProjectTreeCategory::CMainProjectTreeCategory
PUBLIC	?AddRef@CMainProjectTree@@UAGKXZ		; CMainProjectTree::AddRef
PUBLIC	?Release@CMainProjectTree@@UAGKXZ		; CMainProjectTree::Release
PUBLIC	?Create@CMainProjectTree@@UAEHXZ		; CMainProjectTree::Create
PUBLIC	?OnCommand@CMainProjectTree@@UAEHIIPAUHWND__@@PAJ@Z ; CMainProjectTree::OnCommand
PUBLIC	??_7CMainProjectTree@@6B@			; CMainProjectTree::`vftable'
PUBLIC	??_GCMainProjectTree@@UAEPAXI@Z			; CMainProjectTree::`scalar deleting destructor'
PUBLIC	??_ECMainProjectTree@@UAEPAXI@Z			; CMainProjectTree::`vector deleting destructor'
EXTRN	??0CTreeView@@QAE@XZ:NEAR			; CTreeView::CTreeView
EXTRN	?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z:NEAR ; CTreeView::Create
EXTRN	?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z:NEAR ; CTreeView::RegisterType
EXTRN	?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z:NEAR ; CTreeView::FindRegisteredType
EXTRN	?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ:NEAR ; CTreeView::GetSelection
EXTRN	?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z:NEAR ; CTreeView::GetNextItem
EXTRN	?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z:NEAR ; CTreeView::PtrFromTreeItem
EXTRN	?OnCreate@CTreeView@@UAEHPAXPAJ@Z:NEAR		; CTreeView::OnCreate
EXTRN	?OnDestroy@CTreeView@@UAEHPAJ@Z:NEAR		; CTreeView::OnDestroy
EXTRN	?OnSize@CTreeView@@UAEHIIIPAJ@Z:NEAR		; CTreeView::OnSize
EXTRN	?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z:NEAR ; CTreeView::OnContextMenu
EXTRN	?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z:NEAR ; CTreeView::OnNotify
EXTRN	?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z:NEAR ; CTreeView::OnDeleteItem
EXTRN	?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z:NEAR ; CTreeView::OnDoubleClick
EXTRN	?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z:NEAR ; CTreeView::OnGetInfoTip
EXTRN	?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z:NEAR ; CTreeView::OnEndLabelEdit
;	COMDAT ??_7CMainProjectTree@@6B@
CONST	SEGMENT
??_7CMainProjectTree@@6B@ DD FLAT:??_ECMainProjectTree@@UAEPAXI@Z ; CMainProjectTree::`vftable'
	DD	FLAT:?AddRef@CMainProjectTree@@UAGKXZ
	DD	FLAT:?Release@CMainProjectTree@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CTreeView@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CTreeView@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CTreeView@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CMainProjectTree@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CWindow@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z
	DD	FLAT:?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z
	DD	FLAT:?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z
	DD	FLAT:?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ
	DD	FLAT:?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z
	DD	FLAT:?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z
	DD	FLAT:?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z
	DD	FLAT:?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z
	DD	FLAT:?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z
	DD	FLAT:?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z
	DD	FLAT:?Create@CMainProjectTree@@UAEHXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainProjectTree@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainProjectTree@@QAE@XZ PROC NEAR			; CMainProjectTree::CMainProjectTree, COMDAT
; _this$ = ecx

; 2080 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CTreeView@@QAE@XZ	; CTreeView::CTreeView
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 70	 add	 ecx, 112		; 00000070H
  00015	e8 00 00 00 00	 call	 ??0CMainProjectTreeCategory@@QAE@XZ ; CMainProjectTreeCategory::CMainProjectTreeCategory
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainProjectTree@@6B@ ; CMainProjectTree::`vftable'

; 2081 : }

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0CMainProjectTree@@QAE@XZ ENDP			; CMainProjectTree::CMainProjectTree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?AddRef@CMainProjectTree@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CMainProjectTree@@UAGKXZ PROC NEAR		; CMainProjectTree::AddRef, COMDAT

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 177  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 178  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CMainProjectTree@@UAGKXZ ENDP			; CMainProjectTree::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CMainProjectTree@@UAGKXZ
_TEXT	SEGMENT
?Release@CMainProjectTree@@UAGKXZ PROC NEAR		; CMainProjectTree::Release, COMDAT

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 183  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CMainProjectTree@@UAGKXZ ENDP			; CMainProjectTree::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainProjectTree@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainProjectTree@@UAEPAXI@Z PROC NEAR		; CMainProjectTree::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainProjectTree@@UAE@XZ ; CMainProjectTree::~CMainProjectTree
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53008
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53008:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainProjectTree@@UAEPAXI@Z ENDP			; CMainProjectTree::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CMainProjectTreeCategory@@UAE@XZ		; CMainProjectTreeCategory::~CMainProjectTreeCategory
EXTRN	??1CTreeView@@UAE@XZ:NEAR			; CTreeView::~CTreeView
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CMainProjectTree@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainProjectTree@@UAE@XZ PROC NEAR			; CMainProjectTree::~CMainProjectTree, COMDAT
; _this$ = ecx

; 2106 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainProjectTree@@6B@ ; CMainProjectTree::`vftable'

; 2107 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 70	 add	 ecx, 112		; 00000070H
  00016	e8 00 00 00 00	 call	 ??1CMainProjectTreeCategory@@UAE@XZ ; CMainProjectTreeCategory::~CMainProjectTreeCategory
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??1CTreeView@@UAE@XZ	; CTreeView::~CTreeView
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1CMainProjectTree@@UAE@XZ ENDP			; CMainProjectTree::~CMainProjectTree
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Create@CMainProjectTree@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?Create@CMainProjectTree@@UAEHXZ PROC NEAR		; CMainProjectTree::Create, COMDAT
; _this$ = ecx

; 2133 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2134 :     static const DWORD      dwExStyle   = WS_EX_CLIENTEDGE;
; 2135 :     static const DWORD      dwStyle     = WS_VISIBLE | WS_CHILD | TVS_HASBUTTONS | TVS_HASLINES | TVS_LINESATROOT | TVS_EDITLABELS | TVS_DISABLEDRAGDROP | TVS_SHOWSELALWAYS;
; 2136 : 
; 2137 :     //
; 2138 :     // Create the window
; 2139 :     //
; 2140 : 
; 2141 :     if(!CTreeView::Create(&g_pApplication->m_MainFrame, dwExStyle, dwStyle, 0, 0, 0, 0, CMainFrame::IDC_MAIN_PROJECTTREE))

  00007	6a 02		 push	 2
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	68 3f 00 00 50	 push	 1342177343		; 5000003fH
  00016	68 00 02 00 00	 push	 512			; 00000200H
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00020	83 c0 10	 add	 eax, 16			; 00000010H
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z ; CTreeView::Create
  0002c	85 c0		 test	 eax, eax
  0002e	75 04		 jne	 SHORT $L53021

; 2142 :     {
; 2143 :         return FALSE;

  00030	33 c0		 xor	 eax, eax
  00032	eb 3c		 jmp	 SHORT $L53016
$L53021:

; 2144 :     }
; 2145 : 
; 2146 :     //
; 2147 :     // Create category items
; 2148 :     //
; 2149 : 
; 2150 :     m_WaveBundlerCategory.Create(this, IDS_CATEGORY_WAVEBUNDLER, IDI_CATEGORY_WAVEBUNDLER);

  00034	6a 6e		 push	 110			; 0000006eH
  00036	68 00 01 00 00	 push	 256			; 00000100H
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 c1 70	 add	 ecx, 112		; 00000070H
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  0004b	ff 50 30	 call	 DWORD PTR [eax+48]

; 2151 : 
; 2152 :     //
; 2153 :     // Register standard types
; 2154 :     //
; 2155 : 
; 2156 :     RegisterType(m_pszWaveBankType, LoadResourceIconSmall(IDI_WAVEBANK));

  0004e	6a 6c		 push	 108			; 0000006cH
  00050	e8 00 00 00 00	 call	 ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ; LoadResourceIconSmall
  00055	50		 push	 eax
  00056	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pszWaveBankType@CMainProjectTree@@2QBDB ; CMainProjectTree::m_pszWaveBankType
  0005c	51		 push	 ecx
  0005d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00060	8b 02		 mov	 eax, DWORD PTR [edx]
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]

; 2157 : 
; 2158 :     return TRUE;

  0006b	b8 01 00 00 00	 mov	 eax, 1
$L53016:

; 2159 : }

  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
?Create@CMainProjectTree@@UAEHXZ ENDP			; CMainProjectTree::Create
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainProjectTree@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hWndControl$ = 16
_plResult$ = 20
_this$ = -8
_pItem$ = -4
?OnCommand@CMainProjectTree@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CMainProjectTree::OnCommand, COMDAT
; _this$ = ecx

; 2191 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2192 :     CMainProjectTreeItem *  pItem;
; 2193 :     
; 2194 :     if(CTreeView::OnCommand(nCommandId, nControlId, hWndControl, plResult))

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWindow::OnCommand
  00021	85 c0		 test	 eax, eax
  00023	74 07		 je	 SHORT $L53030

; 2195 :     {
; 2196 :         return TRUE;

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	eb 36		 jmp	 SHORT $L53028
$L53030:

; 2197 :     }
; 2198 : 
; 2199 :     if(!(pItem = (CMainProjectTreeItem *)GetSelection()))

  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]
  0003a	89 45 fc	 mov	 DWORD PTR _pItem$[ebp], eax
  0003d	83 7d fc 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  00041	75 04		 jne	 SHORT $L53032

; 2200 :     {
; 2201 :         return FALSE;

  00043	33 c0		 xor	 eax, eax
  00045	eb 1b		 jmp	 SHORT $L53028
$L53032:

; 2202 :     }
; 2203 : 
; 2204 :     return pItem->OnCommand(nCommandId, nControlId, hWndControl, plResult);

  00047	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00052	52		 push	 edx
  00053	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00056	50		 push	 eax
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  0005f	ff 52 2c	 call	 DWORD PTR [edx+44]
$L53028:

; 2205 : }

  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CMainProjectTree@@UAEHIIPAUHWND__@@PAJ@Z ENDP ; CMainProjectTree::OnCommand
_TEXT	ENDS
PUBLIC	??0CMainProjectTreeItem@@QAE@XZ			; CMainProjectTreeItem::CMainProjectTreeItem
PUBLIC	?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z ; CMainProjectTreeItem::Create
PUBLIC	?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z ; CMainProjectTreeItem::OnCommand
PUBLIC	??_7CMainProjectTreeItem@@6B@			; CMainProjectTreeItem::`vftable'
PUBLIC	??_GCMainProjectTreeItem@@UAEPAXI@Z		; CMainProjectTreeItem::`scalar deleting destructor'
PUBLIC	??_ECMainProjectTreeItem@@UAEPAXI@Z		; CMainProjectTreeItem::`vector deleting destructor'
PUBLIC	?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ	; CTreeViewItem::EditLabel
PUBLIC	?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z ; CTreeViewItem::OnContextMenu
PUBLIC	?OnDoubleClick@CTreeViewItem@@UAEXXZ		; CTreeViewItem::OnDoubleClick
PUBLIC	?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z		; CTreeViewItem::OnGetInfoTip
PUBLIC	?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z	; CTreeViewItem::OnEndLabelEdit
EXTRN	??0CTreeViewItem@@QAE@XZ:NEAR			; CTreeViewItem::CTreeViewItem
EXTRN	?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z:NEAR ; CTreeViewItem::Create
EXTRN	?Remove@CTreeViewItem@@UAEXXZ:NEAR		; CTreeViewItem::Remove
EXTRN	?SetText@CTreeViewItem@@UAEXPBD@Z:NEAR		; CTreeViewItem::SetText
EXTRN	?OnDelete@CTreeViewItem@@UAEXXZ:NEAR		; CTreeViewItem::OnDelete
;	COMDAT ??_7CMainProjectTreeItem@@6B@
CONST	SEGMENT
??_7CMainProjectTreeItem@@6B@ DD FLAT:??_ECMainProjectTreeItem@@UAEPAXI@Z ; CMainProjectTreeItem::`vftable'
	DD	FLAT:?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z
	DD	FLAT:?Remove@CTreeViewItem@@UAEXXZ
	DD	FLAT:?SetText@CTreeViewItem@@UAEXPBD@Z
	DD	FLAT:?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
	DD	FLAT:?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDoubleClick@CTreeViewItem@@UAEXXZ
	DD	FLAT:?OnDelete@CTreeViewItem@@UAEXXZ
	DD	FLAT:?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z
	DD	FLAT:?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z
	DD	FLAT:?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z
	DD	FLAT:?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainProjectTreeItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainProjectTreeItem@@QAE@XZ PROC NEAR		; CMainProjectTreeItem::CMainProjectTreeItem, COMDAT
; _this$ = ecx

; 2230 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CTreeViewItem@@QAE@XZ ; CTreeViewItem::CTreeViewItem
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainProjectTreeItem@@6B@ ; CMainProjectTreeItem::`vftable'

; 2231 : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CMainProjectTreeItem@@QAE@XZ ENDP			; CMainProjectTreeItem::CMainProjectTreeItem
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.h
_TEXT	ENDS
;	COMDAT ?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ PROC NEAR	; CTreeViewItem::EditLabel, COMDAT
; _this$ = ecx

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 162  :     return TreeView_EditLabel(m_pTree->m_TreeCtrl.m_hWnd, m_hTreeItem);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	51		 push	 ecx
  0000e	6a 00		 push	 0
  00010	68 0e 11 00 00	 push	 4366			; 0000110eH
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001b	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0001e	51		 push	 ecx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 163  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ ENDP		; CTreeViewItem::EditLabel
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnDoubleClick@CTreeViewItem@@UAEXXZ PROC NEAR		; CTreeViewItem::OnDoubleClick, COMDAT
; _this$ = ecx

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 172  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?OnDoubleClick@CTreeViewItem@@UAEXXZ ENDP		; CTreeViewItem::OnDoubleClick
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CTreeViewItem::OnContextMenu, COMDAT
; _this$ = ecx

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 177  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z ENDP ; CTreeViewItem::OnContextMenu
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z PROC NEAR	; CTreeViewItem::OnGetInfoTip, COMDAT
; _this$ = ecx

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  :     *pszText = 0;

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	c6 00 00	 mov	 BYTE PTR [eax], 0

; 182  : }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z ENDP		; CTreeViewItem::OnGetInfoTip
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4
?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z PROC NEAR	; CTreeViewItem::OnEndLabelEdit, COMDAT
; _this$ = ecx

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 186  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 187  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z ENDP		; CTreeViewItem::OnEndLabelEdit
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CMainProjectTreeItem::OnCommand, COMDAT
; _this$ = ecx

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 129  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 130  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z ENDP ; CMainProjectTreeItem::OnCommand
_TEXT	ENDS
PUBLIC	??1CMainProjectTreeItem@@UAE@XZ			; CMainProjectTreeItem::~CMainProjectTreeItem
; Function compile flags: /Odt
;	COMDAT ??_GCMainProjectTreeItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainProjectTreeItem@@UAEPAXI@Z PROC NEAR		; CMainProjectTreeItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainProjectTreeItem@@UAE@XZ ; CMainProjectTreeItem::~CMainProjectTreeItem
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53040
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53040:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainProjectTreeItem@@UAEPAXI@Z ENDP		; CMainProjectTreeItem::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CTreeViewItem@@UAE@XZ:NEAR			; CTreeViewItem::~CTreeViewItem
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CMainProjectTreeItem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainProjectTreeItem@@UAE@XZ PROC NEAR		; CMainProjectTreeItem::~CMainProjectTreeItem, COMDAT
; _this$ = ecx

; 2256 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainProjectTreeItem@@6B@ ; CMainProjectTreeItem::`vftable'

; 2257 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CTreeViewItem@@UAE@XZ ; CTreeViewItem::~CTreeViewItem
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMainProjectTreeItem@@UAE@XZ ENDP			; CMainProjectTreeItem::~CMainProjectTreeItem
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z
_TEXT	SEGMENT
_pTree$ = 8
_pParentItem$ = 12
_pszText$ = 16
_pszType$ = 20
_pvContext$ = 24
_this$ = -4
?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z PROC NEAR ; CMainProjectTreeItem::Create, COMDAT
; _this$ = ecx

; 2291 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2292 :     return CTreeViewItem::Create(pTree, pParentItem, pszText, pszType, pvContext);

  00007	8b 45 18	 mov	 eax, DWORD PTR _pvContext$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 14	 mov	 ecx, DWORD PTR _pszType$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 10	 mov	 edx, DWORD PTR _pszText$[ebp]
  00012	52		 push	 edx
  00013	8b 45 0c	 mov	 eax, DWORD PTR _pParentItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z ; CTreeViewItem::Create

; 2293 : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 14 00	 ret	 20			; 00000014H
?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z ENDP ; CMainProjectTreeItem::Create
_TEXT	ENDS
PUBLIC	?Create@CMainProjectTreeCategory@@UAEHPAVCMainProjectTree@@II@Z ; CMainProjectTreeCategory::Create
PUBLIC	??_7CMainProjectTreeCategory@@6B@		; CMainProjectTreeCategory::`vftable'
PUBLIC	??_GCMainProjectTreeCategory@@UAEPAXI@Z		; CMainProjectTreeCategory::`scalar deleting destructor'
PUBLIC	??_ECMainProjectTreeCategory@@UAEPAXI@Z		; CMainProjectTreeCategory::`vector deleting destructor'
;	COMDAT ??_7CMainProjectTreeCategory@@6B@
CONST	SEGMENT
??_7CMainProjectTreeCategory@@6B@ DD FLAT:??_ECMainProjectTreeCategory@@UAEPAXI@Z ; CMainProjectTreeCategory::`vftable'
	DD	FLAT:?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z
	DD	FLAT:?Remove@CTreeViewItem@@UAEXXZ
	DD	FLAT:?SetText@CTreeViewItem@@UAEXPBD@Z
	DD	FLAT:?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
	DD	FLAT:?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDoubleClick@CTreeViewItem@@UAEXXZ
	DD	FLAT:?OnDelete@CTreeViewItem@@UAEXXZ
	DD	FLAT:?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z
	DD	FLAT:?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z
	DD	FLAT:?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z
	DD	FLAT:?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?Create@CMainProjectTreeCategory@@UAEHPAVCMainProjectTree@@II@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainProjectTreeCategory@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainProjectTreeCategory@@QAE@XZ PROC NEAR		; CMainProjectTreeCategory::CMainProjectTreeCategory, COMDAT
; _this$ = ecx

; 2318 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CMainProjectTreeItem@@QAE@XZ ; CMainProjectTreeItem::CMainProjectTreeItem
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainProjectTreeCategory@@6B@ ; CMainProjectTreeCategory::`vftable'

; 2319 : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CMainProjectTreeCategory@@QAE@XZ ENDP		; CMainProjectTreeCategory::CMainProjectTreeCategory
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainProjectTreeCategory@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainProjectTreeCategory@@UAEPAXI@Z PROC NEAR	; CMainProjectTreeCategory::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainProjectTreeCategory@@UAE@XZ ; CMainProjectTreeCategory::~CMainProjectTreeCategory
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53060
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53060:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainProjectTreeCategory@@UAEPAXI@Z ENDP		; CMainProjectTreeCategory::`scalar deleting destructor'
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1CMainProjectTreeCategory@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainProjectTreeCategory@@UAE@XZ PROC NEAR		; CMainProjectTreeCategory::~CMainProjectTreeCategory, COMDAT
; _this$ = ecx

; 2344 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainProjectTreeCategory@@6B@ ; CMainProjectTreeCategory::`vftable'

; 2345 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CMainProjectTreeItem@@UAE@XZ ; CMainProjectTreeItem::~CMainProjectTreeItem
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMainProjectTreeCategory@@UAE@XZ ENDP		; CMainProjectTreeCategory::~CMainProjectTreeCategory
_TEXT	ENDS
EXTRN	_FormatStringResource:NEAR
; Function compile flags: /Odt
;	COMDAT ?Create@CMainProjectTreeCategory@@UAEHPAVCMainProjectTree@@II@Z
_TEXT	SEGMENT
_pTree$ = 8
_nStringId$ = 12
_nIconId$ = 16
_this$ = -264
_szName$ = -256
_hIcon$ = -260
?Create@CMainProjectTreeCategory@@UAEHPAVCMainProjectTree@@II@Z PROC NEAR ; CMainProjectTreeCategory::Create, COMDAT
; _this$ = ecx

; 2375 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2376 :     TCHAR                   szName[0x100];
; 2377 :     HICON                   hIcon;
; 2378 : 
; 2379 :     FormatStringResource(szName, NUMELMS(szName), nStringId);

  0000f	8b 45 0c	 mov	 eax, DWORD PTR _nStringId$[ebp]
  00012	50		 push	 eax
  00013	68 00 01 00 00	 push	 256			; 00000100H
  00018	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szName$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 _FormatStringResource
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2380 : 
; 2381 :     hIcon = LoadResourceIconSmall(nIconId);

  00027	8b 55 10	 mov	 edx, DWORD PTR _nIconId$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ; LoadResourceIconSmall
  00030	89 85 fc fe ff
	ff		 mov	 DWORD PTR _hIcon$[ebp], eax

; 2382 : 
; 2383 :     pTree->RegisterType(szName, hIcon);

  00036	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _hIcon$[ebp]
  0003c	50		 push	 eax
  0003d	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szName$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR _pTree$[ebp]
  00047	8b 02		 mov	 eax, DWORD PTR [edx]
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  0004c	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]

; 2384 :     
; 2385 :     return CMainProjectTreeItem::Create(pTree, NULL, szName, szName);

  00052	6a 00		 push	 0
  00054	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szName$[ebp]
  0005a	51		 push	 ecx
  0005b	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szName$[ebp]
  00061	52		 push	 edx
  00062	6a 00		 push	 0
  00064	8b 45 08	 mov	 eax, DWORD PTR _pTree$[ebp]
  00067	50		 push	 eax
  00068	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z ; CMainProjectTreeItem::Create

; 2386 : }

  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 0c 00	 ret	 12			; 0000000cH
?Create@CMainProjectTreeCategory@@UAEHPAVCMainProjectTree@@II@Z ENDP ; CMainProjectTreeCategory::Create
_TEXT	ENDS
PUBLIC	?AddRef@CMainSplitter@@UAGKXZ			; CMainSplitter::AddRef
PUBLIC	?Release@CMainSplitter@@UAGKXZ			; CMainSplitter::Release
PUBLIC	?Create@CMainSplitter@@UAEHXZ			; CMainSplitter::Create
PUBLIC	?HandleMessage@CMainSplitter@@UAEHIIJPAJ@Z	; CMainSplitter::HandleMessage
PUBLIC	?OnMouseButtonDown@CMainSplitter@@UAEHKHHPAJ@Z	; CMainSplitter::OnMouseButtonDown
PUBLIC	?OnMouseButtonUp@CMainSplitter@@UAEHKHHPAJ@Z	; CMainSplitter::OnMouseButtonUp
PUBLIC	?OnMouseMove@CMainSplitter@@UAEHKHHPAJ@Z	; CMainSplitter::OnMouseMove
PUBLIC	?OnDestroy@CMainSplitter@@UAEHPAJ@Z		; CMainSplitter::OnDestroy
PUBLIC	??_7CMainSplitter@@6B@				; CMainSplitter::`vftable'
PUBLIC	??_GCMainSplitter@@UAEPAXI@Z			; CMainSplitter::`scalar deleting destructor'
PUBLIC	??_ECMainSplitter@@UAEPAXI@Z			; CMainSplitter::`vector deleting destructor'
;	COMDAT ??_7CMainSplitter@@6B@
CONST	SEGMENT
??_7CMainSplitter@@6B@ DD FLAT:??_ECMainSplitter@@UAEPAXI@Z ; CMainSplitter::`vftable'
	DD	FLAT:?AddRef@CMainSplitter@@UAGKXZ
	DD	FLAT:?Release@CMainSplitter@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CMainSplitter@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CMainSplitter@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CMainSplitter@@UAEHXZ
	DD	FLAT:?OnMouseButtonDown@CMainSplitter@@UAEHKHHPAJ@Z
	DD	FLAT:?OnMouseButtonUp@CMainSplitter@@UAEHKHHPAJ@Z
	DD	FLAT:?OnMouseMove@CMainSplitter@@UAEHKHHPAJ@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainSplitter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainSplitter@@QAE@XZ PROC NEAR			; CMainSplitter::CMainSplitter, COMDAT
; _this$ = ecx

; 2411 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a ff		 push	 -1
  0000b	6a ff		 push	 -1
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ??0CWindow@@QAE@III@Z	; CWindow::CWindow
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainSplitter@@6B@ ; CMainSplitter::`vftable'

; 2412 :     m_nPosition = 250;

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	c7 41 30 fa 00
	00 00		 mov	 DWORD PTR [ecx+48], 250	; 000000faH

; 2413 :     m_fDragging = FALSE;

  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	c7 42 34 00 00
	00 00		 mov	 DWORD PTR [edx+52], 0

; 2414 : }

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0CMainSplitter@@QAE@XZ ENDP				; CMainSplitter::CMainSplitter
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?AddRef@CMainSplitter@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CMainSplitter@@UAGKXZ PROC NEAR			; CMainSplitter::AddRef, COMDAT

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 224  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 225  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CMainSplitter@@UAGKXZ ENDP			; CMainSplitter::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CMainSplitter@@UAGKXZ
_TEXT	SEGMENT
?Release@CMainSplitter@@UAGKXZ PROC NEAR		; CMainSplitter::Release, COMDAT

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 230  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CMainSplitter@@UAGKXZ ENDP			; CMainSplitter::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainSplitter@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainSplitter@@UAEPAXI@Z PROC NEAR			; CMainSplitter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainSplitter@@UAE@XZ ; CMainSplitter::~CMainSplitter
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53080
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53080:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainSplitter@@UAEPAXI@Z ENDP			; CMainSplitter::`scalar deleting destructor'
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
_TEXT	ENDS
;	COMDAT ??1CMainSplitter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainSplitter@@UAE@XZ PROC NEAR			; CMainSplitter::~CMainSplitter, COMDAT
; _this$ = ecx

; 2439 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainSplitter@@6B@ ; CMainSplitter::`vftable'

; 2440 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMainSplitter@@UAE@XZ ENDP				; CMainSplitter::~CMainSplitter
_TEXT	ENDS
PUBLIC	??_C@_0BF@BGMP@MainSplitterPosition?$AA@	; `string'
;	COMDAT ??_C@_0BF@BGMP@MainSplitterPosition?$AA@
CONST	SEGMENT
??_C@_0BF@BGMP@MainSplitterPosition?$AA@ DB 'MainSplitterPosition', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CMainSplitter@@UAEHXZ
_TEXT	SEGMENT
_this$ = -52
_wc$ = -48
?Create@CMainSplitter@@UAEHXZ PROC NEAR			; CMainSplitter::Create, COMDAT
; _this$ = ecx

; 2466 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	57		 push	 edi
  00007	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 2467 :     static const DWORD      dwExStyle   = 0;
; 2468 :     static const DWORD      dwStyle     = WS_CHILD | WS_VISIBLE;
; 2469 :     WNDCLASSEX              wc          = { 0 };

  0000a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 0
  00011	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00016	33 c0		 xor	 eax, eax
  00018	8d 7d d4	 lea	 edi, DWORD PTR _wc$[ebp+4]
  0001b	f3 ab		 rep stosd

; 2470 : 
; 2471 :     //
; 2472 :     // Load the splitter position from the registry
; 2473 :     //
; 2474 :     
; 2475 :     g_pApplication->m_Registry.GetNumericValue(REGKEY_SPLITTER_POSITION, &m_nPosition);

  0001d	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 c0 30	 add	 eax, 48			; 00000030H
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@BGMP@MainSplitterPosition?$AA@ ; `string'
  00029	6a 00		 push	 0
  0002b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00031	83 c1 04	 add	 ecx, 4
  00034	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0003a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0003d	ff 50 04	 call	 DWORD PTR [eax+4]

; 2476 : 
; 2477 :     //
; 2478 :     // Register the window class
; 2479 :     //
; 2480 : 
; 2481 :     wc.cbSize = sizeof(wc);

  00040	c7 45 d0 30 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 48	; 00000030H

; 2482 :     wc.hbrBackground = (HBRUSH)(COLOR_3DFACE + 1);

  00047	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR _wc$[ebp+32], 16 ; 00000010H

; 2483 :     wc.lpfnWndProc = WindowProc;

  0004e	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp+8], OFFSET FLAT:?WindowProc@CWindow@@SGJPAUHWND__@@IIJ@Z ; CWindow::WindowProc

; 2484 :     wc.hCursor = LoadCursor(NULL, IDC_SIZEWE);

  00055	68 84 7f 00 00	 push	 32644			; 00007f84H
  0005a	6a 00		 push	 0
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00062	89 45 ec	 mov	 DWORD PTR _wc$[ebp+28], eax

; 2485 :     wc.hInstance = g_hInstance;

  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0006b	89 4d e4	 mov	 DWORD PTR _wc$[ebp+20], ecx

; 2486 :     wc.lpszClassName = m_pszClassName;

  0006e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pszClassName@CMainSplitter@@2QBDB ; CMainSplitter::m_pszClassName
  00074	89 55 f8	 mov	 DWORD PTR _wc$[ebp+40], edx

; 2487 : 
; 2488 :     RegisterClassEx(&wc);

  00077	8d 45 d0	 lea	 eax, DWORD PTR _wc$[ebp]
  0007a	50		 push	 eax
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassExA@4

; 2489 : 
; 2490 :     //
; 2491 :     // Create the window
; 2492 :     //
; 2493 : 
; 2494 :     return CWindow::Create(&g_pApplication->m_MainFrame, m_pszClassName, NULL, dwExStyle, dwStyle, 0, 0, 0, 0, CMainFrame::IDC_MAIN_SPLITTER);

  00081	6a 00		 push	 0
  00083	6a 03		 push	 3
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	6a 00		 push	 0
  0008b	6a 00		 push	 0
  0008d	68 00 00 00 50	 push	 1342177280		; 50000000H
  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pszClassName@CMainSplitter@@2QBDB ; CMainSplitter::m_pszClassName
  0009c	51		 push	 ecx
  0009d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000a3	83 c2 10	 add	 edx, 16			; 00000010H
  000a6	52		 push	 edx
  000a7	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z ; CWindow::Create

; 2495 : }

  000af	5f		 pop	 edi
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
?Create@CMainSplitter@@UAEHXZ ENDP			; CMainSplitter::Create
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?HandleMessage@CMainSplitter@@UAEHIIJPAJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_plResult$ = 20
_this$ = -8
_fHandled$ = -4
?HandleMessage@CMainSplitter@@UAEHIIJPAJ@Z PROC NEAR	; CMainSplitter::HandleMessage, COMDAT
; _this$ = ecx

; 2524 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2525 :     BOOL                    fHandled;
; 2526 :     
; 2527 :     switch(uMsg)
; 2528 :     {

  00009	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0000f	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  00012	81 e9 00 02 00
	00		 sub	 ecx, 512		; 00000200H
  00018	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  0001b	83 7d f4 08	 cmp	 DWORD PTR -12+[ebp], 8
  0001f	0f 87 a6 00 00
	00		 ja	 $L53132
  00025	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  00028	33 c0		 xor	 eax, eax
  0002a	8a 82 00 00 00
	00		 mov	 al, BYTE PTR $L53866[edx]
  00030	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L53867[eax*4]
$L53111:

; 2529 :         case WM_LBUTTONDOWN:
; 2530 :         case WM_MBUTTONDOWN:
; 2531 :         case WM_RBUTTONDOWN:
; 2532 :             fHandled = OnMouseButtonDown(wParam, (short)LOWORD(lParam), (short)HIWORD(lParam), plResult);

  00037	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  0003e	c1 ea 10	 shr	 edx, 16			; 00000010H
  00041	0f bf c2	 movsx	 eax, dx
  00044	50		 push	 eax
  00045	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00048	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0004e	0f bf d1	 movsx	 edx, cx
  00051	52		 push	 edx
  00052	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  00055	50		 push	 eax
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	ff 92 a4 00 00
	00		 call	 DWORD PTR [edx+164]
  00064	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 2533 :             break;

  00067	eb 7d		 jmp	 SHORT $L53108
$L53118:

; 2534 :         
; 2535 :         case WM_LBUTTONUP:
; 2536 :         case WM_MBUTTONUP:
; 2537 :         case WM_RBUTTONUP:
; 2538 :             fHandled = OnMouseButtonUp(wParam, (short)LOWORD(lParam), (short)HIWORD(lParam), plResult);

  00069	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00070	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00073	0f bf d1	 movsx	 edx, cx
  00076	52		 push	 edx
  00077	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0007a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0007f	0f bf c8	 movsx	 ecx, ax
  00082	51		 push	 ecx
  00083	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00086	52		 push	 edx
  00087	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 10		 mov	 edx, DWORD PTR [eax]
  0008c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]
  00095	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 2539 :             break;

  00098	eb 4c		 jmp	 SHORT $L53108
$L53125:

; 2540 :         
; 2541 :         case WM_MOUSEMOVE:
; 2542 :             fHandled = OnMouseMove(wParam, (short)LOWORD(lParam), (short)HIWORD(lParam), plResult);

  0009a	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  000a1	c1 e9 10	 shr	 ecx, 16			; 00000010H
  000a4	0f bf d1	 movsx	 edx, cx
  000a7	52		 push	 edx
  000a8	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  000ab	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000b0	0f bf c8	 movsx	 ecx, ax
  000b3	51		 push	 ecx
  000b4	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]
  000c6	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 2543 :             break;

  000c9	eb 1b		 jmp	 SHORT $L53108
$L53132:

; 2544 :         
; 2545 :         default:
; 2546 :             fHandled = CWindow::HandleMessage(uMsg, wParam, lParam, plResult);

  000cb	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  000ce	50		 push	 eax
  000cf	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  000d2	51		 push	 ecx
  000d3	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  000d6	52		 push	 edx
  000d7	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  000da	50		 push	 eax
  000db	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	e8 00 00 00 00	 call	 ?HandleMessage@CWindow@@UAEHIIJPAJ@Z ; CWindow::HandleMessage
  000e3	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax
$L53108:

; 2547 :             break;
; 2548 :     }
; 2549 : 
; 2550 :     return fHandled;

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 2551 : }

  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 10 00	 ret	 16			; 00000010H
$L53867:
  000ef	00 00 00 00	 DD	 $L53125
  000f3	00 00 00 00	 DD	 $L53111
  000f7	00 00 00 00	 DD	 $L53118
  000fb	00 00 00 00	 DD	 $L53132
$L53866:
  000ff	00		 DB	 0
  00100	01		 DB	 1
  00101	02		 DB	 2
  00102	03		 DB	 3
  00103	01		 DB	 1
  00104	02		 DB	 2
  00105	03		 DB	 3
  00106	01		 DB	 1
  00107	02		 DB	 2
?HandleMessage@CMainSplitter@@UAEHIIJPAJ@Z ENDP		; CMainSplitter::HandleMessage
_TEXT	ENDS
EXTRN	__imp__SetCapture@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnMouseButtonDown@CMainSplitter@@UAEHKHHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnMouseButtonDown@CMainSplitter@@UAEHKHHPAJ@Z PROC NEAR ; CMainSplitter::OnMouseButtonDown, COMDAT
; _this$ = ecx

; 2580 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2581 :     //
; 2582 :     // Capture the mouse so the user can drag the splitter around
; 2583 :     //
; 2584 : 
; 2585 :     SetCapture(m_hWnd);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCapture@4

; 2586 : 
; 2587 :     m_fDragging = TRUE;

  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	c7 42 34 01 00
	00 00		 mov	 DWORD PTR [edx+52], 1

; 2588 : 
; 2589 :     return FALSE;

  0001e	33 c0		 xor	 eax, eax

; 2590 : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
?OnMouseButtonDown@CMainSplitter@@UAEHKHHPAJ@Z ENDP	; CMainSplitter::OnMouseButtonDown
_TEXT	ENDS
EXTRN	__imp__ReleaseCapture@0:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnMouseButtonUp@CMainSplitter@@UAEHKHHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnMouseButtonUp@CMainSplitter@@UAEHKHHPAJ@Z PROC NEAR	; CMainSplitter::OnMouseButtonUp, COMDAT
; _this$ = ecx

; 2619 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2620 :     //
; 2621 :     // Release the mouse
; 2622 :     //
; 2623 : 
; 2624 :     ReleaseCapture();

  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseCapture@0

; 2625 : 
; 2626 :     m_fDragging = FALSE;

  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], 0

; 2627 : 
; 2628 :     return FALSE;

  00017	33 c0		 xor	 eax, eax

; 2629 : }

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?OnMouseButtonUp@CMainSplitter@@UAEHKHHPAJ@Z ENDP	; CMainSplitter::OnMouseButtonUp
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnMouseMove@CMainSplitter@@UAEHKHHPAJ@Z
_TEXT	SEGMENT
_x$ = 12
_this$ = -4
?OnMouseMove@CMainSplitter@@UAEHKHHPAJ@Z PROC NEAR	; CMainSplitter::OnMouseMove, COMDAT
; _this$ = ecx

; 2658 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2659 :     if(!m_fDragging)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 34 00	 cmp	 DWORD PTR [eax+52], 0
  0000e	75 04		 jne	 SHORT $L53154

; 2660 :     {
; 2661 :         return FALSE;

  00010	33 c0		 xor	 eax, eax
  00012	eb 27		 jmp	 SHORT $L53153
$L53154:

; 2662 :     }
; 2663 : 
; 2664 :     //
; 2665 :     // Update our position
; 2666 :     //
; 2667 : 
; 2668 :     m_nPosition += x;

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0001a	03 55 0c	 add	 edx, DWORD PTR _x$[ebp]
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	89 50 30	 mov	 DWORD PTR [eax+48], edx

; 2669 :     
; 2670 :     //
; 2671 :     // Tell the parent to shuffle controls around
; 2672 :     //
; 2673 : 
; 2674 :     ((CMainFrame *)m_pParent)->LayoutControls();

  00023	6a 01		 push	 1
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00031	8b 12		 mov	 edx, DWORD PTR [edx]
  00033	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 2675 :     
; 2676 :     return FALSE;

  00039	33 c0		 xor	 eax, eax
$L53153:

; 2677 : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?OnMouseMove@CMainSplitter@@UAEHKHHPAJ@Z ENDP		; CMainSplitter::OnMouseMove
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDestroy@CMainSplitter@@UAEHPAJ@Z
_TEXT	SEGMENT
_plResult$ = 8
_this$ = -48
?OnDestroy@CMainSplitter@@UAEHPAJ@Z PROC NEAR		; CMainSplitter::OnDestroy, COMDAT
; _this$ = ecx

; 2703 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 2704 :     WINDOWPLACEMENT         wp;
; 2705 :     
; 2706 :     if(CWindow::OnDestroy(plResult))

  00009	8b 45 08	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?OnDestroy@CWindow@@UAEHPAJ@Z ; CWindow::OnDestroy
  00015	85 c0		 test	 eax, eax
  00017	74 07		 je	 SHORT $L53161

; 2707 :     {
; 2708 :         return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	eb 24		 jmp	 SHORT $L53159
$L53161:

; 2709 :     }
; 2710 : 
; 2711 :     g_pApplication->m_Registry.SetNumericValue(REGKEY_SPLITTER_POSITION, m_nPosition);

  00020	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00026	52		 push	 edx
  00027	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@BGMP@MainSplitterPosition?$AA@ ; `string'
  0002c	6a 00		 push	 0
  0002e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00034	83 c1 04	 add	 ecx, 4
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0003c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0003f	ff 52 08	 call	 DWORD PTR [edx+8]

; 2712 : 
; 2713 :     return FALSE;

  00042	33 c0		 xor	 eax, eax
$L53159:

; 2714 : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?OnDestroy@CMainSplitter@@UAEHPAJ@Z ENDP		; CMainSplitter::OnDestroy
_TEXT	ENDS
PUBLIC	?AddRef@CMainWorkspace@@UAGKXZ			; CMainWorkspace::AddRef
PUBLIC	?Release@CMainWorkspace@@UAGKXZ			; CMainWorkspace::Release
PUBLIC	?Create@CMainWorkspace@@UAEHXZ			; CMainWorkspace::Create
PUBLIC	??_7CMainWorkspace@@6B@				; CMainWorkspace::`vftable'
PUBLIC	??_GCMainWorkspace@@UAEPAXI@Z			; CMainWorkspace::`scalar deleting destructor'
PUBLIC	??_ECMainWorkspace@@UAEPAXI@Z			; CMainWorkspace::`vector deleting destructor'
EXTRN	??0CMDIClientWindow@@QAE@XZ:NEAR		; CMDIClientWindow::CMDIClientWindow
EXTRN	?GetActiveChild@CMDIClientWindow@@UAEHPAPAVCMDIChildWindow@@PAH@Z:NEAR ; CMDIClientWindow::GetActiveChild
EXTRN	?IsActiveChild@CMDIClientWindow@@UAEHPAVCMDIChildWindow@@@Z:NEAR ; CMDIClientWindow::IsActiveChild
EXTRN	?Create@CMDIClientWindow@@MAEHPAVCMDIFrameWindow@@KKHHHHIPBUtagCLIENTCREATESTRUCT@@@Z:NEAR ; CMDIClientWindow::Create
EXTRN	?DispatchMessageA@CMDIClientWindow@@MAEHPAUtagMSG@@@Z:NEAR ; CMDIClientWindow::DispatchMessageA
;	COMDAT ??_7CMainWorkspace@@6B@
CONST	SEGMENT
??_7CMainWorkspace@@6B@ DD FLAT:??_ECMainWorkspace@@UAEPAXI@Z ; CMainWorkspace::`vftable'
	DD	FLAT:?AddRef@CMainWorkspace@@UAGKXZ
	DD	FLAT:?Release@CMainWorkspace@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CMDIClientWindow@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CWindow@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?GetActiveChild@CMDIClientWindow@@UAEHPAPAVCMDIChildWindow@@PAH@Z
	DD	FLAT:?IsActiveChild@CMDIClientWindow@@UAEHPAVCMDIChildWindow@@@Z
	DD	FLAT:?Create@CMDIClientWindow@@MAEHPAVCMDIFrameWindow@@KKHHHHIPBUtagCLIENTCREATESTRUCT@@@Z
	DD	FLAT:?Create@CMainWorkspace@@UAEHXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainWorkspace@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainWorkspace@@QAE@XZ PROC NEAR			; CMainWorkspace::CMainWorkspace, COMDAT
; _this$ = ecx

; 2739 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CMDIClientWindow@@QAE@XZ ; CMDIClientWindow::CMDIClientWindow
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainWorkspace@@6B@ ; CMainWorkspace::`vftable'

; 2740 : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CMainWorkspace@@QAE@XZ ENDP				; CMainWorkspace::CMainWorkspace
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?AddRef@CMainWorkspace@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CMainWorkspace@@UAGKXZ PROC NEAR		; CMainWorkspace::AddRef, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 254  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 255  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CMainWorkspace@@UAGKXZ ENDP			; CMainWorkspace::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CMainWorkspace@@UAGKXZ
_TEXT	SEGMENT
?Release@CMainWorkspace@@UAGKXZ PROC NEAR		; CMainWorkspace::Release, COMDAT

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 259  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 260  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CMainWorkspace@@UAGKXZ ENDP			; CMainWorkspace::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainWorkspace@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainWorkspace@@UAEPAXI@Z PROC NEAR			; CMainWorkspace::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainWorkspace@@UAE@XZ ; CMainWorkspace::~CMainWorkspace
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53169
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53169:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainWorkspace@@UAEPAXI@Z ENDP			; CMainWorkspace::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CMDIClientWindow@@UAE@XZ:NEAR		; CMDIClientWindow::~CMDIClientWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CMainWorkspace@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainWorkspace@@UAE@XZ PROC NEAR			; CMainWorkspace::~CMainWorkspace, COMDAT
; _this$ = ecx

; 2765 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainWorkspace@@6B@ ; CMainWorkspace::`vftable'

; 2766 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CMDIClientWindow@@UAE@XZ ; CMDIClientWindow::~CMDIClientWindow
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMainWorkspace@@UAE@XZ ENDP				; CMainWorkspace::~CMainWorkspace
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Create@CMainWorkspace@@UAEHXZ
_TEXT	SEGMENT
_this$ = -12
_ccs$ = -8
?Create@CMainWorkspace@@UAEHXZ PROC NEAR		; CMainWorkspace::Create, COMDAT
; _this$ = ecx

; 2792 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 2793 :     static const DWORD      dwExStyle   = WS_EX_CLIENTEDGE;
; 2794 :     static const DWORD      dwStyle     = WS_CHILD | WS_VISIBLE | WS_CLIPCHILDREN | WS_VSCROLL | WS_HSCROLL;
; 2795 :     CLIENTCREATESTRUCT      ccs;
; 2796 : 
; 2797 :     //
; 2798 :     // Create the window
; 2799 :     //
; 2800 : 
; 2801 :     ccs.hWindowMenu = GetSubMenu(g_pApplication->m_MainFrame.m_hMenu, g_pApplication->m_MainFrame.MENUPOS_WINDOW);

  00009	6a 04		 push	 4
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00010	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00013	51		 push	 ecx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8
  0001a	89 45 f8	 mov	 DWORD PTR _ccs$[ebp], eax

; 2802 :     ccs.idFirstChild = g_pApplication->m_MainFrame.IDC_MAIN_FIRSTMDICHILD;

  0001d	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR _ccs$[ebp+4], 6

; 2803 : 
; 2804 :     return CMDIClientWindow::Create(&g_pApplication->m_MainFrame, dwExStyle, dwStyle, 0, 0, 0, 0, g_pApplication->m_MainFrame.IDC_MAIN_WORKSPACE, &ccs);

  00024	8d 55 f8	 lea	 edx, DWORD PTR _ccs$[ebp]
  00027	52		 push	 edx
  00028	6a 04		 push	 4
  0002a	6a 00		 push	 0
  0002c	6a 00		 push	 0
  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	68 00 00 30 52	 push	 1378877440		; 52300000H
  00037	68 00 02 00 00	 push	 512			; 00000200H
  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00041	83 c0 10	 add	 eax, 16			; 00000010H
  00044	50		 push	 eax
  00045	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?Create@CMDIClientWindow@@MAEHPAVCMDIFrameWindow@@KKHHHHIPBUtagCLIENTCREATESTRUCT@@@Z ; CMDIClientWindow::Create

; 2805 : }

  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?Create@CMainWorkspace@@UAEHXZ ENDP			; CMainWorkspace::Create
_TEXT	ENDS
PUBLIC	??0CWorkspaceChild@@QAE@I@Z			; CWorkspaceChild::CWorkspaceChild
PUBLIC	?Create@CWorkspaceChild@@UAEHPBDIPAH@Z		; CWorkspaceChild::Create
PUBLIC	?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z		; CWorkspaceChild::OnCreate
PUBLIC	?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z		; CWorkspaceChild::OnDestroy
PUBLIC	??_7CWorkspaceChild@@6B@			; CWorkspaceChild::`vftable'
PUBLIC	??_GCWorkspaceChild@@UAEPAXI@Z			; CWorkspaceChild::`scalar deleting destructor'
PUBLIC	??_ECWorkspaceChild@@UAEPAXI@Z			; CWorkspaceChild::`vector deleting destructor'
PUBLIC	?OnActivate@CMDIChildWindow@@MAEXXZ		; CMDIChildWindow::OnActivate
PUBLIC	?OnDeactivate@CMDIChildWindow@@MAEXXZ		; CMDIChildWindow::OnDeactivate
EXTRN	__purecall:NEAR
EXTRN	??0CMDIChildWindow@@QAE@XZ:NEAR			; CMDIChildWindow::CMDIChildWindow
EXTRN	?Create@CMDIChildWindow@@MAEHPAVCMDIClientWindow@@PBD1KKHHHHPAX@Z:NEAR ; CMDIChildWindow::Create
EXTRN	?HandleMessage@CMDIChildWindow@@MAEHIIJPAJ@Z:NEAR ; CMDIChildWindow::HandleMessage
EXTRN	?OnSize@CMDIChildWindow@@MAEHIIIPAJ@Z:NEAR	; CMDIChildWindow::OnSize
EXTRN	?OnStyleChanged@CMDIChildWindow@@MAEHIPAUtagSTYLESTRUCT@@PAJ@Z:NEAR ; CMDIChildWindow::OnStyleChanged
EXTRN	?OnForceResize@CMDIChildWindow@@MAEHPAJ@Z:NEAR	; CMDIChildWindow::OnForceResize
EXTRN	?OnMdiActivate@CMDIChildWindow@@MAEHPAUHWND__@@0PAJ@Z:NEAR ; CMDIChildWindow::OnMdiActivate
EXTRN	?DefWindowProcA@CMDIChildWindow@@MAEJPAUHWND__@@IIJ@Z:NEAR ; CMDIChildWindow::DefWindowProcA
;	COMDAT ??_7CWorkspaceChild@@6B@
CONST	SEGMENT
??_7CWorkspaceChild@@6B@ DD FLAT:??_ECWorkspaceChild@@UAEPAXI@Z ; CWorkspaceChild::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CMDIChildWindow@@MAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CMDIChildWindow@@MAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CMDIChildWindow@@MAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CMDIChildWindow@@MAEHPAVCMDIClientWindow@@PBD1KKHHHHPAX@Z
	DD	FLAT:?OnStyleChanged@CMDIChildWindow@@MAEHIPAUtagSTYLESTRUCT@@PAJ@Z
	DD	FLAT:?OnForceResize@CMDIChildWindow@@MAEHPAJ@Z
	DD	FLAT:?OnMdiActivate@CMDIChildWindow@@MAEHPAUHWND__@@0PAJ@Z
	DD	FLAT:?OnActivate@CMDIChildWindow@@MAEXXZ
	DD	FLAT:?OnDeactivate@CMDIChildWindow@@MAEXXZ
	DD	FLAT:?Create@CWorkspaceChild@@UAEHPBDIPAH@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWorkspaceChild@@QAE@I@Z
_TEXT	SEGMENT
_nWorkspaceType$ = 8
_this$ = -4
??0CWorkspaceChild@@QAE@I@Z PROC NEAR			; CWorkspaceChild::CWorkspaceChild, COMDAT
; _this$ = ecx

; 2833 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CMDIChildWindow@@QAE@XZ ; CMDIChildWindow::CMDIChildWindow
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _nWorkspaceType$[ebp]
  00015	89 48 30	 mov	 DWORD PTR [eax+48], ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CWorkspaceChild@@6B@ ; CWorkspaceChild::`vftable'

; 2834 : }

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
??0CWorkspaceChild@@QAE@I@Z ENDP			; CWorkspaceChild::CWorkspaceChild
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\mdiwrap.h
_TEXT	ENDS
;	COMDAT ?OnActivate@CMDIChildWindow@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CMDIChildWindow@@MAEXXZ PROC NEAR		; CMDIChildWindow::OnActivate, COMDAT
; _this$ = ecx

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 129  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?OnActivate@CMDIChildWindow@@MAEXXZ ENDP		; CMDIChildWindow::OnActivate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDeactivate@CMDIChildWindow@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnDeactivate@CMDIChildWindow@@MAEXXZ PROC NEAR		; CMDIChildWindow::OnDeactivate, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 133  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?OnDeactivate@CMDIChildWindow@@MAEXXZ ENDP		; CMDIChildWindow::OnDeactivate
_TEXT	ENDS
PUBLIC	??1CWorkspaceChild@@UAE@XZ			; CWorkspaceChild::~CWorkspaceChild
; Function compile flags: /Odt
;	COMDAT ??_GCWorkspaceChild@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWorkspaceChild@@UAEPAXI@Z PROC NEAR		; CWorkspaceChild::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWorkspaceChild@@UAE@XZ ; CWorkspaceChild::~CWorkspaceChild
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53190
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53190:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWorkspaceChild@@UAEPAXI@Z ENDP			; CWorkspaceChild::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CMDIChildWindow@@UAE@XZ:NEAR			; CMDIChildWindow::~CMDIChildWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.cpp
;	COMDAT ??1CWorkspaceChild@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWorkspaceChild@@UAE@XZ PROC NEAR			; CWorkspaceChild::~CWorkspaceChild, COMDAT
; _this$ = ecx

; 2859 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWorkspaceChild@@6B@ ; CWorkspaceChild::`vftable'

; 2860 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CMDIChildWindow@@UAE@XZ ; CMDIChildWindow::~CMDIChildWindow
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CWorkspaceChild@@UAE@XZ ENDP				; CWorkspaceChild::~CWorkspaceChild
_TEXT	ENDS
PUBLIC	??_C@_0BI@LGEM@WorkspaceChildPlacement?$AA@	; `string'
;	COMDAT ??_C@_0BI@LGEM@WorkspaceChildPlacement?$AA@
CONST	SEGMENT
??_C@_0BI@LGEM@WorkspaceChildPlacement?$AA@ DB 'WorkspaceChildPlacement', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CWorkspaceChild@@UAEHPBDIPAH@Z
_TEXT	SEGMENT
_pszWindowTitle$ = 8
_nIconId$ = 12
_pfOpened$ = 16
_this$ = -100
_dwStyle$ = -96
_wc$ = -92
_wp$ = -44
?Create@CWorkspaceChild@@UAEHPBDIPAH@Z PROC NEAR	; CWorkspaceChild::Create, COMDAT
; _this$ = ecx

; 2891 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	57		 push	 edi
  00007	89 4d 9c	 mov	 DWORD PTR _this$[ebp], ecx

; 2892 :     static const DWORD      dwExStyle   = 0;
; 2893 :     DWORD                   dwStyle     = WS_CHILD | WS_VISIBLE;

  0000a	c7 45 a0 00 00
	00 50		 mov	 DWORD PTR _dwStyle$[ebp], 1342177280 ; 50000000H

; 2894 :     WNDCLASSEX              wc          = { 0 };

  00011	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 0
  00018	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0001d	33 c0		 xor	 eax, eax
  0001f	8d 7d a8	 lea	 edi, DWORD PTR _wc$[ebp+4]
  00022	f3 ab		 rep stosd

; 2895 :     WINDOWPLACEMENT         wp;
; 2896 : 
; 2897 :     //
; 2898 :     // If the window already exists, just activate it
; 2899 :     //
; 2900 : 
; 2901 :     if(m_hWnd)

  00024	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0002b	74 38		 je	 SHORT $L53206

; 2902 :     {
; 2903 :         if(pfOpened)

  0002d	83 7d 10 00	 cmp	 DWORD PTR _pfOpened$[ebp], 0
  00031	74 09		 je	 SHORT $L53207

; 2904 :         {
; 2905 :             *pfOpened = FALSE;

  00033	8b 4d 10	 mov	 ecx, DWORD PTR _pfOpened$[ebp]
  00036	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L53207:

; 2906 :         }
; 2907 :         
; 2908 :         m_pParent->SendMessage(WM_MDIACTIVATE, (WPARAM)m_hWnd);

  0003c	6a 00		 push	 0
  0003e	8b 55 9c	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00044	50		 push	 eax
  00045	68 22 02 00 00	 push	 546			; 00000222H
  0004a	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00050	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00056	8b 12		 mov	 edx, DWORD PTR [edx]
  00058	ff 52 18	 call	 DWORD PTR [edx+24]

; 2909 : 
; 2910 :         return TRUE;

  0005b	b8 01 00 00 00	 mov	 eax, 1
  00060	e9 d0 00 00 00	 jmp	 $L53200
$L53206:

; 2911 :     }
; 2912 : 
; 2913 :     //
; 2914 :     // Register the window class
; 2915 :     //
; 2916 : 
; 2917 :     wc.cbSize = sizeof(wc);

  00065	c7 45 a4 30 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 48	; 00000030H

; 2918 :     wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);

  0006c	c7 45 c4 06 00
	00 00		 mov	 DWORD PTR _wc$[ebp+32], 6

; 2919 :     wc.lpfnWndProc = WindowProc;

  00073	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp+8], OFFSET FLAT:?WindowProc@CWindow@@SGJPAUHWND__@@IIJ@Z ; CWindow::WindowProc

; 2920 :     wc.hCursor = LoadCursor(NULL, IDC_ARROW);

  0007a	68 00 7f 00 00	 push	 32512			; 00007f00H
  0007f	6a 00		 push	 0
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00087	89 45 c0	 mov	 DWORD PTR _wc$[ebp+28], eax

; 2921 :     wc.hInstance = g_hInstance;

  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  0008f	89 45 b8	 mov	 DWORD PTR _wc$[ebp+20], eax

; 2922 :     wc.lpszClassName = m_pszClassName;

  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pszClassName@CWorkspaceChild@@2QBDB ; CWorkspaceChild::m_pszClassName
  00098	89 4d cc	 mov	 DWORD PTR _wc$[ebp+40], ecx

; 2923 : 
; 2924 :     RegisterClassEx(&wc);

  0009b	8d 55 a4	 lea	 edx, DWORD PTR _wc$[ebp]
  0009e	52		 push	 edx
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassExA@4

; 2925 : 
; 2926 :     //
; 2927 :     // Load window placement data
; 2928 :     //
; 2929 :     
; 2930 :     if(g_pApplication->m_Registry.GetBinaryValue(REGKEY_WORKSPACE_CHILD_PLACEMENT, &wp, sizeof(wp)))

  000a5	6a 2c		 push	 44			; 0000002cH
  000a7	8d 45 d4	 lea	 eax, DWORD PTR _wp$[ebp]
  000aa	50		 push	 eax
  000ab	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@LGEM@WorkspaceChildPlacement?$AA@ ; `string'
  000b0	6a 00		 push	 0
  000b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000b8	83 c1 04	 add	 ecx, 4
  000bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000c1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c4	ff 50 14	 call	 DWORD PTR [eax+20]
  000c7	85 c0		 test	 eax, eax
  000c9	74 12		 je	 SHORT $L53213

; 2931 :     {
; 2932 :         if(SW_MAXIMIZE == wp.showCmd)

  000cb	83 7d dc 03	 cmp	 DWORD PTR _wp$[ebp+8], 3
  000cf	75 0c		 jne	 SHORT $L53215

; 2933 :         {
; 2934 :             dwStyle |= WS_MAXIMIZE;

  000d1	8b 4d a0	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  000d4	81 c9 00 00 00
	01		 or	 ecx, 16777216		; 01000000H
  000da	89 4d a0	 mov	 DWORD PTR _dwStyle$[ebp], ecx
$L53215:
$L53213:

; 2935 :         }
; 2936 :     }
; 2937 : 
; 2938 :     //
; 2939 :     // Create the window
; 2940 :     //
; 2941 : 
; 2942 :     if(!CMDIChildWindow::Create(&g_pApplication->m_MainFrame.m_Workspace, m_pszClassName, pszWindowTitle, dwExStyle, dwStyle, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, (LPVOID)nIconId))

  000dd	8b 55 0c	 mov	 edx, DWORD PTR _nIconId$[ebp]
  000e0	52		 push	 edx
  000e1	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000e6	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000eb	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000f0	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000f5	8b 45 a0	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  000f8	50		 push	 eax
  000f9	6a 00		 push	 0
  000fb	8b 4d 08	 mov	 ecx, DWORD PTR _pszWindowTitle$[ebp]
  000fe	51		 push	 ecx
  000ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pszClassName@CWorkspaceChild@@2QBDB ; CWorkspaceChild::m_pszClassName
  00105	52		 push	 edx
  00106	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0010b	05 60 02 00 00	 add	 eax, 608		; 00000260H
  00110	50		 push	 eax
  00111	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  00114	e8 00 00 00 00	 call	 ?Create@CMDIChildWindow@@MAEHPAVCMDIClientWindow@@PBD1KKHHHHPAX@Z ; CMDIChildWindow::Create
  00119	85 c0		 test	 eax, eax
  0011b	75 04		 jne	 SHORT $L53221

; 2943 :     {
; 2944 :         return FALSE;

  0011d	33 c0		 xor	 eax, eax
  0011f	eb 14		 jmp	 SHORT $L53200
$L53221:

; 2945 :     }
; 2946 : 
; 2947 :     //
; 2948 :     // Return that the window was opened
; 2949 :     //
; 2950 : 
; 2951 :     if(pfOpened)

  00121	83 7d 10 00	 cmp	 DWORD PTR _pfOpened$[ebp], 0
  00125	74 09		 je	 SHORT $L53222

; 2952 :     {
; 2953 :         *pfOpened = TRUE;

  00127	8b 4d 10	 mov	 ecx, DWORD PTR _pfOpened$[ebp]
  0012a	c7 01 01 00 00
	00		 mov	 DWORD PTR [ecx], 1
$L53222:

; 2954 :     }
; 2955 : 
; 2956 :     return TRUE;

  00130	b8 01 00 00 00	 mov	 eax, 1
$L53200:

; 2957 : }

  00135	5f		 pop	 edi
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c2 0c 00	 ret	 12			; 0000000cH
?Create@CWorkspaceChild@@UAEHPBDIPAH@Z ENDP		; CWorkspaceChild::Create
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -8
_nIconId$ = -4
?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z PROC NEAR	; CWorkspaceChild::OnCreate, COMDAT
; _this$ = ecx

; 2985 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2986 :     const int               nIconId = (int)pvContext;

  00009	8b 45 08	 mov	 eax, DWORD PTR _pvContext$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _nIconId$[ebp], eax

; 2987 : 
; 2988 :     if(CMDIChildWindow::OnCreate(pvContext, plResult))

  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR _plResult$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR _pvContext$[ebp]
  00016	52		 push	 edx
  00017	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?OnCreate@CWindow@@UAEHPAXPAJ@Z ; CWindow::OnCreate
  0001f	85 c0		 test	 eax, eax
  00021	74 07		 je	 SHORT $L53230

; 2989 :     {
; 2990 :         return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	eb 3a		 jmp	 SHORT $L53227
$L53230:

; 2991 :     }
; 2992 : 
; 2993 :     //
; 2994 :     // Set the window's icon
; 2995 :     //
; 2996 : 
; 2997 :     SendMessage(WM_SETICON, ICON_BIG, (LPARAM)LoadResourceIconLarge(nIconId));

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _nIconId$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?LoadResourceIconLarge@@YGPAUHICON__@@I@Z ; LoadResourceIconLarge
  00033	50		 push	 eax
  00034	6a 01		 push	 1
  00036	68 80 00 00 00	 push	 128			; 00000080H
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	ff 52 18	 call	 DWORD PTR [edx+24]

; 2998 :     SendMessage(WM_SETICON, ICON_SMALL, (LPARAM)LoadResourceIconSmall(nIconId));

  00046	8b 45 fc	 mov	 eax, DWORD PTR _nIconId$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ; LoadResourceIconSmall
  0004f	50		 push	 eax
  00050	6a 00		 push	 0
  00052	68 80 00 00 00	 push	 128			; 00000080H
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	ff 52 18	 call	 DWORD PTR [edx+24]

; 2999 : 
; 3000 :     return FALSE;

  00062	33 c0		 xor	 eax, eax
$L53227:

; 3001 : }

  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 08 00	 ret	 8
?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z ENDP		; CWorkspaceChild::OnCreate
_TEXT	ENDS
EXTRN	?OnDestroy@CMDIChildWindow@@MAEHPAJ@Z:NEAR	; CMDIChildWindow::OnDestroy
; Function compile flags: /Odt
;	COMDAT ?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z
_TEXT	SEGMENT
_plResult$ = 8
_this$ = -48
_wp$ = -44
?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z PROC NEAR		; CWorkspaceChild::OnDestroy, COMDAT
; _this$ = ecx

; 3027 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 3028 :     WINDOWPLACEMENT         wp;
; 3029 :     
; 3030 :     if(CMDIChildWindow::OnDestroy(plResult))

  00009	8b 45 08	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?OnDestroy@CMDIChildWindow@@MAEHPAJ@Z ; CMDIChildWindow::OnDestroy
  00015	85 c0		 test	 eax, eax
  00017	74 07		 je	 SHORT $L53238

; 3031 :     {
; 3032 :         return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	eb 3c		 jmp	 SHORT $L53236
$L53238:

; 3033 :     }
; 3034 : 
; 3035 :     //
; 3036 :     // Save the window placement data
; 3037 :     //
; 3038 : 
; 3039 :     wp.length = sizeof(wp);

  00020	c7 45 d4 2c 00
	00 00		 mov	 DWORD PTR _wp$[ebp], 44	; 0000002cH

; 3040 :     
; 3041 :     GetWindowPlacement(m_hWnd, &wp);

  00027	8d 4d d4	 lea	 ecx, DWORD PTR _wp$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00031	50		 push	 eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowPlacement@8

; 3042 : 
; 3043 :     g_pApplication->m_Registry.SetBinaryValue(REGKEY_WORKSPACE_CHILD_PLACEMENT, &wp, sizeof(wp));

  00038	6a 2c		 push	 44			; 0000002cH
  0003a	8d 4d d4	 lea	 ecx, DWORD PTR _wp$[ebp]
  0003d	51		 push	 ecx
  0003e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@LGEM@WorkspaceChildPlacement?$AA@ ; `string'
  00043	6a 00		 push	 0
  00045	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0004b	83 c1 04	 add	 ecx, 4
  0004e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00054	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00057	ff 50 18	 call	 DWORD PTR [eax+24]

; 3044 : 
; 3045 :     return FALSE;

  0005a	33 c0		 xor	 eax, eax
$L53236:

; 3046 : }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z ENDP		; CWorkspaceChild::OnDestroy
_TEXT	ENDS
END
