; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@CLP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GHLG@hdc?5?$DN?$DN?5m_hdc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@EKAA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@EMEK@CGuiWaveBankProject?$CI?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DP@KMJI@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@OMCJ@Wave?5Bundler?5Project?5Files?5?$CI?$CK?4xw@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03FMPL@xwp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02LEGB@?4h?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02IGCE@?5?$CK?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CC@MAFP@?$CBIS_VALID_HANDLE_VALUE?$CIm_hThread@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginWaitCursor@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndWaitCursor@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CDialog@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CDialog@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RestoreObject@CTempSelectObject@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetResolution@CWaveformRenderer@@UAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBankCallback@@UAEHPAVCWaveBankProject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBankCallback@@UAEXPAVCWaveBankProject@@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseBank@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenHeader@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseHeader@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBankCallback@@UAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?New@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CProject@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reopen@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsDirty@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeDirty@CProject@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeDirty@CProject@@MAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CancelBuild@CProject@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBuildCancellation@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BuildThreadProc@CProject@@CGKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CProject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CProject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?New@CProject@@MAEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CProject@@MAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reopen@CProject@@MAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankProjectFile@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Save@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SaveAs@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reset@CProject@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddWaveBank@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckDirty@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateAppTitle@CProject@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableAppTitleUpdates@CProject@@UAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Build@CProject@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BuildThread@CProject@@EAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CProjectBuildDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProjectBuildDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CProjectBuildDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HandleMessage@CProjectBuildDialog@@UAEHIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CProjectBuildDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnBuildDone@CProjectBuildDialog@@UAEHJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdCancel@CProjectBuildDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBundlerBuildDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWaveBundlerBuildDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankCallback@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWaveBundlerBuildDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankProject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankProject@@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBundlerBuildDialog@@MAEHPAVCWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CWaveBankCallback@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CProjectBuildDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CProject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveBundlerBuildDialog@@6BCWaveBankCallback@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveBankProjectFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveBundlerBuildDialog@@6BCDialog@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0DO@OMCJ@Wave?5Bundler?5Project?5Files?5?$CI?$CK?4xw@ ; `string'
PUBLIC	??_C@_03FMPL@xwp?$AA@				; `string'
;	COMDAT ??_C@_0DO@OMCJ@Wave?5Bundler?5Project?5Files?5?$CI?$CK?4xw@
CONST	SEGMENT
??_C@_0DO@OMCJ@Wave?5Bundler?5Project?5Files?5?$CI?$CK?4xw@ DB 'Wave Bund'
	DB	'ler Project Files (*.xwp)', 00H, '*.xwp', 00H, 'All Files (*.'
	DB	'*)', 00H, '*.*', 00H, 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?pszFilter@?1??Open@CProject@@MAEHPBDH@Z@4QBDB DD FLAT:??_C@_0DO@OMCJ@Wave?5Bundler?5Project?5Files?5?$CI?$CK?4xw@ ; `CProject::Open'::`2'::pszFilter
CONST	ENDS
;	COMDAT ??_C@_03FMPL@xwp?$AA@
CONST	SEGMENT
??_C@_03FMPL@xwp?$AA@ DB 'xwp', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?pszDefExt@?1??Open@CProject@@MAEHPBDH@Z@4QBDB DD FLAT:??_C@_03FMPL@xwp?$AA@ ; `CProject::Open'::`2'::pszDefExt
?dwOfnFlags@?1??Open@CProject@@MAEHPBDH@Z@4KB DD 0881a04H ; `CProject::Open'::`2'::dwOfnFlags
?pszFilter@?1??SaveAs@CProject@@UAEHXZ@4QBDB DD FLAT:??_C@_0DO@OMCJ@Wave?5Bundler?5Project?5Files?5?$CI?$CK?4xw@ ; `CProject::SaveAs'::`2'::pszFilter
?pszDefExt@?1??SaveAs@CProject@@UAEHXZ@4QBDB DD FLAT:??_C@_03FMPL@xwp?$AA@ ; `CProject::SaveAs'::`2'::pszDefExt
?dwOfnFlags@?1??SaveAs@CProject@@UAEHXZ@4KB DD 0880a04H	; `CProject::SaveAs'::`2'::dwOfnFlags
CONST	ENDS
PUBLIC	??0CProjectBuildDialog@@QAE@XZ			; CProjectBuildDialog::CProjectBuildDialog
PUBLIC	??0CProject@@QAE@XZ				; CProject::CProject
PUBLIC	?New@CProject@@UAEHXZ				; CProject::New
PUBLIC	?Open@CProject@@UAEHPBD@Z			; CProject::Open
PUBLIC	?Reopen@CProject@@UAEHXZ			; CProject::Reopen
PUBLIC	?Save@CProject@@UAEHXZ				; CProject::Save
PUBLIC	?SaveAs@CProject@@UAEHXZ			; CProject::SaveAs
PUBLIC	?Build@CProject@@UAEHXZ				; CProject::Build
PUBLIC	?AddWaveBank@CProject@@UAEHXZ			; CProject::AddWaveBank
PUBLIC	?IsDirty@CProject@@UAEHXZ			; CProject::IsDirty
PUBLIC	?MakeDirty@CProject@@UAEXXZ			; CProject::MakeDirty
PUBLIC	?CheckDirty@CProject@@UAEHXZ			; CProject::CheckDirty
PUBLIC	?CancelBuild@CProject@@UAEXXZ			; CProject::CancelBuild
PUBLIC	?CheckBuildCancellation@CProject@@UAEHXZ	; CProject::CheckBuildCancellation
PUBLIC	?EnableAppTitleUpdates@CProject@@UAEHH@Z	; CProject::EnableAppTitleUpdates
PUBLIC	?UpdateAppTitle@CProject@@UAEXXZ		; CProject::UpdateAppTitle
PUBLIC	?New@CProject@@MAEHHH@Z				; CProject::New
PUBLIC	?Open@CProject@@MAEHPBDH@Z			; CProject::Open
PUBLIC	?Reopen@CProject@@MAEHH@Z			; CProject::Reopen
PUBLIC	?MakeDirty@CProject@@MAEXH@Z			; CProject::MakeDirty
PUBLIC	?Reset@CProject@@MAEXXZ				; CProject::Reset
PUBLIC	?BuildThread@CProject@@EAEKXZ			; CProject::BuildThread
PUBLIC	??_7CProject@@6B@				; CProject::`vftable'
PUBLIC	??_GCProject@@UAEPAXI@Z				; CProject::`scalar deleting destructor'
PUBLIC	??_ECProject@@UAEPAXI@Z				; CProject::`vector deleting destructor'
EXTRN	__imp__CreateEventA@16:NEAR
;	COMDAT ??_7CProject@@6B@
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
CONST	SEGMENT
??_7CProject@@6B@ DD FLAT:??_ECProject@@UAEPAXI@Z	; CProject::`vftable'
	DD	FLAT:?New@CProject@@MAEHHH@Z
	DD	FLAT:?New@CProject@@UAEHXZ
	DD	FLAT:?Open@CProject@@MAEHPBDH@Z
	DD	FLAT:?Open@CProject@@UAEHPBD@Z
	DD	FLAT:?Reopen@CProject@@MAEHH@Z
	DD	FLAT:?Reopen@CProject@@UAEHXZ
	DD	FLAT:?Save@CProject@@UAEHXZ
	DD	FLAT:?SaveAs@CProject@@UAEHXZ
	DD	FLAT:?Build@CProject@@UAEHXZ
	DD	FLAT:?AddWaveBank@CProject@@UAEHXZ
	DD	FLAT:?IsDirty@CProject@@UAEHXZ
	DD	FLAT:?MakeDirty@CProject@@MAEXH@Z
	DD	FLAT:?MakeDirty@CProject@@UAEXXZ
	DD	FLAT:?CheckDirty@CProject@@UAEHXZ
	DD	FLAT:?CancelBuild@CProject@@UAEXXZ
	DD	FLAT:?CheckBuildCancellation@CProject@@UAEHXZ
	DD	FLAT:?EnableAppTitleUpdates@CProject@@UAEHH@Z
	DD	FLAT:?UpdateAppTitle@CProject@@UAEXXZ
	DD	FLAT:?Reset@CProject@@MAEXXZ
	DD	FLAT:?BuildThread@CProject@@EAEKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CProject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CProject@@QAE@XZ PROC NEAR				; CProject::CProject, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	81 c1 18 01 00
	00		 add	 ecx, 280		; 00000118H
  00010	e8 00 00 00 00	 call	 ??0CProjectBuildDialog@@QAE@XZ ; CProjectBuildDialog::CProjectBuildDialog
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CProject@@6B@ ; CProject::`vftable'

; 41   :     m_hBuildEvent = CreateEvent(NULL, TRUE, FALSE, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	6a 01		 push	 1
  00024	6a 00		 push	 0
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	89 81 10 01 00
	00		 mov	 DWORD PTR [ecx+272], eax

; 42   :     m_fUpdateAppTitle = TRUE;

  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 82 84 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edx+388], 1

; 43   : }

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??0CProject@@QAE@XZ ENDP				; CProject::CProject
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.h
_TEXT	ENDS
;	COMDAT ?New@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?New@CProject@@UAEHXZ PROC NEAR				; CProject::New, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 150  :     return New(TRUE, TRUE);

  00007	6a 01		 push	 1
  00009	6a 01		 push	 1
  0000b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000e	8b 10		 mov	 edx, DWORD PTR [eax]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	ff 52 04	 call	 DWORD PTR [edx+4]

; 151  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?New@CProject@@UAEHXZ ENDP				; CProject::New
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Open@CProject@@UAEHPBD@Z
_TEXT	SEGMENT
_pszProjectFile$ = 8
_this$ = -4
?Open@CProject@@UAEHPBD@Z PROC NEAR			; CProject::Open, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 155  :     return Open(pszProjectFile, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszProjectFile$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 52 0c	 call	 DWORD PTR [edx+12]

; 156  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?Open@CProject@@UAEHPBD@Z ENDP				; CProject::Open
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Reopen@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?Reopen@CProject@@UAEHXZ PROC NEAR			; CProject::Reopen, COMDAT
; _this$ = ecx

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 160  :     return Reopen(TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 10		 mov	 edx, DWORD PTR [eax]
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	ff 52 14	 call	 DWORD PTR [edx+20]

; 161  : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?Reopen@CProject@@UAEHXZ ENDP				; CProject::Reopen
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?IsDirty@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsDirty@CProject@@UAEHXZ PROC NEAR			; CProject::IsDirty, COMDAT
; _this$ = ecx

; 164  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 165  :     return m_fDirty;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 0c 01 00
	00		 mov	 eax, DWORD PTR [eax+268]

; 166  : }

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?IsDirty@CProject@@UAEHXZ ENDP				; CProject::IsDirty
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MakeDirty@CProject@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?MakeDirty@CProject@@UAEXXZ PROC NEAR			; CProject::MakeDirty, COMDAT
; _this$ = ecx

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 170  :     MakeDirty(TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 10		 mov	 edx, DWORD PTR [eax]
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	ff 52 30	 call	 DWORD PTR [edx+48]

; 171  : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?MakeDirty@CProject@@UAEXXZ ENDP			; CProject::MakeDirty
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MakeDirty@CProject@@MAEXH@Z
_TEXT	SEGMENT
_fDirty$ = 8
_this$ = -4
?MakeDirty@CProject@@MAEXH@Z PROC NEAR			; CProject::MakeDirty, COMDAT
; _this$ = ecx

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  :     m_fDirty = fDirty;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _fDirty$[ebp]
  0000d	89 88 0c 01 00
	00		 mov	 DWORD PTR [eax+268], ecx

; 176  :     UpdateAppTitle();

  00013	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00016	8b 02		 mov	 eax, DWORD PTR [edx]
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	ff 50 48	 call	 DWORD PTR [eax+72]

; 177  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?MakeDirty@CProject@@MAEXH@Z ENDP			; CProject::MakeDirty
_TEXT	ENDS
EXTRN	__imp__ResetEvent@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?CancelBuild@CProject@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?CancelBuild@CProject@@UAEXXZ PROC NEAR			; CProject::CancelBuild, COMDAT
; _this$ = ecx

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  :     ResetEvent(m_hBuildEvent);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  00010	51		 push	 ecx
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ResetEvent@4

; 182  : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?CancelBuild@CProject@@UAEXXZ ENDP			; CProject::CancelBuild
_TEXT	ENDS
EXTRN	__imp__WaitForSingleObject@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?CheckBuildCancellation@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?CheckBuildCancellation@CProject@@UAEHXZ PROC NEAR	; CProject::CheckBuildCancellation, COMDAT
; _this$ = ecx

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 186  :     return WAIT_TIMEOUT == WaitForSingleObject(m_hBuildEvent, 0);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  00012	51		 push	 ecx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00019	33 d2		 xor	 edx, edx
  0001b	3d 02 01 00 00	 cmp	 eax, 258		; 00000102H
  00020	0f 94 c2	 sete	 dl
  00023	8b c2		 mov	 eax, edx

; 187  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?CheckBuildCancellation@CProject@@UAEHXZ ENDP		; CProject::CheckBuildCancellation
_TEXT	ENDS
PUBLIC	??1CProject@@UAE@XZ				; CProject::~CProject
; Function compile flags: /Odt
;	COMDAT ??_GCProject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCProject@@UAEPAXI@Z PROC NEAR			; CProject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CProject@@UAE@XZ	; CProject::~CProject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53185
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53185:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCProject@@UAEPAXI@Z ENDP				; CProject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??1CProjectBuildDialog@@UAE@XZ			; CProjectBuildDialog::~CProjectBuildDialog
EXTRN	__imp__CloseHandle@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
;	COMDAT ??1CProject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CProject@@UAE@XZ PROC NEAR				; CProject::~CProject, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CProject@@6B@ ; CProject::`vftable'

; 69   :     //
; 70   :     // Free owned objects
; 71   :     //
; 72   :     
; 73   :     Reset();

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Reset@CProject@@MAEXXZ	; CProject::Reset

; 74   : 
; 75   :     //
; 76   :     // Free resources
; 77   :     //
; 78   : 
; 79   :     CLOSE_HANDLE(m_hBuildEvent);

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 b9 10 01 00
	00 00		 cmp	 DWORD PTR [ecx+272], 0
  00022	74 29		 je	 SHORT $L53191
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	83 ba 10 01 00
	00 ff		 cmp	 DWORD PTR [edx+272], -1
  0002e	74 1d		 je	 SHORT $L53191
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  00039	51		 push	 ecx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	c7 82 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+272], 0
$L53191:

; 80   : }

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	81 c1 18 01 00
	00		 add	 ecx, 280		; 00000118H
  00056	e8 00 00 00 00	 call	 ??1CProjectBuildDialog@@UAE@XZ ; CProjectBuildDialog::~CProjectBuildDialog
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??1CProject@@UAE@XZ ENDP				; CProject::~CProject
_TEXT	ENDS
PUBLIC	??_C@_0BG@EMEK@CGuiWaveBankProject?$CI?$CJ?$AA@	; `string'
PUBLIC	??_C@_0DP@KMJI@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
EXTRN	?g_pApplication@@3PAVCApplication@@A:DWORD	; g_pApplication
EXTRN	??0CGuiWaveBankProject@@QAE@XZ:NEAR		; CGuiWaveBankProject::CGuiWaveBankProject
;	COMDAT ??_C@_0BG@EMEK@CGuiWaveBankProject?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BG@EMEK@CGuiWaveBankProject?$CI?$CJ?$AA@ DB 'CGuiWaveBankProject()'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KMJI@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DP@KMJI@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\main\project.cpp', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?New@CProject@@MAEHHH@Z
_TEXT	SEGMENT
_fResetFilePath$ = 8
_fConfirm$ = 12
_this$ = -12
_fSuccess$ = -4
$T53654 = -8
?New@CProject@@MAEHHH@Z PROC NEAR			; CProject::New, COMDAT
; _this$ = ecx

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 109  :     BOOL                    fSuccess;
; 110  : 
; 111  :     //
; 112  :     // Prompt to save
; 113  :     //
; 114  : 
; 115  :     if(fConfirm)

  00009	83 7d 0c 00	 cmp	 DWORD PTR _fConfirm$[ebp], 0
  0000d	74 16		 je	 SHORT $L53198

; 116  :     {
; 117  :         if(!CheckDirty())

  0000f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	ff 52 38	 call	 DWORD PTR [edx+56]
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $L53199

; 118  :         {
; 119  :             return FALSE;

  0001e	33 c0		 xor	 eax, eax
  00020	e9 94 00 00 00	 jmp	 $L53196
$L53199:
$L53198:

; 120  :         }
; 121  :     }
; 122  : 
; 123  :     //
; 124  :     // Free any current project data
; 125  :     //
; 126  :     
; 127  :     Reset();

  00025	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 10		 mov	 edx, DWORD PTR [eax]
  0002a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	ff 52 4c	 call	 DWORD PTR [edx+76]

; 128  : 
; 129  :     //
; 130  :     // Reset the file path
; 131  :     //
; 132  : 
; 133  :     if(fResetFilePath)

  00030	83 7d 08 00	 cmp	 DWORD PTR _fResetFilePath$[ebp], 0
  00034	74 07		 je	 SHORT $L53200

; 134  :     {
; 135  :         m_szProjectFile[0] = 0;

  00036	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00039	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
$L53200:

; 136  :     }
; 137  : 
; 138  :     //
; 139  :     // Create child objects
; 140  :     //
; 141  : 
; 142  :     fSuccess = MAKEBOOL(m_pWaveBankProject = NEW(CGuiWaveBankProject()));

  0003d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@EMEK@CGuiWaveBankProject?$CI?$CJ?$AA@ ; `string'
  00042	68 8e 00 00 00	 push	 142			; 0000008eH
  00047	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@KMJI@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0004c	6a 14		 push	 20			; 00000014H
  0004e	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00053	83 c4 10	 add	 esp, 16			; 00000010H
  00056	89 45 f8	 mov	 DWORD PTR $T53654[ebp], eax
  00059	83 7d f8 00	 cmp	 DWORD PTR $T53654[ebp], 0
  0005d	74 0d		 je	 SHORT $L53655
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR $T53654[ebp]
  00062	e8 00 00 00 00	 call	 ??0CGuiWaveBankProject@@QAE@XZ ; CGuiWaveBankProject::CGuiWaveBankProject
  00067	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  0006a	eb 07		 jmp	 SHORT $L53656
$L53655:
  0006c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L53656:
  00073	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  00079	89 91 08 01 00
	00		 mov	 DWORD PTR [ecx+264], edx
  0007f	33 c0		 xor	 eax, eax
  00081	83 7d f0 00	 cmp	 DWORD PTR -16+[ebp], 0
  00085	0f 95 c0	 setne	 al
  00088	89 45 fc	 mov	 DWORD PTR _fSuccess$[ebp], eax

; 143  : 
; 144  :     //
; 145  :     // Clear the dirty flag
; 146  :     //
; 147  : 
; 148  :     MakeDirty(FALSE);

  0008b	6a 00		 push	 0
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 11		 mov	 edx, DWORD PTR [ecx]
  00092	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	ff 52 30	 call	 DWORD PTR [edx+48]

; 149  : 
; 150  :     //
; 151  :     // Disable the "reload" command
; 152  :     //
; 153  : 
; 154  :     g_pApplication->m_MainFrame.EnableCommand(ID_RELOAD_PROJECT, FALSE);

  00098	6a 00		 push	 0
  0009a	68 54 9c 00 00	 push	 40020			; 00009c54H
  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000a5	83 c1 10	 add	 ecx, 16			; 00000010H
  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000ad	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000b0	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]

; 155  : 
; 156  :     return fSuccess;

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _fSuccess$[ebp]
$L53196:

; 157  : }

  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
?New@CProject@@MAEHHH@Z ENDP				; CProject::New
_TEXT	ENDS
EXTRN	?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolAlloc
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT
_cbBuffer$ = 8
_pszFile$ = 12
_nLine$ = 16
_pszClass$ = 20
??2@YAPAXIPBDK0@Z PROC NEAR				; operator new, COMDAT

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 233  :     return DirectSound::CMemoryManager::TrackingMemAlloc(pszFile, nLine, pszClass, DSOUND_OBJECT_POOL_TAG, cbBuffer, TRUE); 

  00003	6a 01		 push	 1
  00005	8b 45 08	 mov	 eax, DWORD PTR _cbBuffer$[ebp]
  00008	50		 push	 eax
  00009	68 44 53 6f 62	 push	 1651462980		; 626f5344H
  0000e	8b 4d 14	 mov	 ecx, DWORD PTR _pszClass$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 10	 mov	 edx, DWORD PTR _nLine$[ebp]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc

; 234  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??2@YAPAXIPBDK0@Z ENDP					; operator new
_TEXT	ENDS
EXTRN	_FormatStringResourceStatic:NEAR
EXTRN	_strcpy:NEAR
EXTRN	__stricmp:NEAR
EXTRN	_GetOpenFileNameA@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
;	COMDAT ?Open@CProject@@MAEHPBDH@Z
_TEXT	SEGMENT
_pszProjectFile$ = 8
_fConfirm$ = 12
_this$ = -92
_ofn$ = -88
?Open@CProject@@MAEHPBDH@Z PROC NEAR			; CProject::Open, COMDAT
; _this$ = ecx

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	57		 push	 edi
  00007	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx

; 186  :     static const LPCTSTR    pszFilter       = MAKE_COMMDLG_FILTER(TEXT("Wave Bundler Project"), TEXT("*.") WBWRITER_FILEEXTENSION_PROJECT) \
; 187  :                                               MAKE_COMMDLG_FILTER(TEXT("All"), TEXT("*.*"));
; 188  : 
; 189  :     static const LPCTSTR    pszDefExt       = WBWRITER_FILEEXTENSION_PROJECT;
; 190  :     static const DWORD      dwOfnFlags      = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_FILEMUSTEXIST | OFN_PATHMUSTEXIST | OFN_ALLOWMULTISELECT;
; 191  :     OPENFILENAME            ofn             = { 0 };

  0000a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 0
  00011	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00016	33 c0		 xor	 eax, eax
  00018	8d 7d ac	 lea	 edi, DWORD PTR _ofn$[ebp+4]
  0001b	f3 ab		 rep stosd

; 192  : 
; 193  :     //
; 194  :     // Don't reopen the same project.  If you want to reload it, call Reopen.
; 195  :     //
; 196  : 
; 197  :     if(pszProjectFile)

  0001d	83 7d 08 00	 cmp	 DWORD PTR _pszProjectFile$[ebp], 0
  00021	74 21		 je	 SHORT $L53219

; 198  :     {
; 199  :         if(!_tcsicmp(pszProjectFile, m_szProjectFile))

  00023	8b 45 a4	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _pszProjectFile$[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 __stricmp
  00033	83 c4 08	 add	 esp, 8
  00036	85 c0		 test	 eax, eax
  00038	75 0a		 jne	 SHORT $L53220

; 200  :         {
; 201  :             return TRUE;

  0003a	b8 01 00 00 00	 mov	 eax, 1
  0003f	e9 a8 00 00 00	 jmp	 $L53209
$L53220:
$L53219:

; 202  :         }
; 203  :     }
; 204  : 
; 205  :     //
; 206  :     // Prompt the user to save first
; 207  :     //
; 208  : 
; 209  :     if(fConfirm)

  00044	83 7d 0c 00	 cmp	 DWORD PTR _fConfirm$[ebp], 0
  00048	74 16		 je	 SHORT $L53221

; 210  :     {
; 211  :         if(!CheckDirty())

  0004a	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  0004d	8b 02		 mov	 eax, DWORD PTR [edx]
  0004f	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	ff 50 38	 call	 DWORD PTR [eax+56]
  00055	85 c0		 test	 eax, eax
  00057	75 07		 jne	 SHORT $L53222

; 212  :         {
; 213  :             return FALSE;

  00059	33 c0		 xor	 eax, eax
  0005b	e9 8c 00 00 00	 jmp	 $L53209
$L53222:
$L53221:

; 214  :         }
; 215  :     }
; 216  : 
; 217  :     //
; 218  :     // Get the new project file path
; 219  :     //
; 220  : 
; 221  :     if(pszProjectFile)

  00060	83 7d 08 00	 cmp	 DWORD PTR _pszProjectFile$[ebp], 0
  00064	74 15		 je	 SHORT $L53223

; 222  :     {
; 223  :         _tcscpy(m_szProjectFile, pszProjectFile);

  00066	8b 4d 08	 mov	 ecx, DWORD PTR _pszProjectFile$[ebp]
  00069	51		 push	 ecx
  0006a	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	83 c2 04	 add	 edx, 4
  00070	52		 push	 edx
  00071	e8 00 00 00 00	 call	 _strcpy
  00076	83 c4 08	 add	 esp, 8

; 224  :     }
; 225  :     else

  00079	eb 64		 jmp	 SHORT $L53224
$L53223:

; 226  :     {
; 227  :         ofn.lStructSize = sizeof(ofn);

  0007b	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 228  :         ofn.hwndOwner = g_pApplication->m_MainFrame;

  00082	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00088	83 c1 10	 add	 ecx, 16			; 00000010H
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00090	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00093	ff 52 58	 call	 DWORD PTR [edx+88]
  00096	89 45 ac	 mov	 DWORD PTR _ofn$[ebp+4], eax

; 229  :         ofn.lpstrFilter = pszFilter;

  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszFilter@?1??Open@CProject@@MAEHPBDH@Z@4QBDB
  0009e	89 45 b4	 mov	 DWORD PTR _ofn$[ebp+12], eax

; 230  :         ofn.lpstrFile = m_szProjectFile;

  000a1	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	83 c1 04	 add	 ecx, 4
  000a7	89 4d c4	 mov	 DWORD PTR _ofn$[ebp+28], ecx

; 231  :         ofn.nMaxFile = NUMELMS(m_szProjectFile);

  000aa	c7 45 c8 04 01
	00 00		 mov	 DWORD PTR _ofn$[ebp+32], 260 ; 00000104H

; 232  :         ofn.lpstrTitle = FormatStringResourceStatic(IDS_OPEN_PROJECT);

  000b1	6a 03		 push	 3
  000b3	e8 00 00 00 00	 call	 _FormatStringResourceStatic
  000b8	83 c4 04	 add	 esp, 4
  000bb	89 45 d8	 mov	 DWORD PTR _ofn$[ebp+48], eax

; 233  :         ofn.Flags = dwOfnFlags;

  000be	c7 45 dc 04 1a
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8919556 ; 00881a04H

; 234  :         ofn.lpstrDefExt = pszDefExt;

  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszDefExt@?1??Open@CProject@@MAEHPBDH@Z@4QBDB
  000cb	89 55 e4	 mov	 DWORD PTR _ofn$[ebp+60], edx

; 235  : 
; 236  :         if(!GetOpenFileName(&ofn))

  000ce	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 _GetOpenFileNameA@4
  000d7	85 c0		 test	 eax, eax
  000d9	75 04		 jne	 SHORT $L53225

; 237  :         {
; 238  :             return FALSE;

  000db	33 c0		 xor	 eax, eax
  000dd	eb 0d		 jmp	 SHORT $L53209
$L53225:
$L53224:

; 239  :         }
; 240  :     }
; 241  : 
; 242  :     //
; 243  :     // Now that the file name's set, just call the Reopen method to
; 244  :     // do all the work
; 245  :     //
; 246  : 
; 247  :     return Reopen(FALSE);

  000df	6a 00		 push	 0
  000e1	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e6	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	ff 52 14	 call	 DWORD PTR [edx+20]
$L53209:

; 248  : }

  000ec	5f		 pop	 edi
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c2 08 00	 ret	 8
?Open@CProject@@MAEHPBDH@Z ENDP				; CProject::Open
_TEXT	ENDS
PUBLIC	??0CWaveBankProjectFile@@QAE@XZ			; CWaveBankProjectFile::CWaveBankProjectFile
PUBLIC	?BeginWaitCursor@@YGXXZ				; BeginWaitCursor
PUBLIC	?EndWaitCursor@@YGXXZ				; EndWaitCursor
EXTRN	_MsgBoxResource:NEAR
EXTRN	?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z:NEAR ; CWaveBankProjectFile::Load
; Function compile flags: /Odt
;	COMDAT ?Reopen@CProject@@MAEHH@Z
_TEXT	SEGMENT
_fConfirm$ = 8
_this$ = -284
_WaveBankLoader$ = -272
_fAppTitle$ = -280
_fSuccess$ = -276
?Reopen@CProject@@MAEHH@Z PROC NEAR			; CProject::Reopen, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00009	89 8d e4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 275  :     CWaveBankProjectFile    WaveBankLoader;

  0000f	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _WaveBankLoader$[ebp]
  00015	e8 00 00 00 00	 call	 ??0CWaveBankProjectFile@@QAE@XZ ; CWaveBankProjectFile::CWaveBankProjectFile

; 276  :     BOOL                    fAppTitle;
; 277  :     BOOL                    fSuccess;
; 278  : 
; 279  :     //
; 280  :     // If we don't have a valid project file, bail
; 281  :     //
; 282  : 
; 283  :     if(!m_szProjectFile[0])

  0001a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00020	0f be 48 04	 movsx	 ecx, BYTE PTR [eax+4]
  00024	85 c9		 test	 ecx, ecx
  00026	75 07		 jne	 SHORT $L53233

; 284  :     {
; 285  :         return FALSE;

  00028	33 c0		 xor	 eax, eax
  0002a	e9 41 01 00 00	 jmp	 $L53229
$L53233:

; 286  :     }
; 287  : 
; 288  :     //
; 289  :     // Get confirmation that they want to reload
; 290  :     //
; 291  : 
; 292  :     if(fConfirm)

  0002f	83 7d 08 00	 cmp	 DWORD PTR _fConfirm$[ebp], 0
  00033	74 43		 je	 SHORT $L53234

; 293  :     {
; 294  :         if(IsDirty())

  00035	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00043	ff 50 2c	 call	 DWORD PTR [eax+44]
  00046	85 c0		 test	 eax, eax
  00048	74 2e		 je	 SHORT $L53235

; 295  :         {
; 296  :             if(IDYES != MsgBoxResource(g_pApplication->m_MainFrame, MB_YESNOCANCEL | MB_ICONQUESTION, IDS_CONFIRM_RELOAD))

  0004a	6a 14		 push	 20			; 00000014H
  0004c	6a 23		 push	 35			; 00000023H
  0004e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00054	83 c1 10	 add	 ecx, 16			; 00000010H
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0005d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00060	ff 50 58	 call	 DWORD PTR [eax+88]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _MsgBoxResource
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	83 f8 06	 cmp	 eax, 6
  0006f	74 07		 je	 SHORT $L53236

; 297  :             {
; 298  :                 return FALSE;

  00071	33 c0		 xor	 eax, eax
  00073	e9 f8 00 00 00	 jmp	 $L53229
$L53236:
$L53235:
$L53234:

; 299  :             }
; 300  :         }
; 301  :     }
; 302  : 
; 303  :     //
; 304  :     // Toggle app title updates
; 305  :     //
; 306  : 
; 307  :     fAppTitle = EnableAppTitleUpdates(FALSE);

  00078	6a 00		 push	 0
  0007a	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00080	8b 11		 mov	 edx, DWORD PTR [ecx]
  00082	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00088	ff 52 44	 call	 DWORD PTR [edx+68]
  0008b	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _fAppTitle$[ebp], eax

; 308  : 
; 309  :     //
; 310  :     // Reinitialize the project
; 311  :     //
; 312  : 
; 313  :     if(fSuccess = New(FALSE, FALSE))

  00091	6a 00		 push	 0
  00093	6a 00		 push	 0
  00095	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 10		 mov	 edx, DWORD PTR [eax]
  0009d	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	ff 52 04	 call	 DWORD PTR [edx+4]
  000a6	89 85 ec fe ff
	ff		 mov	 DWORD PTR _fSuccess$[ebp], eax
  000ac	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000b3	0f 84 99 00 00
	00		 je	 $L53237

; 314  :     {
; 315  :         //
; 316  :         // Change the cursor to provide user feedback
; 317  :         //
; 318  : 
; 319  :         BeginWaitCursor();

  000b9	e8 00 00 00 00	 call	 ?BeginWaitCursor@@YGXXZ	; BeginWaitCursor

; 320  : 
; 321  :         //
; 322  :         // Open Wave Bundler stuff
; 323  :         //
; 324  : 
; 325  :         fSuccess = SUCCEEDED(WaveBankLoader.Load(m_pWaveBankProject, m_szProjectFile));

  000be	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	50		 push	 eax
  000c8	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	8b 91 08 01 00
	00		 mov	 edx, DWORD PTR [ecx+264]
  000d4	52		 push	 edx
  000d5	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _WaveBankLoader$[ebp]
  000db	e8 00 00 00 00	 call	 ?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z ; CWaveBankProjectFile::Load
  000e0	33 c9		 xor	 ecx, ecx
  000e2	85 c0		 test	 eax, eax
  000e4	0f 9d c1	 setge	 cl
  000e7	89 8d ec fe ff
	ff		 mov	 DWORD PTR _fSuccess$[ebp], ecx

; 326  : 
; 327  :         //
; 328  :         // Update the application's MRU
; 329  :         //
; 330  : 
; 331  :         if(fSuccess)

  000ed	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000f4	74 26		 je	 SHORT $L53239

; 332  :         {
; 333  :             g_pApplication->m_MRU.AddItem(m_szProjectFile);

  000f6	6a 01		 push	 1
  000f8	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000fe	83 c2 04	 add	 edx, 4
  00101	52		 push	 edx
  00102	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00108	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00113	8b 90 20 04 00
	00		 mov	 edx, DWORD PTR [eax+1056]
  00119	ff 52 0c	 call	 DWORD PTR [edx+12]
$L53239:

; 334  :         }
; 335  : 
; 336  :         //
; 337  :         // Clear the dirty flag.  It gets reset by New, but loading the
; 338  :         // project could indirectly set it back to dirty.
; 339  :         //
; 340  : 
; 341  :         MakeDirty(FALSE);

  0011c	6a 00		 push	 0
  0011e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00124	8b 10		 mov	 edx, DWORD PTR [eax]
  00126	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	ff 52 30	 call	 DWORD PTR [edx+48]

; 342  : 
; 343  :         //
; 344  :         // Enable the "reload" command
; 345  :         //
; 346  : 
; 347  :         g_pApplication->m_MainFrame.EnableCommand(ID_RELOAD_PROJECT, TRUE);

  0012f	6a 01		 push	 1
  00131	68 54 9c 00 00	 push	 40020			; 00009c54H
  00136	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0013c	83 c1 10	 add	 ecx, 16			; 00000010H
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00144	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00147	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]

; 348  : 
; 349  :         //
; 350  :         // Restore the cursor
; 351  :         //
; 352  : 
; 353  :         EndWaitCursor();

  0014d	e8 00 00 00 00	 call	 ?EndWaitCursor@@YGXXZ	; EndWaitCursor
$L53237:

; 354  :     }
; 355  : 
; 356  :     //
; 357  :     // Update the app title
; 358  :     //
; 359  : 
; 360  :     EnableAppTitleUpdates(fAppTitle);

  00152	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _fAppTitle$[ebp]
  00158	50		 push	 eax
  00159	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00161	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00167	ff 52 44	 call	 DWORD PTR [edx+68]

; 361  : 
; 362  :     return fSuccess;

  0016a	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _fSuccess$[ebp]
$L53229:

; 363  : }

  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c2 04 00	 ret	 4
?Reopen@CProject@@MAEHH@Z ENDP				; CProject::Reopen
_TEXT	ENDS
EXTRN	__imp__SetCursor@4:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
;	COMDAT ?BeginWaitCursor@@YGXXZ
_TEXT	SEGMENT
?BeginWaitCursor@@YGXXZ PROC NEAR			; BeginWaitCursor, COMDAT

; 436  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 437  :     SetCursor(LoadCursor(NULL, IDC_WAIT));

  00003	68 02 7f 00 00	 push	 32514			; 00007f02H
  00008	6a 00		 push	 0
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00010	50		 push	 eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 438  : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?BeginWaitCursor@@YGXXZ ENDP				; BeginWaitCursor
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndWaitCursor@@YGXXZ
_TEXT	SEGMENT
?EndWaitCursor@@YGXXZ PROC NEAR				; EndWaitCursor, COMDAT

; 441  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 442  :     SetCursor(LoadCursor(NULL, IDC_ARROW));

  00003	68 00 7f 00 00	 push	 32512			; 00007f00H
  00008	6a 00		 push	 0
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00010	50		 push	 eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 443  : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?EndWaitCursor@@YGXXZ ENDP				; EndWaitCursor
_TEXT	ENDS
PUBLIC	??_7CWaveBankProjectFile@@6B@			; CWaveBankProjectFile::`vftable'
EXTRN	?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z:NEAR ; CWaveBankProjectFile::Save
EXTRN	?LoadBank@CWaveBankProjectFile@@MAEJK@Z:NEAR	; CWaveBankProjectFile::LoadBank
EXTRN	?SaveBank@CWaveBankProjectFile@@MAEJPAVCWaveBank@@K@Z:NEAR ; CWaveBankProjectFile::SaveBank
EXTRN	?LoadEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBank@@K@Z:NEAR ; CWaveBankProjectFile::LoadEntry
EXTRN	?SaveEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBankEntry@@K@Z:NEAR ; CWaveBankProjectFile::SaveEntry
;	COMDAT ??_7CWaveBankProjectFile@@6B@
CONST	SEGMENT
??_7CWaveBankProjectFile@@6B@ DD FLAT:?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z ; CWaveBankProjectFile::`vftable'
	DD	FLAT:?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z
	DD	FLAT:?LoadBank@CWaveBankProjectFile@@MAEJK@Z
	DD	FLAT:?SaveBank@CWaveBankProjectFile@@MAEJPAVCWaveBank@@K@Z
	DD	FLAT:?LoadEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBank@@K@Z
	DD	FLAT:?SaveEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBankEntry@@K@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankProjectFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBankProjectFile@@QAE@XZ PROC NEAR		; CWaveBankProjectFile::CWaveBankProjectFile, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankProjectFile@@6B@ ; CWaveBankProjectFile::`vftable'
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CWaveBankProjectFile@@QAE@XZ ENDP			; CWaveBankProjectFile::CWaveBankProjectFile
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
_TEXT	ENDS
;	COMDAT ?Save@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -280
_fSuccess$ = -276
_WaveBankLoader$ = -272
?Save@CProject@@UAEHXZ PROC NEAR			; CProject::Save, COMDAT
; _this$ = ecx

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	89 8d e8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 390  :     BOOL                    fSuccess        = TRUE;

  0000f	c7 85 ec fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _fSuccess$[ebp], 1

; 391  :     CWaveBankProjectFile    WaveBankLoader;

  00019	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _WaveBankLoader$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0CWaveBankProjectFile@@QAE@XZ ; CWaveBankProjectFile::CWaveBankProjectFile

; 392  : 
; 393  :     //
; 394  :     // If we don't have a valid file path, hand off to the SaveAs method
; 395  :     //
; 396  : 
; 397  :     if(!m_szProjectFile[0])

  00024	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0002a	0f be 48 04	 movsx	 ecx, BYTE PTR [eax+4]
  0002e	85 c9		 test	 ecx, ecx
  00030	75 16		 jne	 SHORT $L53248

; 398  :     {
; 399  :         return SaveAs();

  00032	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00038	8b 02		 mov	 eax, DWORD PTR [edx]
  0003a	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00040	ff 50 20	 call	 DWORD PTR [eax+32]
  00043	e9 80 00 00 00	 jmp	 $L53245
$L53248:

; 400  :     }
; 401  :     
; 402  :     //
; 403  :     // Save Wave Bundler stuff
; 404  :     //
; 405  : 
; 406  :     fSuccess = SUCCEEDED(WaveBankLoader.Save(m_pWaveBankProject, m_szProjectFile));

  00048	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	83 c1 04	 add	 ecx, 4
  00051	51		 push	 ecx
  00052	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00058	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  0005e	50		 push	 eax
  0005f	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _WaveBankLoader$[ebp]
  00065	e8 00 00 00 00	 call	 ?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z ; CWaveBankProjectFile::Save
  0006a	33 c9		 xor	 ecx, ecx
  0006c	85 c0		 test	 eax, eax
  0006e	0f 9d c1	 setge	 cl
  00071	89 8d ec fe ff
	ff		 mov	 DWORD PTR _fSuccess$[ebp], ecx

; 407  : 
; 408  :     //
; 409  :     // Update the application's MRU
; 410  :     //
; 411  : 
; 412  :     if(fSuccess)

  00077	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  0007e	74 26		 je	 SHORT $L53250

; 413  :     {
; 414  :         g_pApplication->m_MRU.AddItem(m_szProjectFile);

  00080	6a 01		 push	 1
  00082	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00088	83 c2 04	 add	 edx, 4
  0008b	52		 push	 edx
  0008c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00092	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0009d	8b 90 20 04 00
	00		 mov	 edx, DWORD PTR [eax+1056]
  000a3	ff 52 0c	 call	 DWORD PTR [edx+12]
$L53250:

; 415  :     }
; 416  : 
; 417  :     //
; 418  :     // Clear the dirty flag
; 419  :     //
; 420  : 
; 421  :     if(fSuccess)

  000a6	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000ad	74 13		 je	 SHORT $L53251

; 422  :     {
; 423  :         MakeDirty(FALSE);

  000af	6a 00		 push	 0
  000b1	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 10		 mov	 edx, DWORD PTR [eax]
  000b9	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	ff 52 30	 call	 DWORD PTR [edx+48]
$L53251:

; 424  :     }
; 425  : 
; 426  :     return fSuccess;

  000c2	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _fSuccess$[ebp]
$L53245:

; 427  : }

  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
?Save@CProject@@UAEHXZ ENDP				; CProject::Save
_TEXT	ENDS
EXTRN	_memset:NEAR
EXTRN	_GetSaveFileNameA@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?SaveAs@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -92
_ofn$ = -88
?SaveAs@CProject@@UAEHXZ PROC NEAR			; CProject::SaveAs, COMDAT
; _this$ = ecx

; 453  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	57		 push	 edi
  00007	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx

; 454  :     static const LPCTSTR    pszFilter   = MAKE_COMMDLG_FILTER(TEXT("Wave Bundler Project"), TEXT("*.") WBWRITER_FILEEXTENSION_PROJECT) \
; 455  :                                           MAKE_COMMDLG_FILTER(TEXT("All"), TEXT("*.*"));
; 456  : 
; 457  :     static const LPCTSTR    pszDefExt   = WBWRITER_FILEEXTENSION_PROJECT;
; 458  :     static const DWORD      dwOfnFlags  = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_PATHMUSTEXIST | OFN_ALLOWMULTISELECT;
; 459  :     OPENFILENAME            ofn         = { 0 };

  0000a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 0
  00011	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00016	33 c0		 xor	 eax, eax
  00018	8d 7d ac	 lea	 edi, DWORD PTR _ofn$[ebp+4]
  0001b	f3 ab		 rep stosd

; 460  : 
; 461  :     //
; 462  :     // Get the new project file path
; 463  :     //
; 464  : 
; 465  :     ZeroMemory(&ofn, sizeof(ofn));

  0001d	6a 58		 push	 88			; 00000058H
  0001f	6a 00		 push	 0
  00021	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _memset
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 466  : 
; 467  :     ofn.lStructSize = sizeof(ofn);

  0002d	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 468  :     ofn.hwndOwner = g_pApplication->m_MainFrame;

  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0003a	83 c1 10	 add	 ecx, 16			; 00000010H
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00043	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00046	ff 50 58	 call	 DWORD PTR [eax+88]
  00049	89 45 ac	 mov	 DWORD PTR _ofn$[ebp+4], eax

; 469  :     ofn.lpstrFilter = pszFilter;

  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszFilter@?1??SaveAs@CProject@@UAEHXZ@4QBDB
  00052	89 4d b4	 mov	 DWORD PTR _ofn$[ebp+12], ecx

; 470  :     ofn.lpstrFile = m_szProjectFile;

  00055	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  00058	83 c2 04	 add	 edx, 4
  0005b	89 55 c4	 mov	 DWORD PTR _ofn$[ebp+28], edx

; 471  :     ofn.nMaxFile = NUMELMS(m_szProjectFile);

  0005e	c7 45 c8 04 01
	00 00		 mov	 DWORD PTR _ofn$[ebp+32], 260 ; 00000104H

; 472  :     ofn.lpstrTitle = FormatStringResourceStatic(IDS_SAVE_PROJECT);

  00065	6a 04		 push	 4
  00067	e8 00 00 00 00	 call	 _FormatStringResourceStatic
  0006c	83 c4 04	 add	 esp, 4
  0006f	89 45 d8	 mov	 DWORD PTR _ofn$[ebp+48], eax

; 473  :     ofn.Flags = dwOfnFlags;

  00072	c7 45 dc 04 0a
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8915460 ; 00880a04H

; 474  :     ofn.lpstrDefExt = pszDefExt;

  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszDefExt@?1??SaveAs@CProject@@UAEHXZ@4QBDB
  0007e	89 45 e4	 mov	 DWORD PTR _ofn$[ebp+60], eax

; 475  : 
; 476  :     if(!GetSaveFileName(&ofn))

  00081	8d 4d a8	 lea	 ecx, DWORD PTR _ofn$[ebp]
  00084	51		 push	 ecx
  00085	e8 00 00 00 00	 call	 _GetSaveFileNameA@4
  0008a	85 c0		 test	 eax, eax
  0008c	75 04		 jne	 SHORT $L53263

; 477  :     {
; 478  :         return FALSE;

  0008e	33 c0		 xor	 eax, eax
  00090	eb 2a		 jmp	 SHORT $L53255
$L53263:

; 479  :     }
; 480  : 
; 481  :     //
; 482  :     // Enable the "reload" command
; 483  :     //
; 484  : 
; 485  :     g_pApplication->m_MainFrame.EnableCommand(ID_RELOAD_PROJECT, TRUE);

  00092	6a 01		 push	 1
  00094	68 54 9c 00 00	 push	 40020			; 00009c54H
  00099	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0009f	83 c1 10	 add	 ecx, 16			; 00000010H
  000a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000a8	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000ab	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 486  : 
; 487  :     //
; 488  :     // Save the project
; 489  :     //
; 490  :     
; 491  :     return Save();

  000b1	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b6	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	ff 52 1c	 call	 DWORD PTR [edx+28]
$L53255:

; 492  : }

  000bc	5f		 pop	 edi
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
?SaveAs@CProject@@UAEHXZ ENDP				; CProject::SaveAs
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Reset@CProject@@MAEXXZ
_TEXT	SEGMENT
_this$ = -12
$T53684 = -4
$T53685 = -8
?Reset@CProject@@MAEXXZ PROC NEAR			; CProject::Reset, COMDAT
; _this$ = ecx

; 518  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 519  :     //
; 520  :     // Free objects
; 521  :     //
; 522  : 
; 523  :     DELETE(m_pWaveBankProject);

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 b8 08 01 00
	00 00		 cmp	 DWORD PTR [eax+264], 0
  00013	74 3d		 je	 SHORT $L53268
  00015	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 91 08 01 00
	00		 mov	 edx, DWORD PTR [ecx+264]
  0001e	89 55 f8	 mov	 DWORD PTR $T53685[ebp], edx
  00021	8b 45 f8	 mov	 eax, DWORD PTR $T53685[ebp]
  00024	89 45 fc	 mov	 DWORD PTR $T53684[ebp], eax
  00027	83 7d fc 00	 cmp	 DWORD PTR $T53684[ebp], 0
  0002b	74 11		 je	 SHORT $L53686
  0002d	6a 01		 push	 1
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR $T53684[ebp]
  00032	8b 11		 mov	 edx, DWORD PTR [ecx]
  00034	8b 4d fc	 mov	 ecx, DWORD PTR $T53684[ebp]
  00037	ff 12		 call	 DWORD PTR [edx]
  00039	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  0003c	eb 07		 jmp	 SHORT $L53687
$L53686:
  0003e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L53687:
  00045	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00048	c7 80 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+264], 0
$L53268:

; 524  : }

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?Reset@CProject@@MAEXXZ ENDP				; CProject::Reset
_TEXT	ENDS
PUBLIC	??_C@_02LEGB@?4h?$AA@				; `string'
EXTRN	?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z:NEAR ; CGuiWaveBankProject::BrowseBankFile
EXTRN	?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z:NEAR ; CGuiWaveBankProject::BrowseHeaderFile
EXTRN	__makepath:NEAR
EXTRN	__splitpath:NEAR
;	COMDAT ??_C@_02LEGB@?4h?$AA@
CONST	SEGMENT
??_C@_02LEGB@?4h?$AA@ DB '.h', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?AddWaveBank@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -1596
_pBank$ = -1060
_szBankPath$ = -792
_szHeaderPath$ = -1328
_szDrive$ = -1056
_szDir$ = -528
_szFile$ = -1592
_szExt$ = -264
?AddWaveBank@CProject@@UAEHXZ PROC NEAR			; CProject::AddWaveBank, COMDAT
; _this$ = ecx

; 550  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 3c 06 00
	00		 sub	 esp, 1596		; 0000063cH
  00009	89 8d c4 f9 ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 551  :     CGuiWaveBank *          pBank                   = NULL;

  0000f	c7 85 dc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _pBank$[ebp], 0
$L53283:

; 552  :     TCHAR                   szBankPath[MAX_PATH];
; 553  :     TCHAR                   szHeaderPath[MAX_PATH];
; 554  :     TCHAR                   szDrive[MAX_PATH];
; 555  :     TCHAR                   szDir[MAX_PATH];
; 556  :     TCHAR                   szFile[MAX_PATH];
; 557  :     TCHAR                   szExt[MAX_PATH];
; 558  : 
; 559  :     while(TRUE)

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	0f 84 00 01 00
	00		 je	 $L53284

; 560  :     {
; 561  :         //
; 562  :         // Get the wave bank file path
; 563  :         //
; 564  : 
; 565  :         szBankPath[0] = 0;

  00026	c6 85 e8 fc ff
	ff 00		 mov	 BYTE PTR _szBankPath$[ebp], 0

; 566  :         
; 567  :         if(!CGuiWaveBankProject::BrowseBankFile(g_pApplication->m_MainFrame, szBankPath, NUMELMS(szBankPath)))

  0002d	68 04 01 00 00	 push	 260			; 00000104H
  00032	8d 8d e8 fc ff
	ff		 lea	 ecx, DWORD PTR _szBankPath$[ebp]
  00038	51		 push	 ecx
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0003f	83 c1 10	 add	 ecx, 16			; 00000010H
  00042	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00048	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0004b	ff 50 58	 call	 DWORD PTR [eax+88]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseBankFile
  00054	85 c0		 test	 eax, eax
  00056	75 07		 jne	 SHORT $L53285

; 568  :         {
; 569  :             return FALSE;

  00058	33 c0		 xor	 eax, eax
  0005a	e9 ff 00 00 00	 jmp	 $L53274
$L53285:

; 570  :         }
; 571  :     
; 572  :         //
; 573  :         // Get the header file path
; 574  :         //
; 575  :     
; 576  :         _splitpath(szBankPath, szDrive, szDir, szFile, szExt);

  0005f	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szExt$[ebp]
  00065	51		 push	 ecx
  00066	8d 95 c8 f9 ff
	ff		 lea	 edx, DWORD PTR _szFile$[ebp]
  0006c	52		 push	 edx
  0006d	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _szDir$[ebp]
  00073	50		 push	 eax
  00074	8d 8d e0 fb ff
	ff		 lea	 ecx, DWORD PTR _szDrive$[ebp]
  0007a	51		 push	 ecx
  0007b	8d 95 e8 fc ff
	ff		 lea	 edx, DWORD PTR _szBankPath$[ebp]
  00081	52		 push	 edx
  00082	e8 00 00 00 00	 call	 __splitpath
  00087	83 c4 14	 add	 esp, 20			; 00000014H

; 577  :         _makepath(szHeaderPath, szDrive, szDir, szFile, TEXT(".") WBWRITER_FILEEXTENSION_HEADER);

  0008a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02LEGB@?4h?$AA@ ; `string'
  0008f	8d 85 c8 f9 ff
	ff		 lea	 eax, DWORD PTR _szFile$[ebp]
  00095	50		 push	 eax
  00096	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR _szDir$[ebp]
  0009c	51		 push	 ecx
  0009d	8d 95 e0 fb ff
	ff		 lea	 edx, DWORD PTR _szDrive$[ebp]
  000a3	52		 push	 edx
  000a4	8d 85 d0 fa ff
	ff		 lea	 eax, DWORD PTR _szHeaderPath$[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 __makepath
  000b0	83 c4 14	 add	 esp, 20			; 00000014H

; 578  : 
; 579  :         if(!CGuiWaveBankProject::BrowseHeaderFile(g_pApplication->m_MainFrame, szHeaderPath, NUMELMS(szHeaderPath)))

  000b3	68 04 01 00 00	 push	 260			; 00000104H
  000b8	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _szHeaderPath$[ebp]
  000be	51		 push	 ecx
  000bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000c5	83 c1 10	 add	 ecx, 16			; 00000010H
  000c8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000ce	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000d1	ff 50 58	 call	 DWORD PTR [eax+88]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseHeaderFile
  000da	85 c0		 test	 eax, eax
  000dc	75 04		 jne	 SHORT $L53287

; 580  :         {
; 581  :             return FALSE;

  000de	33 c0		 xor	 eax, eax
  000e0	eb 7c		 jmp	 SHORT $L53274
$L53287:

; 582  :         }
; 583  : 
; 584  :         //
; 585  :         // Create the bank
; 586  :         //
; 587  : 
; 588  :         if(SUCCEEDED(m_pWaveBankProject->AddBank(szFile, szBankPath, szHeaderPath, (CWaveBank **)&pBank)))

  000e2	8d 8d dc fb ff
	ff		 lea	 ecx, DWORD PTR _pBank$[ebp]
  000e8	51		 push	 ecx
  000e9	8d 95 d0 fa ff
	ff		 lea	 edx, DWORD PTR _szHeaderPath$[ebp]
  000ef	52		 push	 edx
  000f0	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _szBankPath$[ebp]
  000f6	50		 push	 eax
  000f7	8d 8d c8 f9 ff
	ff		 lea	 ecx, DWORD PTR _szFile$[ebp]
  000fd	51		 push	 ecx
  000fe	8b 95 c4 f9 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  0010a	8b 8d c4 f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00110	8b 89 08 01 00
	00		 mov	 ecx, DWORD PTR [ecx+264]
  00116	8b 10		 mov	 edx, DWORD PTR [eax]
  00118	ff 52 04	 call	 DWORD PTR [edx+4]
  0011b	85 c0		 test	 eax, eax
  0011d	7c 02		 jl	 SHORT $L53290

; 589  :         {
; 590  :             break;

  0011f	eb 05		 jmp	 SHORT $L53284
$L53290:

; 591  :         }
; 592  :     }

  00121	e9 f3 fe ff ff	 jmp	 $L53283
$L53284:

; 593  : 
; 594  :     //
; 595  :     // Open the new bank
; 596  :     //
; 597  : 
; 598  :     pBank->OpenList();

  00126	8b 85 dc fb ff
	ff		 mov	 eax, DWORD PTR _pBank$[ebp]
  0012c	8b 10		 mov	 edx, DWORD PTR [eax]
  0012e	8b 8d dc fb ff
	ff		 mov	 ecx, DWORD PTR _pBank$[ebp]
  00134	ff 52 44	 call	 DWORD PTR [edx+68]

; 599  : 
; 600  :     //
; 601  :     // Show the bank properties dialog in case the user wants to change 
; 602  :     // anything else
; 603  :     //
; 604  : 
; 605  :     pBank->OnCmdProperties();

  00137	8b 85 dc fb ff
	ff		 mov	 eax, DWORD PTR _pBank$[ebp]
  0013d	8b 10		 mov	 edx, DWORD PTR [eax]
  0013f	8b 8d dc fb ff
	ff		 mov	 ecx, DWORD PTR _pBank$[ebp]
  00145	ff 52 5c	 call	 DWORD PTR [edx+92]

; 606  : 
; 607  :     //
; 608  :     // Mark the project as dirty
; 609  :     //
; 610  : 
; 611  :     MakeDirty();

  00148	8b 85 c4 f9 ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 10		 mov	 edx, DWORD PTR [eax]
  00150	8b 8d c4 f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00156	ff 52 34	 call	 DWORD PTR [edx+52]

; 612  : 
; 613  :     return TRUE;

  00159	b8 01 00 00 00	 mov	 eax, 1
$L53274:

; 614  : }

  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c3		 ret	 0
?AddWaveBank@CProject@@UAEHXZ ENDP			; CProject::AddWaveBank
_TEXT	ENDS
EXTRN	_FormatStringResource:NEAR
EXTRN	_strncpy:NEAR
; Function compile flags: /Odt
;	COMDAT ?CheckDirty@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -268
_szProjectFile$ = -264
?CheckDirty@CProject@@UAEHXZ PROC NEAR			; CProject::CheckDirty, COMDAT
; _this$ = ecx

; 640  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 641  :     TCHAR                   szProjectFile[MAX_PATH];
; 642  :     
; 643  :     if(!m_fDirty)

  0000f	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 b8 0c 01 00
	00 00		 cmp	 DWORD PTR [eax+268], 0
  0001c	75 0a		 jne	 SHORT $L53296

; 644  :     {
; 645  :         return TRUE;

  0001e	b8 01 00 00 00	 mov	 eax, 1
  00023	e9 a3 00 00 00	 jmp	 $L53294
$L53296:

; 646  :     }
; 647  : 
; 648  :     if(m_szProjectFile[0])

  00028	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	0f be 51 04	 movsx	 edx, BYTE PTR [ecx+4]
  00032	85 d2		 test	 edx, edx
  00034	74 20		 je	 SHORT $L53297

; 649  :     {
; 650  :         _tcsncpy(szProjectFile, m_szProjectFile, NUMELMS(szProjectFile));

  00036	68 04 01 00 00	 push	 260			; 00000104H
  0003b	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00041	83 c0 04	 add	 eax, 4
  00044	50		 push	 eax
  00045	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szProjectFile$[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 _strncpy
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 651  :     }
; 652  :     else

  00054	eb 16		 jmp	 SHORT $L53298
$L53297:

; 653  :     {
; 654  :         FormatStringResource(szProjectFile, NUMELMS(szProjectFile), IDS_UNNAMED_PROJECT);

  00056	6a 08		 push	 8
  00058	68 04 01 00 00	 push	 260			; 00000104H
  0005d	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szProjectFile$[ebp]
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 _FormatStringResource
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
$L53298:

; 655  :     }
; 656  : 
; 657  :     switch(MsgBoxResource(g_pApplication->m_MainFrame, MB_ICONQUESTION | MB_YESNOCANCEL, IDS_SAVE_CHANGES, szProjectFile))
; 658  :     {

  0006c	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szProjectFile$[ebp]
  00072	50		 push	 eax
  00073	6a 07		 push	 7
  00075	6a 23		 push	 35			; 00000023H
  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0007d	83 c1 10	 add	 ecx, 16			; 00000010H
  00080	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00086	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00089	ff 50 58	 call	 DWORD PTR [eax+88]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _MsgBoxResource
  00092	83 c4 10	 add	 esp, 16			; 00000010H
  00095	89 85 f0 fe ff
	ff		 mov	 DWORD PTR -272+[ebp], eax
  0009b	83 bd f0 fe ff
	ff 06		 cmp	 DWORD PTR -272+[ebp], 6
  000a2	74 0b		 je	 SHORT $L53303
  000a4	83 bd f0 fe ff
	ff 07		 cmp	 DWORD PTR -272+[ebp], 7
  000ab	74 15		 je	 SHORT $L53304
  000ad	eb 1a		 jmp	 SHORT $L53300
$L53303:

; 659  :         case IDYES:
; 660  :             return Save();

  000af	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b7	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	ff 52 1c	 call	 DWORD PTR [edx+28]
  000c0	eb 09		 jmp	 SHORT $L53294
$L53304:

; 661  : 
; 662  :         case IDNO:
; 663  :             return TRUE;

  000c2	b8 01 00 00 00	 mov	 eax, 1
  000c7	eb 02		 jmp	 SHORT $L53294
$L53300:

; 664  :     }
; 665  : 
; 666  :     return FALSE;

  000c9	33 c0		 xor	 eax, eax
$L53294:

; 667  : }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
?CheckDirty@CProject@@UAEHXZ ENDP			; CProject::CheckDirty
_TEXT	ENDS
PUBLIC	??_C@_02IGCE@?5?$CK?$AA@			; `string'
PUBLIC	??_C@_03DMDD@?5?9?5?$AA@			; `string'
EXTRN	_g_szAppTitle:BYTE
EXTRN	_strcat:NEAR
;	COMDAT ??_C@_02IGCE@?5?$CK?$AA@
CONST	SEGMENT
??_C@_02IGCE@?5?$CK?$AA@ DB ' *', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
CONST	SEGMENT
??_C@_03DMDD@?5?9?5?$AA@ DB ' - ', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?UpdateAppTitle@CProject@@UAEXXZ
_TEXT	SEGMENT
_this$ = -524
_szTitle$ = -520
?UpdateAppTitle@CProject@@UAEXXZ PROC NEAR		; CProject::UpdateAppTitle, COMDAT
; _this$ = ecx

; 693  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 02 00
	00		 sub	 esp, 524		; 0000020cH
  00009	89 8d f4 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 694  :     TCHAR                   szTitle[MAX_PATH + 0x100];
; 695  : 
; 696  :     if(!m_fUpdateAppTitle)

  0000f	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 b8 84 01 00
	00 00		 cmp	 DWORD PTR [eax+388], 0
  0001c	75 05		 jne	 SHORT $L53310

; 697  :     {
; 698  :         return;

  0001e	e9 ac 00 00 00	 jmp	 $L53308
$L53310:

; 699  :     }
; 700  : 
; 701  :     if(m_szProjectFile[0])

  00023	8b 8d f4 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00029	0f be 51 04	 movsx	 edx, BYTE PTR [ecx+4]
  0002d	85 d2		 test	 edx, edx
  0002f	74 21		 je	 SHORT $L53311

; 702  :     {
; 703  :         _tsplitpath(m_szProjectFile, NULL, NULL, szTitle, NULL);

  00031	6a 00		 push	 0
  00033	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  00039	50		 push	 eax
  0003a	6a 00		 push	 0
  0003c	6a 00		 push	 0
  0003e	8b 8d f4 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 04	 add	 ecx, 4
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 __splitpath
  0004d	83 c4 14	 add	 esp, 20			; 00000014H

; 704  :     }
; 705  :     else

  00050	eb 16		 jmp	 SHORT $L53312
$L53311:

; 706  :     {
; 707  :         FormatStringResource(szTitle, NUMELMS(szTitle), IDS_UNNAMED_PROJECT);

  00052	6a 08		 push	 8
  00054	68 04 02 00 00	 push	 516			; 00000204H
  00059	8d 95 f8 fd ff
	ff		 lea	 edx, DWORD PTR _szTitle$[ebp]
  0005f	52		 push	 edx
  00060	e8 00 00 00 00	 call	 _FormatStringResource
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
$L53312:

; 708  :     }
; 709  : 
; 710  :     if(m_fDirty)

  00068	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0006e	83 b8 0c 01 00
	00 00		 cmp	 DWORD PTR [eax+268], 0
  00075	74 14		 je	 SHORT $L53313

; 711  :     {
; 712  :         _tcscat(szTitle, TEXT(" *"));

  00077	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02IGCE@?5?$CK?$AA@ ; `string'
  0007c	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szTitle$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 _strcat
  00088	83 c4 08	 add	 esp, 8
$L53313:

; 713  :     }
; 714  : 
; 715  :     _tcscat(szTitle, TEXT(" - "));

  0008b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03DMDD@?5?9?5?$AA@ ; `string'
  00090	8d 95 f8 fd ff
	ff		 lea	 edx, DWORD PTR _szTitle$[ebp]
  00096	52		 push	 edx
  00097	e8 00 00 00 00	 call	 _strcat
  0009c	83 c4 08	 add	 esp, 8

; 716  :     _tcscat(szTitle, g_szAppTitle);

  0009f	68 00 00 00 00	 push	 OFFSET FLAT:_g_szAppTitle
  000a4	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 _strcat
  000b0	83 c4 08	 add	 esp, 8

; 717  : 
; 718  :     g_pApplication->m_MainFrame.SetWindowText(szTitle);

  000b3	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szTitle$[ebp]
  000b9	51		 push	 ecx
  000ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000c0	83 c1 10	 add	 ecx, 16			; 00000010H
  000c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000c9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000cc	ff 50 28	 call	 DWORD PTR [eax+40]
$L53308:

; 719  : }

  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
?UpdateAppTitle@CProject@@UAEXXZ ENDP			; CProject::UpdateAppTitle
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EnableAppTitleUpdates@CProject@@UAEHH@Z
_TEXT	SEGMENT
_fEnable$ = 8
_this$ = -8
_fPrevious$ = -4
?EnableAppTitleUpdates@CProject@@UAEHH@Z PROC NEAR	; CProject::EnableAppTitleUpdates, COMDAT
; _this$ = ecx

; 745  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 746  :     const BOOL              fPrevious   = m_fUpdateAppTitle;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 88 84 01 00
	00		 mov	 ecx, DWORD PTR [eax+388]
  00012	89 4d fc	 mov	 DWORD PTR _fPrevious$[ebp], ecx

; 747  : 
; 748  :     m_fUpdateAppTitle = fEnable;

  00015	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 45 08	 mov	 eax, DWORD PTR _fEnable$[ebp]
  0001b	89 82 84 01 00
	00		 mov	 DWORD PTR [edx+388], eax

; 749  : 
; 750  :     if(fEnable && !fPrevious)

  00021	83 7d 08 00	 cmp	 DWORD PTR _fEnable$[ebp], 0
  00025	74 11		 je	 SHORT $L53321
  00027	83 7d fc 00	 cmp	 DWORD PTR _fPrevious$[ebp], 0
  0002b	75 0b		 jne	 SHORT $L53321

; 751  :     {
; 752  :         UpdateAppTitle();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 11		 mov	 edx, DWORD PTR [ecx]
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	ff 52 48	 call	 DWORD PTR [edx+72]
$L53321:

; 753  :     }
; 754  : 
; 755  :     return fPrevious;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _fPrevious$[ebp]

; 756  : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?EnableAppTitleUpdates@CProject@@UAEHH@Z ENDP		; CProject::EnableAppTitleUpdates
_TEXT	ENDS
PUBLIC	??_C@_0CC@MAFP@?$CBIS_VALID_HANDLE_VALUE?$CIm_hThread@ ; `string'
PUBLIC	?BuildThreadProc@CProject@@CGKPAX@Z		; CProject::BuildThreadProc
EXTRN	__imp__CreateThread@24:NEAR
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0CC@MAFP@?$CBIS_VALID_HANDLE_VALUE?$CIm_hThread@
CONST	SEGMENT
??_C@_0CC@MAFP@?$CBIS_VALID_HANDLE_VALUE?$CIm_hThread@ DB '!IS_VALID_HAND'
	DB	'LE_VALUE(m_hThread)', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Build@CProject@@UAEHXZ
_TEXT	SEGMENT
_this$ = -12
_fSuccess$ = -8
_dwThreadId$ = -4
?Build@CProject@@UAEHXZ PROC NEAR			; CProject::Build, COMDAT
; _this$ = ecx

; 782  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 783  :     BOOL                    fSuccess    = TRUE;

  00009	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _fSuccess$[ebp], 1

; 784  :     DWORD                   dwThreadId;
; 785  : 
; 786  :     ASSERT(!IS_VALID_HANDLE_VALUE(m_hThread));

  00010	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 b8 14 01 00
	00 00		 cmp	 DWORD PTR [eax+276], 0
  0001a	74 15		 je	 SHORT $L53703
  0001c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 b9 14 01 00
	00 ff		 cmp	 DWORD PTR [ecx+276], -1
  00026	74 09		 je	 SHORT $L53703
  00028	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR -16+[ebp], 1
  0002f	eb 07		 jmp	 SHORT $L53704
$L53703:
  00031	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L53704:
  00038	68 12 03 00 00	 push	 786			; 00000312H
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@KMJI@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00042	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@MAFP@?$CBIS_VALID_HANDLE_VALUE?$CIm_hThread@ ; `string'
  00047	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  0004a	52		 push	 edx
  0004b	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00050	83 c4 10	 add	 esp, 16			; 00000010H

; 787  : 
; 788  :     //
; 789  :     // Reset the build event
; 790  :     //
; 791  : 
; 792  :     ResetEvent(m_hBuildEvent);

  00053	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  0005c	51		 push	 ecx
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ResetEvent@4

; 793  : 
; 794  :     //
; 795  :     // Create the build thread
; 796  :     //
; 797  : 
; 798  :     m_hThread = CreateThread(NULL, 0, BuildThreadProc, this, 0, &dwThreadId);

  00063	8d 55 fc	 lea	 edx, DWORD PTR _dwThreadId$[ebp]
  00066	52		 push	 edx
  00067	6a 00		 push	 0
  00069	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET FLAT:?BuildThreadProc@CProject@@CGKPAX@Z ; CProject::BuildThreadProc
  00072	6a 00		 push	 0
  00074	6a 00		 push	 0
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	89 81 14 01 00
	00		 mov	 DWORD PTR [ecx+276], eax

; 799  :     fSuccess = IS_VALID_HANDLE_VALUE(m_hThread);

  00085	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00088	83 ba 14 01 00
	00 00		 cmp	 DWORD PTR [edx+276], 0
  0008f	74 15		 je	 SHORT $L53705
  00091	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00094	83 b8 14 01 00
	00 ff		 cmp	 DWORD PTR [eax+276], -1
  0009b	74 09		 je	 SHORT $L53705
  0009d	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR -20+[ebp], 1
  000a4	eb 07		 jmp	 SHORT $L53706
$L53705:
  000a6	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L53706:
  000ad	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  000b0	89 4d f8	 mov	 DWORD PTR _fSuccess$[ebp], ecx

; 800  : 
; 801  :     //
; 802  :     // Pop the build dialog
; 803  :     //
; 804  :     
; 805  :     if(fSuccess)

  000b3	83 7d f8 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000b7	74 27		 je	 SHORT $L53331

; 806  :     {
; 807  :         fSuccess = m_BuildDialog.DoModal(&g_pApplication->m_MainFrame);

  000b9	6a 00		 push	 0
  000bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000c1	83 c2 10	 add	 edx, 16			; 00000010H
  000c4	52		 push	 edx
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	81 c1 18 01 00
	00		 add	 ecx, 280		; 00000118H
  000ce	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 90 18 01 00
	00		 mov	 edx, DWORD PTR [eax+280]
  000d7	ff 92 a4 00 00
	00		 call	 DWORD PTR [edx+164]
  000dd	89 45 f8	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L53331:

; 808  :     }
; 809  : 
; 810  :     //
; 811  :     // Clean up
; 812  :     //
; 813  : 
; 814  :     CLOSE_HANDLE(m_hThread);

  000e0	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000e3	83 b8 14 01 00
	00 00		 cmp	 DWORD PTR [eax+276], 0
  000ea	74 29		 je	 SHORT $L53333
  000ec	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	83 b9 14 01 00
	00 ff		 cmp	 DWORD PTR [ecx+276], -1
  000f6	74 1d		 je	 SHORT $L53333
  000f8	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  000fb	8b 82 14 01 00
	00		 mov	 eax, DWORD PTR [edx+276]
  00101	50		 push	 eax
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00108	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	c7 81 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+276], 0
$L53333:

; 815  : 
; 816  :     return fSuccess;

  00115	8b 45 f8	 mov	 eax, DWORD PTR _fSuccess$[ebp]

; 817  : }

  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c3		 ret	 0
?Build@CProject@@UAEHXZ ENDP				; CProject::Build
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.h
_TEXT	ENDS
;	COMDAT ?BuildThreadProc@CProject@@CGKPAX@Z
_TEXT	SEGMENT
_pvContext$ = 8
?BuildThreadProc@CProject@@CGKPAX@Z PROC NEAR		; CProject::BuildThreadProc, COMDAT

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 191  :     return ((CProject *)pvContext)->BuildThread();

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvContext$[ebp]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  0000b	ff 52 50	 call	 DWORD PTR [edx+80]

; 192  : }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?BuildThreadProc@CProject@@CGKPAX@Z ENDP		; CProject::BuildThreadProc
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
_TEXT	ENDS
;	COMDAT ?BuildThread@CProject@@EAEKXZ
_TEXT	SEGMENT
_this$ = -8
_hr$ = -4
?BuildThread@CProject@@EAEKXZ PROC NEAR			; CProject::BuildThread, COMDAT
; _this$ = ecx

; 843  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 844  :     HRESULT                 hr;
; 845  :     
; 846  :     //
; 847  :     // Wait for the go-ahead
; 848  :     //
; 849  : 
; 850  :     WaitForSingleObject(m_hBuildEvent, INFINITE);

  00009	6a ff		 push	 -1
  0000b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000e	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  00014	51		 push	 ecx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 851  : 
; 852  :     //
; 853  :     // Build wave banks
; 854  :     //
; 855  : 
; 856  :     hr = m_pWaveBankProject->Generate(&m_BuildDialog.m_WaveBundler, TRUE);

  0001b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	81 c2 4c 01 00
	00		 add	 edx, 332		; 0000014cH
  00024	85 d2		 test	 edx, edx
  00026	74 0d		 je	 SHORT $L53713
  00028	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	05 80 01 00 00	 add	 eax, 384		; 00000180H
  00030	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00033	eb 07		 jmp	 SHORT $L53714
$L53713:
  00035	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L53714:
  0003c	6a 01		 push	 1
  0003e	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  00041	51		 push	 ecx
  00042	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00045	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 89 08 01 00
	00		 mov	 ecx, DWORD PTR [ecx+264]
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	ff 52 0c	 call	 DWORD PTR [edx+12]
  00059	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 857  : 
; 858  :     //
; 859  :     // Post a message to the build dialog to tell it that we're done
; 860  :     //
; 861  : 
; 862  :     m_BuildDialog.PostMessage(WM_PROJECT_BUILDDONE, 0, hr);

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  0005f	50		 push	 eax
  00060	6a 00		 push	 0
  00062	68 00 c4 00 00	 push	 50176			; 0000c400H
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 18 01 00
	00		 add	 ecx, 280		; 00000118H
  00070	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00073	8b 82 18 01 00
	00		 mov	 eax, DWORD PTR [edx+280]
  00079	ff 50 1c	 call	 DWORD PTR [eax+28]

; 863  : 
; 864  :     return hr;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 865  : }

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
?BuildThread@CProject@@EAEKXZ ENDP			; CProject::BuildThread
_TEXT	ENDS
PUBLIC	?IsWindow@CWindow@@UAEHXZ			; CWindow::IsWindow
PUBLIC	?SendMessageA@CWindow@@UAEJIIJ@Z		; CWindow::SendMessageA
PUBLIC	?PostMessageA@CWindow@@UAEJIIJ@Z		; CWindow::PostMessageA
PUBLIC	?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z	; CWindow::SendDlgItemMessageA
PUBLIC	?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z		; CWindow::GetDlgItem
PUBLIC	?SetWindowTextA@CWindow@@UAEHPBD@Z		; CWindow::SetWindowTextA
PUBLIC	?SetDlgItemTextA@CWindow@@UAEHHPBD@Z		; CWindow::SetDlgItemTextA
PUBLIC	?SetDlgItemInt@CWindow@@UAEHHIH@Z		; CWindow::SetDlgItemInt
PUBLIC	?GetDlgItemTextA@CWindow@@UAEHHPADH@Z		; CWindow::GetDlgItemTextA
PUBLIC	?GetDlgItemInt@CWindow@@UAEIHPAHH@Z		; CWindow::GetDlgItemInt
PUBLIC	?MoveWindow@CWindow@@UAEHHHHHH@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z	; CWindow::MoveWindow
PUBLIC	?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetWindowRect
PUBLIC	?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetClientRect
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z	; CWindow::ScreenToClient
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::ScreenToClient
PUBLIC	?DragAcceptFiles@CWindow@@UAEXH@Z		; CWindow::DragAcceptFiles
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
PUBLIC	?OnSize@CWindow@@UAEHIIIPAJ@Z			; CWindow::OnSize
PUBLIC	?OnSysCommand@CWindow@@UAEHIPAJ@Z		; CWindow::OnSysCommand
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
PUBLIC	?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z	; CWindow::OnEraseBackground
PUBLIC	?OnPaint@CWindow@@UAEHPAJ@Z			; CWindow::OnPaint
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
PUBLIC	?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z	; CWindow::OnDropFiles
PUBLIC	?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z	; CWindow::OnScroll
PUBLIC	?AddRef@CDialog@@UAGKXZ				; CDialog::AddRef
PUBLIC	?Release@CDialog@@UAGKXZ			; CDialog::Release
PUBLIC	?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z	; CDialog::DefWindowProcA
PUBLIC	??0CWaveBundlerBuildDialog@@QAE@XZ		; CWaveBundlerBuildDialog::CWaveBundlerBuildDialog
PUBLIC	?HandleMessage@CProjectBuildDialog@@UAEHIIJPAJ@Z ; CProjectBuildDialog::HandleMessage
PUBLIC	?OnCreate@CProjectBuildDialog@@UAEHPAXPAJ@Z	; CProjectBuildDialog::OnCreate
PUBLIC	?OnBuildDone@CProjectBuildDialog@@UAEHJPAJ@Z	; CProjectBuildDialog::OnBuildDone
PUBLIC	?OnCmdCancel@CProjectBuildDialog@@UAEXXZ	; CProjectBuildDialog::OnCmdCancel
PUBLIC	??_7CProjectBuildDialog@@6B@			; CProjectBuildDialog::`vftable'
PUBLIC	??_GCProjectBuildDialog@@UAEPAXI@Z		; CProjectBuildDialog::`scalar deleting destructor'
PUBLIC	??_ECProjectBuildDialog@@UAEPAXI@Z		; CProjectBuildDialog::`vector deleting destructor'
EXTRN	?Destroy@CWindow@@UAEXXZ:NEAR			; CWindow::Destroy
EXTRN	?SetRedraw@CWindow@@UAEHH@Z:NEAR		; CWindow::SetRedraw
EXTRN	?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z:NEAR ; CWindow::DispatchMessageA
EXTRN	?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CWindow::OnScroll
EXTRN	?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z:NEAR	; CWindow::Create
EXTRN	??0CDialog@@QAE@I@Z:NEAR			; CDialog::CDialog
EXTRN	?Create@CDialog@@UAEHPAVCWindow@@PAX@Z:NEAR	; CDialog::Create
EXTRN	?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z:NEAR	; CDialog::DoModal
EXTRN	?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CDialog::OnCommand
EXTRN	?OnClose@CDialog@@UAEHPAJ@Z:NEAR		; CDialog::OnClose
EXTRN	?OnCmdOK@CDialog@@UAEXXZ:NEAR			; CDialog::OnCmdOK
;	COMDAT ??_7CProjectBuildDialog@@6B@
CONST	SEGMENT
??_7CProjectBuildDialog@@6B@ DD FLAT:??_ECProjectBuildDialog@@UAEPAXI@Z ; CProjectBuildDialog::`vftable'
	DD	FLAT:?AddRef@CDialog@@UAGKXZ
	DD	FLAT:?Release@CDialog@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CProjectBuildDialog@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CProjectBuildDialog@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?OnCmdOK@CDialog@@UAEXXZ
	DD	FLAT:?OnCmdCancel@CProjectBuildDialog@@UAEXXZ
	DD	FLAT:?OnBuildDone@CProjectBuildDialog@@UAEHJPAJ@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CProjectBuildDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CProjectBuildDialog@@QAE@XZ PROC NEAR		; CProjectBuildDialog::CProjectBuildDialog, COMDAT
; _this$ = ecx

; 891  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 6e		 push	 110			; 0000006eH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CDialog@@QAE@I@Z	; CDialog::CDialog
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 34	 add	 ecx, 52			; 00000034H
  00017	e8 00 00 00 00	 call	 ??0CWaveBundlerBuildDialog@@QAE@XZ ; CWaveBundlerBuildDialog::CWaveBundlerBuildDialog
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CProjectBuildDialog@@6B@ ; CProjectBuildDialog::`vftable'

; 892  : }

  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CProjectBuildDialog@@QAE@XZ ENDP			; CProjectBuildDialog::CProjectBuildDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 252  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHIIIPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 256  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 257  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHIIIPAJ@Z ENDP			; CWindow::OnSize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysCommand@CWindow@@UAEHIPAJ@Z PROC NEAR		; CWindow::OnSysCommand, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 266  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 267  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnSysCommand@CWindow@@UAEHIPAJ@Z ENDP			; CWindow::OnSysCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 272  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z PROC NEAR ; CWindow::OnEraseBackground, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 276  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 277  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z ENDP	; CWindow::OnEraseBackground
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnPaint@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnPaint, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 282  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnPaint@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnPaint
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z PROC NEAR	; CWindow::OnScroll, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 287  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z ENDP		; CWindow::OnScroll
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 292  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
_TEXT	ENDS
PUBLIC	??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_04BEIE@this?$AA@				; `string'
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\base\wndwrap.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT
??_C@_04BEIE@this?$AA@ DB 'this', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 301  :     ASSERT(this);

  00007	68 2d 01 00 00	 push	 301			; 0000012dH
  0000c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04BEIE@this?$AA@ ; `string'
  00016	33 c0		 xor	 eax, eax
  00018	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001c	0f 94 c0	 sete	 al
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00025	83 c4 10	 add	 esp, 16			; 00000010H

; 302  :     return m_hWnd;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 303  : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
_TEXT	ENDS
PUBLIC	??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@	; `string'
EXTRN	__imp__IsWindow@4:NEAR
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ DB '::IsWindow(m_hWnd)', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsWindow@CWindow@@UAEHXZ PROC NEAR			; CWindow::IsWindow, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  :     if(!m_hWnd)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0000e	75 04		 jne	 SHORT $L49126

; 308  :     {
; 309  :         return FALSE;

  00010	33 c0		 xor	 eax, eax
  00012	eb 2f		 jmp	 SHORT $L49125
$L49126:

; 310  :     }
; 311  : 
; 312  :     ASSERT(::IsWindow(m_hWnd));

  00014	68 38 01 00 00	 push	 312			; 00000138H
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ ; `string'
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00029	52		 push	 edx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00030	f7 d8		 neg	 eax
  00032	1b c0		 sbb	 eax, eax
  00034	40		 inc	 eax
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 313  : 
; 314  :     return TRUE;

  0003e	b8 01 00 00 00	 mov	 eax, 1
$L49125:

; 315  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?IsWindow@CWindow@@UAEHXZ ENDP				; CWindow::IsWindow
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?SendMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::SendMessageA, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  :     return ::SendMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 320  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SendMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::SendMessageA
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::PostMessageA, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  :     return ::PostMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 325  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?PostMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::PostMessageA
_TEXT	ENDS
EXTRN	__imp__SetWindowTextA@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?SetWindowTextA@CWindow@@UAEHPBD@Z PROC NEAR		; CWindow::SetWindowTextA, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :     return ::SetWindowText(m_hWnd, pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 330  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetWindowTextA@CWindow@@UAEHPBD@Z ENDP			; CWindow::SetWindowTextA
_TEXT	ENDS
EXTRN	__imp__MoveWindow@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_nWidth$ = 16
_nHeight$ = 20
_fRepaint$ = 24
_this$ = -4
?MoveWindow@CWindow@@UAEHHHHHH@Z PROC NEAR		; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 334  :     return ::MoveWindow(m_hWnd, x, y, nWidth, nHeight, fRepaint);

  00007	8b 45 18	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 14	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 10	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 335  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 14 00	 ret	 20			; 00000014H
?MoveWindow@CWindow@@UAEHHHHHH@Z ENDP			; CWindow::MoveWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_fRepaint$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  :     return ::MoveWindow(m_hWnd, prcWindow->left, prcWindow->top, prcWindow->right - prcWindow->left, prcWindow->bottom - prcWindow->top, fRepaint);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 340  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z ENDP		; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetWindowRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_this$ = -4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetWindowRect, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  :     return ::GetWindowRect(m_hWnd, prcWindow);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 345  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetWindowRect
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcClient$ = 8
_this$ = -4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetClientRect, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 349  :     return ::GetClientRect(m_hWnd, prcClient);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcClient$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 350  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetClientRect
_TEXT	ENDS
EXTRN	__imp__ScreenToClient@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT
_ppt$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  :     return ::ScreenToClient(m_hWnd, ppt);

  00007	8b 45 08	 mov	 eax, DWORD PTR _ppt$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 355  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z ENDP	; CWindow::ScreenToClient
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prc$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 359  :     if(!::ScreenToClient(m_hWnd, (LPPOINT)&prc->left))

  00007	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $L49174

; 360  :     {
; 361  :         return FALSE;

  0001c	33 c0		 xor	 eax, eax
  0001e	eb 14		 jmp	 SHORT $L49172
$L49174:

; 362  :     }
; 363  : 
; 364  :     return ::ScreenToClient(m_hWnd, (LPPOINT)&prc->right);

  00020	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	50		 push	 eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0002d	52		 push	 edx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
$L49172:

; 365  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z ENDP	; CWindow::ScreenToClient
_TEXT	ENDS
EXTRN	__imp__SendDlgItemMessageA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT
_nItemId$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z PROC NEAR	; CWindow::SendDlgItemMessageA, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  :     return ::SendDlgItemMessage(m_hWnd, nItemId, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0001d	52		 push	 edx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 370  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z ENDP		; CWindow::SendDlgItemMessageA
_TEXT	ENDS
EXTRN	__imp__GetDlgItem@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT
_nItemId$ = 8
_this$ = -4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z PROC NEAR	; CWindow::GetDlgItem, COMDAT
; _this$ = ecx

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 374  :     return ::GetDlgItem(m_hWnd, nItemId);

  00007	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8

; 375  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z ENDP		; CWindow::GetDlgItem
_TEXT	ENDS
EXTRN	__imp__SetDlgItemTextA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_this$ = -4
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z PROC NEAR		; CWindow::SetDlgItemTextA, COMDAT
; _this$ = ecx

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 379  :     return ::SetDlgItemText(m_hWnd, nItemId, pszString);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _nItemId$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 380  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z ENDP		; CWindow::SetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__SetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_nValue$ = 12
_fSigned$ = 16
_this$ = -4
?SetDlgItemInt@CWindow@@UAEHHIH@Z PROC NEAR		; CWindow::SetDlgItemInt, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  :     return ::SetDlgItemInt(m_hWnd, nItemId, nValue, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _nValue$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 385  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SetDlgItemInt@CWindow@@UAEHHIH@Z ENDP			; CWindow::SetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__GetDlgItemTextA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_nLength$ = 16
_this$ = -4
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z PROC NEAR		; CWindow::GetDlgItemTextA, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  :     return ::GetDlgItemText(m_hWnd, nItemId, pszString, nLength);

  00007	8b 45 10	 mov	 eax, DWORD PTR _nLength$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pszString$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 390  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z ENDP		; CWindow::GetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__GetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pfTranslated$ = 12
_fSigned$ = 16
_this$ = -4
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z PROC NEAR		; CWindow::GetDlgItemInt, COMDAT
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 394  :     return ::GetDlgItemInt(m_hWnd, nItemId, pfTranslated, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pfTranslated$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16

; 395  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z ENDP		; CWindow::GetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__DragAcceptFiles@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fAccept$ = 8
_this$ = -4
?DragAcceptFiles@CWindow@@UAEXH@Z PROC NEAR		; CWindow::DragAcceptFiles, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 399  :     ::DragAcceptFiles(m_hWnd, fAccept);

  00007	8b 45 08	 mov	 eax, DWORD PTR _fAccept$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragAcceptFiles@8

; 400  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?DragAcceptFiles@CWindow@@UAEXH@Z ENDP			; CWindow::DragAcceptFiles
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z PROC NEAR	; CWindow::OnDropFiles, COMDAT
; _this$ = ecx

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 404  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 405  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z ENDP	; CWindow::OnDropFiles
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.h
_TEXT	ENDS
;	COMDAT ?AddRef@CDialog@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CDialog@@UAGKXZ PROC NEAR			; CDialog::AddRef, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 70   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CDialog@@UAGKXZ ENDP				; CDialog::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CDialog@@UAGKXZ
_TEXT	SEGMENT
?Release@CDialog@@UAGKXZ PROC NEAR			; CDialog::Release, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 74   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 75   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CDialog@@UAGKXZ ENDP				; CDialog::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_this$ = -4
?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z PROC NEAR	; CDialog::DefWindowProcA, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 79   :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 80   : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z ENDP	; CDialog::DefWindowProcA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCProjectBuildDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCProjectBuildDialog@@UAEPAXI@Z PROC NEAR		; CProjectBuildDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CProjectBuildDialog@@UAE@XZ ; CProjectBuildDialog::~CProjectBuildDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53346
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53346:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCProjectBuildDialog@@UAEPAXI@Z ENDP			; CProjectBuildDialog::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CWaveBundlerBuildDialog@@UAE@XZ		; CWaveBundlerBuildDialog::~CWaveBundlerBuildDialog
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
;	COMDAT ??1CProjectBuildDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CProjectBuildDialog@@UAE@XZ PROC NEAR		; CProjectBuildDialog::~CProjectBuildDialog, COMDAT
; _this$ = ecx

; 917  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CProjectBuildDialog@@6B@ ; CProjectBuildDialog::`vftable'

; 918  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 34	 add	 ecx, 52			; 00000034H
  00016	e8 00 00 00 00	 call	 ??1CWaveBundlerBuildDialog@@UAE@XZ ; CWaveBundlerBuildDialog::~CWaveBundlerBuildDialog
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1CProjectBuildDialog@@UAE@XZ ENDP			; CProjectBuildDialog::~CProjectBuildDialog
_TEXT	ENDS
EXTRN	?HandleMessage@CDialog@@UAEHIIJPAJ@Z:NEAR	; CDialog::HandleMessage
; Function compile flags: /Odt
;	COMDAT ?HandleMessage@CProjectBuildDialog@@UAEHIIJPAJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_plResult$ = 20
_this$ = -8
_fHandled$ = -4
?HandleMessage@CProjectBuildDialog@@UAEHIIJPAJ@Z PROC NEAR ; CProjectBuildDialog::HandleMessage, COMDAT
; _this$ = ecx

; 950  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 951  :     BOOL                    fHandled;
; 952  :     
; 953  :     switch(uMsg)
; 954  :     {

  00009	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0000f	81 7d f4 00 c4
	00 00		 cmp	 DWORD PTR -12+[ebp], 50176 ; 0000c400H
  00016	74 02		 je	 SHORT $L53363
  00018	eb 1b		 jmp	 SHORT $L53365
$L53363:

; 955  :         case WM_PROJECT_BUILDDONE:
; 956  :             fHandled = OnBuildDone((HRESULT)lParam, plResult);

  0001a	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  00021	52		 push	 edx
  00022	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]
  00030	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 957  :             break;

  00033	eb 1b		 jmp	 SHORT $L53360
$L53365:

; 958  : 
; 959  :         default:
; 960  :             fHandled = CDialog::HandleMessage(uMsg, wParam, lParam, plResult);

  00035	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00040	52		 push	 edx
  00041	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  00044	50		 push	 eax
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?HandleMessage@CDialog@@UAEHIIJPAJ@Z ; CDialog::HandleMessage
  0004d	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax
$L53360:

; 961  :             break;
; 962  :     }
; 963  : 
; 964  :     return fHandled;

  00050	8b 45 fc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 965  : }

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 10 00	 ret	 16			; 00000010H
?HandleMessage@CProjectBuildDialog@@UAEHIIJPAJ@Z ENDP	; CProjectBuildDialog::HandleMessage
_TEXT	ENDS
PUBLIC	?OnCreate@CWindow@@UAEHPAXPAJ@Z			; CWindow::OnCreate
EXTRN	__imp__SetEvent@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CProjectBuildDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -28
_hWndChildFrame$ = -4
_nProgressSteps$ = -24
_rcPlaceholder$ = -20
?OnCreate@CProjectBuildDialog@@UAEHPAXPAJ@Z PROC NEAR	; CProjectBuildDialog::OnCreate, COMDAT
; _this$ = ecx

; 993  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 994  :     HWND                    hWndChildFrame  = GetDlgItem(IDC_PLACEHOLDER);

  00009	68 eb 03 00 00	 push	 1003			; 000003ebH
  0000e	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	ff 52 24	 call	 DWORD PTR [edx+36]
  00019	89 45 fc	 mov	 DWORD PTR _hWndChildFrame$[ebp], eax

; 995  :     UINT                    nProgressSteps;
; 996  :     RECT                    rcPlaceholder;
; 997  :     
; 998  :     if(CDialog::OnCreate(pvContext, plResult))

  0001c	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00023	51		 push	 ecx
  00024	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?OnCreate@CWindow@@UAEHPAXPAJ@Z ; CWindow::OnCreate
  0002c	85 c0		 test	 eax, eax
  0002e	74 0a		 je	 SHORT $L53374

; 999  :     {
; 1000 :         return TRUE;

  00030	b8 01 00 00 00	 mov	 eax, 1
  00035	e9 9c 00 00 00	 jmp	 $L53370
$L53374:

; 1001 :     }
; 1002 : 
; 1003 :     //
; 1004 :     // Determine the total number of steps in building the project
; 1005 :     //
; 1006 : 
; 1007 :     nProgressSteps = g_pApplication->m_Project.m_pWaveBankProject->m_dwEntryCount;

  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00040	8b 82 a0 03 00
	00		 mov	 eax, DWORD PTR [edx+928]
  00046	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00049	89 4d e8	 mov	 DWORD PTR _nProgressSteps$[ebp], ecx

; 1008 : 
; 1009 :     //
; 1010 :     // Initialize controls
; 1011 :     //
; 1012 : 
; 1013 :     SendDlgItemMessage(IDC_OVERALL_PROGRESS, PBM_SETRANGE32, 0, nProgressSteps);

  0004c	8b 55 e8	 mov	 edx, DWORD PTR _nProgressSteps$[ebp]
  0004f	52		 push	 edx
  00050	6a 00		 push	 0
  00052	68 06 04 00 00	 push	 1030			; 00000406H
  00057	68 e8 03 00 00	 push	 1000			; 000003e8H
  0005c	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	ff 52 20	 call	 DWORD PTR [edx+32]

; 1014 : 
; 1015 :     //
; 1016 :     // Load child dialogs
; 1017 :     //
; 1018 : 
; 1019 :     ::GetWindowRect(GetDlgItem(IDC_PLACEHOLDER), &rcPlaceholder);

  00067	8d 45 ec	 lea	 eax, DWORD PTR _rcPlaceholder$[ebp]
  0006a	50		 push	 eax
  0006b	68 eb 03 00 00	 push	 1003			; 000003ebH
  00070	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	8b 11		 mov	 edx, DWORD PTR [ecx]
  00075	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	ff 52 24	 call	 DWORD PTR [edx+36]
  0007b	50		 push	 eax
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 1020 :     ScreenToClient(&rcPlaceholder);

  00082	8d 45 ec	 lea	 eax, DWORD PTR _rcPlaceholder$[ebp]
  00085	50		 push	 eax
  00086	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	ff 52 4c	 call	 DWORD PTR [edx+76]

; 1021 : 
; 1022 :     m_WaveBundler.Create(this);

  00091	6a 00		 push	 0
  00093	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00096	50		 push	 eax
  00097	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	83 c1 34	 add	 ecx, 52			; 00000034H
  0009d	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000a3	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1023 :     m_WaveBundler.MoveWindow(&rcPlaceholder);

  000a9	6a 01		 push	 1
  000ab	8d 4d ec	 lea	 ecx, DWORD PTR _rcPlaceholder$[ebp]
  000ae	51		 push	 ecx
  000af	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	83 c1 34	 add	 ecx, 52			; 00000034H
  000b5	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000bb	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1024 : 
; 1025 :     //
; 1026 :     // Start building
; 1027 :     //
; 1028 : 
; 1029 :     SetEvent(g_pApplication->m_Project.m_hBuildEvent);

  000be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000c4	8b 91 a8 03 00
	00		 mov	 edx, DWORD PTR [ecx+936]
  000ca	52		 push	 edx
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 1030 : 
; 1031 :     //
; 1032 :     // Return TRUE to set the keyboard focus
; 1033 :     //
; 1034 : 
; 1035 :     return TRUE;

  000d1	b8 01 00 00 00	 mov	 eax, 1
$L53370:

; 1036 : }

  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 08 00	 ret	 8
?OnCreate@CProjectBuildDialog@@UAEHPAXPAJ@Z ENDP	; CProjectBuildDialog::OnCreate
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCreate@CWindow@@UAEHPAXPAJ@Z PROC NEAR		; CWindow::OnCreate, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 242  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnCreate@CWindow@@UAEHPAXPAJ@Z ENDP			; CWindow::OnCreate
_TEXT	ENDS
EXTRN	__imp__ShowWindow@8:NEAR
EXTRN	__imp__MessageBeep@4:NEAR
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
;	COMDAT ?OnBuildDone@CProjectBuildDialog@@UAEHJPAJ@Z
_TEXT	SEGMENT
_hr$ = 8
_plResult$ = 12
_this$ = -8
_nStringId$ = -4
?OnBuildDone@CProjectBuildDialog@@UAEHJPAJ@Z PROC NEAR	; CProjectBuildDialog::OnBuildDone, COMDAT
; _this$ = ecx

; 1064 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1065 :     UINT                    nStringId;
; 1066 :     
; 1067 :     //
; 1068 :     // Update the UI
; 1069 :     //
; 1070 : 
; 1071 :     ShowWindow(m_WaveBundler, SW_HIDE);

  00009	6a 00		 push	 0
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 34	 add	 ecx, 52			; 00000034H
  00011	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00017	ff 52 58	 call	 DWORD PTR [edx+88]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 1072 : 
; 1073 :     switch(hr)
; 1074 :     {

  00021	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00024	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00027	81 7d f4 04 40
	00 80		 cmp	 DWORD PTR -12+[ebp], -2147467260 ; 80004004H
  0002e	74 11		 je	 SHORT $L53388
  00030	83 7d f4 00	 cmp	 DWORD PTR -12+[ebp], 0
  00034	74 02		 je	 SHORT $L53386
  00036	eb 12		 jmp	 SHORT $L53389
$L53386:

; 1075 :         case S_OK:
; 1076 :             nStringId = IDS_BUILD_SUCCEEDED;

  00038	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR _nStringId$[ebp], 10 ; 0000000aH

; 1077 :             break;

  0003f	eb 10		 jmp	 SHORT $L53382
$L53388:

; 1078 : 
; 1079 :         case E_ABORT:
; 1080 :             nStringId = IDS_BUILD_ABORTED;

  00041	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR _nStringId$[ebp], 11 ; 0000000bH

; 1081 :             break;

  00048	eb 07		 jmp	 SHORT $L53382
$L53389:

; 1082 : 
; 1083 :         default:
; 1084 :             nStringId = IDS_BUILD_FAILED;

  0004a	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR _nStringId$[ebp], 12 ; 0000000cH
$L53382:

; 1085 :             break;
; 1086 :     }
; 1087 :     
; 1088 :     SetDlgItemText(IDC_PLACEHOLDER, FormatStringResourceStatic(nStringId));

  00051	8b 4d fc	 mov	 ecx, DWORD PTR _nStringId$[ebp]
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 _FormatStringResourceStatic
  0005a	83 c4 04	 add	 esp, 4
  0005d	50		 push	 eax
  0005e	68 eb 03 00 00	 push	 1003			; 000003ebH
  00063	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 02		 mov	 eax, DWORD PTR [edx]
  00068	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	ff 50 2c	 call	 DWORD PTR [eax+44]

; 1089 :     SetDlgItemText(IDCANCEL, FormatStringResourceStatic(IDS_CLOSE));

  0006e	6a 0d		 push	 13			; 0000000dH
  00070	e8 00 00 00 00	 call	 _FormatStringResourceStatic
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	6a 02		 push	 2
  0007b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	ff 52 2c	 call	 DWORD PTR [edx+44]

; 1090 : 
; 1091 :     EnableWindow(GetDlgItem(IDCANCEL), TRUE);

  00086	6a 01		 push	 1
  00088	6a 02		 push	 2
  0008a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 10		 mov	 edx, DWORD PTR [eax]
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	ff 52 24	 call	 DWORD PTR [edx+36]
  00095	50		 push	 eax
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8

; 1092 : 
; 1093 :     //
; 1094 :     // Alert the user
; 1095 :     //
; 1096 :     
; 1097 :     MessageBeep(MB_ICONEXCLAMATION);

  0009c	6a 30		 push	 48			; 00000030H
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 1098 : 
; 1099 :     *plResult = 0;

  000a4	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  000a7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1100 :     return TRUE;

  000ad	b8 01 00 00 00	 mov	 eax, 1

; 1101 : }

  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 08 00	 ret	 8
?OnBuildDone@CProjectBuildDialog@@UAEHJPAJ@Z ENDP	; CProjectBuildDialog::OnBuildDone
_TEXT	ENDS
EXTRN	__imp__GetExitCodeThread@8:NEAR
EXTRN	?OnCmdCancel@CDialog@@UAEXXZ:NEAR		; CDialog::OnCmdCancel
; Function compile flags: /Odt
;	COMDAT ?OnCmdCancel@CProjectBuildDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8
_dwExitCode$ = -4
?OnCmdCancel@CProjectBuildDialog@@UAEXXZ PROC NEAR	; CProjectBuildDialog::OnCmdCancel, COMDAT
; _this$ = ecx

; 1127 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1128 :     DWORD                   dwExitCode  = ~STILL_ACTIVE;

  00009	c7 45 fc fc fe
	ff ff		 mov	 DWORD PTR _dwExitCode$[ebp], -260 ; fffffefcH

; 1129 :     
; 1130 :     //
; 1131 :     // If the thread is still running, we can't just close the dialog
; 1132 :     //
; 1133 : 
; 1134 :     GetExitCodeThread(g_pApplication->m_Project.m_hThread, &dwExitCode);

  00010	8d 45 fc	 lea	 eax, DWORD PTR _dwExitCode$[ebp]
  00013	50		 push	 eax
  00014	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0001a	8b 91 ac 03 00
	00		 mov	 edx, DWORD PTR [ecx+940]
  00020	52		 push	 edx
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetExitCodeThread@8

; 1135 : 
; 1136 :     if(STILL_ACTIVE == dwExitCode)

  00027	81 7d fc 03 01
	00 00		 cmp	 DWORD PTR _dwExitCode$[ebp], 259 ; 00000103H
  0002e	75 4a		 jne	 SHORT $L53397

; 1137 :     {
; 1138 :         g_pApplication->m_Project.CancelBuild();

  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00036	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00041	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  00047	ff 52 3c	 call	 DWORD PTR [edx+60]

; 1139 :         
; 1140 :         SetDlgItemText(IDCANCEL, FormatStringResourceStatic(IDS_ABORTING));

  0004a	6a 0e		 push	 14			; 0000000eH
  0004c	e8 00 00 00 00	 call	 _FormatStringResourceStatic
  00051	83 c4 04	 add	 esp, 4
  00054	50		 push	 eax
  00055	6a 02		 push	 2
  00057	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 10		 mov	 edx, DWORD PTR [eax]
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	ff 52 2c	 call	 DWORD PTR [edx+44]

; 1141 :         EnableWindow(GetDlgItem(IDCANCEL), FALSE);

  00062	6a 00		 push	 0
  00064	6a 02		 push	 2
  00066	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 10		 mov	 edx, DWORD PTR [eax]
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	ff 52 24	 call	 DWORD PTR [edx+36]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8

; 1142 :     }
; 1143 :     else

  00078	eb 08		 jmp	 SHORT $L53398
$L53397:

; 1144 :     {
; 1145 :         CDialog::OnCmdCancel();

  0007a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?OnCmdCancel@CDialog@@UAEXXZ ; CDialog::OnCmdCancel
$L53398:

; 1146 :     }
; 1147 : }

  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?OnCmdCancel@CProjectBuildDialog@@UAEXXZ ENDP		; CProjectBuildDialog::OnCmdCancel
_TEXT	ENDS
PUBLIC	?CloseBank@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z ; CWaveBankCallback::CloseBank
PUBLIC	?OpenHeader@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z ; CWaveBankCallback::OpenHeader
PUBLIC	?CloseHeader@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z ; CWaveBankCallback::CloseHeader
PUBLIC	??0CWaveBankCallback@@QAE@XZ			; CWaveBankCallback::CWaveBankCallback
PUBLIC	?BeginProject@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankProject@@@Z ; CWaveBundlerBuildDialog::BeginProject
PUBLIC	?EndProject@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankProject@@J@Z ; CWaveBundlerBuildDialog::EndProject
PUBLIC	?OpenBank@CWaveBundlerBuildDialog@@MAEHPAVCWaveBank@@@Z ; CWaveBundlerBuildDialog::OpenBank
PUBLIC	?BeginEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@@Z ; CWaveBundlerBuildDialog::BeginEntry
PUBLIC	?ProcessEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@K@Z ; CWaveBundlerBuildDialog::ProcessEntry
PUBLIC	?EndEntry@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankEntry@@@Z ; CWaveBundlerBuildDialog::EndEntry
PUBLIC	??_7CWaveBundlerBuildDialog@@6BCDialog@@@	; CWaveBundlerBuildDialog::`vftable'
PUBLIC	??_7CWaveBundlerBuildDialog@@6BCWaveBankCallback@@@ ; CWaveBundlerBuildDialog::`vftable'
PUBLIC	??_GCWaveBundlerBuildDialog@@UAEPAXI@Z		; CWaveBundlerBuildDialog::`scalar deleting destructor'
PUBLIC	??_ECWaveBundlerBuildDialog@@UAEPAXI@Z		; CWaveBundlerBuildDialog::`vector deleting destructor'
;	COMDAT ??_7CWaveBundlerBuildDialog@@6BCDialog@@@
CONST	SEGMENT
??_7CWaveBundlerBuildDialog@@6BCDialog@@@ DD FLAT:??_ECWaveBundlerBuildDialog@@UAEPAXI@Z ; CWaveBundlerBuildDialog::`vftable'
	DD	FLAT:?AddRef@CDialog@@UAGKXZ
	DD	FLAT:?Release@CDialog@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CDialog@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?OnCmdOK@CDialog@@UAEXXZ
	DD	FLAT:?OnCmdCancel@CDialog@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CWaveBundlerBuildDialog@@6BCWaveBankCallback@@@
CONST	SEGMENT
??_7CWaveBundlerBuildDialog@@6BCWaveBankCallback@@@ DD FLAT:?BeginProject@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankProject@@@Z ; CWaveBundlerBuildDialog::`vftable'
	DD	FLAT:?EndProject@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankProject@@J@Z
	DD	FLAT:?OpenBank@CWaveBundlerBuildDialog@@MAEHPAVCWaveBank@@@Z
	DD	FLAT:?CloseBank@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
	DD	FLAT:?OpenHeader@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z
	DD	FLAT:?CloseHeader@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
	DD	FLAT:?BeginEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@@Z
	DD	FLAT:?ProcessEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@K@Z
	DD	FLAT:?EndEntry@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankEntry@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBundlerBuildDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBundlerBuildDialog@@QAE@XZ PROC NEAR		; CWaveBundlerBuildDialog::CWaveBundlerBuildDialog, COMDAT
; _this$ = ecx

; 1173 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 71		 push	 113			; 00000071H
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CDialog@@QAE@I@Z	; CDialog::CDialog
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 34	 add	 ecx, 52			; 00000034H
  00017	e8 00 00 00 00	 call	 ??0CWaveBankCallback@@QAE@XZ ; CWaveBankCallback::CWaveBankCallback
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBundlerBuildDialog@@6BCDialog@@@ ; CWaveBundlerBuildDialog::`vftable'
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], OFFSET FLAT:??_7CWaveBundlerBuildDialog@@6BCWaveBankCallback@@@ ; CWaveBundlerBuildDialog::`vftable'

; 1174 : }

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??0CWaveBundlerBuildDialog@@QAE@XZ ENDP			; CWaveBundlerBuildDialog::CWaveBundlerBuildDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\writer.h
_TEXT	ENDS
;	COMDAT ?CloseBank@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT
_this$ = -4
?CloseBank@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z PROC NEAR ; CWaveBankCallback::CloseBank, COMDAT
; _this$ = ecx

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 229  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?CloseBank@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z ENDP	; CWaveBankCallback::CloseBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenHeader@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z
_TEXT	SEGMENT
_this$ = -4
?OpenHeader@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z PROC NEAR ; CWaveBankCallback::OpenHeader, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 234  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?OpenHeader@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z ENDP ; CWaveBankCallback::OpenHeader
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?CloseHeader@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT
_this$ = -4
?CloseHeader@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z PROC NEAR ; CWaveBankCallback::CloseHeader, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 238  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?CloseHeader@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z ENDP ; CWaveBankCallback::CloseHeader
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCWaveBundlerBuildDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWaveBundlerBuildDialog@@UAEPAXI@Z PROC NEAR	; CWaveBundlerBuildDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWaveBundlerBuildDialog@@UAE@XZ ; CWaveBundlerBuildDialog::~CWaveBundlerBuildDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53406
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53406:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWaveBundlerBuildDialog@@UAEPAXI@Z ENDP		; CWaveBundlerBuildDialog::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?BeginProject@CWaveBankCallback@@UAEHPAVCWaveBankProject@@@Z ; CWaveBankCallback::BeginProject
PUBLIC	?EndProject@CWaveBankCallback@@UAEXPAVCWaveBankProject@@J@Z ; CWaveBankCallback::EndProject
PUBLIC	?OpenBank@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z ; CWaveBankCallback::OpenBank
PUBLIC	?BeginEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@@Z ; CWaveBankCallback::BeginEntry
PUBLIC	?ProcessEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@K@Z ; CWaveBankCallback::ProcessEntry
PUBLIC	?EndEntry@CWaveBankCallback@@UAEXPAVCWaveBankEntry@@@Z ; CWaveBankCallback::EndEntry
PUBLIC	??_7CWaveBankCallback@@6B@			; CWaveBankCallback::`vftable'
;	COMDAT ??_7CWaveBankCallback@@6B@
CONST	SEGMENT
??_7CWaveBankCallback@@6B@ DD FLAT:?BeginProject@CWaveBankCallback@@UAEHPAVCWaveBankProject@@@Z ; CWaveBankCallback::`vftable'
	DD	FLAT:?EndProject@CWaveBankCallback@@UAEXPAVCWaveBankProject@@J@Z
	DD	FLAT:?OpenBank@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z
	DD	FLAT:?CloseBank@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
	DD	FLAT:?OpenHeader@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z
	DD	FLAT:?CloseHeader@CWaveBankCallback@@UAEXPAVCWaveBank@@@Z
	DD	FLAT:?BeginEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@@Z
	DD	FLAT:?ProcessEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@K@Z
	DD	FLAT:?EndEntry@CWaveBankCallback@@UAEXPAVCWaveBankEntry@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankCallback@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBankCallback@@QAE@XZ PROC NEAR			; CWaveBankCallback::CWaveBankCallback, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankCallback@@6B@ ; CWaveBankCallback::`vftable'
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CWaveBankCallback@@QAE@XZ ENDP			; CWaveBankCallback::CWaveBankCallback
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBankCallback@@UAEHPAVCWaveBankProject@@@Z
_TEXT	SEGMENT
_this$ = -4
?BeginProject@CWaveBankCallback@@UAEHPAVCWaveBankProject@@@Z PROC NEAR ; CWaveBankCallback::BeginProject, COMDAT
; _this$ = ecx

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 215  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 216  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?BeginProject@CWaveBankCallback@@UAEHPAVCWaveBankProject@@@Z ENDP ; CWaveBankCallback::BeginProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBankCallback@@UAEXPAVCWaveBankProject@@J@Z
_TEXT	SEGMENT
_this$ = -4
?EndProject@CWaveBankCallback@@UAEXPAVCWaveBankProject@@J@Z PROC NEAR ; CWaveBankCallback::EndProject, COMDAT
; _this$ = ecx

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 220  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 08 00	 ret	 8
?EndProject@CWaveBankCallback@@UAEXPAVCWaveBankProject@@J@Z ENDP ; CWaveBankCallback::EndProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z
_TEXT	SEGMENT
_this$ = -4
?OpenBank@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z PROC NEAR ; CWaveBankCallback::OpenBank, COMDAT
; _this$ = ecx

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 224  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 225  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?OpenBank@CWaveBankCallback@@UAEHPAVCWaveBank@@@Z ENDP	; CWaveBankCallback::OpenBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT
_this$ = -4
?BeginEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@@Z PROC NEAR ; CWaveBankCallback::BeginEntry, COMDAT
; _this$ = ecx

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 243  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?BeginEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@@Z ENDP ; CWaveBankCallback::BeginEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ProcessEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@K@Z
_TEXT	SEGMENT
_this$ = -4
?ProcessEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@K@Z PROC NEAR ; CWaveBankCallback::ProcessEntry, COMDAT
; _this$ = ecx

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 247  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 248  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?ProcessEntry@CWaveBankCallback@@UAEHPAVCWaveBankEntry@@K@Z ENDP ; CWaveBankCallback::ProcessEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBankCallback@@UAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT
_this$ = -4
?EndEntry@CWaveBankCallback@@UAEXPAVCWaveBankEntry@@@Z PROC NEAR ; CWaveBankCallback::EndEntry, COMDAT
; _this$ = ecx

; 251  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 252  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?EndEntry@CWaveBankCallback@@UAEXPAVCWaveBankEntry@@@Z ENDP ; CWaveBankCallback::EndEntry
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\project.cpp
_TEXT	ENDS
;	COMDAT ??1CWaveBundlerBuildDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWaveBundlerBuildDialog@@UAE@XZ PROC NEAR		; CWaveBundlerBuildDialog::~CWaveBundlerBuildDialog, COMDAT
; _this$ = ecx

; 1199 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBundlerBuildDialog@@6BCDialog@@@ ; CWaveBundlerBuildDialog::`vftable'
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], OFFSET FLAT:??_7CWaveBundlerBuildDialog@@6BCWaveBankCallback@@@ ; CWaveBundlerBuildDialog::`vftable'

; 1200 : }

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??1CWaveBundlerBuildDialog@@UAE@XZ ENDP			; CWaveBundlerBuildDialog::~CWaveBundlerBuildDialog
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankProject@@@Z
_TEXT	SEGMENT
_this$ = -4
?BeginProject@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankProject@@@Z PROC NEAR ; CWaveBundlerBuildDialog::BeginProject, COMDAT
; _this$ = ecx

; 1226 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1227 :     //
; 1228 :     // Make the dialog visible
; 1229 :     //
; 1230 : 
; 1231 :     ShowWindow(m_hWnd, SW_SHOW);

  00007	6a 05		 push	 5
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 e4	 mov	 ecx, DWORD PTR [eax-28]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 1232 : 
; 1233 :     //
; 1234 :     // Check for a cancellation
; 1235 :     //
; 1236 : 
; 1237 :     return !g_pApplication->m_Project.CheckBuildCancellation();

  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0001c	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00022	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00028	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  0002e	ff 50 40	 call	 DWORD PTR [eax+64]
  00031	f7 d8		 neg	 eax
  00033	1b c0		 sbb	 eax, eax
  00035	40		 inc	 eax

; 1238 : }

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
?BeginProject@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankProject@@@Z ENDP ; CWaveBundlerBuildDialog::BeginProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankProject@@J@Z
_TEXT	SEGMENT
_this$ = -4
?EndProject@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankProject@@J@Z PROC NEAR ; CWaveBundlerBuildDialog::EndProject, COMDAT
; _this$ = ecx

; 1266 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1267 :     //
; 1268 :     // Hide the dialog
; 1269 :     //
; 1270 : 
; 1271 :     ShowWindow(m_hWnd, SW_HIDE);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 e4	 mov	 ecx, DWORD PTR [eax-28]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 1272 : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?EndProject@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankProject@@J@Z ENDP ; CWaveBundlerBuildDialog::EndProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBundlerBuildDialog@@MAEHPAVCWaveBank@@@Z
_TEXT	SEGMENT
_pBank$ = 8
_this$ = -4
?OpenBank@CWaveBundlerBuildDialog@@MAEHPAVCWaveBank@@@Z PROC NEAR ; CWaveBundlerBuildDialog::OpenBank, COMDAT
; _this$ = ecx

; 1298 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1299 :     //
; 1300 :     // Update the UI
; 1301 :     //
; 1302 :     
; 1303 :     SetDlgItemText(IDC_CURRENT_BANK, pBank->m_szBankName);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  0000a	83 c0 10	 add	 eax, 16			; 00000010H
  0000d	50		 push	 eax
  0000e	68 ef 03 00 00	 push	 1007			; 000003efH
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 e9 34	 sub	 ecx, 52			; 00000034H
  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	8b 42 cc	 mov	 eax, DWORD PTR [edx-52]
  0001f	ff 50 2c	 call	 DWORD PTR [eax+44]

; 1304 : 
; 1305 :     //
; 1306 :     // Set up progress indicators
; 1307 :     //
; 1308 : 
; 1309 :     SendDlgItemMessage(IDC_BANK_PROGRESS, PBM_SETPOS, 0, 0);

  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	68 02 04 00 00	 push	 1026			; 00000402H
  0002b	68 ee 03 00 00	 push	 1006			; 000003eeH
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	83 e9 34	 sub	 ecx, 52			; 00000034H
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	8b 42 cc	 mov	 eax, DWORD PTR [edx-52]
  0003c	ff 50 20	 call	 DWORD PTR [eax+32]

; 1310 :     SendDlgItemMessage(IDC_BANK_PROGRESS, PBM_SETRANGE32, 0, pBank->m_dwEntryCount);

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00042	8b 91 40 02 00
	00		 mov	 edx, DWORD PTR [ecx+576]
  00048	52		 push	 edx
  00049	6a 00		 push	 0
  0004b	68 06 04 00 00	 push	 1030			; 00000406H
  00050	68 ee 03 00 00	 push	 1006			; 000003eeH
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 e9 34	 sub	 ecx, 52			; 00000034H
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 50 cc	 mov	 edx, DWORD PTR [eax-52]
  00061	ff 52 20	 call	 DWORD PTR [edx+32]

; 1311 : 
; 1312 :     //
; 1313 :     // Check for a cancellation
; 1314 :     //
; 1315 : 
; 1316 :     return !g_pApplication->m_Project.CheckBuildCancellation();

  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0006a	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00075	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0007b	ff 52 40	 call	 DWORD PTR [edx+64]
  0007e	f7 d8		 neg	 eax
  00080	1b c0		 sbb	 eax, eax
  00082	40		 inc	 eax

; 1317 : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
?OpenBank@CWaveBundlerBuildDialog@@MAEHPAVCWaveBank@@@Z ENDP ; CWaveBundlerBuildDialog::OpenBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT
_pEntry$ = 8
_this$ = -4
?BeginEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@@Z PROC NEAR ; CWaveBundlerBuildDialog::BeginEntry, COMDAT
; _this$ = ecx

; 1343 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1344 :     //
; 1345 :     // Update the UI
; 1346 :     //
; 1347 : 
; 1348 :     SetDlgItemText(IDC_CURRENT_ENTRY, pEntry->m_szEntryName);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0000a	83 c0 10	 add	 eax, 16			; 00000010H
  0000d	50		 push	 eax
  0000e	68 f0 03 00 00	 push	 1008			; 000003f0H
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 e9 34	 sub	 ecx, 52			; 00000034H
  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	8b 42 cc	 mov	 eax, DWORD PTR [edx-52]
  0001f	ff 50 2c	 call	 DWORD PTR [eax+44]

; 1349 : 
; 1350 : #ifdef IDC_ENTRY_PROGRESS
; 1351 : 
; 1352 :     //
; 1353 :     // Set up progress indicators
; 1354 :     //
; 1355 : 
; 1356 :     SendDlgItemMessage(IDC_ENTRY_PROGRESS, PBM_SETPOS, 0, 0);

  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	68 02 04 00 00	 push	 1026			; 00000402H
  0002b	68 f2 03 00 00	 push	 1010			; 000003f2H
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	83 e9 34	 sub	 ecx, 52			; 00000034H
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	8b 42 cc	 mov	 eax, DWORD PTR [edx-52]
  0003c	ff 50 20	 call	 DWORD PTR [eax+32]

; 1357 :     SendDlgItemMessage(IDC_ENTRY_PROGRESS, PBM_SETRANGE32, 0, pEntry->m_PlayRegion.dwLength);

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00042	8b 91 1c 03 00
	00		 mov	 edx, DWORD PTR [ecx+796]
  00048	52		 push	 edx
  00049	6a 00		 push	 0
  0004b	68 06 04 00 00	 push	 1030			; 00000406H
  00050	68 f2 03 00 00	 push	 1010			; 000003f2H
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 e9 34	 sub	 ecx, 52			; 00000034H
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 50 cc	 mov	 edx, DWORD PTR [eax-52]
  00061	ff 52 20	 call	 DWORD PTR [edx+32]

; 1358 : 
; 1359 : #endif // IDC_ENTRY_PROGRESS
; 1360 : 
; 1361 :     //
; 1362 :     // Check for a cancellation
; 1363 :     //
; 1364 : 
; 1365 :     return !g_pApplication->m_Project.CheckBuildCancellation();

  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0006a	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00075	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0007b	ff 52 40	 call	 DWORD PTR [edx+64]
  0007e	f7 d8		 neg	 eax
  00080	1b c0		 sbb	 eax, eax
  00082	40		 inc	 eax

; 1366 : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
?BeginEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@@Z ENDP ; CWaveBundlerBuildDialog::BeginEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ProcessEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@K@Z
_TEXT	SEGMENT
_dwProcessed$ = 12
_this$ = -4
?ProcessEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@K@Z PROC NEAR ; CWaveBundlerBuildDialog::ProcessEntry, COMDAT
; _this$ = ecx

; 1394 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1395 : 
; 1396 : #ifdef IDC_ENTRY_PROGRESS
; 1397 : 
; 1398 :     //
; 1399 :     // Update the UI
; 1400 :     //
; 1401 : 
; 1402 :     SendDlgItemMessage(IDC_ENTRY_PROGRESS, PBM_SETPOS, dwProcessed, 0);

  00007	6a 00		 push	 0
  00009	8b 45 0c	 mov	 eax, DWORD PTR _dwProcessed$[ebp]
  0000c	50		 push	 eax
  0000d	68 02 04 00 00	 push	 1026			; 00000402H
  00012	68 f2 03 00 00	 push	 1010			; 000003f2H
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 e9 34	 sub	 ecx, 52			; 00000034H
  0001d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00020	8b 42 cc	 mov	 eax, DWORD PTR [edx-52]
  00023	ff 50 20	 call	 DWORD PTR [eax+32]

; 1403 : 
; 1404 : #endif // IDC_ENTRY_PROGRESS
; 1405 : 
; 1406 :     //
; 1407 :     // Check for a cancellation
; 1408 :     //
; 1409 : 
; 1410 :     return !g_pApplication->m_Project.CheckBuildCancellation();

  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0002c	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00038	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  0003e	ff 50 40	 call	 DWORD PTR [eax+64]
  00041	f7 d8		 neg	 eax
  00043	1b c0		 sbb	 eax, eax
  00045	40		 inc	 eax

; 1411 : }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
?ProcessEntry@CWaveBundlerBuildDialog@@MAEHPAVCWaveBankEntry@@K@Z ENDP ; CWaveBundlerBuildDialog::ProcessEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT
_this$ = -4
?EndEntry@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankEntry@@@Z PROC NEAR ; CWaveBundlerBuildDialog::EndEntry, COMDAT
; _this$ = ecx

; 1437 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1438 :     //
; 1439 :     // Update the UI
; 1440 :     //
; 1441 : 
; 1442 :     SendDlgItemMessage(IDC_BANK_PROGRESS, PBM_DELTAPOS, 1, 0);

  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	68 03 04 00 00	 push	 1027			; 00000403H
  00010	68 ee 03 00 00	 push	 1006			; 000003eeH
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 e9 34	 sub	 ecx, 52			; 00000034H
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 50 cc	 mov	 edx, DWORD PTR [eax-52]
  00021	ff 52 20	 call	 DWORD PTR [edx+32]

; 1443 :     m_pParent->SendDlgItemMessage(IDC_OVERALL_PROGRESS, PBM_DELTAPOS, 1, 0);

  00024	6a 00		 push	 0
  00026	6a 01		 push	 1
  00028	68 03 04 00 00	 push	 1027			; 00000403H
  0002d	68 e8 03 00 00	 push	 1000			; 000003e8H
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 d8	 mov	 ecx, DWORD PTR [eax-40]
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	8b 42 d8	 mov	 eax, DWORD PTR [edx-40]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b c8		 mov	 ecx, eax
  00042	ff 52 20	 call	 DWORD PTR [edx+32]

; 1444 : }

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?EndEntry@CWaveBundlerBuildDialog@@MAEXPAVCWaveBankEntry@@@Z ENDP ; CWaveBundlerBuildDialog::EndEntry
_TEXT	ENDS
END
