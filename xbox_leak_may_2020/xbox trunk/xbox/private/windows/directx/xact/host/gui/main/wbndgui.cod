; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@CLP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GHLG@hdc?5?$DN?$DN?5m_hdc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@EKAA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03KAKF@xwb?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DP@FPMN@C?1C?$CL?$CL?5Headers?5Files?5?$CI?$CK?4h?$DL?$CK?4hpp?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01KDJI@h?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0JD@BODL@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03MECJ@PCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05EAGJ@TCHAR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07FEMJ@XACTGUI?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@MFED@CWaveBankWindow?3?3OnCmdAddEntry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DA@OEKO@None?5of?5the?5entries?5were?5added?5t@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@GALH@CWaveBankWindow?3?3OnDropFiles?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DG@GPDG@None?5of?5the?5dropped?5files?5were?5a@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OLBJ@Not?5all?5of?5the?5dropped?5files?5wer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginWaitCursor@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndWaitCursor@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CDialog@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CDialog@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RestoreObject@CTempSelectObject@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetResolution@CWaveformRenderer@@UAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelectedCount@CListView@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetText@CListViewItem@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EditLabel@CListViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PtrFromListIndex@CListView@@UAEPAVCListViewItem@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetName@CXboxAdpcmFilter@@SGPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetName@C8BitFilter@@SGPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@MAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeDirty@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CWaveBankListView@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CWaveBankListView@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWaveBankListView@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CWaveBankWindow@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CWaveBankWindow@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Initialize@CWaveBankWindow@@UAEXPAVCGuiWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnActivate@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDeactivate@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeDirty@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGuiWaveBankProject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGuiWaveBankProject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGuiWaveBankProject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WaveBankEntryOFNHookProc@CGuiWaveBankProject@@CGIPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGuiWaveBank@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGuiWaveBank@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Initialize@CGuiWaveBank@@UAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetName@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBankPath@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHeaderPath@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFlags@CGuiWaveBank@@UAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAlignment@CGuiWaveBank@@UAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenList@CGuiWaveBank@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseList@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateUI@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGetInfoTip@CGuiWaveBank@@UAEXPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CGuiWaveBank@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CGuiWaveBank@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CGuiWaveBank@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdRefresh@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdRename@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdRemove@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdProperties@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGuiWaveBankEntry@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGuiWaveBankEntry@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CGuiWaveBankEntry@@UAEJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetName@CGuiWaveBankEntry@@UAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateUI@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CGuiWaveBankEntry@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnStateChanged@CGuiWaveBankEntry@@UAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdPlay@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWaveBankWindow@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankListView@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWaveBankListView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWaveBankListView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWaveBankWindow@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CWaveBankWindow@@UAEHPAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWaveBankWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWaveBankWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWaveBankWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdRename@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdRemove@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdSetFlags@CWaveBankWindow@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdSelectAll@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdPlay@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdStop@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CWaveBankWindow@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateCommandState@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableCommandUpdate@CWaveBankWindow@@UAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdAddEntry@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWaveBankWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankPropertiesDialog@@QAE@PAVCGuiWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWaveBankPropertiesDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWaveBankPropertiesDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWaveBankPropertiesDialog@@MAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWaveBankPropertiesDialog@@MAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdOK@CWaveBankPropertiesDialog@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdBrowseBankPath@CWaveBankPropertiesDialog@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdBrowseHeaderPath@CWaveBankPropertiesDialog@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECGuiWaveBank@@WCEM@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECGuiWaveBankEntry@@WDDI@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGuiWaveBank@@6BCMainProjectTreeItem@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGuiWaveBankEntry@@6BCListViewItem@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGuiWaveBank@@6BCWaveBank@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGuiWaveBankProject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveBankListView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveBankPropertiesDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGuiWaveBankEntry@@6BCWaveBankEntry@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveBankWindow@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@ ; `string'
PUBLIC	??_C@_0DP@FPMN@C?1C?$CL?$CL?5Headers?5Files?5?$CI?$CK?4h?$DL?$CK?4hpp?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0JD@BODL@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@ ; `string'
PUBLIC	?m_aColumnData@CGuiWaveBankEntry@@2QBULVCOLUMNDATA@@B ; CGuiWaveBankEntry::m_aColumnData
CONST	SEGMENT
?m_aColumnData@CGuiWaveBankEntry@@2QBULVCOLUMNDATA@@B DD 0101H ; CGuiWaveBankEntry::m_aColumnData
	DD	00H
	DD	01H
	DD	0102H
	DD	01H
	DD	01H
	DD	0103H
	DD	01H
	DD	01H
	DD	0104H
	DD	01H
	DD	01H
	DD	0105H
	DD	01H
	DD	01H
	DD	0106H
	DD	01H
	DD	01H
	DD	0107H
	DD	00H
	DD	01H
	DD	0108H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT ??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@
CONST	SEGMENT
??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@ DB 'W'
	DB	'ave Bank Files (*.xwb)', 00H, '*.xwb', 00H, 'All Files (*.*)', 00H
	DB	'*.*', 00H, 00H				; `string'
CONST	ENDS
CONST	SEGMENT
?pszFilter@?1??BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4QBDB DD FLAT:??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@ ; `CGuiWaveBankProject::BrowseBankFile'::`2'::pszFilter
?dwOfnFlags@?1??BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4KB DD 0880804H ; `CGuiWaveBankProject::BrowseBankFile'::`2'::dwOfnFlags
CONST	ENDS
;	COMDAT ??_C@_0DP@FPMN@C?1C?$CL?$CL?5Headers?5Files?5?$CI?$CK?4h?$DL?$CK?4hpp?$CJ?$AA@
CONST	SEGMENT
??_C@_0DP@FPMN@C?1C?$CL?$CL?5Headers?5Files?5?$CI?$CK?4h?$DL?$CK?4hpp?$CJ?$AA@ DB 'C'
	DB	'/C++ Headers Files (*.h;*.hpp)', 00H, '*.h;*.hpp', 00H, 'All '
	DB	'Files (*.*)', 00H, '*.*', 00H, 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?pszFilter@?1??BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4QBDB DD FLAT:??_C@_0DP@FPMN@C?1C?$CL?$CL?5Headers?5Files?5?$CI?$CK?4h?$DL?$CK?4hpp?$CJ?$AA@ ; `CGuiWaveBankProject::BrowseHeaderFile'::`2'::pszFilter
?dwOfnFlags@?1??BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4KB DD 0880804H ; `CGuiWaveBankProject::BrowseHeaderFile'::`2'::dwOfnFlags
CONST	ENDS
;	COMDAT ??_C@_0JD@BODL@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@
CONST	SEGMENT
??_C@_0JD@BODL@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@ DB 'S'
	DB	'ound Files (*.wav;*.aif;*.aiff)', 00H, '*.wav;*.aif;*.aiff', 00H
	DB	'Wave Files (*.wav)', 00H, '*.wav', 00H, 'Macintosh AIFF Files'
	DB	' (*.aif;*.aiff)', 00H, '*.aif;*.aiff', 00H, 'All Files (*.*)', 00H
	DB	'*.*', 00H, 00H				; `string'
CONST	ENDS
CONST	SEGMENT
?pszFilter@?1??BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4QBDB DD FLAT:??_C@_0JD@BODL@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@ ; `CGuiWaveBankProject::BrowseEntryFile'::`2'::pszFilter
?nPaneControlId@?1??WaveBankEntryOFNHookProc@CGuiWaveBankProject@@CGIPAUHWND__@@IIJ@Z@4IB DD 04a0H ; `CGuiWaveBankProject::WaveBankEntryOFNHookProc'::`2'::nPaneControlId
?dwExStyle@?1??OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z@4KB DD 00H ; `CWaveBankWindow::OnCreate'::`2'::dwExStyle
?dwStyle@?1??OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z@4KB DD 050000b89H ; `CWaveBankWindow::OnCreate'::`2'::dwStyle
?dwListExStyle@?1??OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z@4KB DD 04020H ; `CWaveBankWindow::OnCreate'::`2'::dwListExStyle
?dwMask@?1??OnCmdSetFlags@CWaveBankWindow@@UAEXK@Z@4KB DD 03H ; `CWaveBankWindow::OnCmdSetFlags'::`2'::dwMask
?anCommands@?1??UpdateCommandState@CWaveBankWindow@@UAEXXZ@4QBIB DD 09c48H ; `CWaveBankWindow::UpdateCommandState'::`2'::anCommands
	DD	09c49H
	DD	09c4aH
	DD	09c4cH
	DD	09c4dH
	DD	09c65H
	DD	09c66H
?dwMaxEntries@?1??OnCmdAddEntry@CWaveBankWindow@@UAEXXZ@4KB DD 080H ; `CWaveBankWindow::OnCmdAddEntry'::`2'::dwMaxEntries
?nDefaultAlignmentCount@?1??OnCreate@CWaveBankPropertiesDialog@@MAEHPAXPAJ@Z@4IB DD 0fH ; `CWaveBankPropertiesDialog::OnCreate'::`2'::nDefaultAlignmentCount
CONST	ENDS
PUBLIC	?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z ; CWaveBankProject::RemoveBank
PUBLIC	??0CGuiWaveBankProject@@QAE@XZ			; CGuiWaveBankProject::CGuiWaveBankProject
PUBLIC	?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ ; CGuiWaveBankProject::CreateBank
PUBLIC	??_7CGuiWaveBankProject@@6B@			; CGuiWaveBankProject::`vftable'
PUBLIC	??_GCGuiWaveBankProject@@UAEPAXI@Z		; CGuiWaveBankProject::`scalar deleting destructor'
PUBLIC	??_ECGuiWaveBankProject@@UAEPAXI@Z		; CGuiWaveBankProject::`vector deleting destructor'
EXTRN	??0CWaveBankProject@@QAE@XZ:NEAR		; CWaveBankProject::CWaveBankProject
EXTRN	?AddBank@CWaveBankProject@@UAEJPBD00PAPAVCWaveBank@@@Z:NEAR ; CWaveBankProject::AddBank
EXTRN	?Generate@CWaveBankProject@@UAEJPAVCWaveBankCallback@@H@Z:NEAR ; CWaveBankProject::Generate
;	COMDAT ??_7CGuiWaveBankProject@@6B@
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
CONST	SEGMENT
??_7CGuiWaveBankProject@@6B@ DD FLAT:??_ECGuiWaveBankProject@@UAEPAXI@Z ; CGuiWaveBankProject::`vftable'
	DD	FLAT:?AddBank@CWaveBankProject@@UAEJPBD00PAPAVCWaveBank@@@Z
	DD	FLAT:?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z
	DD	FLAT:?Generate@CWaveBankProject@@UAEJPAVCWaveBankCallback@@H@Z
	DD	FLAT:?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CGuiWaveBankProject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CGuiWaveBankProject@@QAE@XZ PROC NEAR		; CGuiWaveBankProject::CGuiWaveBankProject, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CWaveBankProject@@QAE@XZ ; CWaveBankProject::CWaveBankProject
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBankProject@@6B@ ; CGuiWaveBankProject::`vftable'

; 53   : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CGuiWaveBankProject@@QAE@XZ ENDP			; CGuiWaveBankProject::CGuiWaveBankProject
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\writer.h
_TEXT	ENDS
;	COMDAT ?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT
_pBank$ = 8
_this$ = -12
$T54095 = -4
$T54096 = -8
?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z PROC NEAR ; CWaveBankProject::RemoveBank, COMDAT
; _this$ = ecx

; 186  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 187  :     DELETE(pBank);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  0000d	74 31		 je	 SHORT $L50910
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR $T54096[ebp], eax
  00015	8b 4d f8	 mov	 ecx, DWORD PTR $T54096[ebp]
  00018	89 4d fc	 mov	 DWORD PTR $T54095[ebp], ecx
  0001b	83 7d fc 00	 cmp	 DWORD PTR $T54095[ebp], 0
  0001f	74 11		 je	 SHORT $L54097
  00021	6a 01		 push	 1
  00023	8b 55 fc	 mov	 edx, DWORD PTR $T54095[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR $T54095[ebp]
  0002b	ff 10		 call	 DWORD PTR [eax]
  0002d	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  00030	eb 07		 jmp	 SHORT $L54098
$L54097:
  00032	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L54098:
  00039	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pBank$[ebp], 0
$L50910:

; 188  : }

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z ENDP	; CWaveBankProject::RemoveBank
_TEXT	ENDS
PUBLIC	??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z	; CGuiWaveBank::CGuiWaveBank
PUBLIC	??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@	; `string'
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.h
CONST	SEGMENT
??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@ DB 'CGuiWaveBank(this)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\main\wbndgui.h', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ
_TEXT	SEGMENT
$T54102 = -4
_this$ = -8
?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ PROC NEAR ; CGuiWaveBankProject::CreateBank, COMDAT
; _this$ = ecx

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 335  :     return NEW(CGuiWaveBank(this));

  00009	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@ ; `string'
  0000e	68 4f 01 00 00	 push	 335			; 0000014fH
  00013	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00018	68 90 04 00 00	 push	 1168			; 00000490H
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR $T54102[ebp], eax
  00028	83 7d fc 00	 cmp	 DWORD PTR $T54102[ebp], 0
  0002c	74 11		 je	 SHORT $L54103
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	50		 push	 eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR $T54102[ebp]
  00035	e8 00 00 00 00	 call	 ??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z ; CGuiWaveBank::CGuiWaveBank
  0003a	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0003d	eb 07		 jmp	 SHORT $L54104
$L54103:
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L54104:
  00046	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 336  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ ENDP ; CGuiWaveBankProject::CreateBank
_TEXT	ENDS
EXTRN	?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolAlloc
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT
_cbBuffer$ = 8
_pszFile$ = 12
_nLine$ = 16
_pszClass$ = 20
??2@YAPAXIPBDK0@Z PROC NEAR				; operator new, COMDAT

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 233  :     return DirectSound::CMemoryManager::TrackingMemAlloc(pszFile, nLine, pszClass, DSOUND_OBJECT_POOL_TAG, cbBuffer, TRUE); 

  00003	6a 01		 push	 1
  00005	8b 45 08	 mov	 eax, DWORD PTR _cbBuffer$[ebp]
  00008	50		 push	 eax
  00009	68 44 53 6f 62	 push	 1651462980		; 626f5344H
  0000e	8b 4d 14	 mov	 ecx, DWORD PTR _pszClass$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 10	 mov	 edx, DWORD PTR _nLine$[ebp]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc

; 234  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??2@YAPAXIPBDK0@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??1CGuiWaveBankProject@@UAE@XZ			; CGuiWaveBankProject::~CGuiWaveBankProject
; Function compile flags: /Odt
;	COMDAT ??_GCGuiWaveBankProject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGuiWaveBankProject@@UAEPAXI@Z PROC NEAR		; CGuiWaveBankProject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGuiWaveBankProject@@UAE@XZ ; CGuiWaveBankProject::~CGuiWaveBankProject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53185
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53185:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGuiWaveBankProject@@UAEPAXI@Z ENDP			; CGuiWaveBankProject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
EXTRN	??1CWaveBankProject@@UAE@XZ:NEAR		; CWaveBankProject::~CWaveBankProject
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
;	COMDAT ??1CGuiWaveBankProject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGuiWaveBankProject@@UAE@XZ PROC NEAR		; CGuiWaveBankProject::~CGuiWaveBankProject, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBankProject@@6B@ ; CGuiWaveBankProject::`vftable'

; 79   : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CWaveBankProject@@UAE@XZ ; CWaveBankProject::~CWaveBankProject
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CGuiWaveBankProject@@UAE@XZ ENDP			; CGuiWaveBankProject::~CGuiWaveBankProject
_TEXT	ENDS
PUBLIC	??_C@_03KAKF@xwb?$AA@				; `string'
PUBLIC	?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseBankFile
EXTRN	_FormatStringResource:NEAR
EXTRN	_FormatStringResourceStatic:NEAR
EXTRN	_GetSaveFileNameA@4:NEAR
;	COMDAT ??_C@_03KAKF@xwb?$AA@
CONST	SEGMENT
??_C@_03KAKF@xwb?$AA@ DB 'xwb', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z
_TEXT	SEGMENT
_hWnd$ = 8
_pszFile$ = 12
_nLength$ = 16
_ofn$ = -88
_szTitle$ = -344
?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z PROC NEAR ; CGuiWaveBankProject::BrowseBankFile, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  00009	57		 push	 edi

; 110  :     static const LPCTSTR    pszFilter       = MAKE_COMMDLG_FILTER(TEXT("Wave Bank"), TEXT("*.") WBWRITER_FILEEXTENSION_BANK) \
; 111  :                                               MAKE_COMMDLG_FILTER(TEXT("All"), TEXT("*.*"));
; 112  :                                                         
; 113  :     static const DWORD      dwOfnFlags      = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_PATHMUSTEXIST;
; 114  :     OPENFILENAME            ofn             = { 0 };

  0000a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 0
  00011	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00016	33 c0		 xor	 eax, eax
  00018	8d 7d ac	 lea	 edi, DWORD PTR _ofn$[ebp+4]
  0001b	f3 ab		 rep stosd

; 115  :     TCHAR                   szTitle[0x100];
; 116  : 
; 117  :     FormatStringResource(szTitle, NUMELMS(szTitle), IDS_CREATE_WAVE_BANK);

  0001d	6a 05		 push	 5
  0001f	68 00 01 00 00	 push	 256			; 00000100H
  00024	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _FormatStringResource
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 118  : 
; 119  :     ofn.lStructSize = sizeof(ofn);

  00033	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 120  :     ofn.hwndOwner = hWnd;

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0003d	89 4d ac	 mov	 DWORD PTR _ofn$[ebp+4], ecx

; 121  :     ofn.Flags = dwOfnFlags;

  00040	c7 45 dc 04 08
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8914948 ; 00880804H

; 122  :     ofn.lpstrFilter = pszFilter;

  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszFilter@?1??BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4QBDB
  0004d	89 55 b4	 mov	 DWORD PTR _ofn$[ebp+12], edx

; 123  :     ofn.lpstrFile = pszFile;

  00050	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00053	89 45 c4	 mov	 DWORD PTR _ofn$[ebp+28], eax

; 124  :     ofn.nMaxFile = nLength;

  00056	8b 4d 10	 mov	 ecx, DWORD PTR _nLength$[ebp]
  00059	89 4d c8	 mov	 DWORD PTR _ofn$[ebp+32], ecx

; 125  :     ofn.lpstrTitle = FormatStringResourceStatic(IDS_CREATE_WAVE_BANK);

  0005c	6a 05		 push	 5
  0005e	e8 00 00 00 00	 call	 _FormatStringResourceStatic
  00063	83 c4 04	 add	 esp, 4
  00066	89 45 d8	 mov	 DWORD PTR _ofn$[ebp+48], eax

; 126  :     ofn.lpstrDefExt = WBWRITER_FILEEXTENSION_BANK;

  00069	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+60], OFFSET FLAT:??_C@_03KAKF@xwb?$AA@ ; `string'

; 127  : 
; 128  :     return GetSaveFileName(&ofn);

  00070	8d 55 a8	 lea	 edx, DWORD PTR _ofn$[ebp]
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 _GetSaveFileNameA@4

; 129  : }

  00079	5f		 pop	 edi
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 0c 00	 ret	 12			; 0000000cH
?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ENDP ; CGuiWaveBankProject::BrowseBankFile
_TEXT	ENDS
PUBLIC	??_C@_01KDJI@h?$AA@				; `string'
PUBLIC	?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseHeaderFile
;	COMDAT ??_C@_01KDJI@h?$AA@
CONST	SEGMENT
??_C@_01KDJI@h?$AA@ DB 'h', 00H				; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z
_TEXT	SEGMENT
_hWnd$ = 8
_pszFile$ = 12
_nLength$ = 16
_ofn$ = -88
_szTitle$ = -344
?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z PROC NEAR ; CGuiWaveBankProject::BrowseHeaderFile, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  00009	57		 push	 edi

; 160  :     static const LPCTSTR    pszFilter       = MAKE_COMMDLG_FILTER(TEXT("C/C++ Headers"), TEXT("*.h;*.hpp")) \
; 161  :                                               MAKE_COMMDLG_FILTER(TEXT("All"), TEXT("*.*"));
; 162  :                                                         
; 163  :     static const DWORD      dwOfnFlags      = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_PATHMUSTEXIST;
; 164  :     OPENFILENAME            ofn             = { 0 };

  0000a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 0
  00011	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00016	33 c0		 xor	 eax, eax
  00018	8d 7d ac	 lea	 edi, DWORD PTR _ofn$[ebp+4]
  0001b	f3 ab		 rep stosd

; 165  :     TCHAR                   szTitle[0x100];
; 166  : 
; 167  :     FormatStringResource(szTitle, NUMELMS(szTitle), IDS_CREATE_WAVE_BANK_HEADER);

  0001d	6a 06		 push	 6
  0001f	68 00 01 00 00	 push	 256			; 00000100H
  00024	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _FormatStringResource
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 168  : 
; 169  :     ofn.lStructSize = sizeof(ofn);

  00033	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 170  :     ofn.hwndOwner = hWnd;

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0003d	89 4d ac	 mov	 DWORD PTR _ofn$[ebp+4], ecx

; 171  :     ofn.Flags = dwOfnFlags;

  00040	c7 45 dc 04 08
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8914948 ; 00880804H

; 172  :     ofn.lpstrFilter = pszFilter;

  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszFilter@?1??BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4QBDB
  0004d	89 55 b4	 mov	 DWORD PTR _ofn$[ebp+12], edx

; 173  :     ofn.lpstrFile = pszFile;

  00050	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00053	89 45 c4	 mov	 DWORD PTR _ofn$[ebp+28], eax

; 174  :     ofn.nMaxFile = nLength;

  00056	8b 4d 10	 mov	 ecx, DWORD PTR _nLength$[ebp]
  00059	89 4d c8	 mov	 DWORD PTR _ofn$[ebp+32], ecx

; 175  :     ofn.lpstrTitle = szTitle;

  0005c	8d 95 a8 fe ff
	ff		 lea	 edx, DWORD PTR _szTitle$[ebp]
  00062	89 55 d8	 mov	 DWORD PTR _ofn$[ebp+48], edx

; 176  :     ofn.lpstrDefExt = WBWRITER_FILEEXTENSION_HEADER;

  00065	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+60], OFFSET FLAT:??_C@_01KDJI@h?$AA@ ; `string'

; 177  : 
; 178  :     return GetSaveFileName(&ofn);

  0006c	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 _GetSaveFileNameA@4

; 179  : }

  00075	5f		 pop	 edi
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 0c 00	 ret	 12			; 0000000cH
?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ENDP ; CGuiWaveBankProject::BrowseHeaderFile
_TEXT	ENDS
PUBLIC	?BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseEntryFile
PUBLIC	?WaveBankEntryOFNHookProc@CGuiWaveBankProject@@CGIPAUHWND__@@IIJ@Z ; CGuiWaveBankProject::WaveBankEntryOFNHookProc
EXTRN	_g_hInstance:DWORD
EXTRN	_GetOpenFileNameA@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z
_TEXT	SEGMENT
_hWnd$ = 8
_pszFile$ = 12
_nLength$ = 16
_dwOfnFlags$ = -348
_ofn$ = -88
_szTitle$ = -344
?BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z PROC NEAR ; CGuiWaveBankProject::BrowseEntryFile, COMDAT

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	57		 push	 edi

; 210  :     static const LPCTSTR    pszFilter   = MAKE_COMMDLG_FILTER(TEXT("Sound"), TEXT("*.wav;*.aif;*.aiff")) \
; 211  :                                           MAKE_COMMDLG_FILTER(TEXT("Wave"), TEXT("*.wav")) \
; 212  :                                           MAKE_COMMDLG_FILTER(TEXT("Macintosh AIFF"), TEXT("*.aif;*.aiff")) \
; 213  :                                           MAKE_COMMDLG_FILTER(TEXT("All"), TEXT("*.*"));
; 214  :                                                     
; 215  :     DWORD                   dwOfnFlags  = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST | OFN_ENABLETEMPLATE | OFN_ENABLEHOOK;

  0000a	c7 85 a4 fe ff
	ff 64 18 88 00	 mov	 DWORD PTR _dwOfnFlags$[ebp], 8919140 ; 00881864H

; 216  :     OPENFILENAME            ofn         = { 0 };

  00014	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 0
  0001b	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00020	33 c0		 xor	 eax, eax
  00022	8d 7d ac	 lea	 edi, DWORD PTR _ofn$[ebp+4]
  00025	f3 ab		 rep stosd

; 217  :     TCHAR                   szTitle[0x100];
; 218  : 
; 219  :     //
; 220  :     // If more than MAX_PATH characters were supplied, allow for multiple
; 221  :     // file selection
; 222  :     //
; 223  : 
; 224  :     if(nLength > MAX_PATH)

  00027	81 7d 10 04 01
	00 00		 cmp	 DWORD PTR _nLength$[ebp], 260 ; 00000104H
  0002e	76 0f		 jbe	 SHORT $L53227

; 225  :     {
; 226  :         dwOfnFlags |= OFN_ALLOWMULTISELECT;

  00030	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR _dwOfnFlags$[ebp]
  00036	80 cc 02	 or	 ah, 2
  00039	89 85 a4 fe ff
	ff		 mov	 DWORD PTR _dwOfnFlags$[ebp], eax
$L53227:

; 227  :     }
; 228  : 
; 229  :     FormatStringResource(szTitle, NUMELMS(szTitle), IDS_CREATE_WAVE_BANK_ENTRY);

  0003f	6a 09		 push	 9
  00041	68 00 01 00 00	 push	 256			; 00000100H
  00046	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR _szTitle$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 _FormatStringResource
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH

; 230  : 
; 231  :     ofn.lStructSize = sizeof(ofn);

  00055	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 232  :     ofn.hwndOwner = hWnd;

  0005c	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  0005f	89 55 ac	 mov	 DWORD PTR _ofn$[ebp+4], edx

; 233  :     ofn.Flags = dwOfnFlags;

  00062	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR _dwOfnFlags$[ebp]
  00068	89 45 dc	 mov	 DWORD PTR _ofn$[ebp+52], eax

; 234  :     ofn.lpstrFilter = pszFilter;

  0006b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszFilter@?1??BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z@4QBDB
  00071	89 4d b4	 mov	 DWORD PTR _ofn$[ebp+12], ecx

; 235  :     ofn.lpstrFile = pszFile;

  00074	8b 55 0c	 mov	 edx, DWORD PTR _pszFile$[ebp]
  00077	89 55 c4	 mov	 DWORD PTR _ofn$[ebp+28], edx

; 236  :     ofn.nMaxFile = nLength;

  0007a	8b 45 10	 mov	 eax, DWORD PTR _nLength$[ebp]
  0007d	89 45 c8	 mov	 DWORD PTR _ofn$[ebp+32], eax

; 237  :     ofn.lpstrTitle = szTitle;

  00080	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR _szTitle$[ebp]
  00086	89 4d d8	 mov	 DWORD PTR _ofn$[ebp+48], ecx

; 238  :     ofn.hInstance = g_hInstance;

  00089	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_hInstance
  0008f	89 55 b0	 mov	 DWORD PTR _ofn$[ebp+8], edx

; 239  :     ofn.lpTemplateName = MAKEINTRESOURCE(IDD_WAVEBANK_ENTRY_OFN_CHILD);

  00092	c7 45 f0 7e 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+72], 126 ; 0000007eH

; 240  :     ofn.lpfnHook = WaveBankEntryOFNHookProc;

  00099	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+68], OFFSET FLAT:?WaveBankEntryOFNHookProc@CGuiWaveBankProject@@CGIPAUHWND__@@IIJ@Z ; CGuiWaveBankProject::WaveBankEntryOFNHookProc

; 241  : 
; 242  :     return GetOpenFileName(&ofn);

  000a0	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 _GetOpenFileNameA@4

; 243  : }

  000a9	5f		 pop	 edi
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 0c 00	 ret	 12			; 0000000cH
?BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ENDP ; CGuiWaveBankProject::BrowseEntryFile
_TEXT	ENDS
PUBLIC	?LoadResourceIconSmall@@YGPAUHICON__@@I@Z	; LoadResourceIconSmall
EXTRN	__imp__SetWindowPos@28:NEAR
EXTRN	__imp__GetDlgItem@8:NEAR
EXTRN	__imp__PlaySoundA@12:NEAR
EXTRN	__imp__GetWindowRect@8:NEAR
EXTRN	__imp__SendDlgItemMessageA@20:NEAR
EXTRN	__imp__ScreenToClient@8:NEAR
EXTRN	__imp__GetParent@4:NEAR
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?WaveBankEntryOFNHookProc@CGuiWaveBankProject@@CGIPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_pHdr$ = -324
_hWndParent$ = -20
_hWndPane$ = -292
_rcAlign$ = -320
_nAlignWidth$ = -304
_rc$ = -16
_nWidth$ = -296
_szPath$ = -288
_x$ = -300
?WaveBankEntryOFNHookProc@CGuiWaveBankProject@@CGIPAUHWND__@@IIJ@Z PROC NEAR ; CGuiWaveBankProject::WaveBankEntryOFNHookProc, COMDAT

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H

; 276  :     static const UINT       nPaneControlId  = 0x4a0;
; 277  :     LPOFNOTIFY              pHdr;
; 278  :     HWND                    hWndParent;
; 279  :     HWND                    hWndPane;
; 280  :     RECT                    rcAlign;
; 281  :     int                     nAlignWidth;
; 282  :     RECT                    rc;
; 283  :     int                     nWidth;
; 284  :     TCHAR                   szPath[MAX_PATH];
; 285  :     int                     x;
; 286  :     
; 287  :     switch(uMsg)
; 288  :     {

  00009	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000c	89 85 b8 fe ff
	ff		 mov	 DWORD PTR -328+[ebp], eax
  00012	83 bd b8 fe ff
	ff 4e		 cmp	 DWORD PTR -328+[ebp], 78 ; 0000004eH
  00019	74 15		 je	 SHORT $L53252
  0001b	81 bd b8 fe ff
	ff 11 01 00 00	 cmp	 DWORD PTR -328+[ebp], 273 ; 00000111H
  00025	0f 84 2c 01 00
	00		 je	 $L53263
  0002b	e9 a4 01 00 00	 jmp	 $L53249
$L53252:

; 289  :         case WM_NOTIFY:
; 290  :             pHdr = (LPOFNOTIFY)lParam;

  00030	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00033	89 8d bc fe ff
	ff		 mov	 DWORD PTR _pHdr$[ebp], ecx

; 291  : 
; 292  :             switch(pHdr->hdr.code)
; 293  :             {

  00039	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR _pHdr$[ebp]
  0003f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00042	89 85 b4 fe ff
	ff		 mov	 DWORD PTR -332+[ebp], eax
  00048	81 bd b4 fe ff
	ff a7 fd ff ff	 cmp	 DWORD PTR -332+[ebp], -601 ; fffffda7H
  00052	74 05		 je	 SHORT $L53258
  00054	e9 fc 00 00 00	 jmp	 $L53255
$L53258:

; 294  :                 case CDN_INITDONE:
; 295  : 
; 296  :                     //
; 297  :                     // Align the child dialog with the pane on the left
; 298  :                     //
; 299  : 
; 300  :                     hWndParent = ::GetParent(hWnd);

  00059	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0005c	51		 push	 ecx
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00063	89 45 ec	 mov	 DWORD PTR _hWndParent$[ebp], eax

; 301  :                     hWndPane = ::GetDlgItem(hWndParent, nPaneControlId);

  00066	68 a0 04 00 00	 push	 1184			; 000004a0H
  0006b	8b 55 ec	 mov	 edx, DWORD PTR _hWndParent$[ebp]
  0006e	52		 push	 edx
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  00075	89 85 dc fe ff
	ff		 mov	 DWORD PTR _hWndPane$[ebp], eax

; 302  : 
; 303  :                     ::GetWindowRect(hWndPane, &rcAlign);

  0007b	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _rcAlign$[ebp]
  00081	50		 push	 eax
  00082	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _hWndPane$[ebp]
  00088	51		 push	 ecx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 304  :                     ::GetWindowRect(hWnd, &rc);

  0008f	8d 55 f0	 lea	 edx, DWORD PTR _rc$[ebp]
  00092	52		 push	 edx
  00093	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00096	50		 push	 eax
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 305  : 
; 306  :                     ::ScreenToClient(hWndParent, (LPPOINT)&rcAlign.left);

  0009d	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR _rcAlign$[ebp]
  000a3	51		 push	 ecx
  000a4	8b 55 ec	 mov	 edx, DWORD PTR _hWndParent$[ebp]
  000a7	52		 push	 edx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 307  :                     ::ScreenToClient(hWndParent, (LPPOINT)&rc.left);

  000ae	8d 45 f0	 lea	 eax, DWORD PTR _rc$[ebp]
  000b1	50		 push	 eax
  000b2	8b 4d ec	 mov	 ecx, DWORD PTR _hWndParent$[ebp]
  000b5	51		 push	 ecx
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 308  : 
; 309  :                     nWidth = rc.right - rc.left;

  000bc	8b 55 f8	 mov	 edx, DWORD PTR _rc$[ebp+8]
  000bf	2b 55 f0	 sub	 edx, DWORD PTR _rc$[ebp]
  000c2	89 95 d8 fe ff
	ff		 mov	 DWORD PTR _nWidth$[ebp], edx

; 310  :                     nAlignWidth = rcAlign.right - rcAlign.left;

  000c8	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _rcAlign$[ebp+8]
  000ce	2b 85 c0 fe ff
	ff		 sub	 eax, DWORD PTR _rcAlign$[ebp]
  000d4	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _nAlignWidth$[ebp], eax

; 311  : 
; 312  :                     x = rcAlign.left + ((nAlignWidth - nWidth) / 2);

  000da	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _nAlignWidth$[ebp]
  000e0	2b 85 d8 fe ff
	ff		 sub	 eax, DWORD PTR _nWidth$[ebp]
  000e6	99		 cdq
  000e7	2b c2		 sub	 eax, edx
  000e9	d1 f8		 sar	 eax, 1
  000eb	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR _rcAlign$[ebp]
  000f1	03 c8		 add	 ecx, eax
  000f3	89 8d d4 fe ff
	ff		 mov	 DWORD PTR _x$[ebp], ecx

; 313  : 
; 314  :                     ::SetWindowPos(hWnd, NULL, x, rc.top, 0, 0, SWP_NOACTIVATE | SWP_NOOWNERZORDER | SWP_NOSIZE | SWP_NOZORDER);

  000f9	68 15 02 00 00	 push	 533			; 00000215H
  000fe	6a 00		 push	 0
  00100	6a 00		 push	 0
  00102	8b 55 f4	 mov	 edx, DWORD PTR _rc$[ebp+4]
  00105	52		 push	 edx
  00106	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _x$[ebp]
  0010c	50		 push	 eax
  0010d	6a 00		 push	 0
  0010f	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00112	51		 push	 ecx
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28

; 315  : 
; 316  :                     //
; 317  :                     // Load button icons
; 318  :                     //
; 319  : 
; 320  :                     ::SendDlgItemMessage(hWnd, IDC_PLAY, BM_SETIMAGE, IMAGE_ICON, (LPARAM)LoadResourceIconSmall(IDI_PLAY));

  00119	6a 7d		 push	 125			; 0000007dH
  0011b	e8 00 00 00 00	 call	 ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ; LoadResourceIconSmall
  00120	50		 push	 eax
  00121	6a 01		 push	 1
  00123	68 f7 00 00 00	 push	 247			; 000000f7H
  00128	68 f3 03 00 00	 push	 1011			; 000003f3H
  0012d	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00130	52		 push	 edx
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 321  :                     ::SendDlgItemMessage(hWnd, IDC_STOP, BM_SETIMAGE, IMAGE_ICON, (LPARAM)LoadResourceIconSmall(IDI_STOP));

  00137	6a 7e		 push	 126			; 0000007eH
  00139	e8 00 00 00 00	 call	 ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ; LoadResourceIconSmall
  0013e	50		 push	 eax
  0013f	6a 01		 push	 1
  00141	68 f7 00 00 00	 push	 247			; 000000f7H
  00146	68 f4 03 00 00	 push	 1012			; 000003f4H
  0014b	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0014e	50		 push	 eax
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20
$L53255:

; 322  : 
; 323  :                     break;
; 324  :             }
; 325  : 
; 326  :             break;

  00155	eb 7d		 jmp	 SHORT $L53249
$L53263:

; 327  : 
; 328  :         case WM_COMMAND:
; 329  :             switch(LOWORD(wParam))
; 330  :             {

  00157	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0015a	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00160	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00166	89 8d b0 fe ff
	ff		 mov	 DWORD PTR -336+[ebp], ecx
  0016c	81 bd b0 fe ff
	ff f3 03 00 00	 cmp	 DWORD PTR -336+[ebp], 1011 ; 000003f3H
  00176	74 0e		 je	 SHORT $L53270
  00178	81 bd b0 fe ff
	ff f4 03 00 00	 cmp	 DWORD PTR -336+[ebp], 1012 ; 000003f4H
  00182	74 44		 je	 SHORT $L53274
  00184	eb 4e		 jmp	 SHORT $L53267
$L53270:

; 331  :                 case IDC_PLAY:
; 332  :                     hWndParent = ::GetParent(hWnd);

  00186	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00189	52		 push	 edx
  0018a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00190	89 45 ec	 mov	 DWORD PTR _hWndParent$[ebp], eax

; 333  : 
; 334  :                     if((int)::SendMessage(hWndParent, CDM_GETFILEPATH, NUMELMS(szPath), (LPARAM)szPath) > 0)

  00193	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00199	50		 push	 eax
  0019a	68 04 01 00 00	 push	 260			; 00000104H
  0019f	68 65 04 00 00	 push	 1125			; 00000465H
  001a4	8b 4d ec	 mov	 ecx, DWORD PTR _hWndParent$[ebp]
  001a7	51		 push	 ecx
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  001ae	85 c0		 test	 eax, eax
  001b0	7e 14		 jle	 SHORT $L53273

; 335  :                     {
; 336  :                         ::PlaySound(szPath, NULL, SND_FILENAME | SND_ASYNC);

  001b2	68 01 00 02 00	 push	 131073			; 00020001H
  001b7	6a 00		 push	 0
  001b9	8d 95 e0 fe ff
	ff		 lea	 edx, DWORD PTR _szPath$[ebp]
  001bf	52		 push	 edx
  001c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PlaySoundA@12
$L53273:

; 337  :                     }
; 338  : 
; 339  :                     break;

  001c6	eb 0c		 jmp	 SHORT $L53267
$L53274:

; 340  : 
; 341  :                 case IDC_STOP:
; 342  :                     ::PlaySound(NULL, NULL, 0);

  001c8	6a 00		 push	 0
  001ca	6a 00		 push	 0
  001cc	6a 00		 push	 0
  001ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PlaySoundA@12
$L53267:
$L53249:

; 343  : 
; 344  :                     break;
; 345  :             }
; 346  :     }
; 347  :     
; 348  :     return 0;

  001d4	33 c0		 xor	 eax, eax

; 349  : }

  001d6	8b e5		 mov	 esp, ebp
  001d8	5d		 pop	 ebp
  001d9	c2 10 00	 ret	 16			; 00000010H
?WaveBankEntryOFNHookProc@CGuiWaveBankProject@@CGIPAUHWND__@@IIJ@Z ENDP ; CGuiWaveBankProject::WaveBankEntryOFNHookProc
_TEXT	ENDS
EXTRN	__imp__LoadImageA@24:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
;	COMDAT ?LoadResourceIconSmall@@YGPAUHICON__@@I@Z
_TEXT	SEGMENT
_nResourceId$ = 8
?LoadResourceIconSmall@@YGPAUHICON__@@I@Z PROC NEAR	; LoadResourceIconSmall, COMDAT

; 451  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 452  :     return (HICON)LoadImage(g_hInstance, MAKEINTRESOURCE(nResourceId), IMAGE_ICON, 16, 16, LR_SHARED);

  00003	68 00 80 00 00	 push	 32768			; 00008000H
  00008	6a 10		 push	 16			; 00000010H
  0000a	6a 10		 push	 16			; 00000010H
  0000c	6a 01		 push	 1
  0000e	8b 45 08	 mov	 eax, DWORD PTR _nResourceId$[ebp]
  00011	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00016	50		 push	 eax
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0001d	51		 push	 ecx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageA@24

; 453  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?LoadResourceIconSmall@@YGPAUHICON__@@I@Z ENDP		; LoadResourceIconSmall
_TEXT	ENDS
PUBLIC	??_ECGuiWaveBank@@WCEM@AEPAXI@Z			; CGuiWaveBank::`vector deleting destructor'
PUBLIC	?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z ; CWaveBank::RemoveEntry
PUBLIC	?GetBankHeaderSize@CWaveBank@@MAEKXZ		; CWaveBank::GetBankHeaderSize
PUBLIC	?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ	; CTreeViewItem::EditLabel
PUBLIC	??0CWaveBankWindow@@QAE@XZ			; CWaveBankWindow::CWaveBankWindow
PUBLIC	?Initialize@CGuiWaveBank@@UAEJPBD00@Z		; CGuiWaveBank::Initialize
PUBLIC	?SetName@CGuiWaveBank@@UAEJPBD@Z		; CGuiWaveBank::SetName
PUBLIC	?SetBankPath@CGuiWaveBank@@UAEJPBD@Z		; CGuiWaveBank::SetBankPath
PUBLIC	?SetHeaderPath@CGuiWaveBank@@UAEJPBD@Z		; CGuiWaveBank::SetHeaderPath
PUBLIC	?SetFlags@CGuiWaveBank@@UAEJK@Z			; CGuiWaveBank::SetFlags
PUBLIC	?SetAlignment@CGuiWaveBank@@UAEJK@Z		; CGuiWaveBank::SetAlignment
PUBLIC	?MakeDirty@CGuiWaveBank@@UAEXXZ			; CGuiWaveBank::MakeDirty
PUBLIC	?OpenList@CGuiWaveBank@@UAEHXZ			; CGuiWaveBank::OpenList
PUBLIC	?CloseList@CGuiWaveBank@@UAEXXZ			; CGuiWaveBank::CloseList
PUBLIC	?UpdateUI@CGuiWaveBank@@UAEXXZ			; CGuiWaveBank::UpdateUI
PUBLIC	?OnContextMenu@CGuiWaveBank@@UAEHPAUHWND__@@HHPAJ@Z ; CGuiWaveBank::OnContextMenu
PUBLIC	?OnCommand@CGuiWaveBank@@UAEHIIPAUHWND__@@PAJ@Z	; CGuiWaveBank::OnCommand
PUBLIC	?OnCmdRefresh@CGuiWaveBank@@UAEXXZ		; CGuiWaveBank::OnCmdRefresh
PUBLIC	?OnCmdRename@CGuiWaveBank@@UAEXXZ		; CGuiWaveBank::OnCmdRename
PUBLIC	?OnCmdRemove@CGuiWaveBank@@UAEXXZ		; CGuiWaveBank::OnCmdRemove
PUBLIC	?OnCmdProperties@CGuiWaveBank@@UAEXXZ		; CGuiWaveBank::OnCmdProperties
PUBLIC	?OnDoubleClick@CGuiWaveBank@@UAEXXZ		; CGuiWaveBank::OnDoubleClick
PUBLIC	?OnGetInfoTip@CGuiWaveBank@@UAEXPADH@Z		; CGuiWaveBank::OnGetInfoTip
PUBLIC	?OnEndLabelEdit@CGuiWaveBank@@UAEHPBD@Z		; CGuiWaveBank::OnEndLabelEdit
PUBLIC	?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ ; CGuiWaveBank::CreateEntry
PUBLIC	??_7CGuiWaveBank@@6BCWaveBank@@@		; CGuiWaveBank::`vftable'
PUBLIC	??_7CGuiWaveBank@@6BCMainProjectTreeItem@@@	; CGuiWaveBank::`vftable'
PUBLIC	??_GCGuiWaveBank@@UAEPAXI@Z			; CGuiWaveBank::`scalar deleting destructor'
PUBLIC	??_ECGuiWaveBank@@UAEPAXI@Z			; CGuiWaveBank::`vector deleting destructor'
EXTRN	?GetBankDataSize@CWaveBank@@UAEKXZ:NEAR		; CWaveBank::GetBankDataSize
EXTRN	?AddEntry@CWaveBank@@UAEJPBD0KPAPAVCWaveBankEntry@@@Z:NEAR ; CWaveBank::AddEntry
EXTRN	?LoadEntries@CWaveBank@@UAEJH@Z:NEAR		; CWaveBank::LoadEntries
EXTRN	?GenerateBank@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z:NEAR ; CWaveBank::GenerateBank
EXTRN	?GenerateHeader@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z:NEAR ; CWaveBank::GenerateHeader
EXTRN	?FindDuplicateBank@CWaveBank@@MAEJPBDPAI0101@Z:NEAR ; CWaveBank::FindDuplicateBank
EXTRN	??0CMainProjectTreeItem@@QAE@XZ:NEAR		; CMainProjectTreeItem::CMainProjectTreeItem
EXTRN	?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z:NEAR ; CMainProjectTreeItem::Create
EXTRN	?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z:NEAR ; CTreeViewItem::Create
EXTRN	?Remove@CTreeViewItem@@UAEXXZ:NEAR		; CTreeViewItem::Remove
EXTRN	?SetText@CTreeViewItem@@UAEXPBD@Z:NEAR		; CTreeViewItem::SetText
EXTRN	?OnDelete@CTreeViewItem@@UAEXXZ:NEAR		; CTreeViewItem::OnDelete
EXTRN	?g_pApplication@@3PAVCApplication@@A:DWORD	; g_pApplication
EXTRN	??0CWaveBank@@QAE@PAVCWaveBankProject@@@Z:NEAR	; CWaveBank::CWaveBank
;	COMDAT ??_7CGuiWaveBank@@6BCWaveBank@@@
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
CONST	SEGMENT
??_7CGuiWaveBank@@6BCWaveBank@@@ DD FLAT:??_ECGuiWaveBank@@UAEPAXI@Z ; CGuiWaveBank::`vftable'
	DD	FLAT:?Initialize@CGuiWaveBank@@UAEJPBD00@Z
	DD	FLAT:?SetName@CGuiWaveBank@@UAEJPBD@Z
	DD	FLAT:?SetAlignment@CGuiWaveBank@@UAEJK@Z
	DD	FLAT:?GetBankDataSize@CWaveBank@@UAEKXZ
	DD	FLAT:?AddEntry@CWaveBank@@UAEJPBD0KPAPAVCWaveBankEntry@@@Z
	DD	FLAT:?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z
	DD	FLAT:?LoadEntries@CWaveBank@@UAEJH@Z
	DD	FLAT:?GenerateBank@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z
	DD	FLAT:?GenerateHeader@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z
	DD	FLAT:?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ
	DD	FLAT:?GetBankHeaderSize@CWaveBank@@MAEKXZ
	DD	FLAT:?FindDuplicateBank@CWaveBank@@MAEJPBDPAI0101@Z
	DD	FLAT:?SetBankPath@CGuiWaveBank@@UAEJPBD@Z
	DD	FLAT:?SetHeaderPath@CGuiWaveBank@@UAEJPBD@Z
	DD	FLAT:?SetFlags@CGuiWaveBank@@UAEJK@Z
	DD	FLAT:?MakeDirty@CGuiWaveBank@@UAEXXZ
	DD	FLAT:?OpenList@CGuiWaveBank@@UAEHXZ
	DD	FLAT:?CloseList@CGuiWaveBank@@UAEXXZ
	DD	FLAT:?UpdateUI@CGuiWaveBank@@UAEXXZ
	DD	FLAT:?OnCmdRefresh@CGuiWaveBank@@UAEXXZ
	DD	FLAT:?OnCmdRename@CGuiWaveBank@@UAEXXZ
	DD	FLAT:?OnCmdRemove@CGuiWaveBank@@UAEXXZ
	DD	FLAT:?OnCmdProperties@CGuiWaveBank@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CGuiWaveBank@@6BCMainProjectTreeItem@@@
CONST	SEGMENT
??_7CGuiWaveBank@@6BCMainProjectTreeItem@@@ DD FLAT:??_ECGuiWaveBank@@WCEM@AEPAXI@Z ; CGuiWaveBank::`vftable'
	DD	FLAT:?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z
	DD	FLAT:?Remove@CTreeViewItem@@UAEXXZ
	DD	FLAT:?SetText@CTreeViewItem@@UAEXPBD@Z
	DD	FLAT:?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
	DD	FLAT:?OnContextMenu@CGuiWaveBank@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDoubleClick@CGuiWaveBank@@UAEXXZ
	DD	FLAT:?OnDelete@CTreeViewItem@@UAEXXZ
	DD	FLAT:?OnGetInfoTip@CGuiWaveBank@@UAEXPADH@Z
	DD	FLAT:?OnEndLabelEdit@CGuiWaveBank@@UAEHPBD@Z
	DD	FLAT:?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z
	DD	FLAT:?OnCommand@CGuiWaveBank@@UAEHIIPAUHWND__@@PAJ@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z
_TEXT	SEGMENT
_pParent$ = 8
_this$ = -4
??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z PROC NEAR ; CGuiWaveBank::CGuiWaveBank, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CWaveBank@@QAE@PAVCWaveBankProject@@@Z ; CWaveBank::CWaveBank
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 4c 02 00
	00		 add	 ecx, 588		; 0000024cH
  0001c	e8 00 00 00 00	 call	 ??0CMainProjectTreeItem@@QAE@XZ ; CMainProjectTreeItem::CMainProjectTreeItem
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  0002a	e8 00 00 00 00	 call	 ??0CWaveBankWindow@@QAE@XZ ; CWaveBankWindow::CWaveBankWindow
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGuiWaveBank@@6BCWaveBank@@@ ; CGuiWaveBank::`vftable'
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	c7 82 4c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+588], OFFSET FLAT:??_7CGuiWaveBank@@6BCMainProjectTreeItem@@@ ; CGuiWaveBank::`vftable'

; 376  :     m_ListWindow.Initialize(this);

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 82 5c 02 00
	00		 mov	 eax, DWORD PTR [edx+604]
  0005b	ff 90 bc 00 00
	00		 call	 DWORD PTR [eax+188]

; 377  : 
; 378  :     g_pApplication->m_Project.MakeDirty();

  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00067	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00073	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  00079	ff 50 34	 call	 DWORD PTR [eax+52]

; 379  : }

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z ENDP	; CGuiWaveBank::CGuiWaveBank
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.h
_TEXT	ENDS
;	COMDAT ?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ PROC NEAR	; CTreeViewItem::EditLabel, COMDAT
; _this$ = ecx

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 162  :     return TreeView_EditLabel(m_pTree->m_TreeCtrl.m_hWnd, m_hTreeItem);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	51		 push	 ecx
  0000e	6a 00		 push	 0
  00010	68 0e 11 00 00	 push	 4366			; 0000110eH
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001b	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0001e	51		 push	 ecx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 163  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ ENDP		; CTreeViewItem::EditLabel
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\writer.h
_TEXT	ENDS
;	COMDAT ?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT
_pEntry$ = 8
_this$ = -12
$T54141 = -4
$T54142 = -8
?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z PROC NEAR ; CWaveBank::RemoveEntry, COMDAT
; _this$ = ecx

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 139  :     DELETE(pEntry);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  0000d	74 31		 je	 SHORT $L50854
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR $T54142[ebp], eax
  00015	8b 4d f8	 mov	 ecx, DWORD PTR $T54142[ebp]
  00018	89 4d fc	 mov	 DWORD PTR $T54141[ebp], ecx
  0001b	83 7d fc 00	 cmp	 DWORD PTR $T54141[ebp], 0
  0001f	74 11		 je	 SHORT $L54143
  00021	6a 01		 push	 1
  00023	8b 55 fc	 mov	 edx, DWORD PTR $T54141[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR $T54141[ebp]
  0002b	ff 10		 call	 DWORD PTR [eax]
  0002d	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  00030	eb 07		 jmp	 SHORT $L54144
$L54143:
  00032	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L54144:
  00039	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pEntry$[ebp], 0
$L50854:

; 140  : }

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z ENDP	; CWaveBank::RemoveEntry
_TEXT	ENDS
PUBLIC	?GetBankHeaderSize@CWaveBank@@KGKK@Z		; CWaveBank::GetBankHeaderSize
; Function compile flags: /Odt
;	COMDAT ?GetBankHeaderSize@CWaveBank@@MAEKXZ
_TEXT	SEGMENT
_this$ = -4
?GetBankHeaderSize@CWaveBank@@MAEKXZ PROC NEAR		; CWaveBank::GetBankHeaderSize, COMDAT
; _this$ = ecx

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 149  :     return GetBankHeaderSize(m_dwEntryCount);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 88 40 02 00
	00		 mov	 ecx, DWORD PTR [eax+576]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?GetBankHeaderSize@CWaveBank@@KGKK@Z ; CWaveBank::GetBankHeaderSize

; 150  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetBankHeaderSize@CWaveBank@@MAEKXZ ENDP		; CWaveBank::GetBankHeaderSize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT
_dwEntryCount$ = 8
?GetBankHeaderSize@CWaveBank@@KGKK@Z PROC NEAR		; CWaveBank::GetBankHeaderSize, COMDAT

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 144  :     return sizeof(WAVEBANKHEADER) + (sizeof(WAVEBANKENTRY) * dwEntryCount);

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwEntryCount$[ebp]
  00006	6b c0 14	 imul	 eax, 20			; 00000014H
  00009	83 c0 24	 add	 eax, 36			; 00000024H

; 145  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetBankHeaderSize@CWaveBank@@KGKK@Z ENDP		; CWaveBank::GetBankHeaderSize
_TEXT	ENDS
PUBLIC	??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z	; CGuiWaveBankEntry::CGuiWaveBankEntry
PUBLIC	??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@ ; `string'
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.h
CONST	SEGMENT
??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@ DB 'CGuiWaveBankEntry(t'
	DB	'his)', 00H					; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ
_TEXT	SEGMENT
$T54154 = -4
_this$ = -8
?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ PROC NEAR ; CGuiWaveBank::CreateEntry, COMDAT
; _this$ = ecx

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 262  :     return NEW(CGuiWaveBankEntry(this));

  00009	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@ ; `string'
  0000e	68 06 01 00 00	 push	 262			; 00000106H
  00013	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@OJDF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00018	68 4c 04 00 00	 push	 1100			; 0000044cH
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR $T54154[ebp], eax
  00028	83 7d fc 00	 cmp	 DWORD PTR $T54154[ebp], 0
  0002c	74 11		 je	 SHORT $L54155
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	50		 push	 eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR $T54154[ebp]
  00035	e8 00 00 00 00	 call	 ??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z ; CGuiWaveBankEntry::CGuiWaveBankEntry
  0003a	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0003d	eb 07		 jmp	 SHORT $L54156
$L54155:
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L54156:
  00046	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 263  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ ENDP ; CGuiWaveBank::CreateEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MakeDirty@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?MakeDirty@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::MakeDirty, COMDAT
; _this$ = ecx

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 267  :     g_pApplication->m_Project.MakeDirty();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 34	 call	 DWORD PTR [edx+52]

; 268  :     UpdateUI();

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	ff 52 4c	 call	 DWORD PTR [edx+76]

; 269  : }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?MakeDirty@CGuiWaveBank@@UAEXXZ ENDP			; CGuiWaveBank::MakeDirty
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnDoubleClick@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::OnDoubleClick, COMDAT
; _this$ = ecx

; 272  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 273  :     OpenList();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 90 b4 fd ff
	ff		 mov	 edx, DWORD PTR [eax-588]
  00019	ff 52 44	 call	 DWORD PTR [edx+68]

; 274  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?OnDoubleClick@CGuiWaveBank@@UAEXXZ ENDP		; CGuiWaveBank::OnDoubleClick
_TEXT	ENDS
PUBLIC	??1CGuiWaveBank@@UAE@XZ				; CGuiWaveBank::~CGuiWaveBank
; Function compile flags: /Odt
;	COMDAT ??_GCGuiWaveBank@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGuiWaveBank@@UAEPAXI@Z PROC NEAR			; CGuiWaveBank::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGuiWaveBank@@UAE@XZ	; CGuiWaveBank::~CGuiWaveBank
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53282
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53282:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGuiWaveBank@@UAEPAXI@Z ENDP			; CGuiWaveBank::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CWaveBankWindow@@UAE@XZ			; CWaveBankWindow::~CWaveBankWindow
EXTRN	??1CMainProjectTreeItem@@UAE@XZ:NEAR		; CMainProjectTreeItem::~CMainProjectTreeItem
EXTRN	??1CWaveBank@@UAE@XZ:NEAR			; CWaveBank::~CWaveBank
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
;	COMDAT ??1CGuiWaveBank@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGuiWaveBank@@UAE@XZ PROC NEAR			; CGuiWaveBank::~CGuiWaveBank, COMDAT
; _this$ = ecx

; 404  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBank@@6BCWaveBank@@@ ; CGuiWaveBank::`vftable'
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	c7 81 4c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+588], OFFSET FLAT:??_7CGuiWaveBank@@6BCMainProjectTreeItem@@@ ; CGuiWaveBank::`vftable'

; 405  :     g_pApplication->m_Project.MakeDirty();

  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00025	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00031	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  00037	ff 50 34	 call	 DWORD PTR [eax+52]

; 406  : }

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  00043	e8 00 00 00 00	 call	 ??1CWaveBankWindow@@UAE@XZ ; CWaveBankWindow::~CWaveBankWindow
  00048	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004c	74 0e		 je	 SHORT $L54169
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	81 c1 4c 02 00
	00		 add	 ecx, 588		; 0000024cH
  00057	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0005a	eb 07		 jmp	 SHORT $L54170
$L54169:
  0005c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L54170:
  00063	8b 4d f8	 mov	 ecx, DWORD PTR -8+[ebp]
  00066	e8 00 00 00 00	 call	 ??1CMainProjectTreeItem@@UAE@XZ ; CMainProjectTreeItem::~CMainProjectTreeItem
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ??1CWaveBank@@UAE@XZ	; CWaveBank::~CWaveBank
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
??1CGuiWaveBank@@UAE@XZ ENDP				; CGuiWaveBank::~CGuiWaveBank
_TEXT	ENDS
EXTRN	?Initialize@CWaveBank@@UAEJPBD00@Z:NEAR		; CWaveBank::Initialize
EXTRN	?m_pszWaveBankType@CMainProjectTree@@2QBDB:DWORD ; CMainProjectTree::m_pszWaveBankType
; Function compile flags: /Odt
;	COMDAT ?Initialize@CGuiWaveBank@@UAEJPBD00@Z
_TEXT	SEGMENT
_pszBankName$ = 8
_pszBankFile$ = 12
_pszHeaderFile$ = 16
_this$ = -16
_pTree$ = -8
_pParentItem$ = -4
_hr$ = -12
?Initialize@CGuiWaveBank@@UAEJPBD00@Z PROC NEAR		; CGuiWaveBank::Initialize, COMDAT
; _this$ = ecx

; 436  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 437  :     CMainProjectTree *          pTree       = &g_pApplication->m_MainFrame.m_ProjectTree;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000e	05 a8 01 00 00	 add	 eax, 424		; 000001a8H
  00013	89 45 f8	 mov	 DWORD PTR _pTree$[ebp], eax

; 438  :     CMainProjectTreeCategory *  pParentItem = &pTree->m_WaveBundlerCategory;

  00016	8b 4d f8	 mov	 ecx, DWORD PTR _pTree$[ebp]
  00019	83 c1 70	 add	 ecx, 112		; 00000070H
  0001c	89 4d fc	 mov	 DWORD PTR _pParentItem$[ebp], ecx

; 439  :     HRESULT                     hr;
; 440  : 
; 441  :     //
; 442  :     // Initialize the base class
; 443  :     //
; 444  : 
; 445  :     hr = CWaveBank::Initialize(pszBankName, pszBankFile, pszHeaderFile);

  0001f	8b 55 10	 mov	 edx, DWORD PTR _pszHeaderFile$[ebp]
  00022	52		 push	 edx
  00023	8b 45 0c	 mov	 eax, DWORD PTR _pszBankFile$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pszBankName$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?Initialize@CWaveBank@@UAEJPBD00@Z ; CWaveBank::Initialize
  00033	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 446  : 
; 447  :     //
; 448  :     // Add the bank to the project tree
; 449  :     //
; 450  : 
; 451  :     if(SUCCEEDED(hr))

  00036	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003a	7c 37		 jl	 SHORT $L53297

; 452  :     {
; 453  :         hr = CMainProjectTreeItem::Create(pTree, pParentItem, m_szBankName, pTree->m_pszWaveBankType) ? S_OK : E_FAIL;

  0003c	6a 00		 push	 0
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pszWaveBankType@CMainProjectTree@@2QBDB ; CMainProjectTree::m_pszWaveBankType
  00044	52		 push	 edx
  00045	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 c0 10	 add	 eax, 16			; 00000010H
  0004b	50		 push	 eax
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _pParentItem$[ebp]
  0004f	51		 push	 ecx
  00050	8b 55 f8	 mov	 edx, DWORD PTR _pTree$[ebp]
  00053	52		 push	 edx
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	81 c1 4c 02 00
	00		 add	 ecx, 588		; 0000024cH
  0005d	e8 00 00 00 00	 call	 ?Create@CMainProjectTreeItem@@UAEHPAVCMainProjectTree@@PAV1@PBD2PAX@Z ; CMainProjectTreeItem::Create
  00062	f7 d8		 neg	 eax
  00064	1b c0		 sbb	 eax, eax
  00066	25 fb bf ff 7f	 and	 eax, 2147467259		; 7fffbffbH
  0006b	05 05 40 00 80	 add	 eax, -2147467259	; 80004005H
  00070	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
$L53297:

; 454  :     }
; 455  : 
; 456  :     return hr;

  00073	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 457  : }

  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 0c 00	 ret	 12			; 0000000cH
?Initialize@CGuiWaveBank@@UAEJPBD00@Z ENDP		; CGuiWaveBank::Initialize
_TEXT	ENDS
EXTRN	?SetName@CWaveBank@@UAEJPBD@Z:NEAR		; CWaveBank::SetName
EXTRN	_strcmp:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetName@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT
_pszName$ = 8
_this$ = -8
_hr$ = -4
?SetName@CGuiWaveBank@@UAEJPBD@Z PROC NEAR		; CGuiWaveBank::SetName, COMDAT
; _this$ = ecx

; 483  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 484  :     HRESULT                 hr;
; 485  : 
; 486  :     if(!_tcscmp(pszName, m_szBankName))

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _pszName$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 _strcmp
  00019	83 c4 08	 add	 esp, 8
  0001c	85 c0		 test	 eax, eax
  0001e	75 04		 jne	 SHORT $L53305

; 487  :     {
; 488  :         return S_OK;

  00020	33 c0		 xor	 eax, eax
  00022	eb 23		 jmp	 SHORT $L53303
$L53305:

; 489  :     }
; 490  : 
; 491  :     hr = CWaveBank::SetName(pszName);

  00024	8b 55 08	 mov	 edx, DWORD PTR _pszName$[ebp]
  00027	52		 push	 edx
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?SetName@CWaveBank@@UAEJPBD@Z ; CWaveBank::SetName
  00030	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 492  : 
; 493  :     if(SUCCEEDED(hr))

  00033	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00037	7c 0b		 jl	 SHORT $L53308

; 494  :     {
; 495  :         MakeDirty();

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	ff 52 40	 call	 DWORD PTR [edx+64]
$L53308:

; 496  :     }
; 497  : 
; 498  :     return hr;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$L53303:

; 499  : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?SetName@CGuiWaveBank@@UAEJPBD@Z ENDP			; CGuiWaveBank::SetName
_TEXT	ENDS
EXTRN	__stricmp:NEAR
EXTRN	_strncpy:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetBankPath@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT
_pszBankPath$ = 8
_this$ = -4
?SetBankPath@CGuiWaveBank@@UAEJPBD@Z PROC NEAR		; CGuiWaveBank::SetBankPath, COMDAT
; _this$ = ecx

; 525  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 526  :     if(!_tcsicmp(pszBankPath, m_szBankFile))

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 30	 add	 eax, 48			; 00000030H
  0000d	50		 push	 eax
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _pszBankPath$[ebp]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 __stricmp
  00017	83 c4 08	 add	 esp, 8
  0001a	85 c0		 test	 eax, eax
  0001c	75 04		 jne	 SHORT $L53313

; 527  :     {
; 528  :         return S_OK;

  0001e	33 c0		 xor	 eax, eax
  00020	eb 25		 jmp	 SHORT $L53312
$L53313:

; 529  :     }
; 530  : 
; 531  :     _tcsncpy(m_szBankFile, pszBankPath, NUMELMS(m_szBankFile));

  00022	68 04 01 00 00	 push	 260			; 00000104H
  00027	8b 55 08	 mov	 edx, DWORD PTR _pszBankPath$[ebp]
  0002a	52		 push	 edx
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c0 30	 add	 eax, 48			; 00000030H
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 _strncpy
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH

; 532  : 
; 533  :     MakeDirty();

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	ff 52 40	 call	 DWORD PTR [edx+64]

; 534  : 
; 535  :     return S_OK;

  00045	33 c0		 xor	 eax, eax
$L53312:

; 536  : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?SetBankPath@CGuiWaveBank@@UAEJPBD@Z ENDP		; CGuiWaveBank::SetBankPath
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetHeaderPath@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT
_pszHeaderPath$ = 8
_this$ = -4
?SetHeaderPath@CGuiWaveBank@@UAEJPBD@Z PROC NEAR	; CGuiWaveBank::SetHeaderPath, COMDAT
; _this$ = ecx

; 562  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 563  :     if(!_tcsicmp(pszHeaderPath, m_szHeaderFile))

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	05 34 01 00 00	 add	 eax, 308		; 00000134H
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _pszHeaderPath$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 __stricmp
  00019	83 c4 08	 add	 esp, 8
  0001c	85 c0		 test	 eax, eax
  0001e	75 04		 jne	 SHORT $L53320

; 564  :     {
; 565  :         return S_OK;

  00020	33 c0		 xor	 eax, eax
  00022	eb 27		 jmp	 SHORT $L53319
$L53320:

; 566  :     }
; 567  : 
; 568  :     _tcsncpy(m_szHeaderFile, pszHeaderPath, NUMELMS(m_szHeaderFile));

  00024	68 04 01 00 00	 push	 260			; 00000104H
  00029	8b 55 08	 mov	 edx, DWORD PTR _pszHeaderPath$[ebp]
  0002c	52		 push	 edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _strncpy
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 569  : 
; 570  :     MakeDirty();

  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	ff 52 40	 call	 DWORD PTR [edx+64]

; 571  : 
; 572  :     return S_OK;

  00049	33 c0		 xor	 eax, eax
$L53319:

; 573  : }

  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?SetHeaderPath@CGuiWaveBank@@UAEJPBD@Z ENDP		; CGuiWaveBank::SetHeaderPath
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetFlags@CGuiWaveBank@@UAEJK@Z
_TEXT	SEGMENT
_dwFlags$ = 8
_this$ = -4
?SetFlags@CGuiWaveBank@@UAEJK@Z PROC NEAR		; CGuiWaveBank::SetFlags, COMDAT
; _this$ = ecx

; 599  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 600  :     if(dwFlags == m_dwFlags)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  0000d	3b 88 44 02 00
	00		 cmp	 ecx, DWORD PTR [eax+580]
  00013	75 04		 jne	 SHORT $L53327

; 601  :     {
; 602  :         return S_OK;

  00015	33 c0		 xor	 eax, eax
  00017	eb 19		 jmp	 SHORT $L53326
$L53327:

; 603  :     }
; 604  : 
; 605  :     m_dwFlags = dwFlags;

  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	8b 45 08	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  0001f	89 82 44 02 00
	00		 mov	 DWORD PTR [edx+580], eax

; 606  : 
; 607  :     MakeDirty();

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	ff 52 40	 call	 DWORD PTR [edx+64]

; 608  : 
; 609  :     return S_OK;

  00030	33 c0		 xor	 eax, eax
$L53326:

; 610  : }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?SetFlags@CGuiWaveBank@@UAEJK@Z ENDP			; CGuiWaveBank::SetFlags
_TEXT	ENDS
EXTRN	?SetAlignment@CWaveBank@@UAEJK@Z:NEAR		; CWaveBank::SetAlignment
; Function compile flags: /Odt
;	COMDAT ?SetAlignment@CGuiWaveBank@@UAEJK@Z
_TEXT	SEGMENT
_dwAlignment$ = 8
_this$ = -8
_hr$ = -4
?SetAlignment@CGuiWaveBank@@UAEJK@Z PROC NEAR		; CGuiWaveBank::SetAlignment, COMDAT
; _this$ = ecx

; 636  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 637  :     HRESULT                 hr;
; 638  :     
; 639  :     if(dwAlignment == m_dwAlignment)

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _dwAlignment$[ebp]
  0000f	3b 88 48 02 00
	00		 cmp	 ecx, DWORD PTR [eax+584]
  00015	75 04		 jne	 SHORT $L53335

; 640  :     {
; 641  :         return S_OK;

  00017	33 c0		 xor	 eax, eax
  00019	eb 23		 jmp	 SHORT $L53333
$L53335:

; 642  :     }
; 643  : 
; 644  :     hr = CWaveBank::SetAlignment(dwAlignment);

  0001b	8b 55 08	 mov	 edx, DWORD PTR _dwAlignment$[ebp]
  0001e	52		 push	 edx
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?SetAlignment@CWaveBank@@UAEJK@Z ; CWaveBank::SetAlignment
  00027	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 645  : 
; 646  :     if(SUCCEEDED(hr))

  0002a	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0002e	7c 0b		 jl	 SHORT $L53338

; 647  :     {
; 648  :         MakeDirty();

  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 10		 mov	 edx, DWORD PTR [eax]
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	ff 52 40	 call	 DWORD PTR [edx+64]
$L53338:

; 649  :     }
; 650  : 
; 651  :     return hr;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$L53333:

; 652  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?SetAlignment@CGuiWaveBank@@UAEJK@Z ENDP		; CGuiWaveBank::SetAlignment
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenList@CGuiWaveBank@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?OpenList@CGuiWaveBank@@UAEHXZ PROC NEAR		; CGuiWaveBank::OpenList, COMDAT
; _this$ = ecx

; 678  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 679  :     return m_ListWindow.Create();

  00007	6a 00		 push	 0
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 90 5c 02 00
	00		 mov	 edx, DWORD PTR [eax+604]
  0001b	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]

; 680  : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OpenList@CGuiWaveBank@@UAEHXZ ENDP			; CGuiWaveBank::OpenList
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?CloseList@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?CloseList@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::CloseList, COMDAT
; _this$ = ecx

; 706  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 707  :     m_ListWindow.Destroy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 90 5c 02 00
	00		 mov	 edx, DWORD PTR [eax+604]
  00019	ff 52 10	 call	 DWORD PTR [edx+16]

; 708  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?CloseList@CGuiWaveBank@@UAEXXZ ENDP			; CGuiWaveBank::CloseList
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?UpdateUI@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateUI@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::UpdateUI, COMDAT
; _this$ = ecx

; 734  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 735  :     //
; 736  :     // Update the tree view
; 737  :     //
; 738  :     
; 739  :     CTreeViewItem::SetText(m_szBankName);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 10	 add	 eax, 16			; 00000010H
  0000d	50		 push	 eax
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 4c 02 00
	00		 add	 ecx, 588		; 0000024cH
  00017	e8 00 00 00 00	 call	 ?SetText@CTreeViewItem@@UAEXPBD@Z ; CTreeViewItem::SetText

; 740  : 
; 741  :     //
; 742  :     // Update the list window
; 743  :     //
; 744  : 
; 745  :     m_ListWindow.SetWindowText(m_szBankName);

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 10	 add	 ecx, 16			; 00000010H
  00022	51		 push	 ecx
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 82 5c 02 00
	00		 mov	 eax, DWORD PTR [edx+604]
  00035	ff 50 28	 call	 DWORD PTR [eax+40]

; 746  : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?UpdateUI@CGuiWaveBank@@UAEXXZ ENDP			; CGuiWaveBank::UpdateUI
_TEXT	ENDS
EXTRN	_FormatNumber@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnGetInfoTip@CGuiWaveBank@@UAEXPADH@Z
_TEXT	SEGMENT
_pszText$ = 8
_cchTextMax$ = 12
_this$ = -264
_szBankSize$ = -256
_dwBankSize$ = -260
?OnGetInfoTip@CGuiWaveBank@@UAEXPADH@Z PROC NEAR	; CGuiWaveBank::OnGetInfoTip, COMDAT
; _this$ = ecx

; 773  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 774  :     TCHAR                   szBankSize[0x100];
; 775  :     DWORD                   dwBankSize;
; 776  :     
; 777  :     if(dwBankSize = GetBankDataSize())

  0000f	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00015	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  0001b	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 90 b4 fd ff
	ff		 mov	 edx, DWORD PTR [eax-588]
  00027	ff 52 10	 call	 DWORD PTR [edx+16]
  0002a	89 85 fc fe ff
	ff		 mov	 DWORD PTR _dwBankSize$[ebp], eax
  00030	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _dwBankSize$[ebp], 0
  00037	74 19		 je	 SHORT $L53358

; 778  :     {
; 779  :         FormatNumber(dwBankSize, FALSE, TRUE, szBankSize);

  00039	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szBankSize$[ebp]
  0003f	50		 push	 eax
  00040	6a 01		 push	 1
  00042	6a 00		 push	 0
  00044	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _dwBankSize$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 _FormatNumber@16

; 780  :     }
; 781  :     else

  00050	eb 16		 jmp	 SHORT $L53359
$L53358:

; 782  :     {
; 783  :         FormatStringResource(szBankSize, NUMELMS(szBankSize), IDS_BANKSIZE_UNKNOWN);

  00052	6a 13		 push	 19			; 00000013H
  00054	68 00 01 00 00	 push	 256			; 00000100H
  00059	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szBankSize$[ebp]
  0005f	52		 push	 edx
  00060	e8 00 00 00 00	 call	 _FormatStringResource
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
$L53359:

; 784  :     }
; 785  : 
; 786  :     FormatStringResource(pszText, cchTextMax, IDS_BANK_INFOTIP, m_szBankFile, m_szHeaderFile, m_dwEntryCount, szBankSize);

  00068	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szBankSize$[ebp]
  0006e	50		 push	 eax
  0006f	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00075	8b 51 f4	 mov	 edx, DWORD PTR [ecx-12]
  00078	52		 push	 edx
  00079	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0007f	2d 18 01 00 00	 sub	 eax, 280		; 00000118H
  00084	50		 push	 eax
  00085	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	81 e9 1c 02 00
	00		 sub	 ecx, 540		; 0000021cH
  00091	51		 push	 ecx
  00092	68 09 01 00 00	 push	 265			; 00000109H
  00097	8b 55 0c	 mov	 edx, DWORD PTR _cchTextMax$[ebp]
  0009a	52		 push	 edx
  0009b	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 _FormatStringResource
  000a4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 787  : }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 08 00	 ret	 8
?OnGetInfoTip@CGuiWaveBank@@UAEXPADH@Z ENDP		; CGuiWaveBank::OnGetInfoTip
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CGuiWaveBank@@UAEHPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?OnEndLabelEdit@CGuiWaveBank@@UAEHPBD@Z PROC NEAR	; CGuiWaveBank::OnEndLabelEdit, COMDAT
; _this$ = ecx

; 813  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 814  :     SetName(pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 82 b4 fd ff
	ff		 mov	 eax, DWORD PTR [edx-588]
  0001d	ff 50 08	 call	 DWORD PTR [eax+8]

; 815  :     
; 816  :     return FALSE;

  00020	33 c0		 xor	 eax, eax

; 817  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?OnEndLabelEdit@CGuiWaveBank@@UAEHPBD@Z ENDP		; CGuiWaveBank::OnEndLabelEdit
_TEXT	ENDS
PUBLIC	?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z ; CTreeViewItem::OnContextMenu
EXTRN	__imp__TrackPopupMenu@28:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnContextMenu@CGuiWaveBank@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_hWndFocus$ = 8
_x$ = 12
_y$ = 16
_plResult$ = 20
_this$ = -4
?OnContextMenu@CGuiWaveBank@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CGuiWaveBank::OnContextMenu, COMDAT
; _this$ = ecx

; 849  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 850  :     if(CMainProjectTreeItem::OnContextMenu(hWndFocus, x, y, plResult))

  00007	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _hWndFocus$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z ; CTreeViewItem::OnContextMenu
  0001f	85 c0		 test	 eax, eax
  00021	74 07		 je	 SHORT $L53371

; 851  :     {
; 852  :         return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	eb 35		 jmp	 SHORT $L53370
$L53371:

; 853  :     }
; 854  : 
; 855  :     TrackPopupMenu(g_pApplication->m_MainFrame.m_ahMenus[g_pApplication->m_MainFrame.MENUIDX_WAVEBANK_POPUP], TPM_RIGHTBUTTON, x, y, 0, *m_pTree, NULL);

  0002a	6a 00		 push	 0
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	8b 12		 mov	 edx, DWORD PTR [edx]
  0003a	ff 52 58	 call	 DWORD PTR [edx+88]
  0003d	50		 push	 eax
  0003e	6a 00		 push	 0
  00040	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  00043	50		 push	 eax
  00044	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp]
  00047	51		 push	 ecx
  00048	6a 02		 push	 2
  0004a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00050	8b 82 90 02 00
	00		 mov	 eax, DWORD PTR [edx+656]
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TrackPopupMenu@28

; 856  : 
; 857  :     return FALSE;

  0005d	33 c0		 xor	 eax, eax
$L53370:

; 858  : }

  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CGuiWaveBank@@UAEHPAUHWND__@@HHPAJ@Z ENDP ; CGuiWaveBank::OnContextMenu
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.h
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CTreeViewItem::OnContextMenu, COMDAT
; _this$ = ecx

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 177  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z ENDP ; CTreeViewItem::OnContextMenu
_TEXT	ENDS
PUBLIC	?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z ; CMainProjectTreeItem::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
;	COMDAT ?OnCommand@CGuiWaveBank@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hWndControl$ = 16
_plResult$ = 20
_this$ = -4
?OnCommand@CGuiWaveBank@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CGuiWaveBank::OnCommand, COMDAT
; _this$ = ecx

; 890  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 891  :     if(CMainProjectTreeItem::OnCommand(nCommandId, nControlId, hWndControl, plResult))

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z ; CMainProjectTreeItem::OnCommand
  00021	85 c0		 test	 eax, eax
  00023	74 0a		 je	 SHORT $L53379

; 892  :     {
; 893  :         return TRUE;

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	e9 93 00 00 00	 jmp	 $L53378
$L53379:

; 894  :     }
; 895  : 
; 896  :     switch(nControlId)
; 897  :     {

  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  00032	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  00035	8b 55 f8	 mov	 edx, DWORD PTR -8+[ebp]
  00038	81 ea 4e 9c 00
	00		 sub	 edx, 40014		; 00009c4eH
  0003e	89 55 f8	 mov	 DWORD PTR -8+[ebp], edx
  00041	83 7d f8 20	 cmp	 DWORD PTR -8+[ebp], 32	; 00000020H
  00045	77 79		 ja	 SHORT $L53381
  00047	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  0004a	33 c9		 xor	 ecx, ecx
  0004c	8a 88 00 00 00
	00		 mov	 cl, BYTE PTR $L54213[eax]
  00052	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $L54214[ecx*4]
$L53384:

; 898  :         case ID_ACTIVATE:
; 899  :         case ID_WAVEBANK_ACTIVATE:
; 900  :             OnDoubleClick();

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	8b 02		 mov	 eax, DWORD PTR [edx]
  00061	ff 50 18	 call	 DWORD PTR [eax+24]

; 901  :             break;

  00064	eb 5a		 jmp	 SHORT $L53381
$L53385:

; 902  : 
; 903  :         case ID_REFRESH:
; 904  :         case ID_WAVEBANK_REFRESH:
; 905  :             OnCmdRefresh();

  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  0006f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00072	8b 82 b4 fd ff
	ff		 mov	 eax, DWORD PTR [edx-588]
  00078	ff 50 50	 call	 DWORD PTR [eax+80]

; 906  :             break;

  0007b	eb 43		 jmp	 SHORT $L53381
$L53386:

; 907  :         
; 908  :         case ID_RENAME:
; 909  :         case ID_WAVEBANK_RENAME:
; 910  :             OnCmdRename();

  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  00086	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 82 b4 fd ff
	ff		 mov	 eax, DWORD PTR [edx-588]
  0008f	ff 50 54	 call	 DWORD PTR [eax+84]

; 911  :             break;

  00092	eb 2c		 jmp	 SHORT $L53381
$L53387:

; 912  : 
; 913  :         case ID_DELETE:
; 914  :         case ID_WAVEBANK_DELETE:
; 915  :             OnCmdRemove();

  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  0009d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	8b 82 b4 fd ff
	ff		 mov	 eax, DWORD PTR [edx-588]
  000a6	ff 50 58	 call	 DWORD PTR [eax+88]

; 916  :             break;

  000a9	eb 15		 jmp	 SHORT $L53381
$L53388:

; 917  : 
; 918  :         case ID_PROPERTIES:
; 919  :         case ID_WAVEBANK_PROPERTIES:
; 920  :             OnCmdProperties();

  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 82 b4 fd ff
	ff		 mov	 eax, DWORD PTR [edx-588]
  000bd	ff 50 5c	 call	 DWORD PTR [eax+92]
$L53381:

; 921  :             break;
; 922  :     }
; 923  : 
; 924  :     return FALSE;

  000c0	33 c0		 xor	 eax, eax
$L53378:

; 925  : }

  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 10 00	 ret	 16			; 00000010H
$L54214:
  000c8	00 00 00 00	 DD	 $L53387
  000cc	00 00 00 00	 DD	 $L53385
  000d0	00 00 00 00	 DD	 $L53386
  000d4	00 00 00 00	 DD	 $L53388
  000d8	00 00 00 00	 DD	 $L53384
  000dc	00 00 00 00	 DD	 $L53381
$L54213:
  000e0	00		 DB	 0
  000e1	01		 DB	 1
  000e2	05		 DB	 5
  000e3	05		 DB	 5
  000e4	05		 DB	 5
  000e5	05		 DB	 5
  000e6	05		 DB	 5
  000e7	05		 DB	 5
  000e8	05		 DB	 5
  000e9	05		 DB	 5
  000ea	05		 DB	 5
  000eb	05		 DB	 5
  000ec	05		 DB	 5
  000ed	02		 DB	 2
  000ee	05		 DB	 5
  000ef	05		 DB	 5
  000f0	05		 DB	 5
  000f1	05		 DB	 5
  000f2	05		 DB	 5
  000f3	03		 DB	 3
  000f4	05		 DB	 5
  000f5	05		 DB	 5
  000f6	04		 DB	 4
  000f7	05		 DB	 5
  000f8	05		 DB	 5
  000f9	05		 DB	 5
  000fa	04		 DB	 4
  000fb	02		 DB	 2
  000fc	00		 DB	 0
  000fd	03		 DB	 3
  000fe	05		 DB	 5
  000ff	05		 DB	 5
  00100	01		 DB	 1
?OnCommand@CGuiWaveBank@@UAEHIIPAUHWND__@@PAJ@Z ENDP	; CGuiWaveBank::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\mainfrm.h
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CMainProjectTreeItem::OnCommand, COMDAT
; _this$ = ecx

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 129  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 130  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CMainProjectTreeItem@@UAEHIIPAUHWND__@@PAJ@Z ENDP ; CMainProjectTreeItem::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
_TEXT	ENDS
;	COMDAT ?OnCmdRefresh@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdRefresh@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::OnCmdRefresh, COMDAT
; _this$ = ecx

; 951  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 952  :     m_ListWindow.Refresh();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	81 c1 5c 02 00
	00		 add	 ecx, 604		; 0000025cH
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 90 5c 02 00
	00		 mov	 edx, DWORD PTR [eax+604]
  00019	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 953  : }

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?OnCmdRefresh@CGuiWaveBank@@UAEXXZ ENDP			; CGuiWaveBank::OnCmdRefresh
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdRename@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdRename@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::OnCmdRename, COMDAT
; _this$ = ecx

; 979  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 980  :     EditLabel();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	81 c1 4c 02 00
	00		 add	 ecx, 588		; 0000024cH
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 90 4c 02 00
	00		 mov	 edx, DWORD PTR [eax+588]
  00019	ff 52 10	 call	 DWORD PTR [edx+16]

; 981  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?OnCmdRename@CGuiWaveBank@@UAEXXZ ENDP			; CGuiWaveBank::OnCmdRename
_TEXT	ENDS
EXTRN	_MsgBoxResource:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnCmdRemove@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdRemove@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::OnCmdRemove, COMDAT
; _this$ = ecx

; 1007 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1008 :     if(IDYES != MsgBoxResource(g_pApplication->m_MainFrame, MB_ICONQUESTION | MB_YESNO, IDS_CONFIRM_DELETE_WAVEBANK))

  00007	6a 0f		 push	 15			; 0000000fH
  00009	6a 24		 push	 36			; 00000024H
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00011	83 c1 10	 add	 ecx, 16			; 00000010H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00019	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0001c	ff 52 58	 call	 DWORD PTR [edx+88]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 _MsgBoxResource
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH
  00028	83 f8 06	 cmp	 eax, 6
  0002b	74 02		 je	 SHORT $L53401

; 1009 :     {
; 1010 :         return;

  0002d	eb 15		 jmp	 SHORT $L53400
$L53401:

; 1011 :     }
; 1012 : 
; 1013 :     m_pParent->RemoveBank(this);

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	50		 push	 eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003f	8b 12		 mov	 edx, DWORD PTR [edx]
  00041	ff 52 08	 call	 DWORD PTR [edx+8]
$L53400:

; 1014 : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
?OnCmdRemove@CGuiWaveBank@@UAEXXZ ENDP			; CGuiWaveBank::OnCmdRemove
_TEXT	ENDS
PUBLIC	??0CWaveBankPropertiesDialog@@QAE@PAVCGuiWaveBank@@@Z ; CWaveBankPropertiesDialog::CWaveBankPropertiesDialog
PUBLIC	??1CWaveBankPropertiesDialog@@UAE@XZ		; CWaveBankPropertiesDialog::~CWaveBankPropertiesDialog
EXTRN	?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z:NEAR	; CDialog::DoModal
; Function compile flags: /Odt
;	COMDAT ?OnCmdProperties@CGuiWaveBank@@UAEXXZ
_TEXT	SEGMENT
_this$ = -60
_Dialog$ = -56
?OnCmdProperties@CGuiWaveBank@@UAEXXZ PROC NEAR		; CGuiWaveBank::OnCmdProperties, COMDAT
; _this$ = ecx

; 1040 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	89 4d c4	 mov	 DWORD PTR _this$[ebp], ecx

; 1041 :     CWaveBankPropertiesDialog    Dialog(this);

  00009	8b 45 c4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d c8	 lea	 ecx, DWORD PTR _Dialog$[ebp]
  00010	e8 00 00 00 00	 call	 ??0CWaveBankPropertiesDialog@@QAE@PAVCGuiWaveBank@@@Z ; CWaveBankPropertiesDialog::CWaveBankPropertiesDialog

; 1042 : 
; 1043 :     Dialog.DoModal(&g_pApplication->m_MainFrame);

  00015	6a 00		 push	 0
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0001d	83 c1 10	 add	 ecx, 16			; 00000010H
  00020	51		 push	 ecx
  00021	8d 4d c8	 lea	 ecx, DWORD PTR _Dialog$[ebp]
  00024	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z ; CDialog::DoModal

; 1044 : }

  00029	8d 4d c8	 lea	 ecx, DWORD PTR _Dialog$[ebp]
  0002c	e8 00 00 00 00	 call	 ??1CWaveBankPropertiesDialog@@UAE@XZ ; CWaveBankPropertiesDialog::~CWaveBankPropertiesDialog
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?OnCmdProperties@CGuiWaveBank@@UAEXXZ ENDP		; CGuiWaveBank::OnCmdProperties
_TEXT	ENDS
PUBLIC	??_ECGuiWaveBankEntry@@WDDI@AEPAXI@Z		; CGuiWaveBankEntry::`vector deleting destructor'
PUBLIC	?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z	; CGuiWaveBankEntry::Initialize
PUBLIC	?Load@CGuiWaveBankEntry@@UAEJH@Z		; CGuiWaveBankEntry::Load
PUBLIC	?SetName@CGuiWaveBankEntry@@UAEJPBD@Z		; CGuiWaveBankEntry::SetName
PUBLIC	?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z		; CGuiWaveBankEntry::SetFlags
PUBLIC	?MakeDirty@CGuiWaveBankEntry@@UAEXXZ		; CGuiWaveBankEntry::MakeDirty
PUBLIC	?UpdateUI@CGuiWaveBankEntry@@UAEXXZ		; CGuiWaveBankEntry::UpdateUI
PUBLIC	?OnCmdPlay@CGuiWaveBankEntry@@UAEXXZ		; CGuiWaveBankEntry::OnCmdPlay
PUBLIC	?OnEndLabelEdit@CGuiWaveBankEntry@@UAEHPBD@Z	; CGuiWaveBankEntry::OnEndLabelEdit
PUBLIC	?OnStateChanged@CGuiWaveBankEntry@@UAEXKK@Z	; CGuiWaveBankEntry::OnStateChanged
PUBLIC	?OnDoubleClick@CGuiWaveBankEntry@@UAEXXZ	; CGuiWaveBankEntry::OnDoubleClick
PUBLIC	??_7CGuiWaveBankEntry@@6BCWaveBankEntry@@@	; CGuiWaveBankEntry::`vftable'
PUBLIC	??_7CGuiWaveBankEntry@@6BCListViewItem@@@	; CGuiWaveBankEntry::`vftable'
PUBLIC	??_GCGuiWaveBankEntry@@UAEPAXI@Z		; CGuiWaveBankEntry::`scalar deleting destructor'
PUBLIC	??_ECGuiWaveBankEntry@@UAEPAXI@Z		; CGuiWaveBankEntry::`vector deleting destructor'
PUBLIC	?SetText@CListViewItem@@UAEXPBD@Z		; CListViewItem::SetText
PUBLIC	?EditLabel@CListViewItem@@UAEPAUHWND__@@XZ	; CListViewItem::EditLabel
EXTRN	??0CListViewItem@@QAE@XZ:NEAR			; CListViewItem::CListViewItem
EXTRN	?Create@CListViewItem@@UAEHPAVCListView@@PBD1PAX@Z:NEAR ; CListViewItem::Create
EXTRN	?Remove@CListViewItem@@UAEXXZ:NEAR		; CListViewItem::Remove
EXTRN	?SetColumnText@CListViewItem@@UAEXHPBD@Z:NEAR	; CListViewItem::SetColumnText
EXTRN	?SetColumnValue@CListViewItem@@UAEXHHHH@Z:NEAR	; CListViewItem::SetColumnValue
EXTRN	?SetSelection@CListViewItem@@UAEXH@Z:NEAR	; CListViewItem::SetSelection
EXTRN	?OnDelete@CListViewItem@@UAEXXZ:NEAR		; CListViewItem::OnDelete
EXTRN	?GetListIndex@CListViewItem@@UAEHXZ:NEAR	; CListViewItem::GetListIndex
EXTRN	??0CWaveBankEntry@@QAE@PAVCWaveBank@@@Z:NEAR	; CWaveBankEntry::CWaveBankEntry
EXTRN	?GetValidFlags@CWaveBankEntry@@UAEKXZ:NEAR	; CWaveBankEntry::GetValidFlags
EXTRN	?GetMetaData@CWaveBankEntry@@UAEJPAU_WAVEBANKENTRY@@KKPAK@Z:NEAR ; CWaveBankEntry::GetMetaData
EXTRN	?CommitWaveData@CWaveBankEntry@@UAEJPAVCWaveBankCallback@@PAVCStdFileStream@WaveLoader@@KPBU_WAVEBANKENTRY@@PAXK@Z:NEAR ; CWaveBankEntry::CommitWaveData
EXTRN	?FindDuplicateEntry@CWaveBankEntry@@MAEJPBDPAI01@Z:NEAR ; CWaveBankEntry::FindDuplicateEntry
;	COMDAT ??_7CGuiWaveBankEntry@@6BCWaveBankEntry@@@
CONST	SEGMENT
??_7CGuiWaveBankEntry@@6BCWaveBankEntry@@@ DD FLAT:??_ECGuiWaveBankEntry@@UAEPAXI@Z ; CGuiWaveBankEntry::`vftable'
	DD	FLAT:?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z
	DD	FLAT:?Load@CGuiWaveBankEntry@@UAEJH@Z
	DD	FLAT:?SetName@CGuiWaveBankEntry@@UAEJPBD@Z
	DD	FLAT:?GetValidFlags@CWaveBankEntry@@UAEKXZ
	DD	FLAT:?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z
	DD	FLAT:?GetMetaData@CWaveBankEntry@@UAEJPAU_WAVEBANKENTRY@@KKPAK@Z
	DD	FLAT:?CommitWaveData@CWaveBankEntry@@UAEJPAVCWaveBankCallback@@PAVCStdFileStream@WaveLoader@@KPBU_WAVEBANKENTRY@@PAXK@Z
	DD	FLAT:?FindDuplicateEntry@CWaveBankEntry@@MAEJPBDPAI01@Z
	DD	FLAT:?MakeDirty@CGuiWaveBankEntry@@UAEXXZ
	DD	FLAT:?UpdateUI@CGuiWaveBankEntry@@UAEXXZ
	DD	FLAT:?OnCmdPlay@CGuiWaveBankEntry@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CGuiWaveBankEntry@@6BCListViewItem@@@
CONST	SEGMENT
??_7CGuiWaveBankEntry@@6BCListViewItem@@@ DD FLAT:??_ECGuiWaveBankEntry@@WDDI@AEPAXI@Z ; CGuiWaveBankEntry::`vftable'
	DD	FLAT:?Create@CListViewItem@@UAEHPAVCListView@@PBD1PAX@Z
	DD	FLAT:?Remove@CListViewItem@@UAEXXZ
	DD	FLAT:?SetText@CListViewItem@@UAEXPBD@Z
	DD	FLAT:?SetColumnText@CListViewItem@@UAEXHPBD@Z
	DD	FLAT:?SetColumnValue@CListViewItem@@UAEXHHHH@Z
	DD	FLAT:?EditLabel@CListViewItem@@UAEPAUHWND__@@XZ
	DD	FLAT:?SetSelection@CListViewItem@@UAEXH@Z
	DD	FLAT:?OnDelete@CListViewItem@@UAEXXZ
	DD	FLAT:?OnEndLabelEdit@CGuiWaveBankEntry@@UAEHPBD@Z
	DD	FLAT:?OnStateChanged@CGuiWaveBankEntry@@UAEXKK@Z
	DD	FLAT:?OnDoubleClick@CGuiWaveBankEntry@@UAEXXZ
	DD	FLAT:?GetListIndex@CListViewItem@@UAEHXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z
_TEXT	SEGMENT
_pWaveBank$ = 8
_this$ = -4
??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z PROC NEAR	; CGuiWaveBankEntry::CGuiWaveBankEntry, COMDAT
; _this$ = ecx

; 1070 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pWaveBank$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CWaveBankEntry@@QAE@PAVCWaveBank@@@Z ; CWaveBankEntry::CWaveBankEntry
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0001c	e8 00 00 00 00	 call	 ??0CListViewItem@@QAE@XZ ; CListViewItem::CListViewItem
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGuiWaveBankEntry@@6BCWaveBankEntry@@@ ; CGuiWaveBankEntry::`vftable'
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	c7 82 38 03 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+824], OFFSET FLAT:??_7CGuiWaveBankEntry@@6BCListViewItem@@@ ; CGuiWaveBankEntry::`vftable'

; 1071 :     g_pApplication->m_Project.MakeDirty();

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0003d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00048	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0004e	ff 52 34	 call	 DWORD PTR [edx+52]

; 1072 : }

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z ENDP	; CGuiWaveBankEntry::CGuiWaveBankEntry
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\listview.h
_TEXT	ENDS
;	COMDAT ?SetText@CListViewItem@@UAEXPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?SetText@CListViewItem@@UAEXPBD@Z PROC NEAR		; CListViewItem::SetText, COMDAT
; _this$ = ecx

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 221  :     SetColumnText(0, pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 52 10	 call	 DWORD PTR [edx+16]

; 222  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetText@CListViewItem@@UAEXPBD@Z ENDP			; CListViewItem::SetText
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EditLabel@CListViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?EditLabel@CListViewItem@@UAEPAUHWND__@@XZ PROC NEAR	; CListViewItem::EditLabel, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 226  :     return ListView_EditLabel(m_pList->m_ListCtrl.m_hWnd, m_nItemIndex);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000f	51		 push	 ecx
  00010	68 17 10 00 00	 push	 4119			; 00001017H
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001b	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0001e	51		 push	 ecx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 227  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?EditLabel@CListViewItem@@UAEPAUHWND__@@XZ ENDP		; CListViewItem::EditLabel
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.h
_TEXT	ENDS
;	COMDAT ?MakeDirty@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?MakeDirty@CGuiWaveBankEntry@@UAEXXZ PROC NEAR		; CGuiWaveBankEntry::MakeDirty, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 68   :     g_pApplication->m_Project.MakeDirty();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  0001e	ff 52 34	 call	 DWORD PTR [edx+52]

; 69   :     UpdateUI();

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	ff 52 28	 call	 DWORD PTR [edx+40]

; 70   : }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?MakeDirty@CGuiWaveBankEntry@@UAEXXZ ENDP		; CGuiWaveBankEntry::MakeDirty
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnDoubleClick@CGuiWaveBankEntry@@UAEXXZ PROC NEAR	; CGuiWaveBankEntry::OnDoubleClick, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 74   :     OnCmdPlay();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	81 e9 38 03 00
	00		 sub	 ecx, 824		; 00000338H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 90 c8 fc ff
	ff		 mov	 edx, DWORD PTR [eax-824]
  00019	ff 52 2c	 call	 DWORD PTR [edx+44]

; 75   : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?OnDoubleClick@CGuiWaveBankEntry@@UAEXXZ ENDP		; CGuiWaveBankEntry::OnDoubleClick
_TEXT	ENDS
PUBLIC	??1CGuiWaveBankEntry@@UAE@XZ			; CGuiWaveBankEntry::~CGuiWaveBankEntry
; Function compile flags: /Odt
;	COMDAT ??_GCGuiWaveBankEntry@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGuiWaveBankEntry@@UAEPAXI@Z PROC NEAR		; CGuiWaveBankEntry::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGuiWaveBankEntry@@UAE@XZ ; CGuiWaveBankEntry::~CGuiWaveBankEntry
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53414
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53414:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGuiWaveBankEntry@@UAEPAXI@Z ENDP			; CGuiWaveBankEntry::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CListViewItem@@UAE@XZ:NEAR			; CListViewItem::~CListViewItem
EXTRN	??1CWaveBankEntry@@UAE@XZ:NEAR			; CWaveBankEntry::~CWaveBankEntry
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
;	COMDAT ??1CGuiWaveBankEntry@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGuiWaveBankEntry@@UAE@XZ PROC NEAR			; CGuiWaveBankEntry::~CGuiWaveBankEntry, COMDAT
; _this$ = ecx

; 1097 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBankEntry@@6BCWaveBankEntry@@@ ; CGuiWaveBankEntry::`vftable'
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	c7 81 38 03 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+824], OFFSET FLAT:??_7CGuiWaveBankEntry@@6BCListViewItem@@@ ; CGuiWaveBankEntry::`vftable'

; 1098 :     MakeDirty();

  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?MakeDirty@CGuiWaveBankEntry@@UAEXXZ ; CGuiWaveBankEntry::MakeDirty

; 1099 : }

  00027	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0002b	74 0e		 je	 SHORT $L54251
  0002d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00030	81 c2 38 03 00
	00		 add	 edx, 824		; 00000338H
  00036	89 55 f8	 mov	 DWORD PTR -8+[ebp], edx
  00039	eb 07		 jmp	 SHORT $L54252
$L54251:
  0003b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L54252:
  00042	8b 4d f8	 mov	 ecx, DWORD PTR -8+[ebp]
  00045	e8 00 00 00 00	 call	 ??1CListViewItem@@UAE@XZ ; CListViewItem::~CListViewItem
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1CWaveBankEntry@@UAE@XZ ; CWaveBankEntry::~CWaveBankEntry
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??1CGuiWaveBankEntry@@UAE@XZ ENDP			; CGuiWaveBankEntry::~CGuiWaveBankEntry
_TEXT	ENDS
EXTRN	?Initialize@CWaveBankEntry@@UAEJPBD0K@Z:NEAR	; CWaveBankEntry::Initialize
EXTRN	__splitpath:NEAR
; Function compile flags: /Odt
;	COMDAT ?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z
_TEXT	SEGMENT
_pszEntryName$ = 8
_pszFileName$ = 12
_dwFlags$ = 16
_this$ = -8
_hr$ = -4
?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z PROC NEAR	; CGuiWaveBankEntry::Initialize, COMDAT
; _this$ = ecx

; 1129 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1130 :     HRESULT                 hr;
; 1131 :     
; 1132 :     //
; 1133 :     // Hand off to the base class
; 1134 :     //
; 1135 : 
; 1136 :     hr = CWaveBankEntry::Initialize(pszEntryName, pszFileName, dwFlags);

  00009	8b 45 10	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR _pszEntryName$[ebp]
  00014	52		 push	 edx
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Initialize@CWaveBankEntry@@UAEJPBD0K@Z ; CWaveBankEntry::Initialize
  0001d	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1137 : 
; 1138 :     //
; 1139 :     // Save the file extension
; 1140 :     //
; 1141 : 
; 1142 :     if(SUCCEEDED(hr))

  00020	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00024	7c 1b		 jl	 SHORT $L53427

; 1143 :     {
; 1144 :         _splitpath(pszFileName, NULL, NULL, NULL, m_szFileExtension);

  00026	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00029	05 48 03 00 00	 add	 eax, 840		; 00000348H
  0002e	50		 push	 eax
  0002f	6a 00		 push	 0
  00031	6a 00		 push	 0
  00033	6a 00		 push	 0
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 __splitpath
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
$L53427:

; 1145 :     }
; 1146 : 
; 1147 :     return hr;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 1148 : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 0c 00	 ret	 12			; 0000000cH
?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z ENDP		; CGuiWaveBankEntry::Initialize
_TEXT	ENDS
EXTRN	__imp__LoadIconA@8:NEAR
EXTRN	?Load@CWaveBankEntry@@UAEJH@Z:NEAR		; CWaveBankEntry::Load
EXTRN	__imp__SHGetFileInfoA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?Load@CGuiWaveBankEntry@@UAEJH@Z
_TEXT	SEGMENT
_fForce$ = 8
_this$ = -376
_pBank$ = -4
_hLargeIcon$ = -372
_hSmallIcon$ = -364
_shfi$ = -360
_hr$ = -368
?Load@CGuiWaveBankEntry@@UAEJH@Z PROC NEAR		; CGuiWaveBankEntry::Load, COMDAT
; _this$ = ecx

; 1174 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00009	89 8d 88 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1175 :     CGuiWaveBank *          pBank       = (CGuiWaveBank *)m_pParent;

  0000f	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00018	89 4d fc	 mov	 DWORD PTR _pBank$[ebp], ecx

; 1176 :     HICON                   hLargeIcon  = NULL;

  0001b	c7 85 8c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hLargeIcon$[ebp], 0

; 1177 :     HICON                   hSmallIcon  = NULL;

  00025	c7 85 94 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hSmallIcon$[ebp], 0

; 1178 :     SHFILEINFO              shfi;
; 1179 :     HRESULT                 hr;
; 1180 : 
; 1181 :     //
; 1182 :     // Register the shell icon with the list view
; 1183 :     //
; 1184 : 
; 1185 :     if(!m_fLoaded)

  0002f	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00035	83 ba 30 03 00
	00 00		 cmp	 DWORD PTR [edx+816], 0
  0003c	0f 85 02 01 00
	00		 jne	 $L53438

; 1186 :     {
; 1187 :         if(!pBank->m_ListWindow.m_ListView.FindRegisteredType(m_szFileExtension))

  00042	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00048	05 48 03 00 00	 add	 eax, 840		; 00000348H
  0004d	50		 push	 eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00051	81 c1 90 02 00
	00		 add	 ecx, 656		; 00000290H
  00057	8b 55 fc	 mov	 edx, DWORD PTR _pBank$[ebp]
  0005a	8b 82 90 02 00
	00		 mov	 eax, DWORD PTR [edx+656]
  00060	ff 90 cc 00 00
	00		 call	 DWORD PTR [eax+204]
  00066	85 c0		 test	 eax, eax
  00068	0f 85 d6 00 00
	00		 jne	 $L53439

; 1188 :         {
; 1189 :             if(SHGetFileInfo(m_szFileName, 0, &shfi, sizeof(shfi), SHGFI_ICON | SHGFI_LARGEICON))

  0006e	68 00 01 00 00	 push	 256			; 00000100H
  00073	68 60 01 00 00	 push	 352			; 00000160H
  00078	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _shfi$[ebp]
  0007e	51		 push	 ecx
  0007f	6a 00		 push	 0
  00081	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00087	81 c2 10 02 00
	00		 add	 edx, 528		; 00000210H
  0008d	52		 push	 edx
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SHGetFileInfoA@20
  00094	85 c0		 test	 eax, eax
  00096	74 0c		 je	 SHORT $L53440

; 1190 :             {
; 1191 :                 hLargeIcon = shfi.hIcon;

  00098	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _shfi$[ebp]
  0009e	89 85 8c fe ff
	ff		 mov	 DWORD PTR _hLargeIcon$[ebp], eax
$L53440:

; 1192 :             }
; 1193 :             
; 1194 :             if(SHGetFileInfo(m_szFileName, 0, &shfi, sizeof(shfi), SHGFI_ICON | SHGFI_SMALLICON))

  000a4	68 01 01 00 00	 push	 257			; 00000101H
  000a9	68 60 01 00 00	 push	 352			; 00000160H
  000ae	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _shfi$[ebp]
  000b4	51		 push	 ecx
  000b5	6a 00		 push	 0
  000b7	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000bd	81 c2 10 02 00
	00		 add	 edx, 528		; 00000210H
  000c3	52		 push	 edx
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SHGetFileInfoA@20
  000ca	85 c0		 test	 eax, eax
  000cc	74 0c		 je	 SHORT $L53441

; 1195 :             {
; 1196 :                 hSmallIcon = shfi.hIcon;

  000ce	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _shfi$[ebp]
  000d4	89 85 94 fe ff
	ff		 mov	 DWORD PTR _hSmallIcon$[ebp], eax
$L53441:

; 1197 :             }
; 1198 : 
; 1199 :             if(!hLargeIcon)

  000da	83 bd 8c fe ff
	ff 00		 cmp	 DWORD PTR _hLargeIcon$[ebp], 0
  000e1	75 13		 jne	 SHORT $L53442

; 1200 :             {
; 1201 :                 hLargeIcon = LoadIcon(NULL, IDI_QUESTION);

  000e3	68 02 7f 00 00	 push	 32514			; 00007f02H
  000e8	6a 00		 push	 0
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  000f0	89 85 8c fe ff
	ff		 mov	 DWORD PTR _hLargeIcon$[ebp], eax
$L53442:

; 1202 :             }
; 1203 : 
; 1204 :             if(!hSmallIcon)

  000f6	83 bd 94 fe ff
	ff 00		 cmp	 DWORD PTR _hSmallIcon$[ebp], 0
  000fd	75 13		 jne	 SHORT $L53446

; 1205 :             {
; 1206 :                 hSmallIcon = LoadIcon(NULL, IDI_QUESTION);

  000ff	68 02 7f 00 00	 push	 32514			; 00007f02H
  00104	6a 00		 push	 0
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  0010c	89 85 94 fe ff
	ff		 mov	 DWORD PTR _hSmallIcon$[ebp], eax
$L53446:

; 1207 :             }
; 1208 : 
; 1209 :             pBank->m_ListWindow.m_ListView.RegisterType(m_szFileExtension, hLargeIcon, hSmallIcon);

  00112	8b 8d 94 fe ff
	ff		 mov	 ecx, DWORD PTR _hSmallIcon$[ebp]
  00118	51		 push	 ecx
  00119	8b 95 8c fe ff
	ff		 mov	 edx, DWORD PTR _hLargeIcon$[ebp]
  0011f	52		 push	 edx
  00120	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00126	05 48 03 00 00	 add	 eax, 840		; 00000348H
  0012b	50		 push	 eax
  0012c	8b 4d fc	 mov	 ecx, DWORD PTR _pBank$[ebp]
  0012f	81 c1 90 02 00
	00		 add	 ecx, 656		; 00000290H
  00135	8b 55 fc	 mov	 edx, DWORD PTR _pBank$[ebp]
  00138	8b 82 90 02 00
	00		 mov	 eax, DWORD PTR [edx+656]
  0013e	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]
$L53439:
$L53438:

; 1210 :         }
; 1211 :     }
; 1212 : 
; 1213 :     //
; 1214 :     // Hand off to the base class
; 1215 :     //
; 1216 : 
; 1217 :     hr = CWaveBankEntry::Load(fForce);

  00144	8b 4d 08	 mov	 ecx, DWORD PTR _fForce$[ebp]
  00147	51		 push	 ecx
  00148	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0014e	e8 00 00 00 00	 call	 ?Load@CWaveBankEntry@@UAEJH@Z ; CWaveBankEntry::Load
  00153	89 85 90 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 1218 : 
; 1219 :     //
; 1220 :     // Update the UI
; 1221 :     //
; 1222 : 
; 1223 :     if(SUCCEEDED(hr))

  00159	83 bd 90 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00160	7c 11		 jl	 SHORT $L53451

; 1224 :     {
; 1225 :         UpdateUI();

  00162	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00168	8b 02		 mov	 eax, DWORD PTR [edx]
  0016a	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00170	ff 50 28	 call	 DWORD PTR [eax+40]
$L53451:

; 1226 :     }
; 1227 : 
; 1228 :     return hr;

  00173	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]

; 1229 : }

  00179	8b e5		 mov	 esp, ebp
  0017b	5d		 pop	 ebp
  0017c	c2 04 00	 ret	 4
?Load@CGuiWaveBankEntry@@UAEJH@Z ENDP			; CGuiWaveBankEntry::Load
_TEXT	ENDS
EXTRN	?SetName@CWaveBankEntry@@UAEJPBD@Z:NEAR		; CWaveBankEntry::SetName
; Function compile flags: /Odt
;	COMDAT ?SetName@CGuiWaveBankEntry@@UAEJPBD@Z
_TEXT	SEGMENT
_pszName$ = 8
_this$ = -8
_hr$ = -4
?SetName@CGuiWaveBankEntry@@UAEJPBD@Z PROC NEAR		; CGuiWaveBankEntry::SetName, COMDAT
; _this$ = ecx

; 1255 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1256 :     HRESULT                 hr;
; 1257 : 
; 1258 :     if(!_tcscmp(pszName, m_szEntryName))

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _pszName$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 _strcmp
  00019	83 c4 08	 add	 esp, 8
  0001c	85 c0		 test	 eax, eax
  0001e	75 04		 jne	 SHORT $L53457

; 1259 :     {
; 1260 :         return S_OK;

  00020	33 c0		 xor	 eax, eax
  00022	eb 23		 jmp	 SHORT $L53455
$L53457:

; 1261 :     }
; 1262 :     
; 1263 :     hr = CWaveBankEntry::SetName(pszName);

  00024	8b 55 08	 mov	 edx, DWORD PTR _pszName$[ebp]
  00027	52		 push	 edx
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?SetName@CWaveBankEntry@@UAEJPBD@Z ; CWaveBankEntry::SetName
  00030	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1264 : 
; 1265 :     if(SUCCEEDED(hr))

  00033	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00037	7c 0b		 jl	 SHORT $L53460

; 1266 :     {
; 1267 :         MakeDirty();

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	ff 52 24	 call	 DWORD PTR [edx+36]
$L53460:

; 1268 :     }
; 1269 : 
; 1270 :     return hr;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$L53455:

; 1271 : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?SetName@CGuiWaveBankEntry@@UAEJPBD@Z ENDP		; CGuiWaveBankEntry::SetName
_TEXT	ENDS
EXTRN	?SetFlags@CWaveBankEntry@@UAEKKK@Z:NEAR		; CWaveBankEntry::SetFlags
; Function compile flags: /Odt
;	COMDAT ?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z
_TEXT	SEGMENT
_dwMask$ = 8
_dwFlags$ = 12
_this$ = -8
_dwNewFlags$ = -4
?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z PROC NEAR		; CGuiWaveBankEntry::SetFlags, COMDAT
; _this$ = ecx

; 1300 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1301 :     DWORD                   dwNewFlags;
; 1302 :     
; 1303 :     dwNewFlags = CWaveBankEntry::SetFlags(dwMask, dwFlags);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _dwMask$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?SetFlags@CWaveBankEntry@@UAEKKK@Z ; CWaveBankEntry::SetFlags
  00019	89 45 fc	 mov	 DWORD PTR _dwNewFlags$[ebp], eax

; 1304 : 
; 1305 :     if(dwNewFlags != (dwFlags & dwMask))

  0001c	8b 55 0c	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  0001f	23 55 08	 and	 edx, DWORD PTR _dwMask$[ebp]
  00022	39 55 fc	 cmp	 DWORD PTR _dwNewFlags$[ebp], edx
  00025	74 0b		 je	 SHORT $L53467

; 1306 :     {
; 1307 :         MakeDirty();

  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	ff 52 24	 call	 DWORD PTR [edx+36]
$L53467:

; 1308 :     }
; 1309 : 
; 1310 :     return dwNewFlags;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _dwNewFlags$[ebp]

; 1311 : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z ENDP		; CGuiWaveBankEntry::SetFlags
_TEXT	ENDS
PUBLIC	??_C@_03MECJ@PCM?$AA@				; `string'
PUBLIC	?GetName@CXboxAdpcmFilter@@SGPBDXZ		; CXboxAdpcmFilter::GetName
PUBLIC	??_C@_05KMJF@ADPCM?$AA@				; `string'
PUBLIC	?GetName@C8BitFilter@@SGPBDXZ			; C8BitFilter::GetName
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT
??_C@_05KMJF@ADPCM?$AA@ DB 'ADPCM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MECJ@PCM?$AA@
CONST	SEGMENT
??_C@_03MECJ@PCM?$AA@ DB 'PCM', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?UpdateUI@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT
_this$ = -16
_pBank$ = -8
_nColumn$ = -4
_dwOffset$ = -12
?UpdateUI@CGuiWaveBankEntry@@UAEXXZ PROC NEAR		; CGuiWaveBankEntry::UpdateUI, COMDAT
; _this$ = ecx

; 1337 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1338 :     CGuiWaveBank *          pBank       = (CGuiWaveBank *)CWaveBankEntry::m_pParent;

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _pBank$[ebp], ecx

; 1339 :     UINT                    nColumn     = 1;

  00012	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _nColumn$[ebp], 1

; 1340 :     DWORD                   dwOffset    = 0;

  00019	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwOffset$[ebp], 0

; 1341 : 
; 1342 :     if(!pBank->m_ListWindow.m_ListView)

  00020	8b 4d f8	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00023	81 c1 90 02 00
	00		 add	 ecx, 656		; 00000290H
  00029	8b 55 f8	 mov	 edx, DWORD PTR _pBank$[ebp]
  0002c	8b 82 90 02 00
	00		 mov	 eax, DWORD PTR [edx+656]
  00032	ff 50 58	 call	 DWORD PTR [eax+88]
  00035	85 c0		 test	 eax, eax
  00037	75 05		 jne	 SHORT $L53476

; 1343 :     {
; 1344 :         return;

  00039	e9 39 03 00 00	 jmp	 $L53471
$L53476:

; 1345 :     }
; 1346 :     
; 1347 :     //
; 1348 :     // If we're not already in the list, put us there
; 1349 :     //
; 1350 : 
; 1351 :     if(-1 == m_nItemIndex)

  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 b9 40 03 00
	00 ff		 cmp	 DWORD PTR [ecx+832], -1
  00048	75 2d		 jne	 SHORT $L53477

; 1352 :     {
; 1353 :         CListViewItem::Create(&pBank->m_ListWindow.m_ListView, m_szEntryName, m_szFileExtension);

  0004a	6a 00		 push	 0
  0004c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	81 c2 48 03 00
	00		 add	 edx, 840		; 00000348H
  00055	52		 push	 edx
  00056	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 c0 10	 add	 eax, 16			; 00000010H
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00060	81 c1 90 02 00
	00		 add	 ecx, 656		; 00000290H
  00066	51		 push	 ecx
  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00070	e8 00 00 00 00	 call	 ?Create@CListViewItem@@UAEHPAVCListView@@PBD1PAX@Z ; CListViewItem::Create

; 1354 :     }
; 1355 :     else

  00075	eb 1c		 jmp	 SHORT $L53478
$L53477:

; 1356 :     {
; 1357 :         SetText(m_szEntryName);

  00077	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	83 c2 10	 add	 edx, 16			; 00000010H
  0007d	52		 push	 edx
  0007e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00087	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 90 38 03 00
	00		 mov	 edx, DWORD PTR [eax+824]
  00090	ff 52 0c	 call	 DWORD PTR [edx+12]
$L53478:

; 1358 :     }
; 1359 : 
; 1360 :     //
; 1361 :     // Add column data
; 1362 :     //
; 1363 : 
; 1364 :     if(WAVEBANKMINIFORMAT_TAG_ADPCM == m_Format.wFormatTag)

  00093	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00096	8b 88 14 03 00
	00		 mov	 ecx, DWORD PTR [eax+788]
  0009c	83 e1 01	 and	 ecx, 1
  0009f	83 f9 01	 cmp	 ecx, 1
  000a2	75 2f		 jne	 SHORT $L53479

; 1365 :     {
; 1366 :         SetColumnText(nColumn++, TEXT("ADPCM"));

  000a4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05KMJF@ADPCM?$AA@ ; `string'
  000a9	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  000ac	89 55 ec	 mov	 DWORD PTR -20+[ebp], edx
  000af	8b 45 ec	 mov	 eax, DWORD PTR -20+[ebp]
  000b2	50		 push	 eax
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _nColumn$[ebp]
  000b6	83 c1 01	 add	 ecx, 1
  000b9	89 4d fc	 mov	 DWORD PTR _nColumn$[ebp], ecx
  000bc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  000c5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000c8	8b 82 38 03 00
	00		 mov	 eax, DWORD PTR [edx+824]
  000ce	ff 50 10	 call	 DWORD PTR [eax+16]

; 1367 :     }
; 1368 :     else

  000d1	eb 2d		 jmp	 SHORT $L53480
$L53479:

; 1369 :     {
; 1370 :         SetColumnText(nColumn++, TEXT("PCM"));

  000d3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03MECJ@PCM?$AA@ ; `string'
  000d8	8b 4d fc	 mov	 ecx, DWORD PTR _nColumn$[ebp]
  000db	89 4d e8	 mov	 DWORD PTR -24+[ebp], ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR -24+[ebp]
  000e1	52		 push	 edx
  000e2	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  000e5	83 c0 01	 add	 eax, 1
  000e8	89 45 fc	 mov	 DWORD PTR _nColumn$[ebp], eax
  000eb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  000f4	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000f7	8b 82 38 03 00
	00		 mov	 eax, DWORD PTR [edx+824]
  000fd	ff 50 10	 call	 DWORD PTR [eax+16]
$L53480:

; 1371 :     }
; 1372 : 
; 1373 :     SetColumnValue(nColumn++, m_Format.nSamplesPerSec, FALSE, TRUE);

  00100	6a 01		 push	 1
  00102	6a 00		 push	 0
  00104	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	8b 91 14 03 00
	00		 mov	 edx, DWORD PTR [ecx+788]
  0010d	c1 ea 04	 shr	 edx, 4
  00110	81 e2 ff ff ff
	07		 and	 edx, 134217727		; 07ffffffH
  00116	52		 push	 edx
  00117	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  0011a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0011d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00120	51		 push	 ecx
  00121	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  00124	83 c2 01	 add	 edx, 1
  00127	89 55 fc	 mov	 DWORD PTR _nColumn$[ebp], edx
  0012a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00133	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00136	8b 90 38 03 00
	00		 mov	 edx, DWORD PTR [eax+824]
  0013c	ff 52 14	 call	 DWORD PTR [edx+20]

; 1374 :     
; 1375 :     if(WAVEBANKMINIFORMAT_TAG_ADPCM == m_Format.wFormatTag)

  0013f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00142	8b 88 14 03 00
	00		 mov	 ecx, DWORD PTR [eax+788]
  00148	83 e1 01	 and	 ecx, 1
  0014b	83 f9 01	 cmp	 ecx, 1
  0014e	75 30		 jne	 SHORT $L53482

; 1376 :     {
; 1377 :         SetColumnValue(nColumn++, 4, FALSE, FALSE);

  00150	6a 00		 push	 0
  00152	6a 00		 push	 0
  00154	6a 04		 push	 4
  00156	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  00159	89 55 e0	 mov	 DWORD PTR -32+[ebp], edx
  0015c	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  0015f	50		 push	 eax
  00160	8b 4d fc	 mov	 ecx, DWORD PTR _nColumn$[ebp]
  00163	83 c1 01	 add	 ecx, 1
  00166	89 4d fc	 mov	 DWORD PTR _nColumn$[ebp], ecx
  00169	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0016c	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00172	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00175	8b 82 38 03 00
	00		 mov	 eax, DWORD PTR [edx+824]
  0017b	ff 50 14	 call	 DWORD PTR [eax+20]

; 1378 :     }
; 1379 :     else if(WAVEBANKMINIFORMAT_BITDEPTH_8 == m_Format.wBitsPerSample)

  0017e	eb 71		 jmp	 SHORT $L53483
$L53482:
  00180	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	8b 91 14 03 00
	00		 mov	 edx, DWORD PTR [ecx+788]
  00189	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  0018c	83 e2 01	 and	 edx, 1
  0018f	85 d2		 test	 edx, edx
  00191	75 30		 jne	 SHORT $L53484

; 1380 :     {
; 1381 :         SetColumnValue(nColumn++, 8, FALSE, FALSE);

  00193	6a 00		 push	 0
  00195	6a 00		 push	 0
  00197	6a 08		 push	 8
  00199	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  0019c	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  0019f	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  001a2	51		 push	 ecx
  001a3	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  001a6	83 c2 01	 add	 edx, 1
  001a9	89 55 fc	 mov	 DWORD PTR _nColumn$[ebp], edx
  001ac	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001af	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  001b5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001b8	8b 90 38 03 00
	00		 mov	 edx, DWORD PTR [eax+824]
  001be	ff 52 14	 call	 DWORD PTR [edx+20]

; 1382 :     }
; 1383 :     else

  001c1	eb 2e		 jmp	 SHORT $L53485
$L53484:

; 1384 :     {
; 1385 :         SetColumnValue(nColumn++, 16, FALSE, FALSE);

  001c3	6a 00		 push	 0
  001c5	6a 00		 push	 0
  001c7	6a 10		 push	 16			; 00000010H
  001c9	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  001cc	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  001cf	8b 4d d8	 mov	 ecx, DWORD PTR -40+[ebp]
  001d2	51		 push	 ecx
  001d3	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  001d6	83 c2 01	 add	 edx, 1
  001d9	89 55 fc	 mov	 DWORD PTR _nColumn$[ebp], edx
  001dc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001df	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  001e5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001e8	8b 90 38 03 00
	00		 mov	 edx, DWORD PTR [eax+824]
  001ee	ff 52 14	 call	 DWORD PTR [edx+20]
$L53485:
$L53483:

; 1386 :     }
; 1387 : 
; 1388 :     SetColumnValue(nColumn++, m_Format.nChannels, FALSE, FALSE);

  001f1	6a 00		 push	 0
  001f3	6a 00		 push	 0
  001f5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001f8	8b 88 14 03 00
	00		 mov	 ecx, DWORD PTR [eax+788]
  001fe	d1 e9		 shr	 ecx, 1
  00200	83 e1 07	 and	 ecx, 7
  00203	51		 push	 ecx
  00204	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  00207	89 55 d4	 mov	 DWORD PTR -44+[ebp], edx
  0020a	8b 45 d4	 mov	 eax, DWORD PTR -44+[ebp]
  0020d	50		 push	 eax
  0020e	8b 4d fc	 mov	 ecx, DWORD PTR _nColumn$[ebp]
  00211	83 c1 01	 add	 ecx, 1
  00214	89 4d fc	 mov	 DWORD PTR _nColumn$[ebp], ecx
  00217	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0021a	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00220	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00223	8b 82 38 03 00
	00		 mov	 eax, DWORD PTR [edx+824]
  00229	ff 50 14	 call	 DWORD PTR [eax+20]

; 1389 :     SetColumnValue(nColumn++, m_dwDestLength, FALSE, TRUE);

  0022c	6a 01		 push	 1
  0022e	6a 00		 push	 0
  00230	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00233	8b 91 34 03 00
	00		 mov	 edx, DWORD PTR [ecx+820]
  00239	52		 push	 edx
  0023a	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  0023d	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  00240	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  00243	51		 push	 ecx
  00244	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  00247	83 c2 01	 add	 edx, 1
  0024a	89 55 fc	 mov	 DWORD PTR _nColumn$[ebp], edx
  0024d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00250	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00256	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00259	8b 90 38 03 00
	00		 mov	 edx, DWORD PTR [eax+824]
  0025f	ff 52 14	 call	 DWORD PTR [edx+20]

; 1390 : 
; 1391 :     if(m_dwFlags & WBFILTER_ADPCM)

  00262	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00265	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  0026b	83 e1 01	 and	 ecx, 1
  0026e	85 c9		 test	 ecx, ecx
  00270	74 30		 je	 SHORT $L53486

; 1392 :     {
; 1393 :         SetColumnText(nColumn++, CXboxAdpcmFilter::GetName());

  00272	e8 00 00 00 00	 call	 ?GetName@CXboxAdpcmFilter@@SGPBDXZ ; CXboxAdpcmFilter::GetName
  00277	50		 push	 eax
  00278	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  0027b	89 55 cc	 mov	 DWORD PTR -52+[ebp], edx
  0027e	8b 45 cc	 mov	 eax, DWORD PTR -52+[ebp]
  00281	50		 push	 eax
  00282	8b 4d fc	 mov	 ecx, DWORD PTR _nColumn$[ebp]
  00285	83 c1 01	 add	 ecx, 1
  00288	89 4d fc	 mov	 DWORD PTR _nColumn$[ebp], ecx
  0028b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0028e	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00294	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00297	8b 82 38 03 00
	00		 mov	 eax, DWORD PTR [edx+824]
  0029d	ff 50 10	 call	 DWORD PTR [eax+16]

; 1394 :     }
; 1395 :     else if(m_dwFlags & WBFILTER_8BIT)

  002a0	eb 6a		 jmp	 SHORT $L53487
$L53486:
  002a2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002a5	8b 91 28 03 00
	00		 mov	 edx, DWORD PTR [ecx+808]
  002ab	83 e2 02	 and	 edx, 2
  002ae	85 d2		 test	 edx, edx
  002b0	74 30		 je	 SHORT $L53488

; 1396 :     {
; 1397 :         SetColumnText(nColumn++, C8BitFilter::GetName());

  002b2	e8 00 00 00 00	 call	 ?GetName@C8BitFilter@@SGPBDXZ ; C8BitFilter::GetName
  002b7	50		 push	 eax
  002b8	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  002bb	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  002be	8b 4d c8	 mov	 ecx, DWORD PTR -56+[ebp]
  002c1	51		 push	 ecx
  002c2	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  002c5	83 c2 01	 add	 edx, 1
  002c8	89 55 fc	 mov	 DWORD PTR _nColumn$[ebp], edx
  002cb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002ce	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  002d4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002d7	8b 90 38 03 00
	00		 mov	 edx, DWORD PTR [eax+824]
  002dd	ff 52 10	 call	 DWORD PTR [edx+16]

; 1398 :     }
; 1399 :     else

  002e0	eb 2a		 jmp	 SHORT $L53489
$L53488:

; 1400 :     {
; 1401 :         SetColumnText(nColumn++, NULL);

  002e2	6a 00		 push	 0
  002e4	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  002e7	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  002ea	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  002ed	51		 push	 ecx
  002ee	8b 55 fc	 mov	 edx, DWORD PTR _nColumn$[ebp]
  002f1	83 c2 01	 add	 edx, 1
  002f4	89 55 fc	 mov	 DWORD PTR _nColumn$[ebp], edx
  002f7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002fa	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00300	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00303	8b 90 38 03 00
	00		 mov	 edx, DWORD PTR [eax+824]
  00309	ff 52 10	 call	 DWORD PTR [edx+16]
$L53489:
$L53487:

; 1402 :     }
; 1403 :     
; 1404 :     SetColumnText(nColumn++, m_szFileName);

  0030c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0030f	05 10 02 00 00	 add	 eax, 528		; 00000210H
  00314	50		 push	 eax
  00315	8b 4d fc	 mov	 ecx, DWORD PTR _nColumn$[ebp]
  00318	89 4d c0	 mov	 DWORD PTR -64+[ebp], ecx
  0031b	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  0031e	52		 push	 edx
  0031f	8b 45 fc	 mov	 eax, DWORD PTR _nColumn$[ebp]
  00322	83 c0 01	 add	 eax, 1
  00325	89 45 fc	 mov	 DWORD PTR _nColumn$[ebp], eax
  00328	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0032b	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00331	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00334	8b 82 38 03 00
	00		 mov	 eax, DWORD PTR [edx+824]
  0033a	ff 50 10	 call	 DWORD PTR [eax+16]

; 1405 : 
; 1406 :     //
; 1407 :     // Resort and resize
; 1408 :     //
; 1409 : 
; 1410 :     m_pList->Sort(-1, 0);

  0033d	6a 00		 push	 0
  0033f	6a ff		 push	 -1
  00341	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00344	8b 91 3c 03 00
	00		 mov	 edx, DWORD PTR [ecx+828]
  0034a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0034d	8b 88 3c 03 00
	00		 mov	 ecx, DWORD PTR [eax+828]
  00353	8b 12		 mov	 edx, DWORD PTR [edx]
  00355	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 1411 :     m_pList->ResizeColumns();

  0035b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0035e	8b 88 3c 03 00
	00		 mov	 ecx, DWORD PTR [eax+828]
  00364	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00367	8b 82 3c 03 00
	00		 mov	 eax, DWORD PTR [edx+828]
  0036d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0036f	8b c8		 mov	 ecx, eax
  00371	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]
$L53471:

; 1412 : }

  00377	8b e5		 mov	 esp, ebp
  00379	5d		 pop	 ebp
  0037a	c3		 ret	 0
?UpdateUI@CGuiWaveBankEntry@@UAEXXZ ENDP		; CGuiWaveBankEntry::UpdateUI
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\filter.h
_TEXT	ENDS
;	COMDAT ?GetName@CXboxAdpcmFilter@@SGPBDXZ
_TEXT	SEGMENT
?GetName@CXboxAdpcmFilter@@SGPBDXZ PROC NEAR		; CXboxAdpcmFilter::GetName, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   :     return "ADPCM";

  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:??_C@_05KMJF@ADPCM?$AA@ ; `string'

; 64   : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetName@CXboxAdpcmFilter@@SGPBDXZ ENDP			; CXboxAdpcmFilter::GetName
_TEXT	ENDS
PUBLIC	??_C@_05HMEK@8?9bit?$AA@			; `string'
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT
??_C@_05HMEK@8?9bit?$AA@ DB '8-bit', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?GetName@C8BitFilter@@SGPBDXZ
_TEXT	SEGMENT
?GetName@C8BitFilter@@SGPBDXZ PROC NEAR			; C8BitFilter::GetName, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  :     return "8-bit";

  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:??_C@_05HMEK@8?9bit?$AA@ ; `string'

; 146  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetName@C8BitFilter@@SGPBDXZ ENDP			; C8BitFilter::GetName
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CGuiWaveBankEntry@@UAEHPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?OnEndLabelEdit@CGuiWaveBankEntry@@UAEHPBD@Z PROC NEAR	; CGuiWaveBankEntry::OnEndLabelEdit, COMDAT
; _this$ = ecx

; 1438 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1439 :     SetName(pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	81 e9 38 03 00
	00		 sub	 ecx, 824		; 00000338H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 82 c8 fc ff
	ff		 mov	 eax, DWORD PTR [edx-824]
  0001d	ff 50 0c	 call	 DWORD PTR [eax+12]

; 1440 : 
; 1441 :     return FALSE;

  00020	33 c0		 xor	 eax, eax

; 1442 : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?OnEndLabelEdit@CGuiWaveBankEntry@@UAEHPBD@Z ENDP	; CGuiWaveBankEntry::OnEndLabelEdit
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnStateChanged@CGuiWaveBankEntry@@UAEXKK@Z
_TEXT	SEGMENT
_dwOldState$ = 8
_dwNewState$ = 12
_this$ = -4
?OnStateChanged@CGuiWaveBankEntry@@UAEXKK@Z PROC NEAR	; CGuiWaveBankEntry::OnStateChanged, COMDAT
; _this$ = ecx

; 1469 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1470 :     //
; 1471 :     // If the selection state has changed, update the UI
; 1472 :     //
; 1473 : 
; 1474 :     if((dwOldState | dwNewState) & LVIS_SELECTED)

  00007	8b 45 08	 mov	 eax, DWORD PTR _dwOldState$[ebp]
  0000a	0b 45 0c	 or	 eax, DWORD PTR _dwNewState$[ebp]
  0000d	83 e0 02	 and	 eax, 2
  00010	85 c0		 test	 eax, eax
  00012	74 1a		 je	 SHORT $L53499

; 1475 :     {
; 1476 :         ((CWaveBankWindow *)m_pList->m_pParent)->UpdateCommandState();

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00023	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	ff 90 e8 00 00
	00		 call	 DWORD PTR [eax+232]
$L53499:

; 1477 :     }
; 1478 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?OnStateChanged@CGuiWaveBankEntry@@UAEXKK@Z ENDP	; CGuiWaveBankEntry::OnStateChanged
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdPlay@CGuiWaveBankEntry@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdPlay@CGuiWaveBankEntry@@UAEXXZ PROC NEAR		; CGuiWaveBankEntry::OnCmdPlay, COMDAT
; _this$ = ecx

; 1504 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1505 :     g_pApplication->m_RemoteAudition.Play(this);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00011	81 c1 74 09 00
	00		 add	 ecx, 2420		; 00000974H
  00017	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0001d	8b 82 74 09 00
	00		 mov	 eax, DWORD PTR [edx+2420]
  00023	ff 50 0c	 call	 DWORD PTR [eax+12]

; 1506 : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?OnCmdPlay@CGuiWaveBankEntry@@UAEXXZ ENDP		; CGuiWaveBankEntry::OnCmdPlay
_TEXT	ENDS
PUBLIC	?IsWindow@CWindow@@UAEHXZ			; CWindow::IsWindow
PUBLIC	?SendMessageA@CWindow@@UAEJIIJ@Z		; CWindow::SendMessageA
PUBLIC	?PostMessageA@CWindow@@UAEJIIJ@Z		; CWindow::PostMessageA
PUBLIC	?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z	; CWindow::SendDlgItemMessageA
PUBLIC	?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z		; CWindow::GetDlgItem
PUBLIC	?SetWindowTextA@CWindow@@UAEHPBD@Z		; CWindow::SetWindowTextA
PUBLIC	?SetDlgItemTextA@CWindow@@UAEHHPBD@Z		; CWindow::SetDlgItemTextA
PUBLIC	?SetDlgItemInt@CWindow@@UAEHHIH@Z		; CWindow::SetDlgItemInt
PUBLIC	?GetDlgItemTextA@CWindow@@UAEHHPADH@Z		; CWindow::GetDlgItemTextA
PUBLIC	?GetDlgItemInt@CWindow@@UAEIHPAHH@Z		; CWindow::GetDlgItemInt
PUBLIC	?MoveWindow@CWindow@@UAEHHHHHH@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z	; CWindow::MoveWindow
PUBLIC	?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetWindowRect
PUBLIC	?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetClientRect
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z	; CWindow::ScreenToClient
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::ScreenToClient
PUBLIC	?DragAcceptFiles@CWindow@@UAEXH@Z		; CWindow::DragAcceptFiles
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	?OnClose@CWindow@@UAEHPAJ@Z			; CWindow::OnClose
PUBLIC	?OnSysCommand@CWindow@@UAEHIPAJ@Z		; CWindow::OnSysCommand
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
PUBLIC	?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z	; CWindow::OnEraseBackground
PUBLIC	?OnPaint@CWindow@@UAEHPAJ@Z			; CWindow::OnPaint
PUBLIC	?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z	; CWindow::OnScroll
PUBLIC	??0CWaveBankListView@@QAE@XZ			; CWaveBankListView::CWaveBankListView
PUBLIC	?AddRef@CWaveBankWindow@@UAGKXZ			; CWaveBankWindow::AddRef
PUBLIC	?Release@CWaveBankWindow@@UAGKXZ		; CWaveBankWindow::Release
PUBLIC	?Initialize@CWaveBankWindow@@UAEXPAVCGuiWaveBank@@@Z ; CWaveBankWindow::Initialize
PUBLIC	?Create@CWaveBankWindow@@UAEHPAH@Z		; CWaveBankWindow::Create
PUBLIC	?Refresh@CWaveBankWindow@@UAEHXZ		; CWaveBankWindow::Refresh
PUBLIC	?OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z		; CWaveBankWindow::OnCreate
PUBLIC	?OnSize@CWaveBankWindow@@UAEHIIIPAJ@Z		; CWaveBankWindow::OnSize
PUBLIC	?OnContextMenu@CWaveBankWindow@@UAEHPAUHWND__@@HHPAJ@Z ; CWaveBankWindow::OnContextMenu
PUBLIC	?OnCommand@CWaveBankWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWaveBankWindow::OnCommand
PUBLIC	?OnDropFiles@CWaveBankWindow@@UAEHPAUHDROP__@@PAJ@Z ; CWaveBankWindow::OnDropFiles
PUBLIC	?OnCmdAddEntry@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnCmdAddEntry
PUBLIC	?OnCmdRename@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnCmdRename
PUBLIC	?OnCmdRemove@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnCmdRemove
PUBLIC	?OnCmdSetFlags@CWaveBankWindow@@UAEXK@Z		; CWaveBankWindow::OnCmdSetFlags
PUBLIC	?OnCmdPlay@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnCmdPlay
PUBLIC	?OnCmdStop@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnCmdStop
PUBLIC	?OnCmdSelectAll@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnCmdSelectAll
PUBLIC	?OnActivate@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnActivate
PUBLIC	?OnDeactivate@CWaveBankWindow@@UAEXXZ		; CWaveBankWindow::OnDeactivate
PUBLIC	?EnableCommandUpdate@CWaveBankWindow@@UAEHH@Z	; CWaveBankWindow::EnableCommandUpdate
PUBLIC	?UpdateCommandState@CWaveBankWindow@@UAEXXZ	; CWaveBankWindow::UpdateCommandState
PUBLIC	??_7CWaveBankWindow@@6B@			; CWaveBankWindow::`vftable'
PUBLIC	??_GCWaveBankWindow@@UAEPAXI@Z			; CWaveBankWindow::`scalar deleting destructor'
PUBLIC	??_ECWaveBankWindow@@UAEPAXI@Z			; CWaveBankWindow::`vector deleting destructor'
EXTRN	?Destroy@CWindow@@UAEXXZ:NEAR			; CWindow::Destroy
EXTRN	?SetRedraw@CWindow@@UAEHH@Z:NEAR		; CWindow::SetRedraw
EXTRN	?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z:NEAR ; CWindow::DispatchMessageA
EXTRN	??0CWorkspaceChild@@QAE@I@Z:NEAR		; CWorkspaceChild::CWorkspaceChild
EXTRN	?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CWindow::OnScroll
EXTRN	?Create@CWorkspaceChild@@UAEHPBDIPAH@Z:NEAR	; CWorkspaceChild::Create
EXTRN	?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z:NEAR	; CWorkspaceChild::OnDestroy
EXTRN	?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z:NEAR	; CWindow::Create
EXTRN	?Create@CMDIChildWindow@@MAEHPAVCMDIClientWindow@@PBD1KKHHHHPAX@Z:NEAR ; CMDIChildWindow::Create
EXTRN	?HandleMessage@CMDIChildWindow@@MAEHIIJPAJ@Z:NEAR ; CMDIChildWindow::HandleMessage
EXTRN	?OnStyleChanged@CMDIChildWindow@@MAEHIPAUtagSTYLESTRUCT@@PAJ@Z:NEAR ; CMDIChildWindow::OnStyleChanged
EXTRN	?OnForceResize@CMDIChildWindow@@MAEHPAJ@Z:NEAR	; CMDIChildWindow::OnForceResize
EXTRN	?OnMdiActivate@CMDIChildWindow@@MAEHPAUHWND__@@0PAJ@Z:NEAR ; CMDIChildWindow::OnMdiActivate
EXTRN	?DefWindowProcA@CMDIChildWindow@@MAEJPAUHWND__@@IIJ@Z:NEAR ; CMDIChildWindow::DefWindowProcA
;	COMDAT ??_7CWaveBankWindow@@6B@
CONST	SEGMENT
??_7CWaveBankWindow@@6B@ DD FLAT:??_ECWaveBankWindow@@UAEPAXI@Z ; CWaveBankWindow::`vftable'
	DD	FLAT:?AddRef@CWaveBankWindow@@UAGKXZ
	DD	FLAT:?Release@CWaveBankWindow@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWorkspaceChild@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWaveBankWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWaveBankWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWaveBankWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWaveBankWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CMDIChildWindow@@MAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CMDIChildWindow@@MAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CMDIChildWindow@@MAEHPAVCMDIClientWindow@@PBD1KKHHHHPAX@Z
	DD	FLAT:?OnStyleChanged@CMDIChildWindow@@MAEHIPAUtagSTYLESTRUCT@@PAJ@Z
	DD	FLAT:?OnForceResize@CMDIChildWindow@@MAEHPAJ@Z
	DD	FLAT:?OnMdiActivate@CMDIChildWindow@@MAEHPAUHWND__@@0PAJ@Z
	DD	FLAT:?OnActivate@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?OnDeactivate@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?Create@CWorkspaceChild@@UAEHPBDIPAH@Z
	DD	FLAT:?Initialize@CWaveBankWindow@@UAEXPAVCGuiWaveBank@@@Z
	DD	FLAT:?Create@CWaveBankWindow@@UAEHPAH@Z
	DD	FLAT:?Refresh@CWaveBankWindow@@UAEHXZ
	DD	FLAT:?OnCmdAddEntry@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?OnCmdRename@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?OnCmdRemove@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?OnCmdSetFlags@CWaveBankWindow@@UAEXK@Z
	DD	FLAT:?OnCmdPlay@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?OnCmdStop@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?OnCmdSelectAll@CWaveBankWindow@@UAEXXZ
	DD	FLAT:?EnableCommandUpdate@CWaveBankWindow@@UAEHH@Z
	DD	FLAT:?UpdateCommandState@CWaveBankWindow@@UAEXXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBankWindow@@QAE@XZ PROC NEAR			; CWaveBankWindow::CWaveBankWindow, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CWorkspaceChild@@QAE@I@Z ; CWorkspaceChild::CWorkspaceChild
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 34	 add	 ecx, 52			; 00000034H
  00017	e8 00 00 00 00	 call	 ??0CWaveBankListView@@QAE@XZ ; CWaveBankListView::CWaveBankListView
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankWindow@@6B@ ; CWaveBankWindow::`vftable'

; 1533 :     m_fUpdateCommands = TRUE;

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	c7 81 30 02 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+560], 1

; 1534 : }

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0CWaveBankWindow@@QAE@XZ ENDP				; CWaveBankWindow::CWaveBankWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnClose, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 247  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnClose@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnClose
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysCommand@CWindow@@UAEHIPAJ@Z PROC NEAR		; CWindow::OnSysCommand, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 266  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 267  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnSysCommand@CWindow@@UAEHIPAJ@Z ENDP			; CWindow::OnSysCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 272  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z PROC NEAR ; CWindow::OnEraseBackground, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 276  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 277  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z ENDP	; CWindow::OnEraseBackground
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnPaint@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnPaint, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 282  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnPaint@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnPaint
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z PROC NEAR	; CWindow::OnScroll, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 287  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z ENDP		; CWindow::OnScroll
_TEXT	ENDS
PUBLIC	??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_04BEIE@this?$AA@				; `string'
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\base\wndwrap.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT
??_C@_04BEIE@this?$AA@ DB 'this', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 301  :     ASSERT(this);

  00007	68 2d 01 00 00	 push	 301			; 0000012dH
  0000c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04BEIE@this?$AA@ ; `string'
  00016	33 c0		 xor	 eax, eax
  00018	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001c	0f 94 c0	 sete	 al
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00025	83 c4 10	 add	 esp, 16			; 00000010H

; 302  :     return m_hWnd;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 303  : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
_TEXT	ENDS
PUBLIC	??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@	; `string'
EXTRN	__imp__IsWindow@4:NEAR
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ DB '::IsWindow(m_hWnd)', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsWindow@CWindow@@UAEHXZ PROC NEAR			; CWindow::IsWindow, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  :     if(!m_hWnd)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0000e	75 04		 jne	 SHORT $L49126

; 308  :     {
; 309  :         return FALSE;

  00010	33 c0		 xor	 eax, eax
  00012	eb 2f		 jmp	 SHORT $L49125
$L49126:

; 310  :     }
; 311  : 
; 312  :     ASSERT(::IsWindow(m_hWnd));

  00014	68 38 01 00 00	 push	 312			; 00000138H
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ ; `string'
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00029	52		 push	 edx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00030	f7 d8		 neg	 eax
  00032	1b c0		 sbb	 eax, eax
  00034	40		 inc	 eax
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 313  : 
; 314  :     return TRUE;

  0003e	b8 01 00 00 00	 mov	 eax, 1
$L49125:

; 315  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?IsWindow@CWindow@@UAEHXZ ENDP				; CWindow::IsWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?SendMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::SendMessageA, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  :     return ::SendMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 320  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SendMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::SendMessageA
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::PostMessageA, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  :     return ::PostMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 325  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?PostMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::PostMessageA
_TEXT	ENDS
EXTRN	__imp__SetWindowTextA@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?SetWindowTextA@CWindow@@UAEHPBD@Z PROC NEAR		; CWindow::SetWindowTextA, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :     return ::SetWindowText(m_hWnd, pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 330  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetWindowTextA@CWindow@@UAEHPBD@Z ENDP			; CWindow::SetWindowTextA
_TEXT	ENDS
EXTRN	__imp__MoveWindow@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_nWidth$ = 16
_nHeight$ = 20
_fRepaint$ = 24
_this$ = -4
?MoveWindow@CWindow@@UAEHHHHHH@Z PROC NEAR		; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 334  :     return ::MoveWindow(m_hWnd, x, y, nWidth, nHeight, fRepaint);

  00007	8b 45 18	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 14	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 10	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 335  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 14 00	 ret	 20			; 00000014H
?MoveWindow@CWindow@@UAEHHHHHH@Z ENDP			; CWindow::MoveWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_fRepaint$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  :     return ::MoveWindow(m_hWnd, prcWindow->left, prcWindow->top, prcWindow->right - prcWindow->left, prcWindow->bottom - prcWindow->top, fRepaint);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 340  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z ENDP		; CWindow::MoveWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_this$ = -4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetWindowRect, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  :     return ::GetWindowRect(m_hWnd, prcWindow);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 345  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetWindowRect
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcClient$ = 8
_this$ = -4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetClientRect, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 349  :     return ::GetClientRect(m_hWnd, prcClient);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcClient$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 350  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetClientRect
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT
_ppt$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  :     return ::ScreenToClient(m_hWnd, ppt);

  00007	8b 45 08	 mov	 eax, DWORD PTR _ppt$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 355  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z ENDP	; CWindow::ScreenToClient
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prc$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 359  :     if(!::ScreenToClient(m_hWnd, (LPPOINT)&prc->left))

  00007	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $L49174

; 360  :     {
; 361  :         return FALSE;

  0001c	33 c0		 xor	 eax, eax
  0001e	eb 14		 jmp	 SHORT $L49172
$L49174:

; 362  :     }
; 363  : 
; 364  :     return ::ScreenToClient(m_hWnd, (LPPOINT)&prc->right);

  00020	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	50		 push	 eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0002d	52		 push	 edx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
$L49172:

; 365  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z ENDP	; CWindow::ScreenToClient
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT
_nItemId$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z PROC NEAR	; CWindow::SendDlgItemMessageA, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  :     return ::SendDlgItemMessage(m_hWnd, nItemId, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0001d	52		 push	 edx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 370  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z ENDP		; CWindow::SendDlgItemMessageA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT
_nItemId$ = 8
_this$ = -4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z PROC NEAR	; CWindow::GetDlgItem, COMDAT
; _this$ = ecx

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 374  :     return ::GetDlgItem(m_hWnd, nItemId);

  00007	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8

; 375  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z ENDP		; CWindow::GetDlgItem
_TEXT	ENDS
EXTRN	__imp__SetDlgItemTextA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_this$ = -4
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z PROC NEAR		; CWindow::SetDlgItemTextA, COMDAT
; _this$ = ecx

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 379  :     return ::SetDlgItemText(m_hWnd, nItemId, pszString);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _nItemId$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 380  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z ENDP		; CWindow::SetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__SetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_nValue$ = 12
_fSigned$ = 16
_this$ = -4
?SetDlgItemInt@CWindow@@UAEHHIH@Z PROC NEAR		; CWindow::SetDlgItemInt, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  :     return ::SetDlgItemInt(m_hWnd, nItemId, nValue, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _nValue$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 385  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SetDlgItemInt@CWindow@@UAEHHIH@Z ENDP			; CWindow::SetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__GetDlgItemTextA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_nLength$ = 16
_this$ = -4
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z PROC NEAR		; CWindow::GetDlgItemTextA, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  :     return ::GetDlgItemText(m_hWnd, nItemId, pszString, nLength);

  00007	8b 45 10	 mov	 eax, DWORD PTR _nLength$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pszString$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 390  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z ENDP		; CWindow::GetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__GetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pfTranslated$ = 12
_fSigned$ = 16
_this$ = -4
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z PROC NEAR		; CWindow::GetDlgItemInt, COMDAT
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 394  :     return ::GetDlgItemInt(m_hWnd, nItemId, pfTranslated, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pfTranslated$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16

; 395  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z ENDP		; CWindow::GetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__DragAcceptFiles@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fAccept$ = 8
_this$ = -4
?DragAcceptFiles@CWindow@@UAEXH@Z PROC NEAR		; CWindow::DragAcceptFiles, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 399  :     ::DragAcceptFiles(m_hWnd, fAccept);

  00007	8b 45 08	 mov	 eax, DWORD PTR _fAccept$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragAcceptFiles@8

; 400  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?DragAcceptFiles@CWindow@@UAEXH@Z ENDP			; CWindow::DragAcceptFiles
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.h
_TEXT	ENDS
;	COMDAT ?AddRef@CWaveBankWindow@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CWaveBankWindow@@UAGKXZ PROC NEAR		; CWaveBankWindow::AddRef, COMDAT

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 183  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 184  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CWaveBankWindow@@UAGKXZ ENDP			; CWaveBankWindow::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CWaveBankWindow@@UAGKXZ
_TEXT	SEGMENT
?Release@CWaveBankWindow@@UAGKXZ PROC NEAR		; CWaveBankWindow::Release, COMDAT

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 188  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 189  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CWaveBankWindow@@UAGKXZ ENDP			; CWaveBankWindow::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Initialize@CWaveBankWindow@@UAEXPAVCGuiWaveBank@@@Z
_TEXT	SEGMENT
_pBank$ = 8
_this$ = -4
?Initialize@CWaveBankWindow@@UAEXPAVCGuiWaveBank@@@Z PROC NEAR ; CWaveBankWindow::Initialize, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  :     m_pBank = pBank;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pBank$[ebp]
  0000d	89 88 2c 02 00
	00		 mov	 DWORD PTR [eax+556], ecx

; 194  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?Initialize@CWaveBankWindow@@UAEXPAVCGuiWaveBank@@@Z ENDP ; CWaveBankWindow::Initialize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnActivate@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CWaveBankWindow@@UAEXXZ PROC NEAR		; CWaveBankWindow::OnActivate, COMDAT
; _this$ = ecx

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 198  :     UpdateCommandState();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 92 e8 00 00
	00		 call	 DWORD PTR [edx+232]

; 199  : }

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnActivate@CWaveBankWindow@@UAEXXZ ENDP		; CWaveBankWindow::OnActivate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDeactivate@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnDeactivate@CWaveBankWindow@@UAEXXZ PROC NEAR		; CWaveBankWindow::OnDeactivate, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 203  :     UpdateCommandState();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 92 e8 00 00
	00		 call	 DWORD PTR [edx+232]

; 204  : }

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnDeactivate@CWaveBankWindow@@UAEXXZ ENDP		; CWaveBankWindow::OnDeactivate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCWaveBankWindow@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWaveBankWindow@@UAEPAXI@Z PROC NEAR		; CWaveBankWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWaveBankWindow@@UAE@XZ ; CWaveBankWindow::~CWaveBankWindow
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53512
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53512:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWaveBankWindow@@UAEPAXI@Z ENDP			; CWaveBankWindow::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
PUBLIC	?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z	; CWindow::OnDropFiles
PUBLIC	?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z	; CWindow::DefWindowProcA
PUBLIC	?AddRef@CWaveBankListView@@UAGKXZ		; CWaveBankListView::AddRef
PUBLIC	?Release@CWaveBankListView@@UAGKXZ		; CWaveBankListView::Release
PUBLIC	?GetSelectedCount@CListView@@UAEHXZ		; CListView::GetSelectedCount
PUBLIC	?OnCommand@CWaveBankListView@@UAEHIIPAUHWND__@@PAJ@Z ; CWaveBankListView::OnCommand
PUBLIC	?PtrFromListIndex@CListView@@UAEPAVCListViewItem@@H@Z ; CListView::PtrFromListIndex
PUBLIC	??_7CWaveBankListView@@6B@			; CWaveBankListView::`vftable'
PUBLIC	??_GCWaveBankListView@@UAEPAXI@Z		; CWaveBankListView::`scalar deleting destructor'
PUBLIC	??_ECWaveBankListView@@UAEPAXI@Z		; CWaveBankListView::`vector deleting destructor'
EXTRN	??0CListView@@QAE@XZ:NEAR			; CListView::CListView
EXTRN	?Create@CListView@@UAEHPAVCWindow@@KKKHHHHI@Z:NEAR ; CListView::Create
EXTRN	?InsertColumn@CListView@@UAEHPBDW4LVCTYPE@@H@Z:NEAR ; CListView::InsertColumn
EXTRN	?InsertColumns@CListView@@UAEHPBULVCOLUMNDATA@@I@Z:NEAR ; CListView::InsertColumns
EXTRN	?ResizeColumn@CListView@@UAEXI@Z:NEAR		; CListView::ResizeColumn
EXTRN	?ResizeColumns@CListView@@UAEXXZ:NEAR		; CListView::ResizeColumns
EXTRN	?GetNextItem@CListView@@UAEPAVCListViewItem@@PAV2@K@Z:NEAR ; CListView::GetNextItem
EXTRN	?SelectAll@CListView@@UAEXH@Z:NEAR		; CListView::SelectAll
EXTRN	?Sort@CListView@@UAEXIK@Z:NEAR			; CListView::Sort
EXTRN	?RegisterType@CListView@@UAEHPBDPAUHICON__@@1@Z:NEAR ; CListView::RegisterType
EXTRN	?FindRegisteredType@CListView@@UAEPAVCListViewType@@PBD@Z:NEAR ; CListView::FindRegisteredType
EXTRN	?HandleMessage@CListView@@UAEHIIJPAJ@Z:NEAR	; CListView::HandleMessage
EXTRN	?OnCreate@CListView@@UAEHPAXPAJ@Z:NEAR		; CListView::OnCreate
EXTRN	?OnDestroy@CListView@@UAEHPAJ@Z:NEAR		; CListView::OnDestroy
EXTRN	?OnSize@CListView@@UAEHIIIPAJ@Z:NEAR		; CListView::OnSize
EXTRN	?OnNotify@CListView@@UAEHPAUtagNMHDR@@PAJ@Z:NEAR ; CListView::OnNotify
EXTRN	?OnColumnClick@CListView@@UAEXPAUtagNMLISTVIEW@@@Z:NEAR ; CListView::OnColumnClick
EXTRN	?OnDeleteItem@CListView@@UAEXPAUtagNMLISTVIEW@@@Z:NEAR ; CListView::OnDeleteItem
EXTRN	?OnEndLabelEdit@CListView@@UAEHPAUtagLVDISPINFO@@@Z:NEAR ; CListView::OnEndLabelEdit
EXTRN	?OnItemChanged@CListView@@UAEXPAUtagNMLISTVIEW@@@Z:NEAR ; CListView::OnItemChanged
EXTRN	?OnDoubleClick@CListView@@UAEXPAUtagNMHDR@@@Z:NEAR ; CListView::OnDoubleClick
EXTRN	?FixItemIndices@CListView@@UAEXXZ:NEAR		; CListView::FixItemIndices
;	COMDAT ??_7CWaveBankListView@@6B@
CONST	SEGMENT
??_7CWaveBankListView@@6B@ DD FLAT:??_ECWaveBankListView@@UAEPAXI@Z ; CWaveBankListView::`vftable'
	DD	FLAT:?AddRef@CWaveBankListView@@UAGKXZ
	DD	FLAT:?Release@CWaveBankListView@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CListView@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CListView@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CListView@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWaveBankListView@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CListView@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CListView@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CListView@@UAEHPAVCWindow@@KKKHHHHI@Z
	DD	FLAT:?InsertColumn@CListView@@UAEHPBDW4LVCTYPE@@H@Z
	DD	FLAT:?InsertColumns@CListView@@UAEHPBULVCOLUMNDATA@@I@Z
	DD	FLAT:?ResizeColumn@CListView@@UAEXI@Z
	DD	FLAT:?ResizeColumns@CListView@@UAEXXZ
	DD	FLAT:?GetSelectedCount@CListView@@UAEHXZ
	DD	FLAT:?GetNextItem@CListView@@UAEPAVCListViewItem@@PAV2@K@Z
	DD	FLAT:?PtrFromListIndex@CListView@@UAEPAVCListViewItem@@H@Z
	DD	FLAT:?SelectAll@CListView@@UAEXH@Z
	DD	FLAT:?Sort@CListView@@UAEXIK@Z
	DD	FLAT:?RegisterType@CListView@@UAEHPBDPAUHICON__@@1@Z
	DD	FLAT:?FindRegisteredType@CListView@@UAEPAVCListViewType@@PBD@Z
	DD	FLAT:?OnColumnClick@CListView@@UAEXPAUtagNMLISTVIEW@@@Z
	DD	FLAT:?OnDeleteItem@CListView@@UAEXPAUtagNMLISTVIEW@@@Z
	DD	FLAT:?OnEndLabelEdit@CListView@@UAEHPAUtagLVDISPINFO@@@Z
	DD	FLAT:?OnItemChanged@CListView@@UAEXPAUtagNMLISTVIEW@@@Z
	DD	FLAT:?OnDoubleClick@CListView@@UAEXPAUtagNMHDR@@@Z
	DD	FLAT:?FixItemIndices@CListView@@UAEXXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankListView@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBankListView@@QAE@XZ PROC NEAR			; CWaveBankListView::CWaveBankListView, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CListView@@QAE@XZ	; CListView::CListView
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankListView@@6B@ ; CWaveBankListView::`vftable'
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CWaveBankListView@@QAE@XZ ENDP			; CWaveBankListView::CWaveBankListView
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 292  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
_TEXT	ENDS
EXTRN	__imp__DefWindowProcA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z PROC NEAR	; CWindow::DefWindowProcA, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 296  :     return ::DefWindowProc(hWnd, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00016	50		 push	 eax
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 297  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z ENDP	; CWindow::DefWindowProcA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z PROC NEAR	; CWindow::OnDropFiles, COMDAT
; _this$ = ecx

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 404  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 405  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z ENDP	; CWindow::OnDropFiles
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\listview.h
_TEXT	ENDS
;	COMDAT ?GetSelectedCount@CListView@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetSelectedCount@CListView@@UAEHXZ PROC NEAR		; CListView::GetSelectedCount, COMDAT
; _this$ = ecx

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 156  :     return ListView_GetSelectedCount(m_ListCtrl.m_hWnd);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 32 10 00 00	 push	 4146			; 00001032H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 157  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetSelectedCount@CListView@@UAEHXZ ENDP		; CListView::GetSelectedCount
_TEXT	ENDS
EXTRN	?PtrFromListIndex@CListViewItem@@SGPAV1@PAVCListView@@H@Z:NEAR ; CListViewItem::PtrFromListIndex
; Function compile flags: /Odt
;	COMDAT ?PtrFromListIndex@CListView@@UAEPAVCListViewItem@@H@Z
_TEXT	SEGMENT
_nItemIndex$ = 8
_this$ = -4
?PtrFromListIndex@CListView@@UAEPAVCListViewItem@@H@Z PROC NEAR ; CListView::PtrFromListIndex, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 236  :     return CListViewItem::PtrFromListIndex(this, nItemIndex);

  00007	8b 45 08	 mov	 eax, DWORD PTR _nItemIndex$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?PtrFromListIndex@CListViewItem@@SGPAV1@PAVCListView@@H@Z ; CListViewItem::PtrFromListIndex

; 237  : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?PtrFromListIndex@CListView@@UAEPAVCListViewItem@@H@Z ENDP ; CListView::PtrFromListIndex
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.h
_TEXT	ENDS
;	COMDAT ?AddRef@CWaveBankListView@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CWaveBankListView@@UAGKXZ PROC NEAR		; CWaveBankListView::AddRef, COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 96   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CWaveBankListView@@UAGKXZ ENDP			; CWaveBankListView::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CWaveBankListView@@UAGKXZ
_TEXT	SEGMENT
?Release@CWaveBankListView@@UAGKXZ PROC NEAR		; CWaveBankListView::Release, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 101  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CWaveBankListView@@UAGKXZ ENDP			; CWaveBankListView::Release
_TEXT	ENDS
PUBLIC	?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z	; CWindow::OnCommand
; Function compile flags: /Odt
;	COMDAT ?OnCommand@CWaveBankListView@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hWndControl$ = 16
_plResult$ = 20
_this$ = -4
?OnCommand@CWaveBankListView@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CWaveBankListView::OnCommand, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 105  :     if(CListView::OnCommand(nCommandId, nControlId, hWndControl, plResult))

  00007	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWindow::OnCommand
  0001f	85 c0		 test	 eax, eax
  00021	74 07		 je	 SHORT $L52324

; 106  :     {
; 107  :         return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	eb 30		 jmp	 SHORT $L52323
$L52324:

; 108  :     }
; 109  : 
; 110  :     if(m_pParent)

  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00031	74 25		 je	 SHORT $L52325

; 111  :     {
; 112  :         return m_pParent->OnCommand(nCommandId, nControlId, hWndControl, plResult);

  00033	8b 55 14	 mov	 edx, DWORD PTR _plResult$[ebp]
  00036	52		 push	 edx
  00037	8b 45 10	 mov	 eax, DWORD PTR _hWndControl$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR _nCommandId$[ebp]
  00042	52		 push	 edx
  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b c8		 mov	 ecx, eax
  00053	ff 52 70	 call	 DWORD PTR [edx+112]
  00056	eb 02		 jmp	 SHORT $L52323
$L52325:

; 113  :     }
; 114  : 
; 115  :     return FALSE;

  00058	33 c0		 xor	 eax, eax
$L52323:

; 116  : }

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWaveBankListView@@UAEHIIPAUHWND__@@PAJ@Z ENDP ; CWaveBankListView::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CWindow::OnCommand, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 261  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 262  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CWindow::OnCommand
_TEXT	ENDS
PUBLIC	??1CWaveBankListView@@UAE@XZ			; CWaveBankListView::~CWaveBankListView
; Function compile flags: /Odt
;	COMDAT ??_GCWaveBankListView@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWaveBankListView@@UAEPAXI@Z PROC NEAR		; CWaveBankListView::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWaveBankListView@@UAE@XZ ; CWaveBankListView::~CWaveBankListView
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53520
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53520:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWaveBankListView@@UAEPAXI@Z ENDP			; CWaveBankListView::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CListView@@UAE@XZ:NEAR			; CListView::~CListView
; Function compile flags: /Odt
;	COMDAT ??1CWaveBankListView@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWaveBankListView@@UAE@XZ PROC NEAR			; CWaveBankListView::~CWaveBankListView, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CListView@@UAE@XZ	; CListView::~CListView
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CWaveBankListView@@UAE@XZ ENDP			; CWaveBankListView::~CWaveBankListView
_TEXT	ENDS
EXTRN	??1CWorkspaceChild@@UAE@XZ:NEAR			; CWorkspaceChild::~CWorkspaceChild
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
;	COMDAT ??1CWaveBankWindow@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWaveBankWindow@@UAE@XZ PROC NEAR			; CWaveBankWindow::~CWaveBankWindow, COMDAT
; _this$ = ecx

; 1559 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankWindow@@6B@ ; CWaveBankWindow::`vftable'

; 1560 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 34	 add	 ecx, 52			; 00000034H
  00016	e8 00 00 00 00	 call	 ??1CWaveBankListView@@UAE@XZ ; CWaveBankListView::~CWaveBankListView
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??1CWorkspaceChild@@UAE@XZ ; CWorkspaceChild::~CWorkspaceChild
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1CWaveBankWindow@@UAE@XZ ENDP				; CWaveBankWindow::~CWaveBankWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Create@CWaveBankWindow@@UAEHPAH@Z
_TEXT	SEGMENT
_pfCreated$ = 8
_this$ = -4
?Create@CWaveBankWindow@@UAEHPAH@Z PROC NEAR		; CWaveBankWindow::Create, COMDAT
; _this$ = ecx

; 1587 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1588 :     return CWorkspaceChild::Create(m_pBank->m_szBankName, IDI_WAVEBANK, pfCreated);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pfCreated$[ebp]
  0000a	50		 push	 eax
  0000b	6a 6c		 push	 108			; 0000006cH
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 91 2c 02 00
	00		 mov	 edx, DWORD PTR [ecx+556]
  00016	83 c2 10	 add	 edx, 16			; 00000010H
  00019	52		 push	 edx
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?Create@CWorkspaceChild@@UAEHPBDIPAH@Z ; CWorkspaceChild::Create

; 1589 : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?Create@CWaveBankWindow@@UAEHPAH@Z ENDP			; CWaveBankWindow::Create
_TEXT	ENDS
EXTRN	?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z:NEAR	; CWorkspaceChild::OnCreate
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -8
_fSuccess$ = -4
?OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z PROC NEAR	; CWaveBankWindow::OnCreate, COMDAT
; _this$ = ecx

; 1617 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1618 :     static const DWORD      dwExStyle       = 0;
; 1619 :     static const DWORD      dwStyle         = WS_CHILD | WS_VISIBLE | LVS_ALIGNLEFT | LVS_ALIGNTOP | LVS_AUTOARRANGE | LVS_NOLABELWRAP | LVS_REPORT | LVS_EDITLABELS | LVS_SHOWSELALWAYS;
; 1620 :     static const DWORD      dwListExStyle   = LVS_EX_FULLROWSELECT | LVS_EX_LABELTIP;
; 1621 :     BOOL                    fSuccess;
; 1622 : 
; 1623 :     if(CWorkspaceChild::OnCreate(pvContext, plResult))

  00009	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?OnCreate@CWorkspaceChild@@UAEHPAXPAJ@Z ; CWorkspaceChild::OnCreate
  00019	85 c0		 test	 eax, eax
  0001b	74 0a		 je	 SHORT $L53541

; 1624 :     {
; 1625 :         return TRUE;

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	e9 9f 00 00 00	 jmp	 $L53533
$L53541:

; 1626 :     }
; 1627 : 
; 1628 :     //
; 1629 :     // Create the list-view
; 1630 :     //
; 1631 : 
; 1632 :     fSuccess = m_ListView.Create(this, dwExStyle, dwStyle, dwListExStyle);

  00027	6a 00		 push	 0
  00029	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0002e	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00033	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00038	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0003d	68 20 40 00 00	 push	 16416			; 00004020H
  00042	68 89 0b 00 50	 push	 1342180233		; 50000b89H
  00047	6a 00		 push	 0
  00049	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	52		 push	 edx
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 34	 add	 ecx, 52			; 00000034H
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00059	ff 92 a0 00 00
	00		 call	 DWORD PTR [edx+160]
  0005f	89 45 fc	 mov	 DWORD PTR _fSuccess$[ebp], eax

; 1633 : 
; 1634 :     //
; 1635 :     // Add columns
; 1636 :     //
; 1637 : 
; 1638 :     if(fSuccess)

  00062	83 7d fc 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00066	74 1c		 je	 SHORT $L53542

; 1639 :     {
; 1640 :         fSuccess = m_ListView.InsertColumns(CGuiWaveBankEntry::m_aColumnData, NUMELMS(CGuiWaveBankEntry::m_aColumnData));

  00068	6a 08		 push	 8
  0006a	68 00 00 00 00	 push	 OFFSET FLAT:?m_aColumnData@CGuiWaveBankEntry@@2QBULVCOLUMNDATA@@B ; CGuiWaveBankEntry::m_aColumnData
  0006f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	83 c1 34	 add	 ecx, 52			; 00000034H
  00075	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  0007b	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]
  00081	89 45 fc	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L53542:

; 1641 :     }
; 1642 : 
; 1643 :     //
; 1644 :     // Populate the list-view
; 1645 :     //
; 1646 : 
; 1647 :     if(fSuccess)

  00084	83 7d fc 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00088	74 11		 je	 SHORT $L53543

; 1648 :     {
; 1649 :         fSuccess = Refresh();

  0008a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 10		 mov	 edx, DWORD PTR [eax]
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
  00098	89 45 fc	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L53543:

; 1650 :     }
; 1651 : 
; 1652 :     //
; 1653 :     // Enable file drops
; 1654 :     //
; 1655 : 
; 1656 :     if(fSuccess)

  0009b	83 7d fc 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  0009f	74 0d		 je	 SHORT $L53544

; 1657 :     {
; 1658 :         DragAcceptFiles();

  000a1	6a 01		 push	 1
  000a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	ff 52 54	 call	 DWORD PTR [edx+84]
$L53544:

; 1659 :     }
; 1660 : 
; 1661 :     //
; 1662 :     // Success
; 1663 :     //
; 1664 : 
; 1665 :     if(!fSuccess)

  000ae	83 7d fc 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000b2	75 10		 jne	 SHORT $L53545

; 1666 :     {
; 1667 :         *plResult = 0;

  000b4	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  000b7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1668 :         return TRUE;

  000bd	b8 01 00 00 00	 mov	 eax, 1
  000c2	eb 02		 jmp	 SHORT $L53533
$L53545:

; 1669 :     }
; 1670 : 
; 1671 :     return FALSE;

  000c4	33 c0		 xor	 eax, eax
$L53533:

; 1672 : }

  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 08 00	 ret	 8
?OnCreate@CWaveBankWindow@@UAEHPAXPAJ@Z ENDP		; CWaveBankWindow::OnCreate
_TEXT	ENDS
EXTRN	?OnSize@CMDIChildWindow@@MAEHIIIPAJ@Z:NEAR	; CMDIChildWindow::OnSize
; Function compile flags: /Odt
;	COMDAT ?OnSize@CWaveBankWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_nType$ = 8
_nWidth$ = 12
_nHeight$ = 16
_plResult$ = 20
_this$ = -4
?OnSize@CWaveBankWindow@@UAEHIIIPAJ@Z PROC NEAR		; CWaveBankWindow::OnSize, COMDAT
; _this$ = ecx

; 1704 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1705 :     if(CWorkspaceChild::OnSize(nType, nWidth, nHeight, plResult))

  00007	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nType$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?OnSize@CMDIChildWindow@@MAEHIIIPAJ@Z ; CMDIChildWindow::OnSize
  0001f	85 c0		 test	 eax, eax
  00021	74 07		 je	 SHORT $L53553

; 1706 :     {
; 1707 :         return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	eb 1f		 jmp	 SHORT $L53552
$L53553:

; 1708 :     }
; 1709 :     
; 1710 :     m_ListView.MoveWindow(0, 0, nWidth, nHeight);

  0002a	6a 01		 push	 1
  0002c	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0002f	51		 push	 ecx
  00030	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00033	52		 push	 edx
  00034	6a 00		 push	 0
  00036	6a 00		 push	 0
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	83 c1 34	 add	 ecx, 52			; 00000034H
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00044	ff 52 40	 call	 DWORD PTR [edx+64]

; 1711 : 
; 1712 :     return FALSE;

  00047	33 c0		 xor	 eax, eax
$L53552:

; 1713 : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWaveBankWindow@@UAEHIIIPAJ@Z ENDP		; CWaveBankWindow::OnSize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWaveBankWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_hWndFocus$ = 8
_x$ = 12
_y$ = 16
_plResult$ = 20
_this$ = -8
?OnContextMenu@CWaveBankWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWaveBankWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 1745 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1746 :     HMENU                   hMenu;
; 1747 :     
; 1748 :     if(CWorkspaceChild::OnContextMenu(hWndFocus, x, y, plResult))

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _hWndFocus$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ; CWindow::OnContextMenu
  00021	85 c0		 test	 eax, eax
  00023	74 07		 je	 SHORT $L53562

; 1749 :     {
; 1750 :         return TRUE;

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	eb 2a		 jmp	 SHORT $L53560
$L53562:

; 1751 :     }
; 1752 : 
; 1753 :     TrackPopupMenu(g_pApplication->m_MainFrame.m_ahMenus[g_pApplication->m_MainFrame.MENUIDX_WAVEBANK_ENTRY_POPUP], TPM_RIGHTBUTTON, x, y, 0, m_hWnd, NULL);

  0002c	6a 00		 push	 0
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00034	52		 push	 edx
  00035	6a 00		 push	 0
  00037	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp]
  0003e	51		 push	 ecx
  0003f	6a 02		 push	 2
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00047	8b 82 94 02 00
	00		 mov	 eax, DWORD PTR [edx+660]
  0004d	50		 push	 eax
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TrackPopupMenu@28

; 1754 : 
; 1755 :     return FALSE;

  00054	33 c0		 xor	 eax, eax
$L53560:

; 1756 : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWaveBankWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP ; CWaveBankWindow::OnContextMenu
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCommand@CWaveBankWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hWndControl$ = 16
_plResult$ = 20
_this$ = -4
?OnCommand@CWaveBankWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CWaveBankWindow::OnCommand, COMDAT
; _this$ = ecx

; 1788 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1789 :     if(CWorkspaceChild::OnCommand(nCommandId, nControlId, hWndControl, plResult))

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWindow::OnCommand
  00021	85 c0		 test	 eax, eax
  00023	74 0a		 je	 SHORT $L53570

; 1790 :     {
; 1791 :         return TRUE;

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	e9 c5 00 00 00	 jmp	 $L53569
$L53570:

; 1792 :     }
; 1793 : 
; 1794 :     switch(nControlId)
; 1795 :     {

  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  00032	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  00035	8b 55 f8	 mov	 edx, DWORD PTR -8+[ebp]
  00038	81 ea 48 9c 00
	00		 sub	 edx, 40008		; 00009c48H
  0003e	89 55 f8	 mov	 DWORD PTR -8+[ebp], edx
  00041	83 7d f8 26	 cmp	 DWORD PTR -8+[ebp], 38	; 00000026H
  00045	0f 87 a7 00 00
	00		 ja	 $L53572
  0004b	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  0004e	33 c9		 xor	 ecx, ecx
  00050	8a 88 00 00 00
	00		 mov	 cl, BYTE PTR $L54430[eax]
  00056	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $L54431[ecx*4]
$L53575:

; 1796 :         case ID_REFRESH:
; 1797 :         case ID_WAVEBANK_REFRESH:
; 1798 :             Refresh();

  0005d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00060	8b 02		 mov	 eax, DWORD PTR [edx]
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 1799 :             break;

  0006b	e9 82 00 00 00	 jmp	 $L53572
$L53576:

; 1800 :         
; 1801 :         case ID_ADD_WAVEBANK_ENTRY:
; 1802 :             OnCmdAddEntry();

  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	8b 11		 mov	 edx, DWORD PTR [ecx]
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	ff 92 c8 00 00
	00		 call	 DWORD PTR [edx+200]

; 1803 :             break;

  0007e	eb 72		 jmp	 SHORT $L53572
$L53577:

; 1804 :         
; 1805 :         case ID_RENAME:
; 1806 :         case ID_WAVEBANK_ENTRY_RENAME:
; 1807 :             OnCmdRename();

  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	ff 92 cc 00 00
	00		 call	 DWORD PTR [edx+204]

; 1808 :             break;

  0008e	eb 62		 jmp	 SHORT $L53572
$L53578:

; 1809 : 
; 1810 :         case ID_DELETE:
; 1811 :         case ID_WAVEBANK_ENTRY_DELETE:
; 1812 :             OnCmdRemove();

  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 10		 mov	 edx, DWORD PTR [eax]
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 1813 :             break;

  0009e	eb 52		 jmp	 SHORT $L53572
$L53579:

; 1814 : 
; 1815 :         case ID_WAVEBANK_ENTRY_ADPCM:
; 1816 :             OnCmdSetFlags(WBFILTER_ADPCM);

  000a0	6a 01		 push	 1
  000a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	8b 10		 mov	 edx, DWORD PTR [eax]
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	ff 92 d4 00 00
	00		 call	 DWORD PTR [edx+212]

; 1817 :             break;

  000b0	eb 40		 jmp	 SHORT $L53572
$L53580:

; 1818 : 
; 1819 :         case ID_WAVEBANK_ENTRY_8BIT:
; 1820 :             OnCmdSetFlags(WBFILTER_8BIT);

  000b2	6a 02		 push	 2
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 10		 mov	 edx, DWORD PTR [eax]
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	ff 92 d4 00 00
	00		 call	 DWORD PTR [edx+212]

; 1821 :             break;

  000c2	eb 2e		 jmp	 SHORT $L53572
$L53581:

; 1822 : 
; 1823 :         case ID_SELECT_ALL:
; 1824 :             OnCmdSelectAll();

  000c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 10		 mov	 edx, DWORD PTR [eax]
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]

; 1825 :             break;

  000d2	eb 1e		 jmp	 SHORT $L53572
$L53582:

; 1826 : 
; 1827 :         case ID_PLAY:
; 1828 :             OnCmdPlay();

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 10		 mov	 edx, DWORD PTR [eax]
  000d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	ff 92 d8 00 00
	00		 call	 DWORD PTR [edx+216]

; 1829 :             break;

  000e2	eb 0e		 jmp	 SHORT $L53572
$L53583:

; 1830 : 
; 1831 :         case ID_STOP:
; 1832 :             OnCmdStop();

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	8b 10		 mov	 edx, DWORD PTR [eax]
  000e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]
$L53572:

; 1833 :             break;
; 1834 :     }
; 1835 : 
; 1836 :     return FALSE;

  000f2	33 c0		 xor	 eax, eax
$L53569:

; 1837 : }

  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 10 00	 ret	 16			; 00000010H
$L54431:
  000fa	00 00 00 00	 DD	 $L53576
  000fe	00 00 00 00	 DD	 $L53579
  00102	00 00 00 00	 DD	 $L53580
  00106	00 00 00 00	 DD	 $L53582
  0010a	00 00 00 00	 DD	 $L53583
  0010e	00 00 00 00	 DD	 $L53578
  00112	00 00 00 00	 DD	 $L53575
  00116	00 00 00 00	 DD	 $L53577
  0011a	00 00 00 00	 DD	 $L53581
  0011e	00 00 00 00	 DD	 $L53572
$L54430:
  00122	00		 DB	 0
  00123	01		 DB	 1
  00124	02		 DB	 2
  00125	09		 DB	 9
  00126	03		 DB	 3
  00127	04		 DB	 4
  00128	05		 DB	 5
  00129	06		 DB	 6
  0012a	09		 DB	 9
  0012b	09		 DB	 9
  0012c	09		 DB	 9
  0012d	09		 DB	 9
  0012e	09		 DB	 9
  0012f	09		 DB	 9
  00130	09		 DB	 9
  00131	09		 DB	 9
  00132	09		 DB	 9
  00133	09		 DB	 9
  00134	09		 DB	 9
  00135	07		 DB	 7
  00136	09		 DB	 9
  00137	09		 DB	 9
  00138	08		 DB	 8
  00139	09		 DB	 9
  0013a	09		 DB	 9
  0013b	09		 DB	 9
  0013c	09		 DB	 9
  0013d	09		 DB	 9
  0013e	09		 DB	 9
  0013f	07		 DB	 7
  00140	05		 DB	 5
  00141	09		 DB	 9
  00142	09		 DB	 9
  00143	09		 DB	 9
  00144	09		 DB	 9
  00145	09		 DB	 9
  00146	09		 DB	 9
  00147	09		 DB	 9
  00148	06		 DB	 6
?OnCommand@CWaveBankWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP	; CWaveBankWindow::OnCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdRename@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -12
_nSelectionCount$ = -8
_pItem$ = -4
?OnCmdRename@CWaveBankWindow@@UAEXXZ PROC NEAR		; CWaveBankWindow::OnCmdRename, COMDAT
; _this$ = ecx

; 1863 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1864 :     int                     nSelectionCount;
; 1865 :     CListViewItem *         pItem;
; 1866 :     
; 1867 :     //
; 1868 :     // We can only rename one item at a time
; 1869 :     //
; 1870 : 
; 1871 :     if(1 != (nSelectionCount = m_ListView.GetSelectedCount()))

  00009	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 34	 add	 ecx, 52			; 00000034H
  0000f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00015	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]
  0001b	89 45 f8	 mov	 DWORD PTR _nSelectionCount$[ebp], eax
  0001e	83 7d f8 01	 cmp	 DWORD PTR _nSelectionCount$[ebp], 1
  00022	74 02		 je	 SHORT $L53590

; 1872 :     {
; 1873 :         return;

  00024	eb 2a		 jmp	 SHORT $L53587
$L53590:

; 1874 :     }
; 1875 : 
; 1876 :     if(pItem = m_ListView.GetNextItem(NULL, LVNI_SELECTED))

  00026	6a 02		 push	 2
  00028	6a 00		 push	 0
  0002a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	83 c1 34	 add	 ecx, 52			; 00000034H
  00030	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00036	ff 92 b8 00 00
	00		 call	 DWORD PTR [edx+184]
  0003c	89 45 fc	 mov	 DWORD PTR _pItem$[ebp], eax
  0003f	83 7d fc 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  00043	74 0b		 je	 SHORT $L53591

; 1877 :     {
; 1878 :         pItem->EditLabel();

  00045	8b 45 fc	 mov	 eax, DWORD PTR _pItem$[ebp]
  00048	8b 10		 mov	 edx, DWORD PTR [eax]
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  0004d	ff 52 18	 call	 DWORD PTR [edx+24]
$L53591:
$L53587:

; 1879 :     }
; 1880 : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?OnCmdRename@CWaveBankWindow@@UAEXXZ ENDP		; CWaveBankWindow::OnCmdRename
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdRemove@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -20
_pEntry$ = -4
_fRedraw$ = -12
_fAppTitle$ = -16
_nSelectionCount$ = -8
?OnCmdRemove@CWaveBankWindow@@UAEXXZ PROC NEAR		; CWaveBankWindow::OnCmdRemove, COMDAT
; _this$ = ecx

; 1906 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1907 :     CGuiWaveBankEntry *     pEntry;
; 1908 :     BOOL                    fRedraw;
; 1909 :     BOOL                    fAppTitle;
; 1910 :     int                     nSelectionCount;
; 1911 : 
; 1912 :     if((nSelectionCount = m_ListView.GetSelectedCount()) < 1)

  00009	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 34	 add	 ecx, 52			; 00000034H
  0000f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00015	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]
  0001b	89 45 f8	 mov	 DWORD PTR _nSelectionCount$[ebp], eax
  0001e	83 7d f8 01	 cmp	 DWORD PTR _nSelectionCount$[ebp], 1
  00022	7d 05		 jge	 SHORT $L53600

; 1913 :     {
; 1914 :         return;

  00024	e9 f8 00 00 00	 jmp	 $L53595
$L53600:

; 1915 :     }
; 1916 :     
; 1917 :     if(IDYES != MsgBoxResource(g_pApplication->m_MainFrame, MB_ICONQUESTION | MB_YESNO, IDS_CONFIRM_DELETE_WAVEBANK_ENTRY))

  00029	6a 10		 push	 16			; 00000010H
  0002b	6a 24		 push	 36			; 00000024H
  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00033	83 c1 10	 add	 ecx, 16			; 00000010H
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0003b	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0003e	ff 52 58	 call	 DWORD PTR [edx+88]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 _MsgBoxResource
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	83 f8 06	 cmp	 eax, 6
  0004d	74 05		 je	 SHORT $L53601

; 1918 :     {
; 1919 :         return;

  0004f	e9 cd 00 00 00	 jmp	 $L53595
$L53601:

; 1920 :     }
; 1921 : 
; 1922 :     fRedraw = m_ListView.SetRedraw(FALSE);

  00054	6a 00		 push	 0
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 34	 add	 ecx, 52			; 00000034H
  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00062	ff 52 14	 call	 DWORD PTR [edx+20]
  00065	89 45 f4	 mov	 DWORD PTR _fRedraw$[ebp], eax

; 1923 :     fAppTitle = g_pApplication->m_Project.EnableAppTitleUpdates(FALSE);

  00068	6a 00		 push	 0
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00070	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0007b	8b 90 98 02 00
	00		 mov	 edx, DWORD PTR [eax+664]
  00081	ff 52 44	 call	 DWORD PTR [edx+68]
  00084	89 45 f0	 mov	 DWORD PTR _fAppTitle$[ebp], eax
$L53603:

; 1924 :     
; 1925 :     while(TRUE)

  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	85 c0		 test	 eax, eax
  0008e	74 5f		 je	 SHORT $L53604

; 1926 :     {
; 1927 :         if(!(pEntry = (CGuiWaveBankEntry *)m_ListView.GetNextItem(NULL, LVNI_SELECTED)))

  00090	6a 02		 push	 2
  00092	6a 00		 push	 0
  00094	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	83 c1 34	 add	 ecx, 52			; 00000034H
  0009a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0009d	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000a0	ff 90 b8 00 00
	00		 call	 DWORD PTR [eax+184]
  000a6	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  000a9	83 7d e8 00	 cmp	 DWORD PTR -24+[ebp], 0
  000ad	74 0e		 je	 SHORT $L54438
  000af	8b 4d e8	 mov	 ecx, DWORD PTR -24+[ebp]
  000b2	81 e9 38 03 00
	00		 sub	 ecx, 824		; 00000338H
  000b8	89 4d e4	 mov	 DWORD PTR -28+[ebp], ecx
  000bb	eb 07		 jmp	 SHORT $L54439
$L54438:
  000bd	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L54439:
  000c4	8b 55 e4	 mov	 edx, DWORD PTR -28+[ebp]
  000c7	89 55 fc	 mov	 DWORD PTR _pEntry$[ebp], edx
  000ca	83 7d fc 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000ce	75 02		 jne	 SHORT $L53606

; 1928 :         {
; 1929 :             break;

  000d0	eb 1d		 jmp	 SHORT $L53604
$L53606:

; 1930 :         }
; 1931 : 
; 1932 :         m_pBank->RemoveEntry(pEntry);

  000d2	8b 45 fc	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000d5	50		 push	 eax
  000d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	8b 91 2c 02 00
	00		 mov	 edx, DWORD PTR [ecx+556]
  000df	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8b 88 2c 02 00
	00		 mov	 ecx, DWORD PTR [eax+556]
  000e8	8b 12		 mov	 edx, DWORD PTR [edx]
  000ea	ff 52 18	 call	 DWORD PTR [edx+24]

; 1933 :     }

  000ed	eb 98		 jmp	 SHORT $L53603
$L53604:

; 1934 : 
; 1935 :     m_ListView.SetRedraw(fRedraw);

  000ef	8b 45 f4	 mov	 eax, DWORD PTR _fRedraw$[ebp]
  000f2	50		 push	 eax
  000f3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	83 c1 34	 add	 ecx, 52			; 00000034H
  000f9	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000fc	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000ff	ff 50 14	 call	 DWORD PTR [eax+20]

; 1936 :     g_pApplication->m_Project.EnableAppTitleUpdates(fAppTitle);

  00102	8b 4d f0	 mov	 ecx, DWORD PTR _fAppTitle$[ebp]
  00105	51		 push	 ecx
  00106	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0010c	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00112	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00118	8b 82 98 02 00
	00		 mov	 eax, DWORD PTR [edx+664]
  0011e	ff 50 44	 call	 DWORD PTR [eax+68]
$L53595:

; 1937 : }

  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c3		 ret	 0
?OnCmdRemove@CWaveBankWindow@@UAEXXZ ENDP		; CWaveBankWindow::OnCmdRemove
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdSetFlags@CWaveBankWindow@@UAEXK@Z
_TEXT	SEGMENT
_dwFilter$ = 8
_this$ = -24
_dwFlags$ = -20
_nChanged$ = -4
_nSelectionCount$ = -12
_pEntry$ = -8
_fRedraw$ = -16
?OnCmdSetFlags@CWaveBankWindow@@UAEXK@Z PROC NEAR	; CWaveBankWindow::OnCmdSetFlags, COMDAT
; _this$ = ecx

; 1963 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1964 :     static const DWORD      dwMask          = WBFILTER_MASK;
; 1965 :     DWORD                   dwFlags         = 0;

  00009	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _dwFlags$[ebp], 0

; 1966 :     int                     nChanged        = 0;

  00010	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nChanged$[ebp], 0

; 1967 :     int                     nSelectionCount;
; 1968 :     CGuiWaveBankEntry *     pEntry;
; 1969 :     BOOL                    fRedraw;
; 1970 : 
; 1971 :     //
; 1972 :     // Make sure at least one item is selected
; 1973 :     //
; 1974 : 
; 1975 :     if((nSelectionCount = m_ListView.GetSelectedCount()) < 1)

  00017	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 c1 34	 add	 ecx, 52			; 00000034H
  0001d	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00023	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]
  00029	89 45 f4	 mov	 DWORD PTR _nSelectionCount$[ebp], eax
  0002c	83 7d f4 01	 cmp	 DWORD PTR _nSelectionCount$[ebp], 1
  00030	7d 05		 jge	 SHORT $L53618

; 1976 :     {
; 1977 :         return;

  00032	e9 ba 01 00 00	 jmp	 $L53610
$L53618:

; 1978 :     }
; 1979 : 
; 1980 :     //
; 1981 :     // Disable redraws
; 1982 :     //
; 1983 :     
; 1984 :     fRedraw = m_ListView.SetRedraw(FALSE);

  00037	6a 00		 push	 0
  00039	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 34	 add	 ecx, 52			; 00000034H
  0003f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00045	ff 52 14	 call	 DWORD PTR [edx+20]
  00048	89 45 f0	 mov	 DWORD PTR _fRedraw$[ebp], eax

; 1985 : 
; 1986 :     //
; 1987 :     // Get the current flags for all selected items.  If any of them have
; 1988 :     // this compression bit set, we'll toggle them all off.  If none of
; 1989 :     // them do, we'll toggle them all on.
; 1990 :     //
; 1991 : 
; 1992 :     pEntry = NULL;

  0004b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pEntry$[ebp], 0
$L53620:

; 1993 :     
; 1994 :     while(TRUE)

  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	85 c0		 test	 eax, eax
  00059	74 6f		 je	 SHORT $L53621

; 1995 :     {
; 1996 :         if(!(pEntry = (CGuiWaveBankEntry *)m_ListView.GetNextItem(pEntry, LVNI_SELECTED)))

  0005b	83 7d f8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  0005f	74 0e		 je	 SHORT $L54443
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00064	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0006a	89 4d e4	 mov	 DWORD PTR -28+[ebp], ecx
  0006d	eb 07		 jmp	 SHORT $L54444
$L54443:
  0006f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L54444:
  00076	6a 02		 push	 2
  00078	8b 55 e4	 mov	 edx, DWORD PTR -28+[ebp]
  0007b	52		 push	 edx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	83 c1 34	 add	 ecx, 52			; 00000034H
  00082	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00088	ff 92 b8 00 00
	00		 call	 DWORD PTR [edx+184]
  0008e	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00091	83 7d e0 00	 cmp	 DWORD PTR -32+[ebp], 0
  00095	74 0d		 je	 SHORT $L54445
  00097	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  0009a	2d 38 03 00 00	 sub	 eax, 824		; 00000338H
  0009f	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  000a2	eb 07		 jmp	 SHORT $L54446
$L54445:
  000a4	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L54446:
  000ab	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  000ae	89 4d f8	 mov	 DWORD PTR _pEntry$[ebp], ecx
  000b1	83 7d f8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000b5	75 02		 jne	 SHORT $L53623

; 1997 :         {
; 1998 :             break;

  000b7	eb 11		 jmp	 SHORT $L53621
$L53623:

; 1999 :         }
; 2000 : 
; 2001 :         dwFlags |= pEntry->m_dwFlags;

  000b9	8b 55 f8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  000bc	8b 45 ec	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  000bf	0b 82 28 03 00
	00		 or	 eax, DWORD PTR [edx+808]
  000c5	89 45 ec	 mov	 DWORD PTR _dwFlags$[ebp], eax

; 2002 :     }

  000c8	eb 88		 jmp	 SHORT $L53620
$L53621:

; 2003 : 
; 2004 :     dwFlags = ~dwFlags & dwFilter;

  000ca	8b 4d ec	 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  000cd	f7 d1		 not	 ecx
  000cf	23 4d 08	 and	 ecx, DWORD PTR _dwFilter$[ebp]
  000d2	89 4d ec	 mov	 DWORD PTR _dwFlags$[ebp], ecx

; 2005 : 
; 2006 :     pEntry = NULL;

  000d5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pEntry$[ebp], 0
$L53625:

; 2007 :     
; 2008 :     while(TRUE)

  000dc	ba 01 00 00 00	 mov	 edx, 1
  000e1	85 d2		 test	 edx, edx
  000e3	0f 84 8d 00 00
	00		 je	 $L53626

; 2009 :     {
; 2010 :         if(!(pEntry = (CGuiWaveBankEntry *)m_ListView.GetNextItem(pEntry, LVNI_SELECTED)))

  000e9	83 7d f8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000ed	74 0d		 je	 SHORT $L54447
  000ef	8b 45 f8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000f2	05 38 03 00 00	 add	 eax, 824		; 00000338H
  000f7	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  000fa	eb 07		 jmp	 SHORT $L54448
$L54447:
  000fc	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR -40+[ebp], 0
$L54448:
  00103	6a 02		 push	 2
  00105	8b 4d d8	 mov	 ecx, DWORD PTR -40+[ebp]
  00108	51		 push	 ecx
  00109	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	83 c1 34	 add	 ecx, 52			; 00000034H
  0010f	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00112	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00115	ff 90 b8 00 00
	00		 call	 DWORD PTR [eax+184]
  0011b	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  0011e	83 7d d4 00	 cmp	 DWORD PTR -44+[ebp], 0
  00122	74 0e		 je	 SHORT $L54449
  00124	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  00127	81 e9 38 03 00
	00		 sub	 ecx, 824		; 00000338H
  0012d	89 4d d0	 mov	 DWORD PTR -48+[ebp], ecx
  00130	eb 07		 jmp	 SHORT $L54450
$L54449:
  00132	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR -48+[ebp], 0
$L54450:
  00139	8b 55 d0	 mov	 edx, DWORD PTR -48+[ebp]
  0013c	89 55 f8	 mov	 DWORD PTR _pEntry$[ebp], edx
  0013f	83 7d f8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  00143	75 02		 jne	 SHORT $L53628

; 2011 :         {
; 2012 :             break;

  00145	eb 2f		 jmp	 SHORT $L53626
$L53628:

; 2013 :         }
; 2014 : 
; 2015 :         if(pEntry->SetFlags(dwMask, dwFlags) == dwFlags)

  00147	8b 45 ec	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  0014a	50		 push	 eax
  0014b	6a 03		 push	 3
  0014d	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00150	8b 11		 mov	 edx, DWORD PTR [ecx]
  00152	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00155	ff 52 14	 call	 DWORD PTR [edx+20]
  00158	3b 45 ec	 cmp	 eax, DWORD PTR _dwFlags$[ebp]
  0015b	75 09		 jne	 SHORT $L53629

; 2016 :         {
; 2017 :             nChanged++;

  0015d	8b 45 fc	 mov	 eax, DWORD PTR _nChanged$[ebp]
  00160	83 c0 01	 add	 eax, 1
  00163	89 45 fc	 mov	 DWORD PTR _nChanged$[ebp], eax
$L53629:

; 2018 :         }
; 2019 : 
; 2020 :         pEntry->UpdateUI();

  00166	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00169	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016b	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0016e	ff 52 28	 call	 DWORD PTR [edx+40]

; 2021 :     }

  00171	e9 66 ff ff ff	 jmp	 $L53625
$L53626:

; 2022 : 
; 2023 :     //
; 2024 :     // Restore redraws
; 2025 :     //
; 2026 : 
; 2027 :     m_ListView.SetRedraw(fRedraw);

  00176	8b 45 f0	 mov	 eax, DWORD PTR _fRedraw$[ebp]
  00179	50		 push	 eax
  0017a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	83 c1 34	 add	 ecx, 52			; 00000034H
  00180	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00183	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00186	ff 50 14	 call	 DWORD PTR [eax+20]

; 2028 : 
; 2029 :     //
; 2030 :     // Update command states
; 2031 :     //
; 2032 : 
; 2033 :     if(nChanged)

  00189	83 7d fc 00	 cmp	 DWORD PTR _nChanged$[ebp], 0
  0018d	74 0e		 je	 SHORT $L53630

; 2034 :     {
; 2035 :         UpdateCommandState();

  0018f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	8b 11		 mov	 edx, DWORD PTR [ecx]
  00194	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	ff 92 e8 00 00
	00		 call	 DWORD PTR [edx+232]
$L53630:

; 2036 :     }
; 2037 : 
; 2038 :     //
; 2039 :     // If not every item was able to be changed, warn the user
; 2040 :     //
; 2041 : 
; 2042 :     if(nChanged < nSelectionCount)

  0019d	8b 45 fc	 mov	 eax, DWORD PTR _nChanged$[ebp]
  001a0	3b 45 f4	 cmp	 eax, DWORD PTR _nSelectionCount$[ebp]
  001a3	7d 4c		 jge	 SHORT $L53631

; 2043 :     {
; 2044 :         if(nChanged)

  001a5	83 7d fc 00	 cmp	 DWORD PTR _nChanged$[ebp], 0
  001a9	74 24		 je	 SHORT $L53632

; 2045 :         {
; 2046 :             MsgBoxResource(g_pApplication->m_MainFrame, MB_OK | MB_ICONINFORMATION, IDS_NOT_ALL_CONVERTED);

  001ab	6a 11		 push	 17			; 00000011H
  001ad	6a 40		 push	 64			; 00000040H
  001af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  001b5	83 c1 10	 add	 ecx, 16			; 00000010H
  001b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  001be	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  001c1	ff 50 58	 call	 DWORD PTR [eax+88]
  001c4	50		 push	 eax
  001c5	e8 00 00 00 00	 call	 _MsgBoxResource
  001ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2047 :         }
; 2048 :         else

  001cd	eb 22		 jmp	 SHORT $L53633
$L53632:

; 2049 :         {
; 2050 :             MsgBoxResource(g_pApplication->m_MainFrame, MB_OK | MB_ICONINFORMATION, IDS_NONE_CONVERTED);

  001cf	6a 12		 push	 18			; 00000012H
  001d1	6a 40		 push	 64			; 00000040H
  001d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  001d9	83 c1 10	 add	 ecx, 16			; 00000010H
  001dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  001e2	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  001e5	ff 50 58	 call	 DWORD PTR [eax+88]
  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 _MsgBoxResource
  001ee	83 c4 0c	 add	 esp, 12			; 0000000cH
$L53633:
$L53631:
$L53610:

; 2051 :         }
; 2052 :     }
; 2053 : }

  001f1	8b e5		 mov	 esp, ebp
  001f3	5d		 pop	 ebp
  001f4	c2 04 00	 ret	 4
?OnCmdSetFlags@CWaveBankWindow@@UAEXK@Z ENDP		; CWaveBankWindow::OnCmdSetFlags
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdSelectAll@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8
_fEnable$ = -4
?OnCmdSelectAll@CWaveBankWindow@@UAEXXZ PROC NEAR	; CWaveBankWindow::OnCmdSelectAll, COMDAT
; _this$ = ecx

; 2079 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2080 :     BOOL                    fEnable;
; 2081 : 
; 2082 :     fEnable = EnableCommandUpdate(FALSE);

  00009	6a 00		 push	 0
  0000b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000e	8b 10		 mov	 edx, DWORD PTR [eax]
  00010	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]
  00019	89 45 fc	 mov	 DWORD PTR _fEnable$[ebp], eax

; 2083 : 
; 2084 :     m_ListView.SelectAll(TRUE);

  0001c	6a 01		 push	 1
  0001e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 34	 add	 ecx, 52			; 00000034H
  00024	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  0002a	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]

; 2085 : 
; 2086 :     EnableCommandUpdate(fEnable);

  00030	8b 45 fc	 mov	 eax, DWORD PTR _fEnable$[ebp]
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 11		 mov	 edx, DWORD PTR [ecx]
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]

; 2087 : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?OnCmdSelectAll@CWaveBankWindow@@UAEXXZ ENDP		; CWaveBankWindow::OnCmdSelectAll
_TEXT	ENDS
PUBLIC	?BeginWaitCursor@@YGXXZ				; BeginWaitCursor
PUBLIC	?EndWaitCursor@@YGXXZ				; EndWaitCursor
; Function compile flags: /Odt
;	COMDAT ?OnCmdPlay@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8
_pEntry$ = -4
?OnCmdPlay@CWaveBankWindow@@UAEXXZ PROC NEAR		; CWaveBankWindow::OnCmdPlay, COMDAT
; _this$ = ecx

; 2113 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2114 :     CGuiWaveBankEntry *     pEntry  = NULL;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pEntry$[ebp], 0

; 2115 :     
; 2116 :     //
; 2117 :     // Turn on the hourglass
; 2118 :     //
; 2119 : 
; 2120 :     BeginWaitCursor();

  00010	e8 00 00 00 00	 call	 ?BeginWaitCursor@@YGXXZ	; BeginWaitCursor
$L53645:

; 2121 : 
; 2122 :     //
; 2123 :     // Enumerate selected entries and audition them
; 2124 :     //
; 2125 : 
; 2126 :     while(pEntry = (CGuiWaveBankEntry *)m_ListView.GetNextItem(pEntry, LVNI_SELECTED))

  00015	83 7d fc 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  00019	74 0d		 je	 SHORT $L54457
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0001e	05 38 03 00 00	 add	 eax, 824		; 00000338H
  00023	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00026	eb 07		 jmp	 SHORT $L54458
$L54457:
  00028	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L54458:
  0002f	6a 02		 push	 2
  00031	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  00034	51		 push	 ecx
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 34	 add	 ecx, 52			; 00000034H
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00041	ff 90 b8 00 00
	00		 call	 DWORD PTR [eax+184]
  00047	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  0004a	83 7d f0 00	 cmp	 DWORD PTR -16+[ebp], 0
  0004e	74 0e		 je	 SHORT $L54459
  00050	8b 4d f0	 mov	 ecx, DWORD PTR -16+[ebp]
  00053	81 e9 38 03 00
	00		 sub	 ecx, 824		; 00000338H
  00059	89 4d ec	 mov	 DWORD PTR -20+[ebp], ecx
  0005c	eb 07		 jmp	 SHORT $L54460
$L54459:
  0005e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L54460:
  00065	8b 55 ec	 mov	 edx, DWORD PTR -20+[ebp]
  00068	89 55 fc	 mov	 DWORD PTR _pEntry$[ebp], edx
  0006b	83 7d fc 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  0006f	74 0d		 je	 SHORT $L53646

; 2127 :     {
; 2128 :         pEntry->OnCmdPlay();

  00071	8b 45 fc	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00079	ff 52 2c	 call	 DWORD PTR [edx+44]

; 2129 :     }

  0007c	eb 97		 jmp	 SHORT $L53645
$L53646:

; 2130 : 
; 2131 :     //
; 2132 :     // Turn off the hourglass
; 2133 :     //
; 2134 : 
; 2135 :     EndWaitCursor();

  0007e	e8 00 00 00 00	 call	 ?EndWaitCursor@@YGXXZ	; EndWaitCursor

; 2136 : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?OnCmdPlay@CWaveBankWindow@@UAEXXZ ENDP			; CWaveBankWindow::OnCmdPlay
_TEXT	ENDS
EXTRN	__imp__SetCursor@4:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
;	COMDAT ?BeginWaitCursor@@YGXXZ
_TEXT	SEGMENT
?BeginWaitCursor@@YGXXZ PROC NEAR			; BeginWaitCursor, COMDAT

; 436  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 437  :     SetCursor(LoadCursor(NULL, IDC_WAIT));

  00003	68 02 7f 00 00	 push	 32514			; 00007f02H
  00008	6a 00		 push	 0
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00010	50		 push	 eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 438  : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?BeginWaitCursor@@YGXXZ ENDP				; BeginWaitCursor
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndWaitCursor@@YGXXZ
_TEXT	SEGMENT
?EndWaitCursor@@YGXXZ PROC NEAR				; EndWaitCursor, COMDAT

; 441  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 442  :     SetCursor(LoadCursor(NULL, IDC_ARROW));

  00003	68 00 7f 00 00	 push	 32512			; 00007f00H
  00008	6a 00		 push	 0
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00010	50		 push	 eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 443  : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?EndWaitCursor@@YGXXZ ENDP				; EndWaitCursor
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
_TEXT	ENDS
;	COMDAT ?OnCmdStop@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdStop@CWaveBankWindow@@UAEXXZ PROC NEAR		; CWaveBankWindow::OnCmdStop, COMDAT
; _this$ = ecx

; 2162 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2163 :     g_pApplication->m_RemoteAudition.StopAll();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0000d	81 c1 74 09 00
	00		 add	 ecx, 2420		; 00000974H
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00018	8b 90 74 09 00
	00		 mov	 edx, DWORD PTR [eax+2420]
  0001e	ff 52 10	 call	 DWORD PTR [edx+16]

; 2164 : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?OnCmdStop@CWaveBankWindow@@UAEXXZ ENDP			; CWaveBankWindow::OnCmdStop
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Refresh@CWaveBankWindow@@UAEHXZ
_TEXT	SEGMENT
_this$ = -16
_fRedraw$ = -12
?Refresh@CWaveBankWindow@@UAEHXZ PROC NEAR		; CWaveBankWindow::Refresh, COMDAT
; _this$ = ecx

; 2190 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2191 :     PLIST_ENTRY             pleEntry;
; 2192 :     CGuiWaveBankEntry *     pEntry;
; 2193 :     BOOL                    fRedraw;
; 2194 : 
; 2195 :     //
; 2196 :     // Change the cursor to provide user feedback
; 2197 :     //
; 2198 : 
; 2199 :     BeginWaitCursor();

  00009	e8 00 00 00 00	 call	 ?BeginWaitCursor@@YGXXZ	; BeginWaitCursor

; 2200 : 
; 2201 :     //
; 2202 :     // Disable window redraws
; 2203 :     //
; 2204 : 
; 2205 :     fRedraw = m_ListView.SetRedraw(FALSE);

  0000e	6a 00		 push	 0
  00010	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 34	 add	 ecx, 52			; 00000034H
  00016	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  0001c	ff 52 14	 call	 DWORD PTR [edx+20]
  0001f	89 45 f4	 mov	 DWORD PTR _fRedraw$[ebp], eax

; 2206 : 
; 2207 :     //
; 2208 :     // Reload all entries
; 2209 :     //
; 2210 :     
; 2211 :     m_pBank->LoadEntries(TRUE);

  00022	6a 01		 push	 1
  00024	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 88 2c 02 00
	00		 mov	 ecx, DWORD PTR [eax+556]
  0002d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00030	8b 82 2c 02 00
	00		 mov	 eax, DWORD PTR [edx+556]
  00036	8b 11		 mov	 edx, DWORD PTR [ecx]
  00038	8b c8		 mov	 ecx, eax
  0003a	ff 52 1c	 call	 DWORD PTR [edx+28]

; 2212 : 
; 2213 :     //
; 2214 :     // Restore redraw state
; 2215 :     //
; 2216 :     
; 2217 :     m_ListView.SetRedraw(fRedraw);

  0003d	8b 45 f4	 mov	 eax, DWORD PTR _fRedraw$[ebp]
  00040	50		 push	 eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 34	 add	 ecx, 52			; 00000034H
  00047	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0004d	ff 50 14	 call	 DWORD PTR [eax+20]

; 2218 : 
; 2219 :     //
; 2220 :     // Restore the cursor
; 2221 :     //
; 2222 : 
; 2223 :     EndWaitCursor();

  00050	e8 00 00 00 00	 call	 ?EndWaitCursor@@YGXXZ	; EndWaitCursor

; 2224 : 
; 2225 :     return TRUE;

  00055	b8 01 00 00 00	 mov	 eax, 1

; 2226 : }

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?Refresh@CWaveBankWindow@@UAEHXZ ENDP			; CWaveBankWindow::Refresh
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?UpdateCommandState@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -40
_pEntry$ = -16
_nValidAdpcm$ = -12
_nAdpcm$ = -20
_nValid8bit$ = -36
_n8bit$ = -4
_fEnable$ = -8
_nSelectionCount$ = -28
_dwFlags$ = -32
_i$ = -24
?UpdateCommandState@CWaveBankWindow@@UAEXXZ PROC NEAR	; CWaveBankWindow::UpdateCommandState, COMDAT
; _this$ = ecx

; 2252 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 2253 :     static const UINT       anCommands[]    =
; 2254 :     {
; 2255 :         ID_ADD_WAVEBANK_ENTRY,
; 2256 :         ID_WAVEBANK_ENTRY_ADPCM,
; 2257 :         ID_WAVEBANK_ENTRY_8BIT,
; 2258 :         ID_PLAY,
; 2259 :         ID_STOP,
; 2260 :         ID_WAVEBANK_ENTRY_RENAME,
; 2261 :         ID_WAVEBANK_ENTRY_DELETE,
; 2262 :     };
; 2263 : 
; 2264 :     CGuiWaveBankEntry *     pEntry          = NULL;

  00009	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pEntry$[ebp], 0

; 2265 :     int                     nValidAdpcm     = 0;

  00010	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nValidAdpcm$[ebp], 0

; 2266 :     int                     nAdpcm          = 0;

  00017	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nAdpcm$[ebp], 0

; 2267 :     int                     nValid8bit      = 0;

  0001e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _nValid8bit$[ebp], 0

; 2268 :     int                     n8bit           = 0;

  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _n8bit$[ebp], 0

; 2269 :     BOOL                    fEnable;
; 2270 :     int                     nSelectionCount;
; 2271 :     DWORD                   dwFlags;
; 2272 :     UINT                    i;
; 2273 : 
; 2274 :     if(!m_fUpdateCommands)

  0002c	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 b8 30 02 00
	00 00		 cmp	 DWORD PTR [eax+560], 0
  00036	75 05		 jne	 SHORT $L53674

; 2275 :     {
; 2276 :         return;

  00038	e9 fa 02 00 00	 jmp	 $L53662
$L53674:

; 2277 :     }
; 2278 :     
; 2279 :     //
; 2280 :     // If we're not the active window, disable all commands that relate to
; 2281 :     // us
; 2282 :     //
; 2283 : 
; 2284 : #pragma TODO("Is there ever a possibility that we'll do this *after* another window has taken focus?")
; 2285 : 
; 2286 :     if(!((CMDIClientWindow *)m_pParent)->IsActiveChild(this))

  0003d	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00047	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0004d	8b 10		 mov	 edx, DWORD PTR [eax]
  0004f	ff 92 a4 00 00
	00		 call	 DWORD PTR [edx+164]
  00055	85 c0		 test	 eax, eax
  00057	75 43		 jne	 SHORT $L53676

; 2287 :     {
; 2288 :         for(i = 0; i < NUMELMS(anCommands); i++)

  00059	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00060	eb 09		 jmp	 SHORT $L53677
$L53678:
  00062	8b 45 e8	 mov	 eax, DWORD PTR _i$[ebp]
  00065	83 c0 01	 add	 eax, 1
  00068	89 45 e8	 mov	 DWORD PTR _i$[ebp], eax
$L53677:
  0006b	83 7d e8 07	 cmp	 DWORD PTR _i$[ebp], 7
  0006f	73 26		 jae	 SHORT $L53679

; 2289 :         {
; 2290 :             g_pApplication->m_MainFrame.EnableCommand(anCommands[i], FALSE);

  00071	6a 00		 push	 0
  00073	8b 4d e8	 mov	 ecx, DWORD PTR _i$[ebp]
  00076	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?anCommands@?1??UpdateCommandState@CWaveBankWindow@@UAEXXZ@4QBIB[ecx*4]
  0007d	52		 push	 edx
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00084	83 c1 10	 add	 ecx, 16			; 00000010H
  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0008c	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0008f	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]

; 2291 :         }

  00095	eb cb		 jmp	 SHORT $L53678
$L53679:

; 2292 : 
; 2293 :         return;

  00097	e9 9b 02 00 00	 jmp	 $L53662
$L53676:

; 2294 :     }
; 2295 : 
; 2296 :     //
; 2297 :     // Update commands that are enabled just because we're in view
; 2298 :     //
; 2299 : 
; 2300 :     g_pApplication->m_MainFrame.EnableCommand(ID_ADD_WAVEBANK_ENTRY, TRUE);

  0009c	6a 01		 push	 1
  0009e	68 48 9c 00 00	 push	 40008			; 00009c48H
  000a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000a9	83 c1 10	 add	 ecx, 16			; 00000010H
  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000b1	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000b4	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]

; 2301 : 
; 2302 :     //
; 2303 :     // Update commands that depend on the selection state
; 2304 :     //
; 2305 : 
; 2306 :     nSelectionCount = m_ListView.GetSelectedCount();

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	83 c1 34	 add	 ecx, 52			; 00000034H
  000c0	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  000c6	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]
  000cc	89 45 e4	 mov	 DWORD PTR _nSelectionCount$[ebp], eax

; 2307 :     fEnable = (nSelectionCount >= 1);

  000cf	33 c0		 xor	 eax, eax
  000d1	83 7d e4 01	 cmp	 DWORD PTR _nSelectionCount$[ebp], 1
  000d5	0f 9d c0	 setge	 al
  000d8	89 45 f8	 mov	 DWORD PTR _fEnable$[ebp], eax

; 2308 : 
; 2309 :     g_pApplication->m_MainFrame.EnableCommand(ID_PLAY, fEnable);

  000db	8b 4d f8	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  000de	51		 push	 ecx
  000df	68 4c 9c 00 00	 push	 40012			; 00009c4cH
  000e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000ea	83 c1 10	 add	 ecx, 16			; 00000010H
  000ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  000f3	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000f6	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 2310 :     g_pApplication->m_MainFrame.EnableCommand(ID_STOP, fEnable);

  000fc	8b 4d f8	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  000ff	51		 push	 ecx
  00100	68 4d 9c 00 00	 push	 40013			; 00009c4dH
  00105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0010b	83 c1 10	 add	 ecx, 16			; 00000010H
  0010e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00114	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00117	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 2311 :     g_pApplication->m_MainFrame.EnableCommand(ID_WAVEBANK_ENTRY_DELETE, fEnable);

  0011d	8b 4d f8	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  00120	51		 push	 ecx
  00121	68 66 9c 00 00	 push	 40038			; 00009c66H
  00126	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0012c	83 c1 10	 add	 ecx, 16			; 00000010H
  0012f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00135	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00138	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 2312 : 
; 2313 :     fEnable = (1 == nSelectionCount);

  0013e	33 c9		 xor	 ecx, ecx
  00140	83 7d e4 01	 cmp	 DWORD PTR _nSelectionCount$[ebp], 1
  00144	0f 94 c1	 sete	 cl
  00147	89 4d f8	 mov	 DWORD PTR _fEnable$[ebp], ecx

; 2314 : 
; 2315 :     g_pApplication->m_MainFrame.EnableCommand(ID_WAVEBANK_ENTRY_RENAME, fEnable);

  0014a	8b 55 f8	 mov	 edx, DWORD PTR _fEnable$[ebp]
  0014d	52		 push	 edx
  0014e	68 65 9c 00 00	 push	 40037			; 00009c65H
  00153	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00159	83 c1 10	 add	 ecx, 16			; 00000010H
  0015c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00161	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00164	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]
$L53681:

; 2316 : 
; 2317 :     //
; 2318 :     // Update commands that depend on which entries are selected
; 2319 :     //
; 2320 : 
; 2321 :     while(TRUE)

  0016a	b8 01 00 00 00	 mov	 eax, 1
  0016f	85 c0		 test	 eax, eax
  00171	0f 84 e6 00 00
	00		 je	 $L53682

; 2322 :     {
; 2323 :         if(!(pEntry = (CGuiWaveBankEntry *)m_ListView.GetNextItem(pEntry, LVNI_SELECTED)))

  00177	83 7d f0 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  0017b	74 0e		 je	 SHORT $L54476
  0017d	8b 4d f0	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00180	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  00186	89 4d d4	 mov	 DWORD PTR -44+[ebp], ecx
  00189	eb 07		 jmp	 SHORT $L54477
$L54476:
  0018b	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L54477:
  00192	6a 02		 push	 2
  00194	8b 55 d4	 mov	 edx, DWORD PTR -44+[ebp]
  00197	52		 push	 edx
  00198	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0019b	83 c1 34	 add	 ecx, 52			; 00000034H
  0019e	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  001a1	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  001a4	ff 92 b8 00 00
	00		 call	 DWORD PTR [edx+184]
  001aa	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  001ad	83 7d d0 00	 cmp	 DWORD PTR -48+[ebp], 0
  001b1	74 0d		 je	 SHORT $L54478
  001b3	8b 45 d0	 mov	 eax, DWORD PTR -48+[ebp]
  001b6	2d 38 03 00 00	 sub	 eax, 824		; 00000338H
  001bb	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  001be	eb 07		 jmp	 SHORT $L54479
$L54478:
  001c0	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], 0
$L54479:
  001c7	8b 4d cc	 mov	 ecx, DWORD PTR -52+[ebp]
  001ca	89 4d f0	 mov	 DWORD PTR _pEntry$[ebp], ecx
  001cd	83 7d f0 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  001d1	75 05		 jne	 SHORT $L53684

; 2324 :         {
; 2325 :             break;

  001d3	e9 85 00 00 00	 jmp	 $L53682
$L53684:

; 2326 :         }
; 2327 : 
; 2328 :         dwFlags = pEntry->GetValidFlags();

  001d8	8b 55 f0	 mov	 edx, DWORD PTR _pEntry$[ebp]
  001db	8b 02		 mov	 eax, DWORD PTR [edx]
  001dd	8b 4d f0	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  001e0	ff 50 10	 call	 DWORD PTR [eax+16]
  001e3	89 45 e0	 mov	 DWORD PTR _dwFlags$[ebp], eax

; 2329 : 
; 2330 :         if(dwFlags & WBFILTER_ADPCM)

  001e6	8b 4d e0	 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  001e9	83 e1 01	 and	 ecx, 1
  001ec	85 c9		 test	 ecx, ecx
  001ee	74 09		 je	 SHORT $L53685

; 2331 :         {
; 2332 :             nValidAdpcm++;

  001f0	8b 55 f4	 mov	 edx, DWORD PTR _nValidAdpcm$[ebp]
  001f3	83 c2 01	 add	 edx, 1
  001f6	89 55 f4	 mov	 DWORD PTR _nValidAdpcm$[ebp], edx
$L53685:

; 2333 :         }
; 2334 : 
; 2335 :         if(dwFlags & WBFILTER_8BIT)

  001f9	8b 45 e0	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  001fc	83 e0 02	 and	 eax, 2
  001ff	85 c0		 test	 eax, eax
  00201	74 09		 je	 SHORT $L53686

; 2336 :         {
; 2337 :             nValid8bit++;

  00203	8b 4d dc	 mov	 ecx, DWORD PTR _nValid8bit$[ebp]
  00206	83 c1 01	 add	 ecx, 1
  00209	89 4d dc	 mov	 DWORD PTR _nValid8bit$[ebp], ecx
$L53686:

; 2338 :         }
; 2339 : 
; 2340 :         dwFlags = pEntry->m_dwFlags;

  0020c	8b 55 f0	 mov	 edx, DWORD PTR _pEntry$[ebp]
  0020f	8b 82 28 03 00
	00		 mov	 eax, DWORD PTR [edx+808]
  00215	89 45 e0	 mov	 DWORD PTR _dwFlags$[ebp], eax

; 2341 : 
; 2342 :         if(dwFlags & WBFILTER_ADPCM)

  00218	8b 4d e0	 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  0021b	83 e1 01	 and	 ecx, 1
  0021e	85 c9		 test	 ecx, ecx
  00220	74 09		 je	 SHORT $L53687

; 2343 :         {
; 2344 :             nAdpcm++;

  00222	8b 55 ec	 mov	 edx, DWORD PTR _nAdpcm$[ebp]
  00225	83 c2 01	 add	 edx, 1
  00228	89 55 ec	 mov	 DWORD PTR _nAdpcm$[ebp], edx
$L53687:

; 2345 :         }
; 2346 : 
; 2347 :         if(dwFlags & WBFILTER_8BIT)

  0022b	8b 45 e0	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  0022e	83 e0 02	 and	 eax, 2
  00231	85 c0		 test	 eax, eax
  00233	74 09		 je	 SHORT $L53688

; 2348 :         {
; 2349 :             n8bit++;

  00235	8b 4d fc	 mov	 ecx, DWORD PTR _n8bit$[ebp]
  00238	83 c1 01	 add	 ecx, 1
  0023b	89 4d fc	 mov	 DWORD PTR _n8bit$[ebp], ecx
$L53688:

; 2350 :         }
; 2351 : 
; 2352 :         if(nValidAdpcm && nAdpcm && nValid8bit && n8bit)

  0023e	83 7d f4 00	 cmp	 DWORD PTR _nValidAdpcm$[ebp], 0
  00242	74 14		 je	 SHORT $L53689
  00244	83 7d ec 00	 cmp	 DWORD PTR _nAdpcm$[ebp], 0
  00248	74 0e		 je	 SHORT $L53689
  0024a	83 7d dc 00	 cmp	 DWORD PTR _nValid8bit$[ebp], 0
  0024e	74 08		 je	 SHORT $L53689
  00250	83 7d fc 00	 cmp	 DWORD PTR _n8bit$[ebp], 0
  00254	74 02		 je	 SHORT $L53689

; 2353 :         {
; 2354 :             break;

  00256	eb 05		 jmp	 SHORT $L53682
$L53689:

; 2355 :         }
; 2356 :     }

  00258	e9 0d ff ff ff	 jmp	 $L53681
$L53682:

; 2357 : 
; 2358 :     if(nValidAdpcm)

  0025d	83 7d f4 00	 cmp	 DWORD PTR _nValidAdpcm$[ebp], 0
  00261	74 48		 je	 SHORT $L53690

; 2359 :     {
; 2360 :         g_pApplication->m_MainFrame.EnableCommand(ID_WAVEBANK_ENTRY_ADPCM, TRUE);

  00263	6a 01		 push	 1
  00265	68 49 9c 00 00	 push	 40009			; 00009c49H
  0026a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00270	83 c1 10	 add	 ecx, 16			; 00000010H
  00273	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00279	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0027c	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 2361 :         g_pApplication->m_MainFrame.CheckCommand(ID_WAVEBANK_ENTRY_ADPCM, MAKEBOOL(nAdpcm));

  00282	33 c9		 xor	 ecx, ecx
  00284	83 7d ec 00	 cmp	 DWORD PTR _nAdpcm$[ebp], 0
  00288	0f 95 c1	 setne	 cl
  0028b	51		 push	 ecx
  0028c	68 49 9c 00 00	 push	 40009			; 00009c49H
  00291	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00297	83 c1 10	 add	 ecx, 16			; 00000010H
  0029a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  002a0	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  002a3	ff 90 b4 00 00
	00		 call	 DWORD PTR [eax+180]

; 2362 :     }
; 2363 :     else

  002a9	eb 1f		 jmp	 SHORT $L53691
$L53690:

; 2364 :     {
; 2365 :         g_pApplication->m_MainFrame.EnableCommand(ID_WAVEBANK_ENTRY_ADPCM, FALSE);

  002ab	6a 00		 push	 0
  002ad	68 49 9c 00 00	 push	 40009			; 00009c49H
  002b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  002b8	83 c1 10	 add	 ecx, 16			; 00000010H
  002bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  002c1	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  002c4	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]
$L53691:

; 2366 :     }
; 2367 :             
; 2368 :     if(nValid8bit)

  002ca	83 7d dc 00	 cmp	 DWORD PTR _nValid8bit$[ebp], 0
  002ce	74 48		 je	 SHORT $L53692

; 2369 :     {
; 2370 :         g_pApplication->m_MainFrame.EnableCommand(ID_WAVEBANK_ENTRY_8BIT, TRUE);

  002d0	6a 01		 push	 1
  002d2	68 4a 9c 00 00	 push	 40010			; 00009c4aH
  002d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  002dd	83 c1 10	 add	 ecx, 16			; 00000010H
  002e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  002e6	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  002e9	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 2371 :         g_pApplication->m_MainFrame.CheckCommand(ID_WAVEBANK_ENTRY_8BIT, MAKEBOOL(n8bit));

  002ef	33 c9		 xor	 ecx, ecx
  002f1	83 7d fc 00	 cmp	 DWORD PTR _n8bit$[ebp], 0
  002f5	0f 95 c1	 setne	 cl
  002f8	51		 push	 ecx
  002f9	68 4a 9c 00 00	 push	 40010			; 00009c4aH
  002fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00304	83 c1 10	 add	 ecx, 16			; 00000010H
  00307	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0030d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00310	ff 90 b4 00 00
	00		 call	 DWORD PTR [eax+180]

; 2372 :     }
; 2373 :     else

  00316	eb 1f		 jmp	 SHORT $L53693
$L53692:

; 2374 :     {
; 2375 :         g_pApplication->m_MainFrame.EnableCommand(ID_WAVEBANK_ENTRY_8BIT, FALSE);

  00318	6a 00		 push	 0
  0031a	68 4a 9c 00 00	 push	 40010			; 00009c4aH
  0031f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00325	83 c1 10	 add	 ecx, 16			; 00000010H
  00328	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0032e	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00331	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]
$L53693:
$L53662:

; 2376 :     }
; 2377 : }

  00337	8b e5		 mov	 esp, ebp
  00339	5d		 pop	 ebp
  0033a	c3		 ret	 0
?UpdateCommandState@CWaveBankWindow@@UAEXXZ ENDP	; CWaveBankWindow::UpdateCommandState
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EnableCommandUpdate@CWaveBankWindow@@UAEHH@Z
_TEXT	SEGMENT
_fEnable$ = 8
_this$ = -8
_fPrevious$ = -4
?EnableCommandUpdate@CWaveBankWindow@@UAEHH@Z PROC NEAR	; CWaveBankWindow::EnableCommandUpdate, COMDAT
; _this$ = ecx

; 2403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2404 :     const BOOL              fPrevious   = m_fUpdateCommands;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 88 30 02 00
	00		 mov	 ecx, DWORD PTR [eax+560]
  00012	89 4d fc	 mov	 DWORD PTR _fPrevious$[ebp], ecx

; 2405 : 
; 2406 :     if(fPrevious != fEnable)

  00015	8b 55 fc	 mov	 edx, DWORD PTR _fPrevious$[ebp]
  00018	3b 55 08	 cmp	 edx, DWORD PTR _fEnable$[ebp]
  0001b	74 20		 je	 SHORT $L53699

; 2407 :     {
; 2408 :         if(m_fUpdateCommands = fEnable)

  0001d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 08	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  00023	89 88 30 02 00
	00		 mov	 DWORD PTR [eax+560], ecx
  00029	83 7d 08 00	 cmp	 DWORD PTR _fEnable$[ebp], 0
  0002d	74 0e		 je	 SHORT $L53700

; 2409 :         {
; 2410 :             UpdateCommandState();

  0002f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 02		 mov	 eax, DWORD PTR [edx]
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	ff 90 e8 00 00
	00		 call	 DWORD PTR [eax+232]
$L53700:
$L53699:

; 2411 :         }
; 2412 :     }
; 2413 : 
; 2414 :     return fPrevious;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _fPrevious$[ebp]

; 2415 : }

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?EnableCommandUpdate@CWaveBankWindow@@UAEHH@Z ENDP	; CWaveBankWindow::EnableCommandUpdate
_TEXT	ENDS
PUBLIC	??_C@_05EAGJ@TCHAR?$AA@				; `string'
PUBLIC	??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_07FEMJ@XACTGUI?$AA@			; `string'
PUBLIC	??_C@_0BP@MFED@CWaveBankWindow?3?3OnCmdAddEntry?$AA@ ; `string'
PUBLIC	??_C@_0DA@OEKO@None?5of?5the?5entries?5were?5added?5t@ ; `string'
PUBLIC	??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@ ; `string'
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
EXTRN	_strlen:NEAR
EXTRN	__makepath:NEAR
;	COMDAT ??_C@_05EAGJ@TCHAR?$AA@
CONST	SEGMENT
??_C@_05EAGJ@TCHAR?$AA@ DB 'TCHAR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\main\wbndgui.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FEMJ@XACTGUI?$AA@
CONST	SEGMENT
??_C@_07FEMJ@XACTGUI?$AA@ DB 'XACTGUI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MFED@CWaveBankWindow?3?3OnCmdAddEntry?$AA@
CONST	SEGMENT
??_C@_0BP@MFED@CWaveBankWindow?3?3OnCmdAddEntry?$AA@ DB 'CWaveBankWindow:'
	DB	':OnCmdAddEntry', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OEKO@None?5of?5the?5entries?5were?5added?5t@
CONST	SEGMENT
??_C@_0DA@OEKO@None?5of?5the?5entries?5were?5added?5t@ DB 'None of the en'
	DB	'tries were added to the wave bank', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@
CONST	SEGMENT
??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@ DB 'Not all entrie'
	DB	's were added to the wave bank', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnCmdAddEntry@CWaveBankWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -300
_pszPath$ = -12
_pEntry$ = -16
_pszFile$ = -4
_szFile$ = -296
_fSuccess$ = -32
_fAddedAny$ = -8
_fAddedAll$ = -24
_fRedraw$ = -28
_hr$ = -20
?OnCmdAddEntry@CWaveBankWindow@@UAEXXZ PROC NEAR	; CWaveBankWindow::OnCmdAddEntry, COMDAT
; _this$ = ecx

; 2441 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	89 8d d4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2442 :     static const DWORD      dwMaxEntries    = 128;
; 2443 :     LPTSTR                  pszPath         = NULL;

  0000f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pszPath$[ebp], 0

; 2444 :     CWaveBankEntry *        pEntry;
; 2445 :     LPCTSTR                 pszFile;
; 2446 :     TCHAR                   szFile[MAX_PATH];
; 2447 :     BOOL                    fSuccess;
; 2448 :     BOOL                    fAddedAny;
; 2449 :     BOOL                    fAddedAll;
; 2450 :     BOOL                    fRedraw;
; 2451 :     HRESULT                 hr;
; 2452 : 
; 2453 :     fSuccess = MAKEBOOL(pszPath = MEMALLOC(TCHAR, MAX_PATH * dwMaxEntries));

  00016	6a 01		 push	 1
  00018	68 00 82 00 00	 push	 33280			; 00008200H
  0001d	68 44 53 64 61	 push	 1633964868		; 61645344H
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05EAGJ@TCHAR?$AA@ ; `string'
  00027	68 95 09 00 00	 push	 2453			; 00000995H
  0002c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00031	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc
  00036	89 45 f4	 mov	 DWORD PTR _pszPath$[ebp], eax
  00039	33 c0		 xor	 eax, eax
  0003b	83 7d f4 00	 cmp	 DWORD PTR _pszPath$[ebp], 0
  0003f	0f 95 c0	 setne	 al
  00042	89 45 e0	 mov	 DWORD PTR _fSuccess$[ebp], eax

; 2454 : 
; 2455 :     //
; 2456 :     // Get the file path(s)
; 2457 :     //
; 2458 : 
; 2459 :     if(fSuccess)

  00045	83 7d e0 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00049	74 27		 je	 SHORT $L53720

; 2460 :     {
; 2461 :         fSuccess = CGuiWaveBankProject::BrowseEntryFile(g_pApplication->m_MainFrame, pszPath, MAX_PATH * dwMaxEntries);

  0004b	68 00 82 00 00	 push	 33280			; 00008200H
  00050	8b 4d f4	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  00053	51		 push	 ecx
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  0005a	83 c1 10	 add	 ecx, 16			; 00000010H
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pApplication@@3PAVCApplication@@A ; g_pApplication
  00063	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00066	ff 50 58	 call	 DWORD PTR [eax+88]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?BrowseEntryFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseEntryFile
  0006f	89 45 e0	 mov	 DWORD PTR _fSuccess$[ebp], eax
$L53720:

; 2462 :     }
; 2463 : 
; 2464 :     if(fSuccess)

  00072	83 7d e0 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00076	0f 84 07 02 00
	00		 je	 $L53721

; 2465 :     {
; 2466 :         //
; 2467 :         // Turn off redraws
; 2468 :         //
; 2469 : 
; 2470 :         fRedraw = m_ListView.SetRedraw(FALSE);

  0007c	6a 00		 push	 0
  0007e	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00084	83 c1 34	 add	 ecx, 52			; 00000034H
  00087	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0008d	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00090	ff 50 14	 call	 DWORD PTR [eax+20]
  00093	89 45 e4	 mov	 DWORD PTR _fRedraw$[ebp], eax

; 2471 : 
; 2472 :         //
; 2473 :         // If more than one file was specified, the path will be first, followed
; 2474 :         // by each file name in a null-terminated list
; 2475 :         //
; 2476 : 
; 2477 :         pszFile = pszPath + _tcslen(pszPath) + 1;

  00096	8b 4d f4	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  00099	51		 push	 ecx
  0009a	e8 00 00 00 00	 call	 _strlen
  0009f	83 c4 04	 add	 esp, 4
  000a2	8b 55 f4	 mov	 edx, DWORD PTR _pszPath$[ebp]
  000a5	8d 44 02 01	 lea	 eax, DWORD PTR [edx+eax+1]
  000a9	89 45 fc	 mov	 DWORD PTR _pszFile$[ebp], eax

; 2478 : 
; 2479 :         if(*pszFile)

  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  000af	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  000b2	90		 npad	 1
  000b3	85 d2		 test	 edx, edx
  000b5	0f 84 3f 01 00
	00		 je	 $L53722

; 2480 :         {
; 2481 :             fAddedAny = FALSE;

  000bb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _fAddedAny$[ebp], 0

; 2482 :             fAddedAll = TRUE;

  000c2	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _fAddedAll$[ebp], 1
$L53724:

; 2483 :         
; 2484 :             while(*pszFile)

  000c9	8b 45 fc	 mov	 eax, DWORD PTR _pszFile$[ebp]
  000cc	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000cf	85 c9		 test	 ecx, ecx
  000d1	0f 84 b2 00 00
	00		 je	 $L53725

; 2485 :             {
; 2486 :                 _makepath(szFile, NULL, pszPath, pszFile, NULL);

  000d7	6a 00		 push	 0
  000d9	8b 55 fc	 mov	 edx, DWORD PTR _pszFile$[ebp]
  000dc	52		 push	 edx
  000dd	8b 45 f4	 mov	 eax, DWORD PTR _pszPath$[ebp]
  000e0	50		 push	 eax
  000e1	6a 00		 push	 0
  000e3	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _szFile$[ebp]
  000e9	51		 push	 ecx
  000ea	e8 00 00 00 00	 call	 __makepath
  000ef	83 c4 14	 add	 esp, 20			; 00000014H

; 2487 : 
; 2488 :                 hr = m_pBank->AddEntry(NULL, szFile, 0, &pEntry);

  000f2	8d 55 f0	 lea	 edx, DWORD PTR _pEntry$[ebp]
  000f5	52		 push	 edx
  000f6	6a 00		 push	 0
  000f8	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szFile$[ebp]
  000fe	50		 push	 eax
  000ff	6a 00		 push	 0
  00101	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00107	8b 91 2c 02 00
	00		 mov	 edx, DWORD PTR [ecx+556]
  0010d	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 88 2c 02 00
	00		 mov	 ecx, DWORD PTR [eax+556]
  00119	8b 12		 mov	 edx, DWORD PTR [edx]
  0011b	ff 52 14	 call	 DWORD PTR [edx+20]
  0011e	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 2489 : 
; 2490 :                 if(SUCCEEDED(hr))

  00121	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00125	7c 10		 jl	 SHORT $L53727

; 2491 :                 {
; 2492 :                     hr = pEntry->Load();

  00127	6a 00		 push	 0
  00129	8b 45 f0	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0012c	8b 10		 mov	 edx, DWORD PTR [eax]
  0012e	8b 4d f0	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00131	ff 52 08	 call	 DWORD PTR [edx+8]
  00134	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
$L53727:

; 2493 :                 }
; 2494 : 
; 2495 :                 if(SUCCEEDED(hr))

  00137	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0013b	7c 09		 jl	 SHORT $L53729

; 2496 :                 {
; 2497 :                     fAddedAny = TRUE;

  0013d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _fAddedAny$[ebp], 1

; 2498 :                 }
; 2499 :                 else

  00144	eb 28		 jmp	 SHORT $L53730
$L53729:

; 2500 :                 {
; 2501 :                     m_pBank->RemoveEntry(pEntry);

  00146	8b 45 f0	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00149	50		 push	 eax
  0014a	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00150	8b 91 2c 02 00
	00		 mov	 edx, DWORD PTR [ecx+556]
  00156	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0015c	8b 88 2c 02 00
	00		 mov	 ecx, DWORD PTR [eax+556]
  00162	8b 12		 mov	 edx, DWORD PTR [edx]
  00164	ff 52 18	 call	 DWORD PTR [edx+24]

; 2502 :                     fAddedAll = FALSE;

  00167	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _fAddedAll$[ebp], 0
$L53730:

; 2503 :                 }
; 2504 : 
; 2505 :                 pszFile += _tcslen(pszFile) + 1;

  0016e	8b 45 fc	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 _strlen
  00177	83 c4 04	 add	 esp, 4
  0017a	8b 4d fc	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  0017d	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00181	89 55 fc	 mov	 DWORD PTR _pszFile$[ebp], edx

; 2506 :             }

  00184	e9 40 ff ff ff	 jmp	 $L53724
$L53725:

; 2507 : 
; 2508 :             if(!fAddedAny)

  00189	83 7d f8 00	 cmp	 DWORD PTR _fAddedAny$[ebp], 0
  0018d	75 36		 jne	 SHORT $L53731

; 2509 :             {
; 2510 :                 DPF_WARNING("None of the entries were added to the wave bank");

  0018f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FEMJ@XACTGUI?$AA@ ; `string'
  00194	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@MFED@CWaveBankWindow?3?3OnCmdAddEntry?$AA@ ; `string'
  00199	68 ce 09 00 00	 push	 2510			; 000009ceH
  0019e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  001a3	6a 03		 push	 3
  001a5	6a 09		 push	 9
  001a7	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  001ac	83 c4 18	 add	 esp, 24			; 00000018H
  001af	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DA@OEKO@None?5of?5the?5entries?5were?5added?5t@ ; `string'
  001b4	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  001b9	83 c4 04	 add	 esp, 4

; 2511 :                 fSuccess = FALSE;

  001bc	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _fSuccess$[ebp], 0

; 2512 :             }
; 2513 :             else if(!fAddedAll)

  001c3	eb 33		 jmp	 SHORT $L53735
$L53731:
  001c5	83 7d e8 00	 cmp	 DWORD PTR _fAddedAll$[ebp], 0
  001c9	75 2d		 jne	 SHORT $L53736

; 2514 :             {
; 2515 :                 DPF_WARNING("Not all entries were added to the wave bank");

  001cb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FEMJ@XACTGUI?$AA@ ; `string'
  001d0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@MFED@CWaveBankWindow?3?3OnCmdAddEntry?$AA@ ; `string'
  001d5	68 d3 09 00 00	 push	 2515			; 000009d3H
  001da	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  001df	6a 03		 push	 3
  001e1	6a 09		 push	 9
  001e3	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  001e8	83 c4 18	 add	 esp, 24			; 00000018H
  001eb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@ ; `string'
  001f0	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  001f5	83 c4 04	 add	 esp, 4
$L53736:
$L53735:

; 2516 :             }
; 2517 :         }
; 2518 :         else

  001f8	eb 70		 jmp	 SHORT $L53738
$L53722:

; 2519 :         {
; 2520 :             hr = m_pBank->AddEntry(NULL, pszPath, 0, &pEntry);

  001fa	8d 45 f0	 lea	 eax, DWORD PTR _pEntry$[ebp]
  001fd	50		 push	 eax
  001fe	6a 00		 push	 0
  00200	8b 4d f4	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  00203	51		 push	 ecx
  00204	6a 00		 push	 0
  00206	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0020c	8b 82 2c 02 00
	00		 mov	 eax, DWORD PTR [edx+556]
  00212	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00218	8b 89 2c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+556]
  0021e	8b 10		 mov	 edx, DWORD PTR [eax]
  00220	ff 52 14	 call	 DWORD PTR [edx+20]
  00223	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 2521 : 
; 2522 :             if(SUCCEEDED(hr))

  00226	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0022a	7c 10		 jl	 SHORT $L53740

; 2523 :             {
; 2524 :                 hr = pEntry->Load();

  0022c	6a 00		 push	 0
  0022e	8b 45 f0	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00231	8b 10		 mov	 edx, DWORD PTR [eax]
  00233	8b 4d f0	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00236	ff 52 08	 call	 DWORD PTR [edx+8]
  00239	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
$L53740:

; 2525 :             }
; 2526 : 
; 2527 :             if(FAILED(hr))

  0023c	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00240	7d 28		 jge	 SHORT $L53742

; 2528 :             {
; 2529 :                 m_pBank->RemoveEntry(pEntry);

  00242	8b 45 f0	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00245	50		 push	 eax
  00246	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0024c	8b 91 2c 02 00
	00		 mov	 edx, DWORD PTR [ecx+556]
  00252	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00258	8b 88 2c 02 00
	00		 mov	 ecx, DWORD PTR [eax+556]
  0025e	8b 12		 mov	 edx, DWORD PTR [edx]
  00260	ff 52 18	 call	 DWORD PTR [edx+24]

; 2530 :                 fSuccess = FALSE;

  00263	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _fSuccess$[ebp], 0
$L53742:
$L53738:

; 2531 :             }
; 2532 :         }
; 2533 : 
; 2534 :         //
; 2535 :         // Turn redraws back on
; 2536 :         //
; 2537 : 
; 2538 :         m_ListView.SetRedraw(fRedraw);

  0026a	8b 45 e4	 mov	 eax, DWORD PTR _fRedraw$[ebp]
  0026d	50		 push	 eax
  0026e	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00274	83 c1 34	 add	 ecx, 52			; 00000034H
  00277	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0027d	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00280	ff 50 14	 call	 DWORD PTR [eax+20]
$L53721:

; 2539 :     }
; 2540 : 
; 2541 :     //
; 2542 :     // Clean up
; 2543 :     //
; 2544 : 
; 2545 :     MEMFREE(pszPath);

  00283	83 7d f4 00	 cmp	 DWORD PTR _pszPath$[ebp], 0
  00287	74 10		 je	 SHORT $L53743
  00289	8b 4d f4	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  0028c	51		 push	 ecx
  0028d	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree
  00292	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pszPath$[ebp], 0
$L53743:

; 2546 : }

  00299	8b e5		 mov	 esp, ebp
  0029b	5d		 pop	 ebp
  0029c	c3		 ret	 0
?OnCmdAddEntry@CWaveBankWindow@@UAEXXZ ENDP		; CWaveBankWindow::OnCmdAddEntry
_TEXT	ENDS
PUBLIC	??_C@_0BN@GALH@CWaveBankWindow?3?3OnDropFiles?$AA@ ; `string'
PUBLIC	??_C@_0DG@GPDG@None?5of?5the?5dropped?5files?5were?5a@ ; `string'
PUBLIC	??_C@_0DJ@OLBJ@Not?5all?5of?5the?5dropped?5files?5wer@ ; `string'
EXTRN	__imp__DragQueryFileA@16:NEAR
;	COMDAT ??_C@_0BN@GALH@CWaveBankWindow?3?3OnDropFiles?$AA@
CONST	SEGMENT
??_C@_0BN@GALH@CWaveBankWindow?3?3OnDropFiles?$AA@ DB 'CWaveBankWindow::O'
	DB	'nDropFiles', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@GPDG@None?5of?5the?5dropped?5files?5were?5a@
CONST	SEGMENT
??_C@_0DG@GPDG@None?5of?5the?5dropped?5files?5were?5a@ DB 'None of the dr'
	DB	'opped files were added to the wave bank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OLBJ@Not?5all?5of?5the?5dropped?5files?5wer@
CONST	SEGMENT
??_C@_0DJ@OLBJ@Not?5all?5of?5the?5dropped?5files?5wer@ DB 'Not all of the'
	DB	' dropped files were added to the wave bank', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnDropFiles@CWaveBankWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT
_hDrop$ = 8
_plResult$ = 12
_this$ = -300
_fAddedAny$ = -4
_fAddedAll$ = -24
_pEntry$ = -8
_nCount$ = -20
_szFile$ = -296
_fRedraw$ = -28
_hr$ = -12
_i$ = -16
?OnDropFiles@CWaveBankWindow@@UAEHPAUHDROP__@@PAJ@Z PROC NEAR ; CWaveBankWindow::OnDropFiles, COMDAT
; _this$ = ecx

; 2574 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	89 8d d4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2575 :     BOOL                    fAddedAny           = FALSE;

  0000f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _fAddedAny$[ebp], 0

; 2576 :     BOOL                    fAddedAll           = TRUE;

  00016	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _fAddedAll$[ebp], 1

; 2577 :     CWaveBankEntry *        pEntry;
; 2578 :     UINT                    nCount;
; 2579 :     TCHAR                   szFile[MAX_PATH];
; 2580 :     BOOL                    fSuccess;
; 2581 :     BOOL                    fRedraw;
; 2582 :     HRESULT                 hr;
; 2583 :     UINT                    i;
; 2584 : 
; 2585 :     if(CWorkspaceChild::OnDropFiles(hDrop, plResult))

  0001d	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  00020	50		 push	 eax
  00021	8b 4d 08	 mov	 ecx, DWORD PTR _hDrop$[ebp]
  00024	51		 push	 ecx
  00025	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z ; CWindow::OnDropFiles
  00030	85 c0		 test	 eax, eax
  00032	74 0a		 je	 SHORT $L53758

; 2586 :     {
; 2587 :         return TRUE;

  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	e9 7e 01 00 00	 jmp	 $L53748
$L53758:

; 2588 :     }
; 2589 : 
; 2590 :     //
; 2591 :     // Turn off redraws
; 2592 :     //
; 2593 : 
; 2594 :     fRedraw = m_ListView.SetRedraw(FALSE);

  0003e	6a 00		 push	 0
  00040	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 34	 add	 ecx, 52			; 00000034H
  00049	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0004f	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00052	ff 50 14	 call	 DWORD PTR [eax+20]
  00055	89 45 e4	 mov	 DWORD PTR _fRedraw$[ebp], eax

; 2595 : 
; 2596 :     //
; 2597 :     // Enumerate files dropped
; 2598 :     //
; 2599 : 
; 2600 :     nCount = DragQueryFile(hDrop, ~0UL, NULL, 0);

  00058	6a 00		 push	 0
  0005a	6a 00		 push	 0
  0005c	6a ff		 push	 -1
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _hDrop$[ebp]
  00061	51		 push	 ecx
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragQueryFileA@16
  00068	89 45 ec	 mov	 DWORD PTR _nCount$[ebp], eax

; 2601 : 
; 2602 :     for(i = 0; i < nCount; i++)

  0006b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00072	eb 09		 jmp	 SHORT $L53759
$L53760:
  00074	8b 55 f0	 mov	 edx, DWORD PTR _i$[ebp]
  00077	83 c2 01	 add	 edx, 1
  0007a	89 55 f0	 mov	 DWORD PTR _i$[ebp], edx
$L53759:
  0007d	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  00080	3b 45 ec	 cmp	 eax, DWORD PTR _nCount$[ebp]
  00083	0f 83 b0 00 00
	00		 jae	 $L53761

; 2603 :     {
; 2604 :         if(!DragQueryFile(hDrop, i, szFile, NUMELMS(szFile)))

  00089	68 04 01 00 00	 push	 260			; 00000104H
  0008e	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _szFile$[ebp]
  00094	51		 push	 ecx
  00095	8b 55 f0	 mov	 edx, DWORD PTR _i$[ebp]
  00098	52		 push	 edx
  00099	8b 45 08	 mov	 eax, DWORD PTR _hDrop$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragQueryFileA@16
  000a3	85 c0		 test	 eax, eax
  000a5	75 09		 jne	 SHORT $L53762

; 2605 :         {
; 2606 :             fAddedAll = FALSE;

  000a7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _fAddedAll$[ebp], 0

; 2607 :             continue;

  000ae	eb c4		 jmp	 SHORT $L53760
$L53762:

; 2608 :         }
; 2609 :         
; 2610 :         hr = m_pBank->AddEntry(NULL, szFile, 0, &pEntry);

  000b0	8d 4d f8	 lea	 ecx, DWORD PTR _pEntry$[ebp]
  000b3	51		 push	 ecx
  000b4	6a 00		 push	 0
  000b6	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR _szFile$[ebp]
  000bc	52		 push	 edx
  000bd	6a 00		 push	 0
  000bf	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 88 2c 02 00
	00		 mov	 ecx, DWORD PTR [eax+556]
  000cb	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000d1	8b 82 2c 02 00
	00		 mov	 eax, DWORD PTR [edx+556]
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	8b c8		 mov	 ecx, eax
  000db	ff 52 14	 call	 DWORD PTR [edx+20]
  000de	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 2611 : 
; 2612 :         if(SUCCEEDED(hr))

  000e1	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000e5	7c 37		 jl	 SHORT $L53764

; 2613 :         {
; 2614 :             if(FAILED(hr = pEntry->Load()))

  000e7	6a 00		 push	 0
  000e9	8b 45 f8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000ec	8b 10		 mov	 edx, DWORD PTR [eax]
  000ee	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  000f1	ff 52 08	 call	 DWORD PTR [edx+8]
  000f4	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000f7	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000fb	7d 21		 jge	 SHORT $L53766

; 2615 :             {
; 2616 :                 m_pBank->RemoveEntry(pEntry);

  000fd	8b 45 f8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00100	50		 push	 eax
  00101	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00107	8b 91 2c 02 00
	00		 mov	 edx, DWORD PTR [ecx+556]
  0010d	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 88 2c 02 00
	00		 mov	 ecx, DWORD PTR [eax+556]
  00119	8b 12		 mov	 edx, DWORD PTR [edx]
  0011b	ff 52 18	 call	 DWORD PTR [edx+24]
$L53766:
$L53764:

; 2617 :             }
; 2618 :         }
; 2619 : 
; 2620 :         if(SUCCEEDED(hr))

  0011e	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00122	7c 09		 jl	 SHORT $L53768

; 2621 :         {
; 2622 :             fAddedAny = TRUE;

  00124	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _fAddedAny$[ebp], 1

; 2623 :         }
; 2624 :         else

  0012b	eb 07		 jmp	 SHORT $L53769
$L53768:

; 2625 :         {
; 2626 :             fAddedAll = FALSE;

  0012d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _fAddedAll$[ebp], 0
$L53769:

; 2627 :         }
; 2628 :     }

  00134	e9 3b ff ff ff	 jmp	 $L53760
$L53761:

; 2629 : 
; 2630 :     if(!fAddedAny)

  00139	83 7d fc 00	 cmp	 DWORD PTR _fAddedAny$[ebp], 0
  0013d	75 2f		 jne	 SHORT $L53770

; 2631 :     {
; 2632 :         DPF_WARNING("None of the dropped files were added to the wave bank");

  0013f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FEMJ@XACTGUI?$AA@ ; `string'
  00144	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@GALH@CWaveBankWindow?3?3OnDropFiles?$AA@ ; `string'
  00149	68 48 0a 00 00	 push	 2632			; 00000a48H
  0014e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00153	6a 03		 push	 3
  00155	6a 09		 push	 9
  00157	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0015c	83 c4 18	 add	 esp, 24			; 00000018H
  0015f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DG@GPDG@None?5of?5the?5dropped?5files?5were?5a@ ; `string'
  00164	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00169	83 c4 04	 add	 esp, 4

; 2633 :     }
; 2634 :     else if(!fAddedAll)

  0016c	eb 33		 jmp	 SHORT $L53773
$L53770:
  0016e	83 7d e8 00	 cmp	 DWORD PTR _fAddedAll$[ebp], 0
  00172	75 2d		 jne	 SHORT $L53774

; 2635 :     {
; 2636 :         DPF_WARNING("Not all of the dropped files were added to the wave bank");

  00174	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FEMJ@XACTGUI?$AA@ ; `string'
  00179	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@GALH@CWaveBankWindow?3?3OnDropFiles?$AA@ ; `string'
  0017e	68 4c 0a 00 00	 push	 2636			; 00000a4cH
  00183	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@KPOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00188	6a 03		 push	 3
  0018a	6a 09		 push	 9
  0018c	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00191	83 c4 18	 add	 esp, 24			; 00000018H
  00194	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@OLBJ@Not?5all?5of?5the?5dropped?5files?5wer@ ; `string'
  00199	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0019e	83 c4 04	 add	 esp, 4
$L53774:
$L53773:

; 2637 :     }
; 2638 : 
; 2639 :     //
; 2640 :     // Turn redraws back on
; 2641 :     //
; 2642 : 
; 2643 :     m_ListView.SetRedraw(fRedraw);

  001a1	8b 45 e4	 mov	 eax, DWORD PTR _fRedraw$[ebp]
  001a4	50		 push	 eax
  001a5	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001ab	83 c1 34	 add	 ecx, 52			; 00000034H
  001ae	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  001b4	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  001b7	ff 50 14	 call	 DWORD PTR [eax+20]

; 2644 : 
; 2645 :     return FALSE;

  001ba	33 c0		 xor	 eax, eax
$L53748:

; 2646 : }

  001bc	8b e5		 mov	 esp, ebp
  001be	5d		 pop	 ebp
  001bf	c2 08 00	 ret	 8
?OnDropFiles@CWaveBankWindow@@UAEHPAUHDROP__@@PAJ@Z ENDP ; CWaveBankWindow::OnDropFiles
_TEXT	ENDS
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
PUBLIC	?OnSize@CWindow@@UAEHIIIPAJ@Z			; CWindow::OnSize
PUBLIC	?AddRef@CDialog@@UAGKXZ				; CDialog::AddRef
PUBLIC	?Release@CDialog@@UAGKXZ			; CDialog::Release
PUBLIC	?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z	; CDialog::DefWindowProcA
PUBLIC	?OnCreate@CWaveBankPropertiesDialog@@MAEHPAXPAJ@Z ; CWaveBankPropertiesDialog::OnCreate
PUBLIC	?OnCommand@CWaveBankPropertiesDialog@@MAEHIIPAUHWND__@@PAJ@Z ; CWaveBankPropertiesDialog::OnCommand
PUBLIC	?OnCmdOK@CWaveBankPropertiesDialog@@MAEXXZ	; CWaveBankPropertiesDialog::OnCmdOK
PUBLIC	?OnCmdBrowseBankPath@CWaveBankPropertiesDialog@@MAEXXZ ; CWaveBankPropertiesDialog::OnCmdBrowseBankPath
PUBLIC	?OnCmdBrowseHeaderPath@CWaveBankPropertiesDialog@@MAEXXZ ; CWaveBankPropertiesDialog::OnCmdBrowseHeaderPath
PUBLIC	??_7CWaveBankPropertiesDialog@@6B@		; CWaveBankPropertiesDialog::`vftable'
PUBLIC	??_GCWaveBankPropertiesDialog@@UAEPAXI@Z	; CWaveBankPropertiesDialog::`scalar deleting destructor'
PUBLIC	??_ECWaveBankPropertiesDialog@@UAEPAXI@Z	; CWaveBankPropertiesDialog::`vector deleting destructor'
EXTRN	??0CDialog@@QAE@I@Z:NEAR			; CDialog::CDialog
EXTRN	?Create@CDialog@@UAEHPAVCWindow@@PAX@Z:NEAR	; CDialog::Create
EXTRN	?HandleMessage@CDialog@@UAEHIIJPAJ@Z:NEAR	; CDialog::HandleMessage
EXTRN	?OnClose@CDialog@@UAEHPAJ@Z:NEAR		; CDialog::OnClose
EXTRN	?OnCmdCancel@CDialog@@UAEXXZ:NEAR		; CDialog::OnCmdCancel
;	COMDAT ??_7CWaveBankPropertiesDialog@@6B@
CONST	SEGMENT
??_7CWaveBankPropertiesDialog@@6B@ DD FLAT:??_ECWaveBankPropertiesDialog@@UAEPAXI@Z ; CWaveBankPropertiesDialog::`vftable'
	DD	FLAT:?AddRef@CDialog@@UAGKXZ
	DD	FLAT:?Release@CDialog@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWaveBankPropertiesDialog@@MAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWaveBankPropertiesDialog@@MAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CDialog@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?OnCmdOK@CWaveBankPropertiesDialog@@MAEXXZ
	DD	FLAT:?OnCmdCancel@CDialog@@UAEXXZ
	DD	FLAT:?OnCmdBrowseBankPath@CWaveBankPropertiesDialog@@MAEXXZ
	DD	FLAT:?OnCmdBrowseHeaderPath@CWaveBankPropertiesDialog@@MAEXXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankPropertiesDialog@@QAE@PAVCGuiWaveBank@@@Z
_TEXT	SEGMENT
_pBank$ = 8
_this$ = -4
??0CWaveBankPropertiesDialog@@QAE@PAVCGuiWaveBank@@@Z PROC NEAR ; CWaveBankPropertiesDialog::CWaveBankPropertiesDialog, COMDAT
; _this$ = ecx

; 2672 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 7f		 push	 127			; 0000007fH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CDialog@@QAE@I@Z	; CDialog::CDialog
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankPropertiesDialog@@6B@ ; CWaveBankPropertiesDialog::`vftable'

; 2673 :     m_pBank = pBank;

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR _pBank$[ebp]
  00020	89 51 34	 mov	 DWORD PTR [ecx+52], edx

; 2674 : }

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??0CWaveBankPropertiesDialog@@QAE@PAVCGuiWaveBank@@@Z ENDP ; CWaveBankPropertiesDialog::CWaveBankPropertiesDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 252  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHIIIPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 256  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 257  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHIIIPAJ@Z ENDP			; CWindow::OnSize
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.h
_TEXT	ENDS
;	COMDAT ?AddRef@CDialog@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CDialog@@UAGKXZ PROC NEAR			; CDialog::AddRef, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 70   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CDialog@@UAGKXZ ENDP				; CDialog::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CDialog@@UAGKXZ
_TEXT	SEGMENT
?Release@CDialog@@UAGKXZ PROC NEAR			; CDialog::Release, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 74   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 75   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CDialog@@UAGKXZ ENDP				; CDialog::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_this$ = -4
?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z PROC NEAR	; CDialog::DefWindowProcA, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 79   :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 80   : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z ENDP	; CDialog::DefWindowProcA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCWaveBankPropertiesDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWaveBankPropertiesDialog@@UAEPAXI@Z PROC NEAR	; CWaveBankPropertiesDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWaveBankPropertiesDialog@@UAE@XZ ; CWaveBankPropertiesDialog::~CWaveBankPropertiesDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L53783
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L53783:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWaveBankPropertiesDialog@@UAEPAXI@Z ENDP		; CWaveBankPropertiesDialog::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
;	COMDAT ??1CWaveBankPropertiesDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWaveBankPropertiesDialog@@UAE@XZ PROC NEAR		; CWaveBankPropertiesDialog::~CWaveBankPropertiesDialog, COMDAT
; _this$ = ecx

; 2699 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankPropertiesDialog@@6B@ ; CWaveBankPropertiesDialog::`vftable'

; 2700 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CWaveBankPropertiesDialog@@UAE@XZ ENDP		; CWaveBankPropertiesDialog::~CWaveBankPropertiesDialog
_TEXT	ENDS
PUBLIC	?OnCreate@CWindow@@UAEHPAXPAJ@Z			; CWindow::OnCreate
EXTRN	__imp__CheckRadioButton@16:NEAR
EXTRN	?m_dwMinAlignment@CWaveBank@@2KB:DWORD		; CWaveBank::m_dwMinAlignment
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CWaveBankPropertiesDialog@@MAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -532
_szAlignment$ = -528
_szSize$ = -264
_dwAlignment$ = -4
_i$ = -268
?OnCreate@CWaveBankPropertiesDialog@@MAEHPAXPAJ@Z PROC NEAR ; CWaveBankPropertiesDialog::OnCreate, COMDAT
; _this$ = ecx

; 2728 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 02 00
	00		 sub	 esp, 532		; 00000214H
  00009	89 8d ec fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2729 :     static const UINT       nDefaultAlignmentCount  = 15;
; 2730 :     TCHAR                   szAlignment[0x100];
; 2731 :     TCHAR                   szSize[0x100];
; 2732 :     DWORD                   dwAlignment;
; 2733 :     UINT                    i;
; 2734 :     
; 2735 :     if(CDialog::OnCreate(pvContext, plResult))

  0000f	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00016	51		 push	 ecx
  00017	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?OnCreate@CWindow@@UAEHPAXPAJ@Z ; CWindow::OnCreate
  00022	85 c0		 test	 eax, eax
  00024	74 0a		 je	 SHORT $L53799

; 2736 :     {
; 2737 :         return TRUE;

  00026	b8 01 00 00 00	 mov	 eax, 1
  0002b	e9 b4 01 00 00	 jmp	 $L53792
$L53799:

; 2738 :     }
; 2739 : 
; 2740 :     //
; 2741 :     // Make sure all entries are loaded
; 2742 :     //
; 2743 : 
; 2744 :     if(FAILED(m_pBank->LoadEntries()))

  00030	6a 00		 push	 0
  00032	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00038	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0003b	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff 52 1c	 call	 DWORD PTR [edx+28]
  00049	85 c0		 test	 eax, eax
  0004b	7d 14		 jge	 SHORT $L53801

; 2745 :     {
; 2746 :         OnCmdCancel();

  0004d	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 10		 mov	 edx, DWORD PTR [eax]
  00055	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]
$L53801:

; 2747 :     }
; 2748 : 
; 2749 :     //
; 2750 :     // Populate controls
; 2751 :     //
; 2752 : 
; 2753 :     for(i = 0, dwAlignment = m_pBank->m_dwMinAlignment; i < nDefaultAlignmentCount; i++, dwAlignment *= 2)

  00061	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$[ebp], 0
  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_dwMinAlignment@CWaveBank@@2KB ; CWaveBank::m_dwMinAlignment
  00070	89 45 fc	 mov	 DWORD PTR _dwAlignment$[ebp], eax
  00073	eb 17		 jmp	 SHORT $L53802
$L53803:
  00075	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _i$[ebp]
  0007b	83 c1 01	 add	 ecx, 1
  0007e	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _i$[ebp], ecx
  00084	8b 55 fc	 mov	 edx, DWORD PTR _dwAlignment$[ebp]
  00087	d1 e2		 shl	 edx, 1
  00089	89 55 fc	 mov	 DWORD PTR _dwAlignment$[ebp], edx
$L53802:
  0008c	83 bd f4 fe ff
	ff 0f		 cmp	 DWORD PTR _i$[ebp], 15	; 0000000fH
  00093	73 3a		 jae	 SHORT $L53804

; 2754 :     {
; 2755 :         FormatNumber(dwAlignment, FALSE, FALSE, szAlignment);

  00095	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _szAlignment$[ebp]
  0009b	50		 push	 eax
  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _dwAlignment$[ebp]
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 _FormatNumber@16

; 2756 :         
; 2757 :         SendDlgItemMessage(IDC_WAVEBANK_ALIGNMENT, CB_INSERTSTRING, -1, (LPARAM)szAlignment);

  000a9	8d 95 f0 fd ff
	ff		 lea	 edx, DWORD PTR _szAlignment$[ebp]
  000af	52		 push	 edx
  000b0	6a ff		 push	 -1
  000b2	68 4a 01 00 00	 push	 330			; 0000014aH
  000b7	68 ff 03 00 00	 push	 1023			; 000003ffH
  000bc	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	ff 52 20	 call	 DWORD PTR [edx+32]

; 2758 :     }

  000cd	eb a6		 jmp	 SHORT $L53803
$L53804:

; 2759 : 
; 2760 :     FormatNumber(m_pBank->GetBankDataSize(), FALSE, TRUE, szSize);

  000cf	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szSize$[ebp]
  000d5	50		 push	 eax
  000d6	6a 01		 push	 1
  000d8	6a 00		 push	 0
  000da	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  000e3	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  000ec	8b 12		 mov	 edx, DWORD PTR [edx]
  000ee	ff 52 10	 call	 DWORD PTR [edx+16]
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 _FormatNumber@16

; 2761 : 
; 2762 :     SetDlgItemText(IDC_WAVEBANK_NAME, m_pBank->m_szBankName);

  000f7	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00100	83 c1 10	 add	 ecx, 16			; 00000010H
  00103	51		 push	 ecx
  00104	68 f4 03 00 00	 push	 1012			; 000003f4H
  00109	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0010f	8b 02		 mov	 eax, DWORD PTR [edx]
  00111	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00117	ff 50 2c	 call	 DWORD PTR [eax+44]

; 2763 :     SetDlgItemText(IDC_WAVEBANK_PATH, m_pBank->m_szBankFile);

  0011a	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00120	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00123	83 c2 30	 add	 edx, 48			; 00000030H
  00126	52		 push	 edx
  00127	68 f5 03 00 00	 push	 1013			; 000003f5H
  0012c	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00132	8b 10		 mov	 edx, DWORD PTR [eax]
  00134	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	ff 52 2c	 call	 DWORD PTR [edx+44]

; 2764 :     SetDlgItemText(IDC_WAVEBANK_HEADER_PATH, m_pBank->m_szHeaderFile);

  0013d	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00143	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00146	81 c1 34 01 00
	00		 add	 ecx, 308		; 00000134H
  0014c	51		 push	 ecx
  0014d	68 f6 03 00 00	 push	 1014			; 000003f6H
  00152	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00158	8b 02		 mov	 eax, DWORD PTR [edx]
  0015a	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00160	ff 50 2c	 call	 DWORD PTR [eax+44]

; 2765 :     SetDlgItemText(IDC_WAVEBANK_SIZE, szSize);

  00163	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szSize$[ebp]
  00169	51		 push	 ecx
  0016a	68 00 04 00 00	 push	 1024			; 00000400H
  0016f	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00175	8b 02		 mov	 eax, DWORD PTR [edx]
  00177	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	ff 50 2c	 call	 DWORD PTR [eax+44]

; 2766 :     SetDlgItemInt(IDC_WAVEBANK_ALIGNMENT, m_pBank->m_dwAlignment, FALSE);

  00180	6a 00		 push	 0
  00182	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00188	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  0018b	8b 82 48 02 00
	00		 mov	 eax, DWORD PTR [edx+584]
  00191	50		 push	 eax
  00192	68 ff 03 00 00	 push	 1023			; 000003ffH
  00197	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0019d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019f	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001a5	ff 52 30	 call	 DWORD PTR [edx+48]

; 2767 : 
; 2768 :     CheckRadioButton(m_hWnd, IDC_WAVEBANK_TYPE_BUFFER, IDC_WAVEBANK_TYPE_STREAMING, (m_pBank->m_dwFlags & WAVEBANK_TYPE_STREAMING) ? IDC_WAVEBANK_TYPE_STREAMING : IDC_WAVEBANK_TYPE_BUFFER);

  001a8	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001ae	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  001b1	8b 91 44 02 00
	00		 mov	 edx, DWORD PTR [ecx+580]
  001b7	83 e2 01	 and	 edx, 1
  001ba	f7 da		 neg	 edx
  001bc	1b d2		 sbb	 edx, edx
  001be	83 e2 02	 and	 edx, 2
  001c1	81 c2 fb 03 00
	00		 add	 edx, 1019		; 000003fbH
  001c7	52		 push	 edx
  001c8	68 fd 03 00 00	 push	 1021			; 000003fdH
  001cd	68 fb 03 00 00	 push	 1019			; 000003fbH
  001d2	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001d8	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001db	51		 push	 ecx
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckRadioButton@16

; 2769 : 
; 2770 :     return FALSE;

  001e2	33 c0		 xor	 eax, eax
$L53792:

; 2771 : }

  001e4	8b e5		 mov	 esp, ebp
  001e6	5d		 pop	 ebp
  001e7	c2 08 00	 ret	 8
?OnCreate@CWaveBankPropertiesDialog@@MAEHPAXPAJ@Z ENDP	; CWaveBankPropertiesDialog::OnCreate
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCreate@CWindow@@UAEHPAXPAJ@Z PROC NEAR		; CWindow::OnCreate, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 242  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnCreate@CWindow@@UAEHPAXPAJ@Z ENDP			; CWindow::OnCreate
_TEXT	ENDS
EXTRN	?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CDialog::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\main\wbndgui.cpp
;	COMDAT ?OnCommand@CWaveBankPropertiesDialog@@MAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hWndControl$ = 16
_plResult$ = 20
_this$ = -4
?OnCommand@CWaveBankPropertiesDialog@@MAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CWaveBankPropertiesDialog::OnCommand, COMDAT
; _this$ = ecx

; 2803 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2804 :     switch(nControlId)
; 2805 :     {

  00009	8b 45 0c	 mov	 eax, DWORD PTR _nControlId$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  0000f	81 7d f8 f7 03
	00 00		 cmp	 DWORD PTR -8+[ebp], 1015 ; 000003f7H
  00016	74 0b		 je	 SHORT $L53817
  00018	81 7d f8 f8 03
	00 00		 cmp	 DWORD PTR -8+[ebp], 1016 ; 000003f8H
  0001f	74 12		 je	 SHORT $L53818
  00021	eb 20		 jmp	 SHORT $L53819
$L53817:

; 2806 :         case IDC_WAVEBANK_PATH_BROWSE:
; 2807 :             OnCmdBrowseBankPath();

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]

; 2808 :             break;

  00031	eb 2a		 jmp	 SHORT $L53814
$L53818:

; 2809 : 
; 2810 :         case IDC_WAVEBANK_HEADER_PATH_BROWSE:
; 2811 :             OnCmdBrowseHeaderPath();

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]

; 2812 :             break;

  00041	eb 1a		 jmp	 SHORT $L53814
$L53819:

; 2813 : 
; 2814 :         default:
; 2815 :             return CDialog::OnCommand(nCommandId, nControlId, hWndControl, plResult);

  00043	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 10	 mov	 ecx, DWORD PTR _hWndControl$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  0004e	52		 push	 edx
  0004f	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z ; CDialog::OnCommand
  0005b	eb 02		 jmp	 SHORT $L53812
$L53814:

; 2816 :     }
; 2817 : 
; 2818 :     return FALSE;

  0005d	33 c0		 xor	 eax, eax
$L53812:

; 2819 : }

  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWaveBankPropertiesDialog@@MAEHIIPAUHWND__@@PAJ@Z ENDP ; CWaveBankPropertiesDialog::OnCommand
_TEXT	ENDS
EXTRN	__imp__IsDlgButtonChecked@8:NEAR
EXTRN	?OnCmdOK@CDialog@@UAEXXZ:NEAR			; CDialog::OnCmdOK
; Function compile flags: /Odt
;	COMDAT ?OnCmdOK@CWaveBankPropertiesDialog@@MAEXXZ
_TEXT	SEGMENT
_this$ = -276
_szText$ = -264
_dwFlags$ = -272
_dwAlignment$ = -4
_hr$ = -268
?OnCmdOK@CWaveBankPropertiesDialog@@MAEXXZ PROC NEAR	; CWaveBankPropertiesDialog::OnCmdOK, COMDAT
; _this$ = ecx

; 2845 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	89 8d ec fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2846 :     TCHAR                   szText[0x100];
; 2847 :     DWORD                   dwFlags;
; 2848 :     DWORD                   dwAlignment;
; 2849 :     HRESULT                 hr;
; 2850 :     
; 2851 :     //
; 2852 :     // Update the bank
; 2853 :     //
; 2854 : 
; 2855 :     GetDlgItemText(IDC_WAVEBANK_NAME, szText, NUMELMS(szText));

  0000f	68 00 01 00 00	 push	 256			; 00000100H
  00014	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0001a	50		 push	 eax
  0001b	68 f4 03 00 00	 push	 1012			; 000003f4H
  00020	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	ff 52 34	 call	 DWORD PTR [edx+52]

; 2856 : 
; 2857 :     hr = m_pBank->SetName(szText);

  00031	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00037	50		 push	 eax
  00038	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00041	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  0004a	8b 12		 mov	 edx, DWORD PTR [edx]
  0004c	ff 52 08	 call	 DWORD PTR [edx+8]
  0004f	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 2858 : 
; 2859 :     if(SUCCEEDED(hr))

  00055	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0005c	7c 46		 jl	 SHORT $L53829

; 2860 :     {
; 2861 :         GetDlgItemText(IDC_WAVEBANK_PATH, szText, NUMELMS(szText));

  0005e	68 00 01 00 00	 push	 256			; 00000100H
  00063	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00069	50		 push	 eax
  0006a	68 f5 03 00 00	 push	 1013			; 000003f5H
  0006f	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00075	8b 11		 mov	 edx, DWORD PTR [ecx]
  00077	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	ff 52 34	 call	 DWORD PTR [edx+52]

; 2862 : 
; 2863 :         hr = m_pBank->SetBankPath(szText);

  00080	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00086	50		 push	 eax
  00087	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00090	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00096	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00099	8b 12		 mov	 edx, DWORD PTR [edx]
  0009b	ff 52 34	 call	 DWORD PTR [edx+52]
  0009e	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L53829:

; 2864 :     }
; 2865 : 
; 2866 :     if(SUCCEEDED(hr))

  000a4	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000ab	7c 46		 jl	 SHORT $L53831

; 2867 :     {
; 2868 :         GetDlgItemText(IDC_WAVEBANK_HEADER_PATH, szText, NUMELMS(szText));

  000ad	68 00 01 00 00	 push	 256			; 00000100H
  000b2	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000b8	50		 push	 eax
  000b9	68 f6 03 00 00	 push	 1014			; 000003f6H
  000be	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c6	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	ff 52 34	 call	 DWORD PTR [edx+52]

; 2869 : 
; 2870 :         hr = m_pBank->SetHeaderPath(szText);

  000cf	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000d5	50		 push	 eax
  000d6	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  000df	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  000e8	8b 12		 mov	 edx, DWORD PTR [edx]
  000ea	ff 52 38	 call	 DWORD PTR [edx+56]
  000ed	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L53831:

; 2871 :     }
; 2872 : 
; 2873 :     if(SUCCEEDED(hr))

  000f3	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000fa	7c 64		 jl	 SHORT $L53833

; 2874 :     {
; 2875 :         dwFlags = m_pBank->m_dwFlags & ~WAVEBANK_TYPE_MASK;

  000fc	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00102	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00105	8b 91 44 02 00
	00		 mov	 edx, DWORD PTR [ecx+580]
  0010b	83 e2 fe	 and	 edx, -2			; fffffffeH
  0010e	89 95 f0 fe ff
	ff		 mov	 DWORD PTR _dwFlags$[ebp], edx

; 2876 : 
; 2877 :         if(IsDlgButtonChecked(m_hWnd, IDC_WAVEBANK_TYPE_STREAMING))

  00114	68 fd 03 00 00	 push	 1021			; 000003fdH
  00119	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0011f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00122	51		 push	 ecx
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDlgButtonChecked@8
  00129	85 c0		 test	 eax, eax
  0012b	74 0f		 je	 SHORT $L53834

; 2878 :         {
; 2879 :             dwFlags |= WAVEBANK_TYPE_STREAMING;

  0012d	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR _dwFlags$[ebp]
  00133	83 ca 01	 or	 edx, 1
  00136	89 95 f0 fe ff
	ff		 mov	 DWORD PTR _dwFlags$[ebp], edx
$L53834:

; 2880 :         }
; 2881 : 
; 2882 :         hr = m_pBank->SetFlags(dwFlags);

  0013c	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _dwFlags$[ebp]
  00142	50		 push	 eax
  00143	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00149	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  0014c	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00152	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00155	8b 12		 mov	 edx, DWORD PTR [edx]
  00157	ff 52 3c	 call	 DWORD PTR [edx+60]
  0015a	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L53833:

; 2883 :     }
; 2884 : 
; 2885 :     if(SUCCEEDED(hr))

  00160	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00167	7c 3e		 jl	 SHORT $L53836

; 2886 :     {
; 2887 :         dwAlignment = GetDlgItemInt(IDC_WAVEBANK_ALIGNMENT, NULL, FALSE);

  00169	6a 00		 push	 0
  0016b	6a 00		 push	 0
  0016d	68 ff 03 00 00	 push	 1023			; 000003ffH
  00172	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00178	8b 10		 mov	 edx, DWORD PTR [eax]
  0017a	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00180	ff 52 38	 call	 DWORD PTR [edx+56]
  00183	89 45 fc	 mov	 DWORD PTR _dwAlignment$[ebp], eax

; 2888 : 
; 2889 :         hr = m_pBank->SetAlignment(dwAlignment);

  00186	8b 45 fc	 mov	 eax, DWORD PTR _dwAlignment$[ebp]
  00189	50		 push	 eax
  0018a	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00190	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00193	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00199	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  0019c	8b 12		 mov	 edx, DWORD PTR [edx]
  0019e	ff 52 0c	 call	 DWORD PTR [edx+12]
  001a1	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L53836:

; 2890 :     }
; 2891 : 
; 2892 :     //
; 2893 :     // Close the dialog
; 2894 :     //
; 2895 : 
; 2896 :     if(SUCCEEDED(hr))

  001a7	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001ae	7c 0b		 jl	 SHORT $L53838

; 2897 :     {
; 2898 :         CDialog::OnCmdOK();

  001b0	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001b6	e8 00 00 00 00	 call	 ?OnCmdOK@CDialog@@UAEXXZ ; CDialog::OnCmdOK
$L53838:

; 2899 :     }
; 2900 : }

  001bb	8b e5		 mov	 esp, ebp
  001bd	5d		 pop	 ebp
  001be	c3		 ret	 0
?OnCmdOK@CWaveBankPropertiesDialog@@MAEXXZ ENDP		; CWaveBankPropertiesDialog::OnCmdOK
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdBrowseBankPath@CWaveBankPropertiesDialog@@MAEXXZ
_TEXT	SEGMENT
_this$ = -268
_szPath$ = -264
?OnCmdBrowseBankPath@CWaveBankPropertiesDialog@@MAEXXZ PROC NEAR ; CWaveBankPropertiesDialog::OnCmdBrowseBankPath, COMDAT
; _this$ = ecx

; 2926 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2927 :     TCHAR                   szPath[MAX_PATH];
; 2928 : 
; 2929 :     if(!GetDlgItemText(IDC_WAVEBANK_PATH, szPath, NUMELMS(szPath)))

  0000f	68 04 01 00 00	 push	 260			; 00000104H
  00014	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  0001a	50		 push	 eax
  0001b	68 f5 03 00 00	 push	 1013			; 000003f5H
  00020	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	ff 52 34	 call	 DWORD PTR [edx+52]
  00031	85 c0		 test	 eax, eax
  00033	75 07		 jne	 SHORT $L53844

; 2930 :     {
; 2931 :         szPath[0] = 0;

  00035	c6 85 f8 fe ff
	ff 00		 mov	 BYTE PTR _szPath$[ebp], 0
$L53844:

; 2932 :     }
; 2933 : 
; 2934 :     if(CGuiWaveBankProject::BrowseBankFile(m_hWnd, szPath, NUMELMS(szPath)))

  0003c	68 04 01 00 00	 push	 260			; 00000104H
  00041	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00047	50		 push	 eax
  00048	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 ?BrowseBankFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseBankFile
  00057	85 c0		 test	 eax, eax
  00059	74 1d		 je	 SHORT $L53845

; 2935 :     {
; 2936 :         SetDlgItemText(IDC_WAVEBANK_PATH, szPath);

  0005b	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00061	50		 push	 eax
  00062	68 f5 03 00 00	 push	 1013			; 000003f5H
  00067	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006f	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00075	ff 52 2c	 call	 DWORD PTR [edx+44]
$L53845:

; 2937 :     }
; 2938 : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?OnCmdBrowseBankPath@CWaveBankPropertiesDialog@@MAEXXZ ENDP ; CWaveBankPropertiesDialog::OnCmdBrowseBankPath
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdBrowseHeaderPath@CWaveBankPropertiesDialog@@MAEXXZ
_TEXT	SEGMENT
_this$ = -268
_szPath$ = -264
?OnCmdBrowseHeaderPath@CWaveBankPropertiesDialog@@MAEXXZ PROC NEAR ; CWaveBankPropertiesDialog::OnCmdBrowseHeaderPath, COMDAT
; _this$ = ecx

; 2964 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2965 :     TCHAR                   szPath[MAX_PATH];
; 2966 : 
; 2967 :     if(!GetDlgItemText(IDC_WAVEBANK_HEADER_PATH, szPath, NUMELMS(szPath)))

  0000f	68 04 01 00 00	 push	 260			; 00000104H
  00014	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  0001a	50		 push	 eax
  0001b	68 f6 03 00 00	 push	 1014			; 000003f6H
  00020	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	ff 52 34	 call	 DWORD PTR [edx+52]
  00031	85 c0		 test	 eax, eax
  00033	75 07		 jne	 SHORT $L53851

; 2968 :     {
; 2969 :         szPath[0] = 0;

  00035	c6 85 f8 fe ff
	ff 00		 mov	 BYTE PTR _szPath$[ebp], 0
$L53851:

; 2970 :     }
; 2971 : 
; 2972 :     if(CGuiWaveBankProject::BrowseHeaderFile(m_hWnd, szPath, NUMELMS(szPath)))

  0003c	68 04 01 00 00	 push	 260			; 00000104H
  00041	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00047	50		 push	 eax
  00048	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 ?BrowseHeaderFile@CGuiWaveBankProject@@SGHPAUHWND__@@PADI@Z ; CGuiWaveBankProject::BrowseHeaderFile
  00057	85 c0		 test	 eax, eax
  00059	74 1d		 je	 SHORT $L53852

; 2973 :     {
; 2974 :         SetDlgItemText(IDC_WAVEBANK_HEADER_PATH, szPath);

  0005b	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00061	50		 push	 eax
  00062	68 f6 03 00 00	 push	 1014			; 000003f6H
  00067	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006f	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00075	ff 52 2c	 call	 DWORD PTR [edx+44]
$L53852:

; 2975 :     }
; 2976 : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?OnCmdBrowseHeaderPath@CWaveBankPropertiesDialog@@MAEXXZ ENDP ; CWaveBankPropertiesDialog::OnCmdBrowseHeaderPath
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_ECGuiWaveBank@@WCEM@AEPAXI@Z
_TEXT	SEGMENT
??_ECGuiWaveBank@@WCEM@AEPAXI@Z PROC NEAR		; CGuiWaveBank::`vector deleting destructor', COMDAT
  00000	81 e9 4c 02 00
	00		 sub	 ecx, 588		; 0000024cH
  00006	e9 00 00 00 00	 jmp	 ??_ECGuiWaveBank@@UAEPAXI@Z ; CGuiWaveBank::`vector deleting destructor'
??_ECGuiWaveBank@@WCEM@AEPAXI@Z ENDP			; CGuiWaveBank::`vector deleting destructor'
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_ECGuiWaveBankEntry@@WDDI@AEPAXI@Z
_TEXT	SEGMENT
??_ECGuiWaveBankEntry@@WDDI@AEPAXI@Z PROC NEAR		; CGuiWaveBankEntry::`vector deleting destructor', COMDAT
  00000	81 e9 38 03 00
	00		 sub	 ecx, 824		; 00000338H
  00006	e9 00 00 00 00	 jmp	 ??_ECGuiWaveBankEntry@@UAEPAXI@Z ; CGuiWaveBankEntry::`vector deleting destructor'
??_ECGuiWaveBankEntry@@WDDI@AEPAXI@Z ENDP		; CGuiWaveBankEntry::`vector deleting destructor'
_TEXT	ENDS
END
