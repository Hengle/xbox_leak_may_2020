; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CONG@hWnd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07OBKI@plParam?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04JNGL@pCtx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CI@IPFA@m_dwValidSignature?5?$DN?$DN?5pCtx?9?$DOdwSi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07MMMB@pWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEII@?$CBpWindow?9?$DOm_hWnd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHWND@CWindow@@SGPAUHWND__@@PAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CDialog@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CDialog@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDialog@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CDialog@@UAEHPAVCWindow@@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdOK@CDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCmdCancel@CDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitialCreate@CDialog@@KGPAVCWindow@@PAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HandleMessage@CDialog@@UAEHIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?IsWindow@CWindow@@UAEHXZ			; CWindow::IsWindow
PUBLIC	?SendMessageA@CWindow@@UAEJIIJ@Z		; CWindow::SendMessageA
PUBLIC	?PostMessageA@CWindow@@UAEJIIJ@Z		; CWindow::PostMessageA
PUBLIC	?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z	; CWindow::SendDlgItemMessageA
PUBLIC	?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z		; CWindow::GetDlgItem
PUBLIC	?SetWindowTextA@CWindow@@UAEHPBD@Z		; CWindow::SetWindowTextA
PUBLIC	?SetDlgItemTextA@CWindow@@UAEHHPBD@Z		; CWindow::SetDlgItemTextA
PUBLIC	?SetDlgItemInt@CWindow@@UAEHHIH@Z		; CWindow::SetDlgItemInt
PUBLIC	?GetDlgItemTextA@CWindow@@UAEHHPADH@Z		; CWindow::GetDlgItemTextA
PUBLIC	?GetDlgItemInt@CWindow@@UAEIHPAHH@Z		; CWindow::GetDlgItemInt
PUBLIC	?MoveWindow@CWindow@@UAEHHHHHH@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z	; CWindow::MoveWindow
PUBLIC	?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetWindowRect
PUBLIC	?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetClientRect
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z	; CWindow::ScreenToClient
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::ScreenToClient
PUBLIC	?DragAcceptFiles@CWindow@@UAEXH@Z		; CWindow::DragAcceptFiles
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	?OnCreate@CWindow@@UAEHPAXPAJ@Z			; CWindow::OnCreate
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
PUBLIC	?OnSize@CWindow@@UAEHIIIPAJ@Z			; CWindow::OnSize
PUBLIC	?OnSysCommand@CWindow@@UAEHIPAJ@Z		; CWindow::OnSysCommand
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
PUBLIC	?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z	; CWindow::OnEraseBackground
PUBLIC	?OnPaint@CWindow@@UAEHPAJ@Z			; CWindow::OnPaint
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
PUBLIC	?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z	; CWindow::OnDropFiles
PUBLIC	?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z	; CWindow::OnScroll
PUBLIC	??0CDialog@@QAE@I@Z				; CDialog::CDialog
PUBLIC	?AddRef@CDialog@@UAGKXZ				; CDialog::AddRef
PUBLIC	?Release@CDialog@@UAGKXZ			; CDialog::Release
PUBLIC	?Create@CDialog@@UAEHPAVCWindow@@PAX@Z		; CDialog::Create
PUBLIC	?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z		; CDialog::DoModal
PUBLIC	?HandleMessage@CDialog@@UAEHIIJPAJ@Z		; CDialog::HandleMessage
PUBLIC	?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z	; CDialog::OnCommand
PUBLIC	?OnClose@CDialog@@UAEHPAJ@Z			; CDialog::OnClose
PUBLIC	?OnCmdOK@CDialog@@UAEXXZ			; CDialog::OnCmdOK
PUBLIC	?OnCmdCancel@CDialog@@UAEXXZ			; CDialog::OnCmdCancel
PUBLIC	?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z	; CDialog::DefWindowProcA
PUBLIC	??_7CDialog@@6B@				; CDialog::`vftable'
PUBLIC	??_GCDialog@@UAEPAXI@Z				; CDialog::`scalar deleting destructor'
PUBLIC	??_ECDialog@@UAEPAXI@Z				; CDialog::`vector deleting destructor'
EXTRN	??0CWindow@@QAE@III@Z:NEAR			; CWindow::CWindow
EXTRN	?Destroy@CWindow@@UAEXXZ:NEAR			; CWindow::Destroy
EXTRN	?SetRedraw@CWindow@@UAEHH@Z:NEAR		; CWindow::SetRedraw
EXTRN	?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z:NEAR ; CWindow::DispatchMessageA
EXTRN	?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CWindow::OnScroll
EXTRN	?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z:NEAR	; CWindow::Create
;	COMDAT ??_7CDialog@@6B@
; File c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.cpp
CONST	SEGMENT
??_7CDialog@@6B@ DD FLAT:??_ECDialog@@UAEPAXI@Z		; CDialog::`vftable'
	DD	FLAT:?AddRef@CDialog@@UAGKXZ
	DD	FLAT:?Release@CDialog@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CDialog@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z
	DD	FLAT:?OnCmdOK@CDialog@@UAEXXZ
	DD	FLAT:?OnCmdCancel@CDialog@@UAEXXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CDialog@@QAE@I@Z
_TEXT	SEGMENT
_nDialogResourceId$ = 8
_this$ = -4
??0CDialog@@QAE@I@Z PROC NEAR				; CDialog::CDialog, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 04		 push	 4
  00009	6a ff		 push	 -1
  0000b	6a ff		 push	 -1
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ??0CWindow@@QAE@III@Z	; CWindow::CWindow
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _nDialogResourceId$[ebp]
  0001b	89 48 30	 mov	 DWORD PTR [eax+48], ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CDialog@@6B@ ; CDialog::`vftable'

; 42   : }

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??0CDialog@@QAE@I@Z ENDP				; CDialog::CDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCreate@CWindow@@UAEHPAXPAJ@Z PROC NEAR		; CWindow::OnCreate, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 242  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnCreate@CWindow@@UAEHPAXPAJ@Z ENDP			; CWindow::OnCreate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 252  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHIIIPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 256  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 257  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHIIIPAJ@Z ENDP			; CWindow::OnSize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysCommand@CWindow@@UAEHIPAJ@Z PROC NEAR		; CWindow::OnSysCommand, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 266  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 267  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnSysCommand@CWindow@@UAEHIPAJ@Z ENDP			; CWindow::OnSysCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 272  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z PROC NEAR ; CWindow::OnEraseBackground, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 276  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 277  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z ENDP	; CWindow::OnEraseBackground
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnPaint@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnPaint, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 282  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnPaint@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnPaint
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z PROC NEAR	; CWindow::OnScroll, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 287  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z ENDP		; CWindow::OnScroll
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 292  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
_TEXT	ENDS
PUBLIC	??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_04BEIE@this?$AA@				; `string'
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\base\wndwrap.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT
??_C@_04BEIE@this?$AA@ DB 'this', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 301  :     ASSERT(this);

  00007	68 2d 01 00 00	 push	 301			; 0000012dH
  0000c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04BEIE@this?$AA@ ; `string'
  00016	33 c0		 xor	 eax, eax
  00018	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001c	0f 94 c0	 sete	 al
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00025	83 c4 10	 add	 esp, 16			; 00000010H

; 302  :     return m_hWnd;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 303  : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
_TEXT	ENDS
PUBLIC	??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@	; `string'
EXTRN	__imp__IsWindow@4:NEAR
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ DB '::IsWindow(m_hWnd)', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsWindow@CWindow@@UAEHXZ PROC NEAR			; CWindow::IsWindow, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  :     if(!m_hWnd)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0000e	75 04		 jne	 SHORT $L49125

; 308  :     {
; 309  :         return FALSE;

  00010	33 c0		 xor	 eax, eax
  00012	eb 2f		 jmp	 SHORT $L49124
$L49125:

; 310  :     }
; 311  : 
; 312  :     ASSERT(::IsWindow(m_hWnd));

  00014	68 38 01 00 00	 push	 312			; 00000138H
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ ; `string'
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00029	52		 push	 edx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00030	f7 d8		 neg	 eax
  00032	1b c0		 sbb	 eax, eax
  00034	40		 inc	 eax
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 313  : 
; 314  :     return TRUE;

  0003e	b8 01 00 00 00	 mov	 eax, 1
$L49124:

; 315  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?IsWindow@CWindow@@UAEHXZ ENDP				; CWindow::IsWindow
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?SendMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::SendMessageA, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  :     return ::SendMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 320  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SendMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::SendMessageA
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::PostMessageA, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  :     return ::PostMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 325  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?PostMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::PostMessageA
_TEXT	ENDS
EXTRN	__imp__SetWindowTextA@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?SetWindowTextA@CWindow@@UAEHPBD@Z PROC NEAR		; CWindow::SetWindowTextA, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :     return ::SetWindowText(m_hWnd, pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 330  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetWindowTextA@CWindow@@UAEHPBD@Z ENDP			; CWindow::SetWindowTextA
_TEXT	ENDS
EXTRN	__imp__MoveWindow@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_nWidth$ = 16
_nHeight$ = 20
_fRepaint$ = 24
_this$ = -4
?MoveWindow@CWindow@@UAEHHHHHH@Z PROC NEAR		; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 334  :     return ::MoveWindow(m_hWnd, x, y, nWidth, nHeight, fRepaint);

  00007	8b 45 18	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 14	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 10	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 335  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 14 00	 ret	 20			; 00000014H
?MoveWindow@CWindow@@UAEHHHHHH@Z ENDP			; CWindow::MoveWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_fRepaint$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  :     return ::MoveWindow(m_hWnd, prcWindow->left, prcWindow->top, prcWindow->right - prcWindow->left, prcWindow->bottom - prcWindow->top, fRepaint);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 340  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z ENDP		; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetWindowRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_this$ = -4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetWindowRect, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  :     return ::GetWindowRect(m_hWnd, prcWindow);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 345  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetWindowRect
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcClient$ = 8
_this$ = -4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetClientRect, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 349  :     return ::GetClientRect(m_hWnd, prcClient);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcClient$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 350  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetClientRect
_TEXT	ENDS
EXTRN	__imp__ScreenToClient@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT
_ppt$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  :     return ::ScreenToClient(m_hWnd, ppt);

  00007	8b 45 08	 mov	 eax, DWORD PTR _ppt$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 355  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z ENDP	; CWindow::ScreenToClient
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prc$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 359  :     if(!::ScreenToClient(m_hWnd, (LPPOINT)&prc->left))

  00007	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $L49173

; 360  :     {
; 361  :         return FALSE;

  0001c	33 c0		 xor	 eax, eax
  0001e	eb 14		 jmp	 SHORT $L49171
$L49173:

; 362  :     }
; 363  : 
; 364  :     return ::ScreenToClient(m_hWnd, (LPPOINT)&prc->right);

  00020	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	50		 push	 eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0002d	52		 push	 edx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
$L49171:

; 365  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z ENDP	; CWindow::ScreenToClient
_TEXT	ENDS
EXTRN	__imp__SendDlgItemMessageA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT
_nItemId$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z PROC NEAR	; CWindow::SendDlgItemMessageA, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  :     return ::SendDlgItemMessage(m_hWnd, nItemId, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0001d	52		 push	 edx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 370  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z ENDP		; CWindow::SendDlgItemMessageA
_TEXT	ENDS
EXTRN	__imp__GetDlgItem@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT
_nItemId$ = 8
_this$ = -4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z PROC NEAR	; CWindow::GetDlgItem, COMDAT
; _this$ = ecx

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 374  :     return ::GetDlgItem(m_hWnd, nItemId);

  00007	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8

; 375  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z ENDP		; CWindow::GetDlgItem
_TEXT	ENDS
EXTRN	__imp__SetDlgItemTextA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_this$ = -4
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z PROC NEAR		; CWindow::SetDlgItemTextA, COMDAT
; _this$ = ecx

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 379  :     return ::SetDlgItemText(m_hWnd, nItemId, pszString);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _nItemId$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 380  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z ENDP		; CWindow::SetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__SetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_nValue$ = 12
_fSigned$ = 16
_this$ = -4
?SetDlgItemInt@CWindow@@UAEHHIH@Z PROC NEAR		; CWindow::SetDlgItemInt, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  :     return ::SetDlgItemInt(m_hWnd, nItemId, nValue, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _nValue$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 385  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SetDlgItemInt@CWindow@@UAEHHIH@Z ENDP			; CWindow::SetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__GetDlgItemTextA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_nLength$ = 16
_this$ = -4
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z PROC NEAR		; CWindow::GetDlgItemTextA, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  :     return ::GetDlgItemText(m_hWnd, nItemId, pszString, nLength);

  00007	8b 45 10	 mov	 eax, DWORD PTR _nLength$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pszString$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 390  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z ENDP		; CWindow::GetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__GetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pfTranslated$ = 12
_fSigned$ = 16
_this$ = -4
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z PROC NEAR		; CWindow::GetDlgItemInt, COMDAT
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 394  :     return ::GetDlgItemInt(m_hWnd, nItemId, pfTranslated, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pfTranslated$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16

; 395  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z ENDP		; CWindow::GetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__DragAcceptFiles@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fAccept$ = 8
_this$ = -4
?DragAcceptFiles@CWindow@@UAEXH@Z PROC NEAR		; CWindow::DragAcceptFiles, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 399  :     ::DragAcceptFiles(m_hWnd, fAccept);

  00007	8b 45 08	 mov	 eax, DWORD PTR _fAccept$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragAcceptFiles@8

; 400  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?DragAcceptFiles@CWindow@@UAEXH@Z ENDP			; CWindow::DragAcceptFiles
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z PROC NEAR	; CWindow::OnDropFiles, COMDAT
; _this$ = ecx

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 404  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 405  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z ENDP	; CWindow::OnDropFiles
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.h
_TEXT	ENDS
;	COMDAT ?AddRef@CDialog@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CDialog@@UAGKXZ PROC NEAR			; CDialog::AddRef, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 70   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CDialog@@UAGKXZ ENDP				; CDialog::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CDialog@@UAGKXZ
_TEXT	SEGMENT
?Release@CDialog@@UAGKXZ PROC NEAR			; CDialog::Release, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 74   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 75   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CDialog@@UAGKXZ ENDP				; CDialog::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_this$ = -4
?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z PROC NEAR	; CDialog::DefWindowProcA, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 79   :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 80   : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?DefWindowProcA@CDialog@@UAEJPAUHWND__@@IIJ@Z ENDP	; CDialog::DefWindowProcA
_TEXT	ENDS
PUBLIC	??1CDialog@@UAE@XZ				; CDialog::~CDialog
; Function compile flags: /Odt
;	COMDAT ??_GCDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCDialog@@UAEPAXI@Z PROC NEAR			; CDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L49638
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L49638:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCDialog@@UAEPAXI@Z ENDP				; CDialog::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
EXTRN	??1CWindow@@UAE@XZ:NEAR				; CWindow::~CWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.cpp
;	COMDAT ??1CDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CDialog@@UAE@XZ PROC NEAR				; CDialog::~CDialog, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDialog@@6B@ ; CDialog::`vftable'

; 68   : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CDialog@@UAE@XZ ENDP					; CDialog::~CDialog
_TEXT	ENDS
PUBLIC	?GetHWND@CWindow@@SGPAUHWND__@@PAV1@@Z		; CWindow::GetHWND
PUBLIC	?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z	; CDialog::DialogProc
EXTRN	_g_hInstance:DWORD
EXTRN	?m_dwValidSignature@CWindow@@1KB:DWORD		; CWindow::m_dwValidSignature
EXTRN	__imp__CreateDialogParamA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?Create@CDialog@@UAEHPAVCWindow@@PAX@Z
_TEXT	SEGMENT
_pParent$ = 8
_pvContext$ = 12
_this$ = -16
_ctx$ = -12
?Create@CDialog@@UAEHPAVCWindow@@PAX@Z PROC NEAR	; CDialog::Create, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 97   :     WINDOWCREATECTX         ctx;
; 98   : 
; 99   :     m_pParent = pParent;

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _pParent$[ebp]
  0000f	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 100  : 
; 101  :     ctx.dwSignature = m_dwValidSignature;

  00012	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_dwValidSignature@CWindow@@1KB ; CWindow::m_dwValidSignature
  00018	89 55 f4	 mov	 DWORD PTR _ctx$[ebp], edx

; 102  :     ctx.pWindow = this;

  0001b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	89 45 f8	 mov	 DWORD PTR _ctx$[ebp+4], eax

; 103  :     ctx.pvContext = pvContext;

  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00024	89 4d fc	 mov	 DWORD PTR _ctx$[ebp+8], ecx

; 104  : 
; 105  :     return MAKEBOOL(CreateDialogParam(g_hInstance, MAKEINTRESOURCE(m_nDialogResourceId), GetHWND(pParent), DialogProc, (LPARAM)&ctx));

  00027	8d 55 f4	 lea	 edx, DWORD PTR _ctx$[ebp]
  0002a	52		 push	 edx
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z ; CDialog::DialogProc
  00030	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?GetHWND@CWindow@@SGPAUHWND__@@PAV1@@Z ; CWindow::GetHWND
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	33 d2		 xor	 edx, edx
  0003f	66 8b 51 30	 mov	 dx, WORD PTR [ecx+48]
  00043	52		 push	 edx
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  00049	50		 push	 eax
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDialogParamA@20
  00050	f7 d8		 neg	 eax
  00052	1b c0		 sbb	 eax, eax
  00054	f7 d8		 neg	 eax

; 106  : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 08 00	 ret	 8
?Create@CDialog@@UAEHPAVCWindow@@PAX@Z ENDP		; CDialog::Create
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?GetHWND@CWindow@@SGPAUHWND__@@PAV1@@Z
_TEXT	SEGMENT
_pWindow$ = 8
?GetHWND@CWindow@@SGPAUHWND__@@PAV1@@Z PROC NEAR	; CWindow::GetHWND, COMDAT

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 236  :     return pWindow ? pWindow->m_hWnd : NULL;

  00004	83 7d 08 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  00008	74 0b		 je	 SHORT $L49958
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pWindow$[ebp]
  0000d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00010	89 4d fc	 mov	 DWORD PTR -4+[ebp], ecx
  00013	eb 07		 jmp	 SHORT $L49959
$L49958:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR -4+[ebp], 0
$L49959:
  0001c	8b 45 fc	 mov	 eax, DWORD PTR -4+[ebp]

; 237  : }

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?GetHWND@CWindow@@SGPAUHWND__@@PAV1@@Z ENDP		; CWindow::GetHWND
_TEXT	ENDS
EXTRN	__imp__DialogBoxParamA@20:NEAR
EXTRN	__imp__SetFocus@4:NEAR
EXTRN	__imp__GetFocus@0:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.cpp
;	COMDAT ?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z
_TEXT	SEGMENT
_pParent$ = 8
_pvContext$ = 12
_this$ = -24
_hWndFocus$ = -16
_ctx$ = -12
_fSuccess$ = -20
?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z PROC NEAR	; CDialog::DoModal, COMDAT
; _this$ = ecx

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 135  :     HWND                    hWndFocus;
; 136  :     WINDOWCREATECTX         ctx;
; 137  :     BOOL                    fSuccess;
; 138  : 
; 139  :     m_pParent = pParent;

  00009	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _pParent$[ebp]
  0000f	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 140  : 
; 141  :     //
; 142  :     // Save the window with the keyboard focus so we can restore it later
; 143  :     //
; 144  : 
; 145  :     hWndFocus = GetFocus();

  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00018	89 45 f0	 mov	 DWORD PTR _hWndFocus$[ebp], eax

; 146  : 
; 147  :     //
; 148  :     // Show the dialog
; 149  :     //
; 150  : 
; 151  :     ctx.dwSignature = m_dwValidSignature;

  0001b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_dwValidSignature@CWindow@@1KB ; CWindow::m_dwValidSignature
  00021	89 55 f4	 mov	 DWORD PTR _ctx$[ebp], edx

; 152  :     ctx.pWindow = this;

  00024	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00027	89 45 f8	 mov	 DWORD PTR _ctx$[ebp+4], eax

; 153  :     ctx.pvContext = pvContext;

  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  0002d	89 4d fc	 mov	 DWORD PTR _ctx$[ebp+8], ecx

; 154  : 
; 155  :     fSuccess = DialogBoxParam(g_hInstance, MAKEINTRESOURCE(m_nDialogResourceId), GetHWND(pParent), DialogProc, (LPARAM)&ctx);

  00030	8d 55 f4	 lea	 edx, DWORD PTR _ctx$[ebp]
  00033	52		 push	 edx
  00034	68 00 00 00 00	 push	 OFFSET FLAT:?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z ; CDialog::DialogProc
  00039	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?GetHWND@CWindow@@SGPAUHWND__@@PAV1@@Z ; CWindow::GetHWND
  00042	50		 push	 eax
  00043	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	33 d2		 xor	 edx, edx
  00048	66 8b 51 30	 mov	 dx, WORD PTR [ecx+48]
  0004c	52		 push	 edx
  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20
  00059	89 45 ec	 mov	 DWORD PTR _fSuccess$[ebp], eax

; 156  : 
; 157  :     //
; 158  :     // Restore focus
; 159  :     //
; 160  : 
; 161  :     SetFocus(hWndFocus);

  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _hWndFocus$[ebp]
  0005f	51		 push	 ecx
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4

; 162  : 
; 163  :     return fSuccess;

  00066	8b 45 ec	 mov	 eax, DWORD PTR _fSuccess$[ebp]

; 164  : }

  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 08 00	 ret	 8
?DoModal@CDialog@@UAEHPAVCWindow@@PAX@Z ENDP		; CDialog::DoModal
_TEXT	ENDS
PUBLIC	?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z	; CWindow::OnCommand
; Function compile flags: /Odt
;	COMDAT ?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hwndControl$ = 16
_plResult$ = 20
_this$ = -8
?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CDialog::OnCommand, COMDAT
; _this$ = ecx

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 197  :     LPCTSTR                 pszPath;
; 198  :     
; 199  :     if(CWindow::OnCommand(nCommandId, nControlId, hwndControl, plResult))

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _hwndControl$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWindow::OnCommand
  00021	85 c0		 test	 eax, eax
  00023	74 07		 je	 SHORT $L49673

; 200  :     {
; 201  :         return TRUE;

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	eb 34		 jmp	 SHORT $L49671
$L49673:

; 202  :     }
; 203  : 
; 204  :     switch(nControlId)
; 205  :     {

  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  0002f	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  00032	83 7d f4 01	 cmp	 DWORD PTR -12+[ebp], 1
  00036	74 08		 je	 SHORT $L49678
  00038	83 7d f4 02	 cmp	 DWORD PTR -12+[ebp], 2
  0003c	74 12		 je	 SHORT $L49679
  0003e	eb 1e		 jmp	 SHORT $L49675
$L49678:

; 206  :         case IDOK:
; 207  :             OnCmdOK();

  00040	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]

; 208  :             break;

  0004e	eb 0e		 jmp	 SHORT $L49675
$L49679:

; 209  :         
; 210  :         case IDCANCEL:
; 211  :             OnCmdCancel();

  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]
$L49675:

; 212  :             break;
; 213  :     }
; 214  : 
; 215  :     return FALSE;

  0005e	33 c0		 xor	 eax, eax
$L49671:

; 216  : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CDialog::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CWindow::OnCommand, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 261  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 262  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CWindow::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\dlgwrap.cpp
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT
_plResult$ = 8
_this$ = -4
?OnClose@CDialog@@UAEHPAJ@Z PROC NEAR			; CDialog::OnClose, COMDAT
; _this$ = ecx

; 242  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 243  :     OnCmdCancel();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 244  : 
; 245  :     *plResult = 0;

  00015	8b 45 08	 mov	 eax, DWORD PTR _plResult$[ebp]
  00018	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 246  :     return TRUE;

  0001e	b8 01 00 00 00	 mov	 eax, 1

; 247  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?OnClose@CDialog@@UAEHPAJ@Z ENDP			; CDialog::OnClose
_TEXT	ENDS
EXTRN	__imp__EndDialog@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnCmdOK@CDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdOK@CDialog@@UAEXXZ PROC NEAR			; CDialog::OnCmdOK, COMDAT
; _this$ = ecx

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 274  :     EndDialog(m_hWnd, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 275  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnCmdOK@CDialog@@UAEXXZ ENDP				; CDialog::OnCmdOK
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCmdCancel@CDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCmdCancel@CDialog@@UAEXXZ PROC NEAR			; CDialog::OnCmdCancel, COMDAT
; _this$ = ecx

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 302  :     EndDialog(m_hWnd, FALSE);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 303  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnCmdCancel@CDialog@@UAEXXZ ENDP			; CDialog::OnCmdCancel
_TEXT	ENDS
PUBLIC	?OnInitialCreate@CDialog@@KGPAVCWindow@@PAUHWND__@@PAJ@Z ; CDialog::OnInitialCreate
EXTRN	?GetWindowContext@CWindow@@KGPAV1@PAUHWND__@@@Z:NEAR ; CWindow::GetWindowContext
EXTRN	__imp__SetWindowLongA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_lResult$ = -8
_pWindow$ = -4
?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z PROC NEAR	; CDialog::DialogProc, COMDAT

; 335  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 336  :     LRESULT                 lResult     = 0;

  00006	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lResult$[ebp], 0

; 337  :     CWindow *               pWindow;
; 338  : 
; 339  :     //
; 340  :     // Get the "this" pointer from the window object
; 341  :     // 
; 342  :     // We're special-casing WM_CREATE because it actually contains the window
; 343  :     // handle we use to add ourselves to the global window list.
; 344  :     //
; 345  :     
; 346  :     if(WM_INITDIALOG == uMsg)

  0000d	81 7d 0c 10 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 272 ; 00000110H
  00014	75 12		 jne	 SHORT $L49700

; 347  :     {
; 348  :         pWindow = OnInitialCreate(hWnd, &lParam);

  00016	8d 45 14	 lea	 eax, DWORD PTR _lParam$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ?OnInitialCreate@CDialog@@KGPAVCWindow@@PAUHWND__@@PAJ@Z ; CDialog::OnInitialCreate
  00023	89 45 fc	 mov	 DWORD PTR _pWindow$[ebp], eax

; 349  :     }
; 350  :     else

  00026	eb 0c		 jmp	 SHORT $L49701
$L49700:

; 351  :     {
; 352  :         pWindow = GetWindowContext(hWnd);

  00028	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 ?GetWindowContext@CWindow@@KGPAV1@PAUHWND__@@@Z ; CWindow::GetWindowContext
  00031	89 45 fc	 mov	 DWORD PTR _pWindow$[ebp], eax
$L49701:

; 353  :     }
; 354  : 
; 355  :     if(!pWindow)

  00034	83 7d fc 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  00038	75 04		 jne	 SHORT $L49702

; 356  :     {
; 357  :         return FALSE;

  0003a	33 c0		 xor	 eax, eax
  0003c	eb 62		 jmp	 SHORT $L49697
$L49702:

; 358  :     }
; 359  : 
; 360  :     //
; 361  :     // Hand off to the message dispatcher
; 362  :     //
; 363  : 
; 364  :     if(pWindow->HandleMessage(uMsg, wParam, lParam, &lResult))

  0003e	8d 45 f8	 lea	 eax, DWORD PTR _lResult$[ebp]
  00041	50		 push	 eax
  00042	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00045	51		 push	 ecx
  00046	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00049	52		 push	 edx
  0004a	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  00056	ff 92 8c 00 00
	00		 call	 DWORD PTR [edx+140]
  0005c	85 c0		 test	 eax, eax
  0005e	74 19		 je	 SHORT $L49703

; 365  :     {
; 366  :         SetWindowLong(hWnd, DWL_MSGRESULT, lResult);

  00060	8b 45 f8	 mov	 eax, DWORD PTR _lResult$[ebp]
  00063	50		 push	 eax
  00064	6a 00		 push	 0
  00066	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00069	51		 push	 ecx
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 367  :         lResult = TRUE;

  00070	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _lResult$[ebp], 1

; 368  :     }
; 369  :     else

  00077	eb 07		 jmp	 SHORT $L49704
$L49703:

; 370  :     {
; 371  :         lResult = FALSE;

  00079	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _lResult$[ebp], 0
$L49704:

; 372  :     }
; 373  : 
; 374  :     //
; 375  :     // Special-case WM_DESTROY to delete the window object
; 376  :     //
; 377  : 
; 378  :     if(WM_DESTROY == uMsg)

  00080	83 7d 0c 02	 cmp	 DWORD PTR _uMsg$[ebp], 2
  00084	75 17		 jne	 SHORT $L49705

; 379  :     {
; 380  :         pWindow->Destroy();

  00086	8b 55 fc	 mov	 edx, DWORD PTR _pWindow$[ebp]
  00089	8b 02		 mov	 eax, DWORD PTR [edx]
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  0008e	ff 50 10	 call	 DWORD PTR [eax+16]

; 381  :         pWindow->Release();

  00091	8b 4d fc	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  00094	8b 11		 mov	 edx, DWORD PTR [ecx]
  00096	8b 45 fc	 mov	 eax, DWORD PTR _pWindow$[ebp]
  00099	50		 push	 eax
  0009a	ff 52 08	 call	 DWORD PTR [edx+8]
$L49705:

; 382  :     }
; 383  : 
; 384  :     return lResult;

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _lResult$[ebp]
$L49697:

; 385  : }

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 10 00	 ret	 16			; 00000010H
?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z ENDP		; CDialog::DialogProc
_TEXT	ENDS
PUBLIC	??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_04CONG@hWnd?$AA@				; `string'
PUBLIC	??_C@_07OBKI@plParam?$AA@			; `string'
PUBLIC	??_C@_04JNGL@pCtx?$AA@				; `string'
PUBLIC	??_C@_0CI@IPFA@m_dwValidSignature?5?$DN?$DN?5pCtx?9?$DOdwSi@ ; `string'
PUBLIC	??_C@_07MMMB@pWindow?$AA@			; `string'
PUBLIC	??_C@_0BB@JEII@?$CBpWindow?9?$DOm_hWnd?$AA@	; `string'
EXTRN	?SetWindowContext@CWindow@@KGXPAUHWND__@@PAV1@@Z:NEAR ; CWindow::SetWindowContext
;	COMDAT ??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\base\dlgwrap.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CONG@hWnd?$AA@
CONST	SEGMENT
??_C@_04CONG@hWnd?$AA@ DB 'hWnd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07OBKI@plParam?$AA@
CONST	SEGMENT
??_C@_07OBKI@plParam?$AA@ DB 'plParam', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JNGL@pCtx?$AA@
CONST	SEGMENT
??_C@_04JNGL@pCtx?$AA@ DB 'pCtx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IPFA@m_dwValidSignature?5?$DN?$DN?5pCtx?9?$DOdwSi@
CONST	SEGMENT
??_C@_0CI@IPFA@m_dwValidSignature?5?$DN?$DN?5pCtx?9?$DOdwSi@ DB 'm_dwVali'
	DB	'dSignature == pCtx->dwSignature', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMMB@pWindow?$AA@
CONST	SEGMENT
??_C@_07MMMB@pWindow?$AA@ DB 'pWindow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEII@?$CBpWindow?9?$DOm_hWnd?$AA@
CONST	SEGMENT
??_C@_0BB@JEII@?$CBpWindow?9?$DOm_hWnd?$AA@ DB '!pWindow->m_hWnd', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnInitialCreate@CDialog@@KGPAVCWindow@@PAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_hWnd$ = 8
_plParam$ = 12
_pWindow$ = -8
_lResult$ = -16
_pCtx$ = -4
?OnInitialCreate@CDialog@@KGPAVCWindow@@PAUHWND__@@PAJ@Z PROC NEAR ; CDialog::OnInitialCreate, COMDAT

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 414  :     CWindow *               pWindow     = NULL;

  00006	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pWindow$[ebp], 0

; 415  :     LRESULT                 lResult     = 0;

  0000d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _lResult$[ebp], 0

; 416  :     LPCWINDOWCREATECTX      pCtx;
; 417  :     BOOL                    fHandled;
; 418  : 
; 419  :     ASSERT(hWnd);

  00014	68 a3 01 00 00	 push	 419			; 000001a3H
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04CONG@hWnd?$AA@ ; `string'
  00023	33 c0		 xor	 eax, eax
  00025	83 7d 08 00	 cmp	 DWORD PTR _hWnd$[ebp], 0
  00029	0f 94 c0	 sete	 al
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00032	83 c4 10	 add	 esp, 16			; 00000010H

; 420  :     ASSERT(plParam);

  00035	68 a4 01 00 00	 push	 420			; 000001a4H
  0003a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0003f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07OBKI@plParam?$AA@ ; `string'
  00044	33 c9		 xor	 ecx, ecx
  00046	83 7d 0c 00	 cmp	 DWORD PTR _plParam$[ebp], 0
  0004a	0f 94 c1	 sete	 cl
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00053	83 c4 10	 add	 esp, 16			; 00000010H

; 421  : 
; 422  :     //
; 423  :     // Get the CWindow object from the message parameters
; 424  :     //
; 425  : 
; 426  :     pCtx = (LPCWINDOWCREATECTX)*plParam;

  00056	8b 55 0c	 mov	 edx, DWORD PTR _plParam$[ebp]
  00059	8b 02		 mov	 eax, DWORD PTR [edx]
  0005b	89 45 fc	 mov	 DWORD PTR _pCtx$[ebp], eax

; 427  :     ASSERT(pCtx);

  0005e	68 ab 01 00 00	 push	 427			; 000001abH
  00063	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00068	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04JNGL@pCtx?$AA@ ; `string'
  0006d	33 c9		 xor	 ecx, ecx
  0006f	83 7d fc 00	 cmp	 DWORD PTR _pCtx$[ebp], 0
  00073	0f 94 c1	 sete	 cl
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0007c	83 c4 10	 add	 esp, 16			; 00000010H

; 428  : 
; 429  :     ASSERT(m_dwValidSignature == pCtx->dwSignature);

  0007f	68 ad 01 00 00	 push	 429			; 000001adH
  00084	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00089	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CI@IPFA@m_dwValidSignature?5?$DN?$DN?5pCtx?9?$DOdwSi@ ; `string'
  0008e	8b 55 fc	 mov	 edx, DWORD PTR _pCtx$[ebp]
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_dwValidSignature@CWindow@@1KB ; CWindow::m_dwValidSignature
  00096	33 c9		 xor	 ecx, ecx
  00098	3b 02		 cmp	 eax, DWORD PTR [edx]
  0009a	0f 95 c1	 setne	 cl
  0009d	51		 push	 ecx
  0009e	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000a3	83 c4 10	 add	 esp, 16			; 00000010H

; 430  : 
; 431  :     pWindow = pCtx->pWindow;

  000a6	8b 55 fc	 mov	 edx, DWORD PTR _pCtx$[ebp]
  000a9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ac	89 45 f8	 mov	 DWORD PTR _pWindow$[ebp], eax

; 432  :     ASSERT(pWindow);

  000af	68 b0 01 00 00	 push	 432			; 000001b0H
  000b4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000b9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07MMMB@pWindow?$AA@ ; `string'
  000be	33 c9		 xor	 ecx, ecx
  000c0	83 7d f8 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  000c4	0f 94 c1	 sete	 cl
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000cd	83 c4 10	 add	 esp, 16			; 00000010H

; 433  : 
; 434  :     *plParam = (LPARAM)pCtx->pvContext;

  000d0	8b 55 0c	 mov	 edx, DWORD PTR _plParam$[ebp]
  000d3	8b 45 fc	 mov	 eax, DWORD PTR _pCtx$[ebp]
  000d6	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000d9	89 0a		 mov	 DWORD PTR [edx], ecx

; 435  : 
; 436  :     ASSERT(!pWindow->m_hWnd);

  000db	68 b4 01 00 00	 push	 436			; 000001b4H
  000e0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@OKHB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000e5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@JEII@?$CBpWindow?9?$DOm_hWnd?$AA@ ; `string'
  000ea	8b 55 f8	 mov	 edx, DWORD PTR _pWindow$[ebp]
  000ed	33 c0		 xor	 eax, eax
  000ef	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  000f3	0f 95 c0	 setne	 al
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000fc	83 c4 10	 add	 esp, 16			; 00000010H

; 437  :     pWindow->m_hWnd = hWnd;

  000ff	8b 4d f8	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  00102	8b 55 08	 mov	 edx, DWORD PTR _hWnd$[ebp]
  00105	89 51 18	 mov	 DWORD PTR [ecx+24], edx

; 438  : 
; 439  :     //
; 440  :     // Store the HWND => CWindow lookup data
; 441  :     //
; 442  : 
; 443  :     SetWindowContext(hWnd, pWindow);

  00108	8b 45 f8	 mov	 eax, DWORD PTR _pWindow$[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0010f	51		 push	 ecx
  00110	e8 00 00 00 00	 call	 ?SetWindowContext@CWindow@@KGXPAUHWND__@@PAV1@@Z ; CWindow::SetWindowContext

; 444  : 
; 445  :     //
; 446  :     // Increment the window object's reference count
; 447  :     //
; 448  : 
; 449  :     pWindow->AddRef();

  00115	8b 55 f8	 mov	 edx, DWORD PTR _pWindow$[ebp]
  00118	8b 02		 mov	 eax, DWORD PTR [edx]
  0011a	8b 4d f8	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  0011d	51		 push	 ecx
  0011e	ff 50 04	 call	 DWORD PTR [eax+4]

; 450  : 
; 451  :     return pWindow;

  00121	8b 45 f8	 mov	 eax, DWORD PTR _pWindow$[ebp]

; 452  : }

  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 08 00	 ret	 8
?OnInitialCreate@CDialog@@KGPAVCWindow@@PAUHWND__@@PAJ@Z ENDP ; CDialog::OnInitialCreate
_TEXT	ENDS
EXTRN	?HandleMessage@CWindow@@UAEHIIJPAJ@Z:NEAR	; CWindow::HandleMessage
; Function compile flags: /Odt
;	COMDAT ?HandleMessage@CDialog@@UAEHIIJPAJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_plResult$ = 20
_this$ = -8
_fHandled$ = -4
?HandleMessage@CDialog@@UAEHIIJPAJ@Z PROC NEAR		; CDialog::HandleMessage, COMDAT
; _this$ = ecx

; 484  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 485  :     BOOL                    fHandled;
; 486  :     
; 487  :     switch(uMsg)
; 488  :     {

  00009	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0000f	83 7d f4 01	 cmp	 DWORD PTR -12+[ebp], 1
  00013	74 0b		 je	 SHORT $L49735
  00015	81 7d f4 10 01
	00 00		 cmp	 DWORD PTR -12+[ebp], 272 ; 00000110H
  0001c	74 04		 je	 SHORT $L49736
  0001e	eb 1a		 jmp	 SHORT $L49738
$L49735:

; 489  :         case WM_CREATE:
; 490  :             break;

  00020	eb 33		 jmp	 SHORT $L49732
$L49736:

; 491  : 
; 492  :         case WM_INITDIALOG:
; 493  :             fHandled = OnCreate((LPVOID)lParam, plResult);

  00022	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  00029	52		 push	 edx
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	ff 52 60	 call	 DWORD PTR [edx+96]
  00035	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 494  :             break;

  00038	eb 1b		 jmp	 SHORT $L49732
$L49738:

; 495  :         
; 496  :         default:
; 497  :             fHandled = CWindow::HandleMessage(uMsg, wParam, lParam, plResult);

  0003a	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00045	52		 push	 edx
  00046	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?HandleMessage@CWindow@@UAEHIIJPAJ@Z ; CWindow::HandleMessage
  00052	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax
$L49732:

; 498  :             break;
; 499  :     }
; 500  : 
; 501  :     return fHandled;

  00055	8b 45 fc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 502  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 10 00	 ret	 16			; 00000010H
?HandleMessage@CDialog@@UAEHIIJPAJ@Z ENDP		; CDialog::HandleMessage
_TEXT	ENDS
END
