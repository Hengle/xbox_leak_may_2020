; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@CLP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GHLG@hdc?5?$DN?$DN?5m_hdc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@KGFD@XACT?3GUI?3TreeView?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@NCOE@SysTreeView32?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@NPCB@m_hImageList?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GKAH@pItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PFHL@pszText?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05JBML@hIcon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CK@IMKP@CTreeViewType?$CIthis?0?5pszText?0?5nIm@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05BNGD@pTree?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BPEN@?$CBm_hTreeItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07FEMJ@XACTGUI?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@PKKF@CTreeViewItem?3?3Create?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@FCMH@Type?5not?5registered?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertTailListUninit@@YGXPAU_LIST_ENTRY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRefCount@DirectSound@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RestoreObject@CTempSelectObject@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetResolution@CWaveformRenderer@@UAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CTreeViewCtrl@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CTreeViewCtrl@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CTreeViewCtrl@@UAEHPAVCTreeView@@KKHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTreeView@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTreeViewCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTreeViewCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeViewCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTreeView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CTreeView@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CTreeView@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CTreeView@@UAEHIIIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTreeViewType@@QAE@PAVCTreeView@@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeViewType@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTreeViewType@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTreeViewItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeViewItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTreeViewItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Remove@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDelete@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetText@CTreeViewItem@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PtrFromTreeItem@CTreeViewItem@@SGPAV1@PAVCTreeView@@PAU_TREEITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTreeView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTreeViewCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTreeViewType@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTreeViewItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?m_pszClassName@CTreeView@@2QBDB		; CTreeView::m_pszClassName
PUBLIC	??_C@_0BC@KGFD@XACT?3GUI?3TreeView?$AA@		; `string'
;	COMDAT ??_C@_0BC@KGFD@XACT?3GUI?3TreeView?$AA@
CONST	SEGMENT
??_C@_0BC@KGFD@XACT?3GUI?3TreeView?$AA@ DB 'XACT:GUI:TreeView', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?m_pszClassName@CTreeView@@2QBDB DD FLAT:??_C@_0BC@KGFD@XACT?3GUI?3TreeView?$AA@ ; CTreeView::m_pszClassName
?dwExStyle@?1??OnCreate@CTreeView@@UAEHPAXPAJ@Z@4KB DD 00H ; `CTreeView::OnCreate'::`2'::dwExStyle
?dwStyle@?1??OnCreate@CTreeView@@UAEHPAXPAJ@Z@4KB DD 050000800H ; `CTreeView::OnCreate'::`2'::dwStyle
CONST	ENDS
PUBLIC	?Create@CTreeViewCtrl@@UAEHPAVCTreeView@@KKHHHH@Z ; CTreeViewCtrl::Create
PUBLIC	??_C@_0O@NCOE@SysTreeView32?$AA@		; `string'
EXTRN	?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z:NEAR	; CWindow::Create
;	COMDAT ??_C@_0O@NCOE@SysTreeView32?$AA@
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
CONST	SEGMENT
??_C@_0O@NCOE@SysTreeView32?$AA@ DB 'SysTreeView32', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CTreeViewCtrl@@UAEHPAVCTreeView@@KKHHHH@Z
_TEXT	SEGMENT
_pParent$ = 8
_dwExStyle$ = 12
_dwStyle$ = 16
_x$ = 20
_y$ = 24
_nWidth$ = 28
_nHeight$ = 32
_this$ = -4
?Create@CTreeViewCtrl@@UAEHPAVCTreeView@@KKHHHH@Z PROC NEAR ; CTreeViewCtrl::Create, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   :     return CWindow::Create(pParent, WC_TREEVIEW, NULL, dwExStyle, dwStyle, x, y, nWidth, nHeight);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	8b 45 20	 mov	 eax, DWORD PTR _nHeight$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 1c	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 18	 mov	 edx, DWORD PTR _y$[ebp]
  00016	52		 push	 edx
  00017	8b 45 14	 mov	 eax, DWORD PTR _x$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 10	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 0c	 mov	 edx, DWORD PTR _dwExStyle$[ebp]
  00022	52		 push	 edx
  00023	6a 00		 push	 0
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@NCOE@SysTreeView32?$AA@ ; `string'
  0002a	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z ; CWindow::Create

; 56   : }

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 1c 00	 ret	 28			; 0000001cH
?Create@CTreeViewCtrl@@UAEHPAVCTreeView@@KKHHHH@Z ENDP	; CTreeViewCtrl::Create
_TEXT	ENDS
PUBLIC	?IsWindow@CWindow@@UAEHXZ			; CWindow::IsWindow
PUBLIC	?SendMessageA@CWindow@@UAEJIIJ@Z		; CWindow::SendMessageA
PUBLIC	??0CTreeViewCtrl@@QAE@XZ			; CTreeViewCtrl::CTreeViewCtrl
PUBLIC	?PostMessageA@CWindow@@UAEJIIJ@Z		; CWindow::PostMessageA
PUBLIC	?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z	; CWindow::SendDlgItemMessageA
PUBLIC	?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z		; CWindow::GetDlgItem
PUBLIC	?SetWindowTextA@CWindow@@UAEHPBD@Z		; CWindow::SetWindowTextA
PUBLIC	?SetDlgItemTextA@CWindow@@UAEHHPBD@Z		; CWindow::SetDlgItemTextA
PUBLIC	?SetDlgItemInt@CWindow@@UAEHHIH@Z		; CWindow::SetDlgItemInt
PUBLIC	?GetDlgItemTextA@CWindow@@UAEHHPADH@Z		; CWindow::GetDlgItemTextA
PUBLIC	??0CTreeView@@QAE@XZ				; CTreeView::CTreeView
PUBLIC	?GetDlgItemInt@CWindow@@UAEIHPAHH@Z		; CWindow::GetDlgItemInt
PUBLIC	?MoveWindow@CWindow@@UAEHHHHHH@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z	; CWindow::MoveWindow
PUBLIC	?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetWindowRect
PUBLIC	?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::GetClientRect
PUBLIC	?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z	; CTreeView::Create
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z	; CWindow::ScreenToClient
PUBLIC	?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z	; CTreeView::RegisterType
PUBLIC	?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z	; CWindow::ScreenToClient
PUBLIC	?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z ; CTreeView::FindRegisteredType
PUBLIC	?DragAcceptFiles@CWindow@@UAEXH@Z		; CWindow::DragAcceptFiles
PUBLIC	?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ ; CTreeView::GetSelection
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z ; CTreeView::GetNextItem
PUBLIC	?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z ; CTreeView::PtrFromTreeItem
PUBLIC	?OnCreate@CTreeView@@UAEHPAXPAJ@Z		; CTreeView::OnCreate
PUBLIC	?OnDestroy@CTreeView@@UAEHPAJ@Z			; CTreeView::OnDestroy
PUBLIC	?OnClose@CWindow@@UAEHPAJ@Z			; CWindow::OnClose
PUBLIC	?OnSize@CTreeView@@UAEHIIIPAJ@Z			; CTreeView::OnSize
PUBLIC	?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z ; CTreeView::OnContextMenu
PUBLIC	?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z	; CWindow::OnCommand
PUBLIC	?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z	; CTreeView::OnNotify
PUBLIC	?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z ; CTreeView::OnDeleteItem
PUBLIC	?OnSysCommand@CWindow@@UAEHIPAJ@Z		; CWindow::OnSysCommand
PUBLIC	?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z	; CTreeView::OnDoubleClick
PUBLIC	?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z ; CTreeView::OnGetInfoTip
PUBLIC	?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z ; CTreeView::OnEndLabelEdit
PUBLIC	?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z	; CWindow::OnEraseBackground
PUBLIC	?OnPaint@CWindow@@UAEHPAJ@Z			; CWindow::OnPaint
PUBLIC	??_7CTreeView@@6B@				; CTreeView::`vftable'
PUBLIC	??_GCTreeView@@UAEPAXI@Z			; CTreeView::`scalar deleting destructor'
PUBLIC	??_ECTreeView@@UAEPAXI@Z			; CTreeView::`vector deleting destructor'
PUBLIC	?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z	; CWindow::OnDropFiles
PUBLIC	?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z	; CWindow::OnScroll
PUBLIC	?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z	; CWindow::DefWindowProcA
EXTRN	__purecall:NEAR
EXTRN	__imp__ImageList_Create@20:NEAR
EXTRN	??0CWindow@@QAE@III@Z:NEAR			; CWindow::CWindow
EXTRN	?Destroy@CWindow@@UAEXXZ:NEAR			; CWindow::Destroy
EXTRN	?SetRedraw@CWindow@@UAEHH@Z:NEAR		; CWindow::SetRedraw
EXTRN	?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z:NEAR ; CWindow::DispatchMessageA
EXTRN	?HandleMessage@CWindow@@UAEHIIJPAJ@Z:NEAR	; CWindow::HandleMessage
EXTRN	?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CWindow::OnScroll
;	COMDAT ??_7CTreeView@@6B@
CONST	SEGMENT
??_7CTreeView@@6B@ DD FLAT:??_ECTreeView@@UAEPAXI@Z	; CTreeView::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CTreeView@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CTreeView@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CTreeView@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CWindow@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z
	DD	FLAT:?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z
	DD	FLAT:?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z
	DD	FLAT:?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ
	DD	FLAT:?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z
	DD	FLAT:?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z
	DD	FLAT:?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z
	DD	FLAT:?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z
	DD	FLAT:?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z
	DD	FLAT:?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CTreeView@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CTreeView@@QAE@XZ PROC NEAR				; CTreeView::CTreeView, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a ff		 push	 -1
  0000b	6a ff		 push	 -1
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ??0CWindow@@QAE@III@Z	; CWindow::CWindow
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 30	 add	 ecx, 48			; 00000030H
  0001b	e8 00 00 00 00	 call	 ??0CTreeViewCtrl@@QAE@XZ ; CTreeViewCtrl::CTreeViewCtrl
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTreeView@@6B@ ; CTreeView::`vftable'

; 82   :     //
; 83   :     // Initialize the type list
; 84   :     //
; 85   :     
; 86   :     InitializeListHead(&m_lstTypes);

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 64	 add	 ecx, 100		; 00000064H
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	89 4a 64	 mov	 DWORD PTR [edx+100], ecx
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  0003e	89 50 68	 mov	 DWORD PTR [eax+104], edx

; 87   : 
; 88   :     //
; 89   :     // Create the image list
; 90   :     //
; 91   : 
; 92   :     m_hImageList = ImageList_Create(16, 16, ILC_COLOR16 | ILC_MASK, 0, 0x100);

  00041	68 00 01 00 00	 push	 256			; 00000100H
  00046	6a 00		 push	 0
  00048	6a 11		 push	 17			; 00000011H
  0004a	6a 10		 push	 16			; 00000010H
  0004c	6a 10		 push	 16			; 00000010H
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Create@20
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	89 41 60	 mov	 DWORD PTR [ecx+96], eax

; 93   : }

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??0CTreeView@@QAE@XZ ENDP				; CTreeView::CTreeView
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnClose, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 247  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnClose@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnClose
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CWindow::OnCommand, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 261  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 262  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CWindow::OnCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWindow@@UAEHIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysCommand@CWindow@@UAEHIPAJ@Z PROC NEAR		; CWindow::OnSysCommand, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 266  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 267  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnSysCommand@CWindow@@UAEHIPAJ@Z ENDP			; CWindow::OnSysCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z PROC NEAR ; CWindow::OnEraseBackground, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 276  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 277  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z ENDP	; CWindow::OnEraseBackground
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnPaint@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnPaint@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnPaint, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 281  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 282  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnPaint@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnPaint
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z PROC NEAR	; CWindow::OnScroll, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 287  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z ENDP		; CWindow::OnScroll
_TEXT	ENDS
EXTRN	__imp__DefWindowProcA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z PROC NEAR	; CWindow::DefWindowProcA, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 296  :     return ::DefWindowProc(hWnd, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00016	50		 push	 eax
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 297  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z ENDP	; CWindow::DefWindowProcA
_TEXT	ENDS
PUBLIC	??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_04BEIE@this?$AA@				; `string'
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\base\wndwrap.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BEIE@this?$AA@
CONST	SEGMENT
??_C@_04BEIE@this?$AA@ DB 'this', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 301  :     ASSERT(this);

  00007	68 2d 01 00 00	 push	 301			; 0000012dH
  0000c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04BEIE@this?$AA@ ; `string'
  00016	33 c0		 xor	 eax, eax
  00018	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0001c	0f 94 c0	 sete	 al
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00025	83 c4 10	 add	 esp, 16			; 00000010H

; 302  :     return m_hWnd;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 303  : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
_TEXT	ENDS
PUBLIC	??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@	; `string'
EXTRN	__imp__IsWindow@4:NEAR
;	COMDAT ??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ DB '::IsWindow(m_hWnd)', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?IsWindow@CWindow@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsWindow@CWindow@@UAEHXZ PROC NEAR			; CWindow::IsWindow, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  :     if(!m_hWnd)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0000e	75 04		 jne	 SHORT $L49126

; 308  :     {
; 309  :         return FALSE;

  00010	33 c0		 xor	 eax, eax
  00012	eb 2f		 jmp	 SHORT $L49125
$L49126:

; 310  :     }
; 311  : 
; 312  :     ASSERT(::IsWindow(m_hWnd));

  00014	68 38 01 00 00	 push	 312			; 00000138H
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@CGCA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GMNP@?3?3IsWindow?$CIm_hWnd?$CJ?$AA@ ; `string'
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00029	52		 push	 edx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00030	f7 d8		 neg	 eax
  00032	1b c0		 sbb	 eax, eax
  00034	40		 inc	 eax
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 313  : 
; 314  :     return TRUE;

  0003e	b8 01 00 00 00	 mov	 eax, 1
$L49125:

; 315  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?IsWindow@CWindow@@UAEHXZ ENDP				; CWindow::IsWindow
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?SendMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::SendMessageA, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  :     return ::SendMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 320  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SendMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::SendMessageA
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?PostMessageA@CWindow@@UAEJIIJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWindow@@UAEJIIJ@Z PROC NEAR		; CWindow::PostMessageA, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 324  :     return ::PostMessage(m_hWnd, uMsg, wParam, lParam);

  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 325  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?PostMessageA@CWindow@@UAEJIIJ@Z ENDP			; CWindow::PostMessageA
_TEXT	ENDS
EXTRN	__imp__SetWindowTextA@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetWindowTextA@CWindow@@UAEHPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?SetWindowTextA@CWindow@@UAEHPBD@Z PROC NEAR		; CWindow::SetWindowTextA, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  :     return ::SetWindowText(m_hWnd, pszText);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 330  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetWindowTextA@CWindow@@UAEHPBD@Z ENDP			; CWindow::SetWindowTextA
_TEXT	ENDS
EXTRN	__imp__MoveWindow@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?MoveWindow@CWindow@@UAEHHHHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_nWidth$ = 16
_nHeight$ = 20
_fRepaint$ = 24
_this$ = -4
?MoveWindow@CWindow@@UAEHHHHHH@Z PROC NEAR		; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 334  :     return ::MoveWindow(m_hWnd, x, y, nWidth, nHeight, fRepaint);

  00007	8b 45 18	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 14	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 10	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 335  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 14 00	 ret	 20			; 00000014H
?MoveWindow@CWindow@@UAEHHHHHH@Z ENDP			; CWindow::MoveWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_fRepaint$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 338  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  :     return ::MoveWindow(m_hWnd, prcWindow->left, prcWindow->top, prcWindow->right - prcWindow->left, prcWindow->bottom - prcWindow->top, fRepaint);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _fRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _prcWindow$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _prcWindow$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 340  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z ENDP		; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetWindowRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcWindow$ = 8
_this$ = -4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetWindowRect, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  :     return ::GetWindowRect(m_hWnd, prcWindow);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcWindow$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 345  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetWindowRect
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prcClient$ = 8
_this$ = -4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::GetClientRect, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 349  :     return ::GetClientRect(m_hWnd, prcClient);

  00007	8b 45 08	 mov	 eax, DWORD PTR _prcClient$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 350  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z ENDP		; CWindow::GetClientRect
_TEXT	ENDS
EXTRN	__imp__ScreenToClient@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
_TEXT	SEGMENT
_ppt$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  :     return ::ScreenToClient(m_hWnd, ppt);

  00007	8b 45 08	 mov	 eax, DWORD PTR _ppt$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 355  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z ENDP	; CWindow::ScreenToClient
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
_TEXT	SEGMENT
_prc$ = 8
_this$ = -4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z PROC NEAR	; CWindow::ScreenToClient, COMDAT
; _this$ = ecx

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 359  :     if(!::ScreenToClient(m_hWnd, (LPPOINT)&prc->left))

  00007	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $L49174

; 360  :     {
; 361  :         return FALSE;

  0001c	33 c0		 xor	 eax, eax
  0001e	eb 14		 jmp	 SHORT $L49172
$L49174:

; 362  :     }
; 363  : 
; 364  :     return ::ScreenToClient(m_hWnd, (LPPOINT)&prc->right);

  00020	8b 45 08	 mov	 eax, DWORD PTR _prc$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	50		 push	 eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0002d	52		 push	 edx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
$L49172:

; 365  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z ENDP	; CWindow::ScreenToClient
_TEXT	ENDS
EXTRN	__imp__SendDlgItemMessageA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
_TEXT	SEGMENT
_nItemId$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_this$ = -4
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z PROC NEAR	; CWindow::SendDlgItemMessageA, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 369  :     return ::SendDlgItemMessage(m_hWnd, nItemId, uMsg, wParam, lParam);

  00007	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0001d	52		 push	 edx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 370  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z ENDP		; CWindow::SendDlgItemMessageA
_TEXT	ENDS
EXTRN	__imp__GetDlgItem@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
_TEXT	SEGMENT
_nItemId$ = 8
_this$ = -4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z PROC NEAR	; CWindow::GetDlgItem, COMDAT
; _this$ = ecx

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 374  :     return ::GetDlgItem(m_hWnd, nItemId);

  00007	8b 45 08	 mov	 eax, DWORD PTR _nItemId$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8

; 375  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z ENDP		; CWindow::GetDlgItem
_TEXT	ENDS
EXTRN	__imp__SetDlgItemTextA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_this$ = -4
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z PROC NEAR		; CWindow::SetDlgItemTextA, COMDAT
; _this$ = ecx

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 379  :     return ::SetDlgItemText(m_hWnd, nItemId, pszString);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _nItemId$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 380  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?SetDlgItemTextA@CWindow@@UAEHHPBD@Z ENDP		; CWindow::SetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__SetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetDlgItemInt@CWindow@@UAEHHIH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_nValue$ = 12
_fSigned$ = 16
_this$ = -4
?SetDlgItemInt@CWindow@@UAEHHIH@Z PROC NEAR		; CWindow::SetDlgItemInt, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  :     return ::SetDlgItemInt(m_hWnd, nItemId, nValue, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _nValue$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemInt@16

; 385  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SetDlgItemInt@CWindow@@UAEHHIH@Z ENDP			; CWindow::SetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__GetDlgItemTextA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pszString$ = 12
_nLength$ = 16
_this$ = -4
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z PROC NEAR		; CWindow::GetDlgItemTextA, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  :     return ::GetDlgItemText(m_hWnd, nItemId, pszString, nLength);

  00007	8b 45 10	 mov	 eax, DWORD PTR _nLength$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pszString$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 390  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemTextA@CWindow@@UAEHHPADH@Z ENDP		; CWindow::GetDlgItemTextA
_TEXT	ENDS
EXTRN	__imp__GetDlgItemInt@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
_TEXT	SEGMENT
_nItemId$ = 8
_pfTranslated$ = 12
_fSigned$ = 16
_this$ = -4
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z PROC NEAR		; CWindow::GetDlgItemInt, COMDAT
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 394  :     return ::GetDlgItemInt(m_hWnd, nItemId, pfTranslated, fSigned);

  00007	8b 45 10	 mov	 eax, DWORD PTR _fSigned$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _pfTranslated$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nItemId$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemInt@16

; 395  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetDlgItemInt@CWindow@@UAEIHPAHH@Z ENDP		; CWindow::GetDlgItemInt
_TEXT	ENDS
EXTRN	__imp__DragAcceptFiles@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?DragAcceptFiles@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fAccept$ = 8
_this$ = -4
?DragAcceptFiles@CWindow@@UAEXH@Z PROC NEAR		; CWindow::DragAcceptFiles, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 399  :     ::DragAcceptFiles(m_hWnd, fAccept);

  00007	8b 45 08	 mov	 eax, DWORD PTR _fAccept$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragAcceptFiles@8

; 400  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?DragAcceptFiles@CWindow@@UAEXH@Z ENDP			; CWindow::DragAcceptFiles
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z PROC NEAR	; CWindow::OnDropFiles, COMDAT
; _this$ = ecx

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 404  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 405  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z ENDP	; CWindow::OnDropFiles
_TEXT	ENDS
PUBLIC	??1CTreeView@@UAE@XZ				; CTreeView::~CTreeView
; Function compile flags: /Odt
;	COMDAT ??_GCTreeView@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTreeView@@UAEPAXI@Z PROC NEAR			; CTreeView::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTreeView@@UAE@XZ	; CTreeView::~CTreeView
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L50459
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L50459:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCTreeView@@UAEPAXI@Z ENDP				; CTreeView::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?AddRef@CTreeViewCtrl@@UAGKXZ			; CTreeViewCtrl::AddRef
PUBLIC	?Release@CTreeViewCtrl@@UAGKXZ			; CTreeViewCtrl::Release
PUBLIC	??_7CTreeViewCtrl@@6B@				; CTreeViewCtrl::`vftable'
PUBLIC	??_GCTreeViewCtrl@@UAEPAXI@Z			; CTreeViewCtrl::`scalar deleting destructor'
PUBLIC	??_ECTreeViewCtrl@@UAEPAXI@Z			; CTreeViewCtrl::`vector deleting destructor'
PUBLIC	?OnCreate@CWindow@@UAEHPAXPAJ@Z			; CWindow::OnCreate
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
PUBLIC	?OnSize@CWindow@@UAEHIIIPAJ@Z			; CWindow::OnSize
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
;	COMDAT ??_7CTreeViewCtrl@@6B@
CONST	SEGMENT
??_7CTreeViewCtrl@@6B@ DD FLAT:??_ECTreeViewCtrl@@UAEPAXI@Z ; CTreeViewCtrl::`vftable'
	DD	FLAT:?AddRef@CTreeViewCtrl@@UAGKXZ
	DD	FLAT:?Release@CTreeViewCtrl@@UAGKXZ
	DD	FLAT:?IsWindow@CWindow@@UAEHXZ
	DD	FLAT:?Destroy@CWindow@@UAEXXZ
	DD	FLAT:?SetRedraw@CWindow@@UAEHH@Z
	DD	FLAT:?SendMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?PostMessageA@CWindow@@UAEJIIJ@Z
	DD	FLAT:?SendDlgItemMessageA@CWindow@@UAEJHIIJ@Z
	DD	FLAT:?GetDlgItem@CWindow@@UAEPAUHWND__@@H@Z
	DD	FLAT:?SetWindowTextA@CWindow@@UAEHPBD@Z
	DD	FLAT:?SetDlgItemTextA@CWindow@@UAEHHPBD@Z
	DD	FLAT:?SetDlgItemInt@CWindow@@UAEHHIH@Z
	DD	FLAT:?GetDlgItemTextA@CWindow@@UAEHHPADH@Z
	DD	FLAT:?GetDlgItemInt@CWindow@@UAEIHPAHH@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHPBUtagRECT@@H@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEHHHHHH@Z
	DD	FLAT:?GetWindowRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?GetClientRect@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagRECT@@@Z
	DD	FLAT:?ScreenToClient@CWindow@@UAEHPAUtagPOINT@@@Z
	DD	FLAT:?DragAcceptFiles@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHIIIPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnSysCommand@CWindow@@UAEHIPAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnEraseBackground@CWindow@@UAEHPAUHDC__@@PAJ@Z
	DD	FLAT:?OnPaint@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDropFiles@CWindow@@UAEHPAUHDROP__@@PAJ@Z
	DD	FLAT:?HandleMessage@CWindow@@UAEHIIJPAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnScroll@CWindow@@UAEHIPAUHWND__@@HPAJ@Z
	DD	FLAT:?DefWindowProcA@CWindow@@UAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z
	DD	FLAT:?Create@CTreeViewCtrl@@UAEHPAVCTreeView@@KKHHHH@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CTreeViewCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CTreeViewCtrl@@QAE@XZ PROC NEAR			; CTreeViewCtrl::CTreeViewCtrl, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a ff		 push	 -1
  0000b	6a ff		 push	 -1
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ??0CWindow@@QAE@III@Z	; CWindow::CWindow
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTreeViewCtrl@@6B@ ; CTreeViewCtrl::`vftable'
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??0CTreeViewCtrl@@QAE@XZ ENDP				; CTreeViewCtrl::CTreeViewCtrl
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\base\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCreate@CWindow@@UAEHPAXPAJ@Z PROC NEAR		; CWindow::OnCreate, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 242  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnCreate@CWindow@@UAEHPAXPAJ@Z ENDP			; CWindow::OnCreate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 252  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHIIIPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 256  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 257  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHIIIPAJ@Z ENDP			; CWindow::OnSize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 272  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 292  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.h
_TEXT	ENDS
;	COMDAT ?AddRef@CTreeViewCtrl@@UAGKXZ
_TEXT	SEGMENT
?AddRef@CTreeViewCtrl@@UAGKXZ PROC NEAR			; CTreeViewCtrl::AddRef, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 46   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?AddRef@CTreeViewCtrl@@UAGKXZ ENDP			; CTreeViewCtrl::AddRef
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Release@CTreeViewCtrl@@UAGKXZ
_TEXT	SEGMENT
?Release@CTreeViewCtrl@@UAGKXZ PROC NEAR		; CTreeViewCtrl::Release, COMDAT

; 49   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 50   :     return 1;

  00003	b8 01 00 00 00	 mov	 eax, 1

; 51   : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Release@CTreeViewCtrl@@UAGKXZ ENDP			; CTreeViewCtrl::Release
_TEXT	ENDS
PUBLIC	??1CTreeViewCtrl@@UAE@XZ			; CTreeViewCtrl::~CTreeViewCtrl
; Function compile flags: /Odt
;	COMDAT ??_GCTreeViewCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTreeViewCtrl@@UAEPAXI@Z PROC NEAR			; CTreeViewCtrl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTreeViewCtrl@@UAE@XZ ; CTreeViewCtrl::~CTreeViewCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L50467
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L50467:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCTreeViewCtrl@@UAEPAXI@Z ENDP			; CTreeViewCtrl::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWindow@@UAE@XZ:NEAR				; CWindow::~CWindow
; Function compile flags: /Odt
;	COMDAT ??1CTreeViewCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CTreeViewCtrl@@UAE@XZ PROC NEAR			; CTreeViewCtrl::~CTreeViewCtrl, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CTreeViewCtrl@@UAE@XZ ENDP				; CTreeViewCtrl::~CTreeViewCtrl
_TEXT	ENDS
PUBLIC	?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z	; RemoveEntryList
EXTRN	__imp__ImageList_Destroy@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
;	COMDAT ??1CTreeView@@UAE@XZ
_TEXT	SEGMENT
_this$ = -12
_pType$ = -4
_pleEntry$ = -8
??1CTreeView@@UAE@XZ PROC NEAR				; CTreeView::~CTreeView, COMDAT
; _this$ = ecx

; 118  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTreeView@@6B@ ; CTreeView::`vftable'
$L50475:

; 119  :     CTreeViewType *         pType;
; 120  :     PLIST_ENTRY             pleEntry;
; 121  :     
; 122  :     //
; 123  :     // Free registered types
; 124  :     //
; 125  : 
; 126  :     while((pleEntry = RemoveEntryList(m_lstTypes.Flink)) != &m_lstTypes)

  00012	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ; RemoveEntryList
  0001e	89 45 f8	 mov	 DWORD PTR _pleEntry$[ebp], eax
  00021	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c0 64	 add	 eax, 100		; 00000064H
  00027	39 45 f8	 cmp	 DWORD PTR _pleEntry$[ebp], eax
  0002a	74 24		 je	 SHORT $L50476

; 127  :     {
; 128  :         pType = CONTAINING_RECORD(pleEntry, CTreeViewType, m_leTypes);

  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _pleEntry$[ebp]
  0002f	83 e9 08	 sub	 ecx, 8
  00032	89 4d fc	 mov	 DWORD PTR _pType$[ebp], ecx

; 129  : 
; 130  :         RELEASE(pType);

  00035	83 7d fc 00	 cmp	 DWORD PTR _pType$[ebp], 0
  00039	74 13		 je	 SHORT $L50481
  0003b	8b 55 fc	 mov	 edx, DWORD PTR _pType$[ebp]
  0003e	8b 02		 mov	 eax, DWORD PTR [edx]
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _pType$[ebp]
  00043	51		 push	 ecx
  00044	ff 50 08	 call	 DWORD PTR [eax+8]
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pType$[ebp], 0
$L50481:

; 131  :     }

  0004e	eb c2		 jmp	 SHORT $L50475
$L50476:

; 132  : 
; 133  :     //
; 134  :     // Free the image list
; 135  :     //
; 136  : 
; 137  :     ImageList_Destroy(m_hImageList);

  00050	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Destroy@4

; 138  : }

  0005d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 c1 30	 add	 ecx, 48			; 00000030H
  00063	e8 00 00 00 00	 call	 ??1CTreeViewCtrl@@UAE@XZ ; CTreeViewCtrl::~CTreeViewCtrl
  00068	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??1CTreeView@@UAE@XZ ENDP				; CTreeView::~CTreeView
_TEXT	ENDS
PUBLIC	?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList
PUBLIC	??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
; File c:\xbox\private\windows\directx\dsound\common\ntlist.h
CONST	SEGMENT
??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\common\ntlist.h', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z
_TEXT	SEGMENT
_Entry$ = 8
?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z PROC NEAR	; RemoveEntryList, COMDAT

; 215  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  :     AssertValidEntryList(Entry, ASSERT_VALID_ONLY);

  00003	68 d8 00 00 00	 push	 216			; 000000d8H
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000d	6a 00		 push	 0
  0000f	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 217  : 
; 218  :     if(IsEntryInList(Entry))

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0001e	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00020	74 2c		 je	 SHORT $L47516

; 219  :     {
; 220  :         Entry->Flink->Blink = Entry->Blink;

  00022	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0002a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 221  :         Entry->Blink->Flink = Entry->Flink;

  00030	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 0a		 mov	 DWORD PTR [edx], ecx

; 222  : 
; 223  :         Entry->Flink = Entry->Blink = Entry;

  0003d	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  00040	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00043	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00049	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0004c	89 11		 mov	 DWORD PTR [ecx], edx
$L47516:

; 224  :     }
; 225  : 
; 226  :     return Entry;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]

; 227  : }

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ENDP	; RemoveEntryList
_TEXT	ENDS
PUBLIC	??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@	; `string'
PUBLIC	??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ ; `string'
PUBLIC	??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ ; `string'
PUBLIC	??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@	; `string'
PUBLIC	??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@	; `string'
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT
??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@ DB 'NULL list entry pointe'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT
??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ DB 'List entry conta'
	DB	'ins NULL pointer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT
??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ DB 'List entry part'
	DB	'ially points to itself', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT
??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@ DB 'List entry not in list'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT
??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@ DB 'List entry in list', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT
_Entry$ = 8
_nFlags$ = 12
_pszFile$ = 16
_nLine$ = 20
?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z PROC NEAR ; __AssertValidEntryList, COMDAT

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   :     if(!Entry)

  00003	83 7d 08 00	 cmp	 DWORD PTR _Entry$[ebp], 0
  00007	75 1c		 jne	 SHORT $L47476

; 57   :     {
; 58   :         DirectSound::CDebug::Assert(TRUE, "NULL list entry pointer", pszFile, nLine);

  00009	8b 45 14	 mov	 eax, DWORD PTR _nLine$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  00010	51		 push	 ecx
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@ ; `string'
  00016	6a 01		 push	 1
  00018	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0001d	83 c4 10	 add	 esp, 16			; 00000010H

; 59   :     }
; 60   :     else if(!Entry->Flink || !Entry->Blink)

  00020	e9 c0 00 00 00	 jmp	 $L47478
$L47476:
  00025	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  00028	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0002b	74 09		 je	 SHORT $L47480
  0002d	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 1c		 jne	 SHORT $L47479
$L47480:

; 61   :     {
; 62   :         DirectSound::CDebug::Assert(TRUE, "List entry contains NULL pointer", pszFile, nLine);

  00036	8b 4d 14	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00039	51		 push	 ecx
  0003a	8b 55 10	 mov	 edx, DWORD PTR _pszFile$[ebp]
  0003d	52		 push	 edx
  0003e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ ; `string'
  00043	6a 01		 push	 1
  00045	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0004a	83 c4 10	 add	 esp, 16			; 00000010H

; 63   :     }
; 64   :     else if((Entry == Entry->Flink) || (Entry == Entry->Blink))

  0004d	e9 93 00 00 00	 jmp	 $L47482
$L47479:
  00052	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00058	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0005a	74 0b		 je	 SHORT $L47484
  0005c	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0005f	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00062	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00065	75 2e		 jne	 SHORT $L47483
$L47484:

; 65   :     {
; 66   :         if((Entry != Entry->Flink) || (Entry != Entry->Blink))

  00067	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0006a	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0006d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0006f	75 0b		 jne	 SHORT $L47486
  00071	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00077	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0007a	74 17		 je	 SHORT $L47485
$L47486:

; 67   :         {
; 68   :             DirectSound::CDebug::Assert(TRUE, "List entry partially points to itself", pszFile, nLine);

  0007c	8b 55 14	 mov	 edx, DWORD PTR _nLine$[ebp]
  0007f	52		 push	 edx
  00080	8b 45 10	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ ; `string'
  00089	6a 01		 push	 1
  0008b	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00090	83 c4 10	 add	 esp, 16			; 00000010H
$L47485:

; 69   :         }
; 70   :     }
; 71   :     else if(ASSERT_IN_LIST == nFlags)

  00093	eb 50		 jmp	 SHORT $L47488
$L47483:
  00095	83 7d 0c 01	 cmp	 DWORD PTR _nFlags$[ebp], 1
  00099	75 23		 jne	 SHORT $L47489

; 72   :     {
; 73   :         if(!IsEntryInList(Entry))

  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0009e	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  000a1	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a3	75 17		 jne	 SHORT $L47490

; 74   :         {
; 75   :             DirectSound::CDebug::Assert(TRUE, "List entry not in list", pszFile, nLine);

  000a5	8b 45 14	 mov	 eax, DWORD PTR _nLine$[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d 10	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  000ac	51		 push	 ecx
  000ad	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@ ; `string'
  000b2	6a 01		 push	 1
  000b4	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000b9	83 c4 10	 add	 esp, 16			; 00000010H
$L47490:

; 76   :         }
; 77   :     }
; 78   :     else if(ASSERT_NOT_IN_LIST == nFlags)

  000bc	eb 27		 jmp	 SHORT $L47492
$L47489:
  000be	83 7d 0c 02	 cmp	 DWORD PTR _nFlags$[ebp], 2
  000c2	75 21		 jne	 SHORT $L47493

; 79   :     {
; 80   :         if(IsEntryInList(Entry))

  000c4	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  000c7	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  000ca	3b 02		 cmp	 eax, DWORD PTR [edx]
  000cc	74 17		 je	 SHORT $L47494

; 81   :         {
; 82   :             DirectSound::CDebug::Assert(TRUE, "List entry in list", pszFile, nLine);

  000ce	8b 4d 14	 mov	 ecx, DWORD PTR _nLine$[ebp]
  000d1	51		 push	 ecx
  000d2	8b 55 10	 mov	 edx, DWORD PTR _pszFile$[ebp]
  000d5	52		 push	 edx
  000d6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@ ; `string'
  000db	6a 01		 push	 1
  000dd	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000e2	83 c4 10	 add	 esp, 16			; 00000010H
$L47494:
$L47493:
$L47492:
$L47488:
$L47482:
$L47478:

; 83   :         }
; 84   :     }
; 85   : }

  000e5	5d		 pop	 ebp
  000e6	c2 10 00	 ret	 16			; 00000010H
?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ENDP ; __AssertValidEntryList
_TEXT	ENDS
EXTRN	_g_hInstance:DWORD
EXTRN	__imp__RegisterClassExA@4:NEAR
EXTRN	?WindowProc@CWindow@@SGJPAUHWND__@@IIJ@Z:NEAR	; CWindow::WindowProc
EXTRN	__imp__LoadCursorA@8:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
;	COMDAT ?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z
_TEXT	SEGMENT
_pParent$ = 8
_dwExStyle$ = 12
_dwStyle$ = 16
_x$ = 20
_y$ = 24
_nWidth$ = 28
_nHeight$ = 32
_nControlId$ = 36
_this$ = -56
_wc$ = -52
_dwTreeStyle$ = -4
?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z PROC NEAR	; CTreeView::Create, COMDAT
; _this$ = ecx

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	57		 push	 edi
  00007	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 173  :     WNDCLASSEX              wc              = { 0 };

  0000a	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 0
  00011	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00016	33 c0		 xor	 eax, eax
  00018	8d 7d d0	 lea	 edi, DWORD PTR _wc$[ebp+4]
  0001b	f3 ab		 rep stosd

; 174  :     DWORD                   dwTreeStyle;
; 175  : 
; 176  :     //
; 177  :     // Mask off and save the tree-view specific style bits
; 178  :     //
; 179  : 
; 180  :     dwTreeStyle = LOWORD(dwStyle);

  0001d	8b 45 10	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  00020	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00025	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0002a	89 45 fc	 mov	 DWORD PTR _dwTreeStyle$[ebp], eax

; 181  :     dwStyle &= ~dwTreeStyle;

  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _dwTreeStyle$[ebp]
  00030	f7 d1		 not	 ecx
  00032	8b 55 10	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  00035	23 d1		 and	 edx, ecx
  00037	89 55 10	 mov	 DWORD PTR _dwStyle$[ebp], edx

; 182  : 
; 183  :     //
; 184  :     // Save the control identifier
; 185  :     //
; 186  : 
; 187  :     m_nControlId = nControlId;

  0003a	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d 24	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  00040	89 48 6c	 mov	 DWORD PTR [eax+108], ecx

; 188  : 
; 189  :     //
; 190  :     // Register the window class
; 191  :     //
; 192  : 
; 193  :     wc.cbSize = sizeof(wc);

  00043	c7 45 cc 30 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 48	; 00000030H

; 194  :     wc.lpfnWndProc = WindowProc;

  0004a	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp+8], OFFSET FLAT:?WindowProc@CWindow@@SGJPAUHWND__@@IIJ@Z ; CWindow::WindowProc

; 195  :     wc.hInstance = g_hInstance;

  00051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_hInstance
  00057	89 55 e0	 mov	 DWORD PTR _wc$[ebp+20], edx

; 196  :     wc.hCursor = LoadCursor(NULL, IDC_ARROW);

  0005a	68 00 7f 00 00	 push	 32512			; 00007f00H
  0005f	6a 00		 push	 0
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00067	89 45 e8	 mov	 DWORD PTR _wc$[ebp+28], eax

; 197  :     wc.hbrBackground = (HBRUSH)(COLOR_3DFACE + 1);

  0006a	c7 45 ec 10 00
	00 00		 mov	 DWORD PTR _wc$[ebp+32], 16 ; 00000010H

; 198  :     wc.lpszClassName = m_pszClassName;

  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pszClassName@CTreeView@@2QBDB ; CTreeView::m_pszClassName
  00076	89 45 f4	 mov	 DWORD PTR _wc$[ebp+40], eax

; 199  : 
; 200  :     RegisterClassEx(&wc);

  00079	8d 4d cc	 lea	 ecx, DWORD PTR _wc$[ebp]
  0007c	51		 push	 ecx
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassExA@4

; 201  : 
; 202  :     //
; 203  :     // Create the window
; 204  :     //
; 205  : 
; 206  :     return CWindow::Create(pParent, m_pszClassName, NULL, dwExStyle, dwStyle, x, y, nWidth, nHeight, nControlId, (LPVOID)dwTreeStyle);

  00083	8b 55 fc	 mov	 edx, DWORD PTR _dwTreeStyle$[ebp]
  00086	52		 push	 edx
  00087	8b 45 24	 mov	 eax, DWORD PTR _nControlId$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d 20	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0008e	51		 push	 ecx
  0008f	8b 55 1c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00092	52		 push	 edx
  00093	8b 45 18	 mov	 eax, DWORD PTR _y$[ebp]
  00096	50		 push	 eax
  00097	8b 4d 14	 mov	 ecx, DWORD PTR _x$[ebp]
  0009a	51		 push	 ecx
  0009b	8b 55 10	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  0009e	52		 push	 edx
  0009f	8b 45 0c	 mov	 eax, DWORD PTR _dwExStyle$[ebp]
  000a2	50		 push	 eax
  000a3	6a 00		 push	 0
  000a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pszClassName@CTreeView@@2QBDB ; CTreeView::m_pszClassName
  000ab	51		 push	 ecx
  000ac	8b 55 08	 mov	 edx, DWORD PTR _pParent$[ebp]
  000af	52		 push	 edx
  000b0	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?Create@CWindow@@MAEHPAV1@PBD1KKHHHHIPAX@Z ; CWindow::Create

; 207  : }

  000b8	5f		 pop	 edi
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 20 00	 ret	 32			; 00000020H
?Create@CTreeView@@UAEHPAVCWindow@@KKHHHHI@Z ENDP	; CTreeView::Create
_TEXT	ENDS
PUBLIC	??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0N@NPCB@m_hImageList?$AA@			; `string'
EXTRN	__imp__ImageList_SetBkColor@8:NEAR
;	COMDAT ??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\host\gui\controls\treeview.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NPCB@m_hImageList?$AA@
CONST	SEGMENT
??_C@_0N@NPCB@m_hImageList?$AA@ DB 'm_hImageList', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnCreate@CTreeView@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -12
_dwTreeStyle$ = -4
_fSuccess$ = -8
?OnCreate@CTreeView@@UAEHPAXPAJ@Z PROC NEAR		; CTreeView::OnCreate, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 236  :     static const DWORD      dwExStyle   = 0;
; 237  :     static const DWORD      dwStyle     = WS_CHILD | WS_VISIBLE | TVS_INFOTIP;
; 238  :     const DWORD             dwTreeStyle = (DWORD)pvContext;

  00009	8b 45 08	 mov	 eax, DWORD PTR _pvContext$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _dwTreeStyle$[ebp], eax

; 239  :     BOOL                    fSuccess;
; 240  : 
; 241  :     if(CWindow::OnCreate(pvContext, plResult))

  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR _plResult$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR _pvContext$[ebp]
  00016	52		 push	 edx
  00017	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?OnCreate@CWindow@@UAEHPAXPAJ@Z ; CWindow::OnCreate
  0001f	85 c0		 test	 eax, eax
  00021	74 0a		 je	 SHORT $L50514

; 242  :     {
; 243  :         return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	e9 cb 00 00 00	 jmp	 $L50506
$L50514:

; 244  :     }
; 245  :     
; 246  :     //
; 247  :     // Create the tree-view control
; 248  :     //
; 249  : 
; 250  :     fSuccess = m_TreeCtrl.Create(this, dwExStyle, dwStyle | dwTreeStyle);

  0002d	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00032	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00037	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0003c	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00041	8b 45 fc	 mov	 eax, DWORD PTR _dwTreeStyle$[ebp]
  00044	0d 00 08 00 50	 or	 eax, 1342179328		; 50000800H
  00049	50		 push	 eax
  0004a	6a 00		 push	 0
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	51		 push	 ecx
  00050	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 30	 add	 ecx, 48			; 00000030H
  00056	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00059	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0005c	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
  00062	89 45 f8	 mov	 DWORD PTR _fSuccess$[ebp], eax

; 251  :     
; 252  :     //
; 253  :     // Set the image list
; 254  :     //
; 255  : 
; 256  :     if(fSuccess)

  00065	83 7d f8 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00069	74 75		 je	 SHORT $L50515

; 257  :     {
; 258  :         ASSERT(m_hImageList);

  0006b	68 02 01 00 00	 push	 258			; 00000102H
  00070	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00075	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@NPCB@m_hImageList?$AA@ ; `string'
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	33 d2		 xor	 edx, edx
  0007f	83 79 60 00	 cmp	 DWORD PTR [ecx+96], 0
  00083	0f 94 c2	 sete	 dl
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0008c	83 c4 10	 add	 esp, 16			; 00000010H

; 259  :         
; 260  :         TreeView_SetImageList(m_TreeCtrl, m_hImageList, TVSIL_NORMAL);

  0008f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00095	51		 push	 ecx
  00096	6a 00		 push	 0
  00098	68 09 11 00 00	 push	 4361			; 00001109H
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	83 c1 30	 add	 ecx, 48			; 00000030H
  000a3	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  000a9	ff 50 58	 call	 DWORD PTR [eax+88]
  000ac	50		 push	 eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 261  :         
; 262  :         ImageList_SetBkColor(m_hImageList, TreeView_GetBkColor(m_TreeCtrl));

  000b3	6a 00		 push	 0
  000b5	6a 00		 push	 0
  000b7	68 1f 11 00 00	 push	 4383			; 0000111fH
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	83 c1 30	 add	 ecx, 48			; 00000030H
  000c2	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  000c5	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  000c8	ff 50 58	 call	 DWORD PTR [eax+88]
  000cb	50		 push	 eax
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000d2	50		 push	 eax
  000d3	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  000d9	52		 push	 edx
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_SetBkColor@8
$L50515:

; 263  :     }
; 264  : 
; 265  :     //
; 266  :     // Success
; 267  :     //
; 268  : 
; 269  :     if(!fSuccess)

  000e0	83 7d f8 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000e4	75 10		 jne	 SHORT $L50522

; 270  :     {
; 271  :         *plResult = 0;

  000e6	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  000e9	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 272  :         return TRUE;

  000ef	b8 01 00 00 00	 mov	 eax, 1
  000f4	eb 02		 jmp	 SHORT $L50506
$L50522:

; 273  :     }
; 274  : 
; 275  :     return FALSE;

  000f6	33 c0		 xor	 eax, eax
$L50506:

; 276  : }

  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c2 08 00	 ret	 8
?OnCreate@CTreeView@@UAEHPAXPAJ@Z ENDP			; CTreeView::OnCreate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDestroy@CTreeView@@UAEHPAJ@Z
_TEXT	SEGMENT
_plResult$ = 8
_this$ = -4
?OnDestroy@CTreeView@@UAEHPAJ@Z PROC NEAR		; CTreeView::OnDestroy, COMDAT
; _this$ = ecx

; 302  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 303  :     if(CWindow::OnDestroy(plResult))

  00007	8b 45 08	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?OnDestroy@CWindow@@UAEHPAJ@Z ; CWindow::OnDestroy
  00013	85 c0		 test	 eax, eax
  00015	74 07		 je	 SHORT $L50527

; 304  :     {
; 305  :         return TRUE;

  00017	b8 01 00 00 00	 mov	 eax, 1
  0001c	eb 1b		 jmp	 SHORT $L50526
$L50527:

; 306  :     }
; 307  : 
; 308  :     TreeView_DeleteAllItems(m_TreeCtrl.m_hWnd);

  0001e	68 00 00 ff ff	 push	 -65536			; ffff0000H
  00023	6a 00		 push	 0
  00025	68 01 11 00 00	 push	 4353			; 00001101H
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00030	52		 push	 edx
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 309  : 
; 310  :     return FALSE;

  00037	33 c0		 xor	 eax, eax
$L50526:

; 311  : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?OnDestroy@CTreeView@@UAEHPAJ@Z ENDP			; CTreeView::OnDestroy
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSize@CTreeView@@UAEHIIIPAJ@Z
_TEXT	SEGMENT
_nType$ = 8
_nWidth$ = 12
_nHeight$ = 16
_plResult$ = 20
_this$ = -4
?OnSize@CTreeView@@UAEHIIIPAJ@Z PROC NEAR		; CTreeView::OnSize, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  :     if(CWindow::OnSize(nType, nWidth, nHeight, plResult))

  00007	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00012	52		 push	 edx
  00013	8b 45 08	 mov	 eax, DWORD PTR _nType$[ebp]
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?OnSize@CWindow@@UAEHIIIPAJ@Z ; CWindow::OnSize
  0001f	85 c0		 test	 eax, eax
  00021	74 07		 je	 SHORT $L50539

; 345  :     {
; 346  :         return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	eb 1f		 jmp	 SHORT $L50538
$L50539:

; 347  :     }
; 348  :     
; 349  :     m_TreeCtrl.MoveWindow(0, 0, nWidth, nHeight);

  0002a	6a 01		 push	 1
  0002c	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0002f	51		 push	 ecx
  00030	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00033	52		 push	 edx
  00034	6a 00		 push	 0
  00036	6a 00		 push	 0
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	83 c1 30	 add	 ecx, 48			; 00000030H
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  00044	ff 52 40	 call	 DWORD PTR [edx+64]

; 350  : 
; 351  :     return FALSE;

  00047	33 c0		 xor	 eax, eax
$L50538:

; 352  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CTreeView@@UAEHIIIPAJ@Z ENDP			; CTreeView::OnSize
_TEXT	ENDS
PUBLIC	?PtrFromTreeItem@CTreeViewItem@@SGPAV1@PAVCTreeView@@PAU_TREEITEM@@@Z ; CTreeViewItem::PtrFromTreeItem
; Function compile flags: /Odt
;	COMDAT ?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_hWndFocus$ = 8
_x$ = 12
_y$ = 16
_plResult$ = 20
_this$ = -24
_htti$ = -20
_pItem$ = -4
?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CTreeView::OnContextMenu, COMDAT
; _this$ = ecx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 385  :     TVHITTESTINFO           htti    = { 0 };

  00009	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _htti$[ebp], 0
  00010	33 c0		 xor	 eax, eax
  00012	89 45 f0	 mov	 DWORD PTR _htti$[ebp+4], eax
  00015	89 45 f4	 mov	 DWORD PTR _htti$[ebp+8], eax
  00018	89 45 f8	 mov	 DWORD PTR _htti$[ebp+12], eax

; 386  :     CTreeViewItem *         pItem;
; 387  :     
; 388  :     if(CWindow::OnContextMenu(hWndFocus, x, y, plResult))

  0001b	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 10	 mov	 edx, DWORD PTR _y$[ebp]
  00022	52		 push	 edx
  00023	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _hWndFocus$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ; CWindow::OnContextMenu
  00033	85 c0		 test	 eax, eax
  00035	74 0a		 je	 SHORT $L50549

; 389  :     {
; 390  :         return TRUE;

  00037	b8 01 00 00 00	 mov	 eax, 1
  0003c	e9 96 00 00 00	 jmp	 $L50546
$L50549:

; 391  :     }
; 392  : 
; 393  :     htti.pt.x = x;

  00041	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  00044	89 55 ec	 mov	 DWORD PTR _htti$[ebp], edx

; 394  :     htti.pt.y = y;

  00047	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  0004a	89 45 f0	 mov	 DWORD PTR _htti$[ebp+4], eax

; 395  : 
; 396  :     m_TreeCtrl.ScreenToClient(&htti.pt);

  0004d	8d 4d ec	 lea	 ecx, DWORD PTR _htti$[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 30	 add	 ecx, 48			; 00000030H
  00057	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0005d	ff 50 50	 call	 DWORD PTR [eax+80]

; 397  : 
; 398  :     TreeView_HitTest(m_TreeCtrl, &htti);

  00060	8d 4d ec	 lea	 ecx, DWORD PTR _htti$[ebp]
  00063	51		 push	 ecx
  00064	6a 00		 push	 0
  00066	68 11 11 00 00	 push	 4369			; 00001111H
  0006b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 30	 add	 ecx, 48			; 00000030H
  00071	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00077	ff 50 58	 call	 DWORD PTR [eax+88]
  0007a	50		 push	 eax
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 399  : 
; 400  :     if(!htti.hItem)

  00081	83 7d f8 00	 cmp	 DWORD PTR _htti$[ebp+12], 0
  00085	75 04		 jne	 SHORT $L50553

; 401  :     {
; 402  :         return FALSE;

  00087	33 c0		 xor	 eax, eax
  00089	eb 4c		 jmp	 SHORT $L50546
$L50553:

; 403  :     }
; 404  : 
; 405  :     TreeView_Select(m_TreeCtrl, htti.hItem, TVGN_CARET);

  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _htti$[ebp+12]
  0008e	51		 push	 ecx
  0008f	6a 09		 push	 9
  00091	68 0b 11 00 00	 push	 4363			; 0000110bH
  00096	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	83 c1 30	 add	 ecx, 48			; 00000030H
  0009c	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009f	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  000a2	ff 50 58	 call	 DWORD PTR [eax+88]
  000a5	50		 push	 eax
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 406  :     
; 407  :     pItem = pItem->PtrFromTreeItem(this, htti.hItem);

  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _htti$[ebp+12]
  000af	51		 push	 ecx
  000b0	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b3	52		 push	 edx
  000b4	e8 00 00 00 00	 call	 ?PtrFromTreeItem@CTreeViewItem@@SGPAV1@PAVCTreeView@@PAU_TREEITEM@@@Z ; CTreeViewItem::PtrFromTreeItem
  000b9	89 45 fc	 mov	 DWORD PTR _pItem$[ebp], eax

; 408  : 
; 409  :     return pItem->OnContextMenu(hWndFocus, x, y, plResult);

  000bc	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  000bf	50		 push	 eax
  000c0	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  000c3	51		 push	 ecx
  000c4	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  000c7	52		 push	 edx
  000c8	8b 45 08	 mov	 eax, DWORD PTR _hWndFocus$[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  000cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  000d4	ff 52 14	 call	 DWORD PTR [edx+20]
$L50546:

; 410  : }

  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CTreeView@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CTreeView::OnContextMenu
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_pHdr$ = 8
_plResult$ = 12
_this$ = -4
?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CTreeView::OnNotify, COMDAT
; _this$ = ecx

; 438  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 439  :     if(CWindow::OnNotify(pHdr, plResult))

  00009	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ; CWindow::OnNotify
  00019	85 c0		 test	 eax, eax
  0001b	74 0a		 je	 SHORT $L50563

; 440  :     {
; 441  :         return TRUE;

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	e9 99 00 00 00	 jmp	 $L50562
$L50563:

; 442  :     }
; 443  :     
; 444  :     //
; 445  :     // We're intercepting certain messages and passing the rest along to
; 446  :     // the parent to be processed
; 447  :     //
; 448  :     
; 449  :     switch(pHdr->code)
; 450  :     {

  00027	8b 55 08	 mov	 edx, DWORD PTR _pHdr$[ebp]
  0002a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0002d	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00030	81 7d f8 67 fe
	ff ff		 cmp	 DWORD PTR -8+[ebp], -409 ; fffffe67H
  00037	77 1d		 ja	 SHORT $L51036
  00039	81 7d f8 67 fe
	ff ff		 cmp	 DWORD PTR -8+[ebp], -409 ; fffffe67H
  00040	74 22		 je	 SHORT $L50568
  00042	81 7d f8 63 fe
	ff ff		 cmp	 DWORD PTR -8+[ebp], -413 ; fffffe63H
  00049	74 41		 je	 SHORT $L50571
  0004b	81 7d f8 65 fe
	ff ff		 cmp	 DWORD PTR -8+[ebp], -411 ; fffffe65H
  00052	74 4c		 je	 SHORT $L50573
  00054	eb 68		 jmp	 SHORT $L50565
$L51036:
  00056	83 7d f8 fc	 cmp	 DWORD PTR -8+[ebp], -4	; fffffffcH
  0005a	72 62		 jb	 SHORT $L50565
  0005c	83 7d f8 fd	 cmp	 DWORD PTR -8+[ebp], -3	; fffffffdH
  00060	76 16		 jbe	 SHORT $L50570
  00062	eb 5a		 jmp	 SHORT $L50565
$L50568:

; 451  :         case TVN_DELETEITEM:
; 452  :             OnDeleteItem((LPNMTREEVIEW)pHdr);

  00064	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  00067	51		 push	 ecx
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 02		 mov	 eax, DWORD PTR [edx]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	ff 90 b8 00 00
	00		 call	 DWORD PTR [eax+184]

; 453  :             break;

  00076	eb 46		 jmp	 SHORT $L50565
$L50570:

; 454  : 
; 455  :         case NM_DBLCLK:
; 456  :         case NM_RETURN:
; 457  :             OnDoubleClick(pHdr);

  00078	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  0007b	51		 push	 ecx
  0007c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007f	8b 02		 mov	 eax, DWORD PTR [edx]
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	ff 90 bc 00 00
	00		 call	 DWORD PTR [eax+188]

; 458  :             break;

  0008a	eb 32		 jmp	 SHORT $L50565
$L50571:

; 459  : 
; 460  :         case TVN_GETINFOTIP:
; 461  :             OnGetInfoTip((LPNMTVGETINFOTIP)pHdr);

  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  0008f	51		 push	 ecx
  00090	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00093	8b 02		 mov	 eax, DWORD PTR [edx]
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	ff 90 c0 00 00
	00		 call	 DWORD PTR [eax+192]

; 462  :             break;

  0009e	eb 1e		 jmp	 SHORT $L50565
$L50573:

; 463  : 
; 464  :         case TVN_ENDLABELEDIT:
; 465  :             *plResult = OnEndLabelEdit((LPNMTVDISPINFO)pHdr);

  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  000a3	51		 push	 ecx
  000a4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a7	8b 02		 mov	 eax, DWORD PTR [edx]
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]
  000b2	8b 4d 0c	 mov	 ecx, DWORD PTR _plResult$[ebp]
  000b5	89 01		 mov	 DWORD PTR [ecx], eax

; 466  :             return TRUE;

  000b7	b8 01 00 00 00	 mov	 eax, 1
  000bc	eb 02		 jmp	 SHORT $L50562
$L50565:

; 467  :     };
; 468  : 
; 469  :     return FALSE;

  000be	33 c0		 xor	 eax, eax
$L50562:

; 470  : }

  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
?OnNotify@CTreeView@@UAEHPAUtagNMHDR@@PAJ@Z ENDP	; CTreeView::OnNotify
_TEXT	ENDS
PUBLIC	?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z	; CTreeViewItem::PtrFromTreeCtx
; Function compile flags: /Odt
;	COMDAT ?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z
_TEXT	SEGMENT
_pHdr$ = 8
_this$ = -8
_pItem$ = -4
?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z PROC NEAR ; CTreeView::OnDeleteItem, COMDAT
; _this$ = ecx

; 496  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 497  :     CTreeViewItem *         pItem   = CTreeViewItem::PtrFromTreeCtx(pHdr->itemOld.lParam);

  00009	8b 45 08	 mov	 eax, DWORD PTR _pHdr$[ebp]
  0000c	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z ; CTreeViewItem::PtrFromTreeCtx
  00015	89 45 fc	 mov	 DWORD PTR _pItem$[ebp], eax

; 498  : 
; 499  :     pItem->OnDelete();

  00018	8b 55 fc	 mov	 edx, DWORD PTR _pItem$[ebp]
  0001b	8b 02		 mov	 eax, DWORD PTR [edx]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  00020	ff 50 1c	 call	 DWORD PTR [eax+28]

; 500  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?OnDeleteItem@CTreeView@@UAEXPAUtagNMTREEVIEWA@@@Z ENDP	; CTreeView::OnDeleteItem
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.h
_TEXT	ENDS
;	COMDAT ?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z
_TEXT	SEGMENT
_lParam$ = 8
?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z PROC NEAR	; CTreeViewItem::PtrFromTreeCtx, COMDAT

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 167  :     return (CTreeViewItem *)lParam;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lParam$[ebp]

; 168  : }

  00006	5d		 pop	 ebp
  00007	c2 04 00	 ret	 4
?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z ENDP		; CTreeViewItem::PtrFromTreeCtx
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z
_TEXT	SEGMENT
_this$ = -8
_pItem$ = -4
?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z PROC NEAR	; CTreeView::OnDoubleClick, COMDAT
; _this$ = ecx

; 526  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 527  :     CTreeViewItem *         pItem;
; 528  : 
; 529  :     //
; 530  :     // Find the selected item or items and call the activation callback
; 531  :     //
; 532  : 
; 533  :     if(!(pItem = GetSelection()))

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 10		 mov	 edx, DWORD PTR [eax]
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]
  00017	89 45 fc	 mov	 DWORD PTR _pItem$[ebp], eax
  0001a	83 7d fc 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  0001e	75 02		 jne	 SHORT $L50585

; 534  :     {
; 535  :         return;

  00020	eb 0b		 jmp	 SHORT $L50583
$L50585:

; 536  :     }
; 537  : 
; 538  :     pItem->OnDoubleClick();

  00022	8b 45 fc	 mov	 eax, DWORD PTR _pItem$[ebp]
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  0002a	ff 52 18	 call	 DWORD PTR [edx+24]
$L50583:

; 539  : }

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?OnDoubleClick@CTreeView@@UAEXPAUtagNMHDR@@@Z ENDP	; CTreeView::OnDoubleClick
_TEXT	ENDS
PUBLIC	??_C@_05GKAH@pItem?$AA@				; `string'
;	COMDAT ??_C@_05GKAH@pItem?$AA@
CONST	SEGMENT
??_C@_05GKAH@pItem?$AA@ DB 'pItem', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z
_TEXT	SEGMENT
_pHdr$ = 8
_this$ = -8
_pItem$ = -4
?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z PROC NEAR ; CTreeView::OnGetInfoTip, COMDAT
; _this$ = ecx

; 565  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 566  :     CTreeViewItem *         pItem   = CTreeViewItem::PtrFromTreeCtx(pHdr->lParam);

  00009	8b 45 08	 mov	 eax, DWORD PTR _pHdr$[ebp]
  0000c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z ; CTreeViewItem::PtrFromTreeCtx
  00015	89 45 fc	 mov	 DWORD PTR _pItem$[ebp], eax

; 567  : 
; 568  :     ASSERT(pItem);

  00018	68 38 02 00 00	 push	 568			; 00000238H
  0001d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05GKAH@pItem?$AA@ ; `string'
  00027	33 d2		 xor	 edx, edx
  00029	83 7d fc 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  0002d	0f 94 c2	 sete	 dl
  00030	52		 push	 edx
  00031	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00036	83 c4 10	 add	 esp, 16			; 00000010H

; 569  :     pItem->OnGetInfoTip(pHdr->pszText, pHdr->cchTextMax);

  00039	8b 45 08	 mov	 eax, DWORD PTR _pHdr$[ebp]
  0003c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003f	51		 push	 ecx
  00040	8b 55 08	 mov	 edx, DWORD PTR _pHdr$[ebp]
  00043	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00046	50		 push	 eax
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  0004a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  0004f	ff 52 20	 call	 DWORD PTR [edx+32]

; 570  : }

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?OnGetInfoTip@CTreeView@@UAEXPAUtagNMTVGETINFOTIPA@@@Z ENDP ; CTreeView::OnGetInfoTip
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z
_TEXT	SEGMENT
_pHdr$ = 8
_this$ = -8
_pItem$ = -4
?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z PROC NEAR ; CTreeView::OnEndLabelEdit, COMDAT
; _this$ = ecx

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 597  :     CTreeViewItem *         pItem   = CTreeViewItem::PtrFromTreeCtx(pHdr->item.lParam);

  00009	8b 45 08	 mov	 eax, DWORD PTR _pHdr$[ebp]
  0000c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z ; CTreeViewItem::PtrFromTreeCtx
  00015	89 45 fc	 mov	 DWORD PTR _pItem$[ebp], eax

; 598  : 
; 599  :     if(!pHdr->item.pszText)

  00018	8b 55 08	 mov	 edx, DWORD PTR _pHdr$[ebp]
  0001b	83 7a 1c 00	 cmp	 DWORD PTR [edx+28], 0
  0001f	75 04		 jne	 SHORT $L50597

; 600  :     {
; 601  :         return FALSE;

  00021	33 c0		 xor	 eax, eax
  00023	eb 23		 jmp	 SHORT $L50595
$L50597:

; 602  :     }
; 603  : 
; 604  :     if(!*pHdr->item.pszText)

  00025	8b 45 08	 mov	 eax, DWORD PTR _pHdr$[ebp]
  00028	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0002b	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L50598

; 605  :     {
; 606  :         return FALSE;

  00032	33 c0		 xor	 eax, eax
  00034	eb 12		 jmp	 SHORT $L50595
$L50598:

; 607  :     }
; 608  : 
; 609  :     return pItem->OnEndLabelEdit(pHdr->item.pszText);

  00036	8b 45 08	 mov	 eax, DWORD PTR _pHdr$[ebp]
  00039	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0003c	51		 push	 ecx
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _pItem$[ebp]
  00040	8b 02		 mov	 eax, DWORD PTR [edx]
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _pItem$[ebp]
  00045	ff 50 24	 call	 DWORD PTR [eax+36]
$L50595:

; 610  : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?OnEndLabelEdit@CTreeView@@UAEHPAUtagTVDISPINFOA@@@Z ENDP ; CTreeView::OnEndLabelEdit
_TEXT	ENDS
PUBLIC	??0CTreeViewType@@QAE@PAVCTreeView@@PBDH@Z	; CTreeViewType::CTreeViewType
PUBLIC	??_C@_07PFHL@pszText?$AA@			; `string'
PUBLIC	??_C@_05JBML@hIcon?$AA@				; `string'
PUBLIC	??_C@_0CK@IMKP@CTreeViewType?$CIthis?0?5pszText?0?5nIm@ ; `string'
EXTRN	__imp__ImageList_ReplaceIcon@12:NEAR
;	COMDAT ??_C@_07PFHL@pszText?$AA@
CONST	SEGMENT
??_C@_07PFHL@pszText?$AA@ DB 'pszText', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JBML@hIcon?$AA@
CONST	SEGMENT
??_C@_05JBML@hIcon?$AA@ DB 'hIcon', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IMKP@CTreeViewType?$CIthis?0?5pszText?0?5nIm@
CONST	SEGMENT
??_C@_0CK@IMKP@CTreeViewType?$CIthis?0?5pszText?0?5nIm@ DB 'CTreeViewType'
	DB	'(this, pszText, nImageIndex)', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z
_TEXT	SEGMENT
$T51055 = -12
_pszText$ = 8
_hIcon$ = 12
_this$ = -16
_pType$ = -4
_nImageIndex$ = -8
?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z PROC NEAR ; CTreeView::RegisterType, COMDAT
; _this$ = ecx

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 639  :     CTreeViewType *         pType;
; 640  :     int                     nImageIndex;
; 641  : 
; 642  :     ASSERT(pszText);

  00009	68 82 02 00 00	 push	 642			; 00000282H
  0000e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00013	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07PFHL@pszText?$AA@ ; `string'
  00018	33 c0		 xor	 eax, eax
  0001a	83 7d 08 00	 cmp	 DWORD PTR _pszText$[ebp], 0
  0001e	0f 94 c0	 sete	 al
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00027	83 c4 10	 add	 esp, 16			; 00000010H

; 643  :     ASSERT(hIcon);

  0002a	68 83 02 00 00	 push	 643			; 00000283H
  0002f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00034	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05JBML@hIcon?$AA@ ; `string'
  00039	33 c9		 xor	 ecx, ecx
  0003b	83 7d 0c 00	 cmp	 DWORD PTR _hIcon$[ebp], 0
  0003f	0f 94 c1	 sete	 cl
  00042	51		 push	 ecx
  00043	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00048	83 c4 10	 add	 esp, 16			; 00000010H

; 644  : 
; 645  :     //
; 646  :     // Make sure the type isn't already registered
; 647  :     //
; 648  : 
; 649  :     if(FindRegisteredType(pszText))

  0004b	8b 55 08	 mov	 edx, DWORD PTR _pszText$[ebp]
  0004e	52		 push	 edx
  0004f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 10		 mov	 edx, DWORD PTR [eax]
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]
  0005d	85 c0		 test	 eax, eax
  0005f	74 07		 je	 SHORT $L50608

; 650  :     {
; 651  :         return TRUE;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	eb 7a		 jmp	 SHORT $L50603
$L50608:

; 652  :     }
; 653  : 
; 654  :     //
; 655  :     // Add the icon to the image list
; 656  :     //
; 657  : 
; 658  :     if(-1 == (nImageIndex = ImageList_AddIcon(m_hImageList, hIcon)))

  00068	8b 45 0c	 mov	 eax, DWORD PTR _hIcon$[ebp]
  0006b	50		 push	 eax
  0006c	6a ff		 push	 -1
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
  00074	52		 push	 edx
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_ReplaceIcon@12
  0007b	89 45 f8	 mov	 DWORD PTR _nImageIndex$[ebp], eax
  0007e	83 7d f8 ff	 cmp	 DWORD PTR _nImageIndex$[ebp], -1
  00082	75 04		 jne	 SHORT $L50609

; 659  :     {
; 660  :         return FALSE;

  00084	33 c0		 xor	 eax, eax
  00086	eb 5a		 jmp	 SHORT $L50603
$L50609:

; 661  :     }
; 662  : 
; 663  :     //
; 664  :     // Add the type to the list
; 665  :     //
; 666  :     
; 667  :     if(!(pType = NEW(CTreeViewType(this, pszText, nImageIndex))))

  00088	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CK@IMKP@CTreeViewType?$CIthis?0?5pszText?0?5nIm@ ; `string'
  0008d	68 9b 02 00 00	 push	 667			; 0000029bH
  00092	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00097	68 14 01 00 00	 push	 276			; 00000114H
  0009c	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  000a1	83 c4 10	 add	 esp, 16			; 00000010H
  000a4	89 45 f4	 mov	 DWORD PTR $T51055[ebp], eax
  000a7	83 7d f4 00	 cmp	 DWORD PTR $T51055[ebp], 0
  000ab	74 19		 je	 SHORT $L51056
  000ad	8b 45 f8	 mov	 eax, DWORD PTR _nImageIndex$[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _pszText$[ebp]
  000b4	51		 push	 ecx
  000b5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	52		 push	 edx
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR $T51055[ebp]
  000bc	e8 00 00 00 00	 call	 ??0CTreeViewType@@QAE@PAVCTreeView@@PBDH@Z ; CTreeViewType::CTreeViewType
  000c1	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  000c4	eb 07		 jmp	 SHORT $L51057
$L51056:
  000c6	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L51057:
  000cd	8b 45 ec	 mov	 eax, DWORD PTR -20+[ebp]
  000d0	89 45 fc	 mov	 DWORD PTR _pType$[ebp], eax
  000d3	83 7d fc 00	 cmp	 DWORD PTR _pType$[ebp], 0
  000d7	75 04		 jne	 SHORT $L50612

; 668  :     {
; 669  :         return FALSE;

  000d9	33 c0		 xor	 eax, eax
  000db	eb 05		 jmp	 SHORT $L50603
$L50612:

; 670  :     }
; 671  : 
; 672  :     return TRUE;

  000dd	b8 01 00 00 00	 mov	 eax, 1
$L50603:

; 673  : }

  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 08 00	 ret	 8
?RegisterType@CTreeView@@UAEHPBDPAUHICON__@@@Z ENDP	; CTreeView::RegisterType
_TEXT	ENDS
EXTRN	?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolAlloc
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT
_cbBuffer$ = 8
_pszFile$ = 12
_nLine$ = 16
_pszClass$ = 20
??2@YAPAXIPBDK0@Z PROC NEAR				; operator new, COMDAT

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 233  :     return DirectSound::CMemoryManager::TrackingMemAlloc(pszFile, nLine, pszClass, DSOUND_OBJECT_POOL_TAG, cbBuffer, TRUE); 

  00003	6a 01		 push	 1
  00005	8b 45 08	 mov	 eax, DWORD PTR _cbBuffer$[ebp]
  00008	50		 push	 eax
  00009	68 44 53 6f 62	 push	 1651462980		; 626f5344H
  0000e	8b 4d 14	 mov	 ecx, DWORD PTR _pszClass$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 10	 mov	 edx, DWORD PTR _nLine$[ebp]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc

; 234  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??2@YAPAXIPBDK0@Z ENDP					; operator new
_TEXT	ENDS
EXTRN	__stricmp:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
;	COMDAT ?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -12
_pleEntry$ = -8
_pType$ = -4
?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z PROC NEAR ; CTreeView::FindRegisteredType, COMDAT
; _this$ = ecx

; 699  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 700  :     PLIST_ENTRY             pleEntry;
; 701  :     CTreeViewType *         pType;
; 702  : 
; 703  :     ASSERT(pszText);

  00009	68 bf 02 00 00	 push	 703			; 000002bfH
  0000e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00013	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07PFHL@pszText?$AA@ ; `string'
  00018	33 c0		 xor	 eax, eax
  0001a	83 7d 08 00	 cmp	 DWORD PTR _pszText$[ebp], 0
  0001e	0f 94 c0	 sete	 al
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00027	83 c4 10	 add	 esp, 16			; 00000010H

; 704  :     
; 705  :     for(pleEntry = m_lstTypes.Flink; pleEntry != &m_lstTypes; pleEntry = pleEntry->Flink)

  0002a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  00030	89 55 f8	 mov	 DWORD PTR _pleEntry$[ebp], edx
  00033	eb 08		 jmp	 SHORT $L50620
$L50621:
  00035	8b 45 f8	 mov	 eax, DWORD PTR _pleEntry$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d f8	 mov	 DWORD PTR _pleEntry$[ebp], ecx
$L50620:
  0003d	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00040	83 c2 64	 add	 edx, 100		; 00000064H
  00043	39 55 f8	 cmp	 DWORD PTR _pleEntry$[ebp], edx
  00046	74 27		 je	 SHORT $L50622

; 706  :     {
; 707  :         pType = CONTAINING_RECORD(pleEntry, CTreeViewType, m_leTypes);

  00048	8b 45 f8	 mov	 eax, DWORD PTR _pleEntry$[ebp]
  0004b	83 e8 08	 sub	 eax, 8
  0004e	89 45 fc	 mov	 DWORD PTR _pType$[ebp], eax

; 708  : 
; 709  :         if(!_tcsicmp(pszText, pType->m_szName))

  00051	8b 4d fc	 mov	 ecx, DWORD PTR _pType$[ebp]
  00054	83 c1 10	 add	 ecx, 16			; 00000010H
  00057	51		 push	 ecx
  00058	8b 55 08	 mov	 edx, DWORD PTR _pszText$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 __stricmp
  00061	83 c4 08	 add	 esp, 8
  00064	85 c0		 test	 eax, eax
  00066	75 05		 jne	 SHORT $L50627

; 710  :         {
; 711  :             return pType;

  00068	8b 45 fc	 mov	 eax, DWORD PTR _pType$[ebp]
  0006b	eb 04		 jmp	 SHORT $L50617
$L50627:

; 712  :         }
; 713  :     }

  0006d	eb c6		 jmp	 SHORT $L50621
$L50622:

; 714  : 
; 715  :     return NULL;

  0006f	33 c0		 xor	 eax, eax
$L50617:

; 716  : }

  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?FindRegisteredType@CTreeView@@UAEPAVCTreeViewType@@PBD@Z ENDP ; CTreeView::FindRegisteredType
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ
_TEXT	SEGMENT
_this$ = -8
_hTreeItem$ = -4
?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ PROC NEAR ; CTreeView::GetSelection, COMDAT
; _this$ = ecx

; 742  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 743  :     HTREEITEM               hTreeItem;
; 744  :     
; 745  :     if(!(hTreeItem = TreeView_GetSelection(m_TreeCtrl)))

  00009	6a 00		 push	 0
  0000b	6a 09		 push	 9
  0000d	68 0a 11 00 00	 push	 4362			; 0000110aH
  00012	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 30	 add	 ecx, 48			; 00000030H
  00018	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  0001e	ff 52 58	 call	 DWORD PTR [edx+88]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00028	89 45 fc	 mov	 DWORD PTR _hTreeItem$[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR _hTreeItem$[ebp], 0
  0002f	75 04		 jne	 SHORT $L50637

; 746  :     {
; 747  :         return NULL;

  00031	33 c0		 xor	 eax, eax
  00033	eb 0d		 jmp	 SHORT $L50631
$L50637:

; 748  :     }
; 749  : 
; 750  :     return CTreeViewItem::PtrFromTreeItem(this, hTreeItem);

  00035	8b 45 fc	 mov	 eax, DWORD PTR _hTreeItem$[ebp]
  00038	50		 push	 eax
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?PtrFromTreeItem@CTreeViewItem@@SGPAV1@PAVCTreeView@@PAU_TREEITEM@@@Z ; CTreeViewItem::PtrFromTreeItem
$L50631:

; 751  : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?GetSelection@CTreeView@@UAEPAVCTreeViewItem@@XZ ENDP	; CTreeView::GetSelection
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z
_TEXT	SEGMENT
_pItem$ = 8
_dwFlags$ = 12
_this$ = -8
_hItem$ = -4
?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z PROC NEAR ; CTreeView::GetNextItem, COMDAT
; _this$ = ecx

; 779  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 780  :     HTREEITEM               hItem;
; 781  : 
; 782  :     hItem = TreeView_GetNextItem(m_TreeCtrl.m_hWnd, pItem ? pItem->m_hTreeItem : NULL, dwFlags);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pItem$[ebp], 0
  0000d	74 0b		 je	 SHORT $L51070
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pItem$[ebp]
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  00018	eb 07		 jmp	 SHORT $L51071
$L51070:
  0001a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L51071:
  00021	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  00024	52		 push	 edx
  00025	8b 45 0c	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  00028	50		 push	 eax
  00029	68 0a 11 00 00	 push	 4362			; 0000110aH
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00034	52		 push	 edx
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0003b	89 45 fc	 mov	 DWORD PTR _hItem$[ebp], eax

; 783  : 
; 784  :     if(!hItem)

  0003e	83 7d fc 00	 cmp	 DWORD PTR _hItem$[ebp], 0
  00042	75 04		 jne	 SHORT $L50648

; 785  :     {
; 786  :         return NULL;

  00044	33 c0		 xor	 eax, eax
  00046	eb 12		 jmp	 SHORT $L50642
$L50648:

; 787  :     }
; 788  : 
; 789  :     return PtrFromTreeItem(hItem);

  00048	8b 45 fc	 mov	 eax, DWORD PTR _hItem$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]
$L50642:

; 790  : }

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
?GetNextItem@CTreeView@@UAEPAVCTreeViewItem@@PAV2@K@Z ENDP ; CTreeView::GetNextItem
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z
_TEXT	SEGMENT
_hItem$ = 8
_this$ = -44
_tvi$ = -40
?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z PROC NEAR ; CTreeView::PtrFromTreeItem, COMDAT
; _this$ = ecx

; 816  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 817  :     TVITEM                  tvi;
; 818  : 
; 819  :     tvi.mask = TVIF_PARAM;

  00009	c7 45 d8 04 00
	00 00		 mov	 DWORD PTR _tvi$[ebp], 4

; 820  :     tvi.hItem = hItem;

  00010	8b 45 08	 mov	 eax, DWORD PTR _hItem$[ebp]
  00013	89 45 dc	 mov	 DWORD PTR _tvi$[ebp+4], eax

; 821  : 
; 822  :     if(!TreeView_GetItem(m_TreeCtrl.m_hWnd, &tvi))

  00016	8d 4d d8	 lea	 ecx, DWORD PTR _tvi$[ebp]
  00019	51		 push	 ecx
  0001a	6a 00		 push	 0
  0001c	68 0c 11 00 00	 push	 4364			; 0000110cH
  00021	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0002e	85 c0		 test	 eax, eax
  00030	75 04		 jne	 SHORT $L50657

; 823  :     {
; 824  :         return NULL;

  00032	33 c0		 xor	 eax, eax
  00034	eb 09		 jmp	 SHORT $L50652
$L50657:

; 825  :     }
; 826  : 
; 827  :     return CTreeViewItem::PtrFromTreeCtx(tvi.lParam);

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _tvi$[ebp+36]
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ?PtrFromTreeCtx@CTreeViewItem@@SGPAV1@J@Z ; CTreeViewItem::PtrFromTreeCtx
$L50652:

; 828  : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?PtrFromTreeItem@CTreeView@@UAEPAVCTreeViewItem@@PAU_TREEITEM@@@Z ENDP ; CTreeView::PtrFromTreeItem
_TEXT	ENDS
PUBLIC	??_7CTreeViewType@@6B@				; CTreeViewType::`vftable'
PUBLIC	??_GCTreeViewType@@UAEPAXI@Z			; CTreeViewType::`scalar deleting destructor'
PUBLIC	??_ECTreeViewType@@UAEPAXI@Z			; CTreeViewType::`vector deleting destructor'
PUBLIC	?InsertTailListUninit@@YGXPAU_LIST_ENTRY@@0@Z	; InsertTailListUninit
PUBLIC	??_C@_05BNGD@pTree?$AA@				; `string'
PUBLIC	??0CRefCount@DirectSound@@QAE@K@Z		; DirectSound::CRefCount::CRefCount
PUBLIC	?AddRef@CRefCount@DirectSound@@UAGKXZ		; DirectSound::CRefCount::AddRef
PUBLIC	?Release@CRefCount@DirectSound@@UAGKXZ		; DirectSound::CRefCount::Release
EXTRN	_strcpy:NEAR
;	COMDAT ??_7CTreeViewType@@6B@
CONST	SEGMENT
??_7CTreeViewType@@6B@ DD FLAT:??_ECTreeViewType@@UAEPAXI@Z ; CTreeViewType::`vftable'
	DD	FLAT:?AddRef@CRefCount@DirectSound@@UAGKXZ
	DD	FLAT:?Release@CRefCount@DirectSound@@UAGKXZ
CONST	ENDS
;	COMDAT ??_C@_05BNGD@pTree?$AA@
CONST	SEGMENT
??_C@_05BNGD@pTree?$AA@ DB 'pTree', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CTreeViewType@@QAE@PAVCTreeView@@PBDH@Z
_TEXT	SEGMENT
_pTree$ = 8
_pszText$ = 12
_nImageIndex$ = 16
_this$ = -4
??0CTreeViewType@@QAE@PAVCTreeView@@PBDH@Z PROC NEAR	; CTreeViewType::CTreeViewType, COMDAT
; _this$ = ecx

; 857  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CRefCount@DirectSound@@QAE@K@Z ; DirectSound::CRefCount::CRefCount
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTreeViewType@@6B@ ; CTreeViewType::`vftable'

; 858  :     ASSERT(pTree);

  0001a	68 5a 03 00 00	 push	 858			; 0000035aH
  0001f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00024	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05BNGD@pTree?$AA@ ; `string'
  00029	33 c9		 xor	 ecx, ecx
  0002b	83 7d 08 00	 cmp	 DWORD PTR _pTree$[ebp], 0
  0002f	0f 94 c1	 sete	 cl
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00038	83 c4 10	 add	 esp, 16			; 00000010H

; 859  :     ASSERT(pszText);

  0003b	68 5b 03 00 00	 push	 859			; 0000035bH
  00040	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00045	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07PFHL@pszText?$AA@ ; `string'
  0004a	33 d2		 xor	 edx, edx
  0004c	83 7d 0c 00	 cmp	 DWORD PTR _pszText$[ebp], 0
  00050	0f 94 c2	 sete	 dl
  00053	52		 push	 edx
  00054	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00059	83 c4 10	 add	 esp, 16			; 00000010H

; 860  :     
; 861  :     InsertTailListUninit(&pTree->m_lstTypes, &m_leTypes);

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	83 c0 08	 add	 eax, 8
  00062	50		 push	 eax
  00063	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  00066	83 c1 64	 add	 ecx, 100		; 00000064H
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ?InsertTailListUninit@@YGXPAU_LIST_ENTRY@@0@Z ; InsertTailListUninit

; 862  : 
; 863  :     _tcscpy(m_szName, pszText);

  0006f	8b 55 0c	 mov	 edx, DWORD PTR _pszText$[ebp]
  00072	52		 push	 edx
  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	83 c0 10	 add	 eax, 16			; 00000010H
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 _strcpy
  0007f	83 c4 08	 add	 esp, 8

; 864  : 
; 865  :     m_nImageIndex = nImageIndex;

  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	8b 55 10	 mov	 edx, DWORD PTR _nImageIndex$[ebp]
  00088	89 91 10 01 00
	00		 mov	 DWORD PTR [ecx+272], edx

; 866  : }

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 0c 00	 ret	 12			; 0000000cH
??0CTreeViewType@@QAE@PAVCTreeView@@PBDH@Z ENDP		; CTreeViewType::CTreeViewType
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\ntlist.h
_TEXT	ENDS
;	COMDAT ?InsertTailListUninit@@YGXPAU_LIST_ENTRY@@0@Z
_TEXT	SEGMENT
_ListHead$ = 8
_Entry$ = 12
?InsertTailListUninit@@YGXPAU_LIST_ENTRY@@0@Z PROC NEAR	; InsertTailListUninit, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 136  :     AssertValidEntryList(ListHead, ASSERT_VALID_ONLY);

  00003	68 88 00 00 00	 push	 136			; 00000088H
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000d	6a 00		 push	 0
  0000f	8b 45 08	 mov	 eax, DWORD PTR _ListHead$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 137  : 
; 138  :     Entry->Flink = ListHead;

  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _ListHead$[ebp]
  0001e	89 11		 mov	 DWORD PTR [ecx], edx

; 139  :     Entry->Blink = ListHead->Blink;

  00020	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _ListHead$[ebp]
  00026	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00029	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 140  :     
; 141  :     Entry->Flink->Blink = Entry;

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	8b 55 0c	 mov	 edx, DWORD PTR _Entry$[ebp]
  00034	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 142  :     Entry->Blink->Flink = Entry;

  00037	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  0003a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003d	8b 55 0c	 mov	 edx, DWORD PTR _Entry$[ebp]
  00040	89 11		 mov	 DWORD PTR [ecx], edx

; 143  : 
; 144  :     AssertValidEntryList(Entry, ASSERT_IN_LIST);

  00042	68 90 00 00 00	 push	 144			; 00000090H
  00047	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0004c	6a 01		 push	 1
  0004e	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 145  : }    

  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
?InsertTailListUninit@@YGXPAU_LIST_ENTRY@@0@Z ENDP	; InsertTailListUninit
_TEXT	ENDS
PUBLIC	??_7CRefCount@DirectSound@@6B@			; DirectSound::CRefCount::`vftable'
PUBLIC	??_GCRefCount@DirectSound@@UAEPAXI@Z		; DirectSound::CRefCount::`scalar deleting destructor'
PUBLIC	??_ECRefCount@DirectSound@@UAEPAXI@Z		; DirectSound::CRefCount::`vector deleting destructor'
;	COMDAT ??_7CRefCount@DirectSound@@6B@
; File c:\xbox\private\windows\directx\dsound\common\refcount.h
CONST	SEGMENT
??_7CRefCount@DirectSound@@6B@ DD FLAT:??_ECRefCount@DirectSound@@UAEPAXI@Z ; DirectSound::CRefCount::`vftable'
	DD	FLAT:?AddRef@CRefCount@DirectSound@@UAGKXZ
	DD	FLAT:?Release@CRefCount@DirectSound@@UAGKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CRefCount@DirectSound@@QAE@K@Z
_TEXT	SEGMENT
_dwInitialRefCount$ = 8
_this$ = -4
??0CRefCount@DirectSound@@QAE@K@Z PROC NEAR		; DirectSound::CRefCount::CRefCount, COMDAT
; _this$ = ecx

; 37   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwInitialRefCount$[ebp]
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00010	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00013	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CRefCount@DirectSound@@6B@ ; DirectSound::CRefCount::`vftable'

; 38   :     }

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CRefCount@DirectSound@@QAE@K@Z ENDP			; DirectSound::CRefCount::CRefCount
_TEXT	ENDS
PUBLIC	??1CRefCount@DirectSound@@UAE@XZ		; DirectSound::CRefCount::~CRefCount
; Function compile flags: /Odt
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCRefCount@DirectSound@@UAEPAXI@Z PROC NEAR		; DirectSound::CRefCount::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CRefCount@DirectSound@@UAE@XZ ; DirectSound::CRefCount::~CRefCount
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L47751
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L47751:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCRefCount@DirectSound@@UAEPAXI@Z ENDP		; DirectSound::CRefCount::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@		; `string'
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\common\refcount.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT
??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@ DB '!m_dwRefCount', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CRefCount@DirectSound@@UAE@XZ PROC NEAR		; DirectSound::CRefCount::~CRefCount, COMDAT
; _this$ = ecx

; 41   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRefCount@DirectSound@@6B@ ; DirectSound::CRefCount::`vftable'

; 42   :         ASSERT(!m_dwRefCount);

  00010	6a 2a		 push	 42			; 0000002aH
  00012	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@ ; `string'
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00025	0f 95 c2	 setne	 dl
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0002e	83 c4 10	 add	 esp, 16			; 00000010H

; 43   :     }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??1CRefCount@DirectSound@@UAE@XZ ENDP			; DirectSound::CRefCount::~CRefCount
_TEXT	ENDS
PUBLIC	??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@	; `string'
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT
??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@ DB 'm_dwRefCount < ~0UL', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8
?AddRef@CRefCount@DirectSound@@UAGKXZ PROC NEAR		; DirectSound::CRefCount::AddRef, COMDAT

; 46   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   :         ASSERT(m_dwRefCount < ~0UL);

  00003	6a 2f		 push	 47			; 0000002fH
  00005	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@ ; `string'
  0000f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 78 04 ff	 cmp	 DWORD PTR [eax+4], -1
  00016	1b c9		 sbb	 ecx, ecx
  00018	41		 inc	 ecx
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0001f	83 c4 10	 add	 esp, 16			; 00000010H

; 48   :         return ++m_dwRefCount;

  00022	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	83 c0 01	 add	 eax, 1
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00031	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 49   :     }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?AddRef@CRefCount@DirectSound@@UAGKXZ ENDP		; DirectSound::CRefCount::AddRef
_TEXT	ENDS
PUBLIC	??_C@_0N@BGIF@m_dwRefCount?$AA@			; `string'
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT
??_C@_0N@BGIF@m_dwRefCount?$AA@ DB 'm_dwRefCount', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8
$T51096 = -4
$T51097 = -8
?Release@CRefCount@DirectSound@@UAGKXZ PROC NEAR	; DirectSound::CRefCount::Release, COMDAT

; 52   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 53   :         ASSERT(m_dwRefCount);

  00006	6a 35		 push	 53			; 00000035H
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@BGIF@m_dwRefCount?$AA@ ; `string'
  00012	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00015	33 c9		 xor	 ecx, ecx
  00017	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001b	0f 94 c1	 sete	 cl
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 54   : 
; 55   :         if(m_dwRefCount > 0)

  00027	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  0002e	76 46		 jbe	 SHORT $L47768

; 56   :         {
; 57   :             if(!--m_dwRefCount)

  00030	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00036	83 e9 01	 sub	 ecx, 1
  00039	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00046	75 2e		 jne	 SHORT $L47769

; 58   :             {
; 59   :                 delete this;

  00048	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	89 4d f8	 mov	 DWORD PTR $T51097[ebp], ecx
  0004e	8b 55 f8	 mov	 edx, DWORD PTR $T51097[ebp]
  00051	89 55 fc	 mov	 DWORD PTR $T51096[ebp], edx
  00054	83 7d fc 00	 cmp	 DWORD PTR $T51096[ebp], 0
  00058	74 11		 je	 SHORT $L51098
  0005a	6a 01		 push	 1
  0005c	8b 45 fc	 mov	 eax, DWORD PTR $T51096[ebp]
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	8b 4d fc	 mov	 ecx, DWORD PTR $T51096[ebp]
  00064	ff 12		 call	 DWORD PTR [edx]
  00066	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00069	eb 07		 jmp	 SHORT $L51099
$L51098:
  0006b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L51099:

; 60   :                 return 0;

  00072	33 c0		 xor	 eax, eax
  00074	eb 06		 jmp	 SHORT $L47766
$L47769:
$L47768:

; 61   :             }
; 62   :         }
; 63   : 
; 64   :         return m_dwRefCount;

  00076	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L47766:

; 65   :     }

  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?Release@CRefCount@DirectSound@@UAGKXZ ENDP		; DirectSound::CRefCount::Release
_TEXT	ENDS
PUBLIC	??1CTreeViewType@@UAE@XZ			; CTreeViewType::~CTreeViewType
; Function compile flags: /Odt
;	COMDAT ??_GCTreeViewType@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTreeViewType@@UAEPAXI@Z PROC NEAR			; CTreeViewType::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTreeViewType@@UAE@XZ ; CTreeViewType::~CTreeViewType
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L50668
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L50668:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCTreeViewType@@UAEPAXI@Z ENDP			; CTreeViewType::`scalar deleting destructor'
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
_TEXT	ENDS
;	COMDAT ??1CTreeViewType@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CTreeViewType@@UAE@XZ PROC NEAR			; CTreeViewType::~CTreeViewType, COMDAT
; _this$ = ecx

; 891  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTreeViewType@@6B@ ; CTreeViewType::`vftable'

; 892  :     RemoveEntryList(&m_leTypes);

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 08	 add	 ecx, 8
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ; RemoveEntryList

; 893  : }

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??1CRefCount@DirectSound@@UAE@XZ ; DirectSound::CRefCount::~CRefCount
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??1CTreeViewType@@UAE@XZ ENDP				; CTreeViewType::~CTreeViewType
_TEXT	ENDS
PUBLIC	??0CTreeViewItem@@QAE@XZ			; CTreeViewItem::CTreeViewItem
PUBLIC	?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z ; CTreeViewItem::Create
PUBLIC	?Remove@CTreeViewItem@@UAEXXZ			; CTreeViewItem::Remove
PUBLIC	?SetText@CTreeViewItem@@UAEXPBD@Z		; CTreeViewItem::SetText
PUBLIC	?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ	; CTreeViewItem::EditLabel
PUBLIC	?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z ; CTreeViewItem::OnContextMenu
PUBLIC	?OnDoubleClick@CTreeViewItem@@UAEXXZ		; CTreeViewItem::OnDoubleClick
PUBLIC	?OnDelete@CTreeViewItem@@UAEXXZ			; CTreeViewItem::OnDelete
PUBLIC	?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z		; CTreeViewItem::OnGetInfoTip
PUBLIC	?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z	; CTreeViewItem::OnEndLabelEdit
PUBLIC	??_7CTreeViewItem@@6B@				; CTreeViewItem::`vftable'
PUBLIC	??_GCTreeViewItem@@UAEPAXI@Z			; CTreeViewItem::`scalar deleting destructor'
PUBLIC	??_ECTreeViewItem@@UAEPAXI@Z			; CTreeViewItem::`vector deleting destructor'
;	COMDAT ??_7CTreeViewItem@@6B@
CONST	SEGMENT
??_7CTreeViewItem@@6B@ DD FLAT:??_ECTreeViewItem@@UAEPAXI@Z ; CTreeViewItem::`vftable'
	DD	FLAT:?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z
	DD	FLAT:?Remove@CTreeViewItem@@UAEXXZ
	DD	FLAT:?SetText@CTreeViewItem@@UAEXPBD@Z
	DD	FLAT:?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
	DD	FLAT:?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnDoubleClick@CTreeViewItem@@UAEXXZ
	DD	FLAT:?OnDelete@CTreeViewItem@@UAEXXZ
	DD	FLAT:?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z
	DD	FLAT:?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CTreeViewItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CTreeViewItem@@QAE@XZ PROC NEAR			; CTreeViewItem::CTreeViewItem, COMDAT
; _this$ = ecx

; 918  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTreeViewItem@@6B@ ; CTreeViewItem::`vftable'

; 919  : }

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CTreeViewItem@@QAE@XZ ENDP				; CTreeViewItem::CTreeViewItem
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.h
_TEXT	ENDS
;	COMDAT ?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ PROC NEAR	; CTreeViewItem::EditLabel, COMDAT
; _this$ = ecx

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 162  :     return TreeView_EditLabel(m_pTree->m_TreeCtrl.m_hWnd, m_hTreeItem);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	51		 push	 ecx
  0000e	6a 00		 push	 0
  00010	68 0e 11 00 00	 push	 4366			; 0000110eH
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001b	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0001e	51		 push	 ecx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 163  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?EditLabel@CTreeViewItem@@UAEPAUHWND__@@XZ ENDP		; CTreeViewItem::EditLabel
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDoubleClick@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnDoubleClick@CTreeViewItem@@UAEXXZ PROC NEAR		; CTreeViewItem::OnDoubleClick, COMDAT
; _this$ = ecx

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 172  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?OnDoubleClick@CTreeViewItem@@UAEXXZ ENDP		; CTreeViewItem::OnDoubleClick
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CTreeViewItem::OnContextMenu, COMDAT
; _this$ = ecx

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 177  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CTreeViewItem@@UAEHPAUHWND__@@HHPAJ@Z ENDP ; CTreeViewItem::OnContextMenu
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -4
?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z PROC NEAR	; CTreeViewItem::OnGetInfoTip, COMDAT
; _this$ = ecx

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  :     *pszText = 0;

  00007	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0000a	c6 00 00	 mov	 BYTE PTR [eax], 0

; 182  : }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?OnGetInfoTip@CTreeViewItem@@UAEXPADH@Z ENDP		; CTreeViewItem::OnGetInfoTip
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4
?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z PROC NEAR	; CTreeViewItem::OnEndLabelEdit, COMDAT
; _this$ = ecx

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 186  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 187  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnEndLabelEdit@CTreeViewItem@@UAEHPBD@Z ENDP		; CTreeViewItem::OnEndLabelEdit
_TEXT	ENDS
PUBLIC	??1CTreeViewItem@@UAE@XZ			; CTreeViewItem::~CTreeViewItem
; Function compile flags: /Odt
;	COMDAT ??_GCTreeViewItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTreeViewItem@@UAEPAXI@Z PROC NEAR			; CTreeViewItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTreeViewItem@@UAE@XZ ; CTreeViewItem::~CTreeViewItem
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L50680
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L50680:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCTreeViewItem@@UAEPAXI@Z ENDP			; CTreeViewItem::`scalar deleting destructor'
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\host\gui\controls\treeview.cpp
_TEXT	ENDS
;	COMDAT ??1CTreeViewItem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CTreeViewItem@@UAE@XZ PROC NEAR			; CTreeViewItem::~CTreeViewItem, COMDAT
; _this$ = ecx

; 944  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTreeViewItem@@6B@ ; CTreeViewItem::`vftable'

; 945  :     Remove();

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Remove@CTreeViewItem@@UAEXXZ ; CTreeViewItem::Remove

; 946  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CTreeViewItem@@UAE@XZ ENDP				; CTreeViewItem::~CTreeViewItem
_TEXT	ENDS
PUBLIC	??_C@_0N@BPEN@?$CBm_hTreeItem?$AA@		; `string'
PUBLIC	??_C@_07FEMJ@XACTGUI?$AA@			; `string'
PUBLIC	??_C@_0BG@PKKF@CTreeViewItem?3?3Create?$AA@	; `string'
PUBLIC	??_C@_0BE@FCMH@Type?5not?5registered?$AA@	; `string'
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
;	COMDAT ??_C@_0N@BPEN@?$CBm_hTreeItem?$AA@
CONST	SEGMENT
??_C@_0N@BPEN@?$CBm_hTreeItem?$AA@ DB '!m_hTreeItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FEMJ@XACTGUI?$AA@
CONST	SEGMENT
??_C@_07FEMJ@XACTGUI?$AA@ DB 'XACTGUI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PKKF@CTreeViewItem?3?3Create?$AA@
CONST	SEGMENT
??_C@_0BG@PKKF@CTreeViewItem?3?3Create?$AA@ DB 'CTreeViewItem::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FCMH@Type?5not?5registered?$AA@
CONST	SEGMENT
??_C@_0BE@FCMH@Type?5not?5registered?$AA@ DB 'Type not registered', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z
_TEXT	SEGMENT
_pTree$ = 8
_pParentItem$ = 12
_pszText$ = 16
_pszType$ = 20
_pvContext$ = 24
_this$ = -60
_tvi$ = -52
_pType$ = -56
?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z PROC NEAR ; CTreeViewItem::Create, COMDAT
; _this$ = ecx

; 980  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	57		 push	 edi
  00007	89 4d c4	 mov	 DWORD PTR _this$[ebp], ecx

; 981  :     TVINSERTSTRUCT          tvi     = { 0 };

  0000a	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _tvi$[ebp], 0
  00011	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00016	33 c0		 xor	 eax, eax
  00018	8d 7d d0	 lea	 edi, DWORD PTR _tvi$[ebp+4]
  0001b	f3 ab		 rep stosd

; 982  :     CTreeViewType *         pType;
; 983  : 
; 984  :     ASSERT(pTree);

  0001d	68 d8 03 00 00	 push	 984			; 000003d8H
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00027	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05BNGD@pTree?$AA@ ; `string'
  0002c	33 c0		 xor	 eax, eax
  0002e	83 7d 08 00	 cmp	 DWORD PTR _pTree$[ebp], 0
  00032	0f 94 c0	 sete	 al
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 985  :     ASSERT(!m_hTreeItem);

  0003e	68 d9 03 00 00	 push	 985			; 000003d9H
  00043	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00048	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@BPEN@?$CBm_hTreeItem?$AA@ ; `string'
  0004d	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	33 d2		 xor	 edx, edx
  00052	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00056	0f 95 c2	 setne	 dl
  00059	52		 push	 edx
  0005a	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 986  : 
; 987  :     m_pTree = pTree;

  00062	8b 45 c4	 mov	 eax, DWORD PTR _this$[ebp]
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  00068	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 988  :     m_pvContext = pvContext;

  0006b	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	8b 45 18	 mov	 eax, DWORD PTR _pvContext$[ebp]
  00071	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 989  : 
; 990  :     tvi.hParent = pParentItem ? pParentItem->m_hTreeItem : NULL;

  00074	83 7d 0c 00	 cmp	 DWORD PTR _pParentItem$[ebp], 0
  00078	74 0b		 je	 SHORT $L51133
  0007a	8b 4d 0c	 mov	 ecx, DWORD PTR _pParentItem$[ebp]
  0007d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00080	89 55 c0	 mov	 DWORD PTR -64+[ebp], edx
  00083	eb 07		 jmp	 SHORT $L51134
$L51133:
  00085	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L51134:
  0008c	8b 45 c0	 mov	 eax, DWORD PTR -64+[ebp]
  0008f	89 45 cc	 mov	 DWORD PTR _tvi$[ebp], eax

; 991  :     tvi.hInsertAfter = TVI_SORT;

  00092	c7 45 d0 03 00
	ff ff		 mov	 DWORD PTR _tvi$[ebp+4], -65533 ; ffff0003H

; 992  :     
; 993  :     tvi.item.mask = TVIF_PARAM;

  00099	c7 45 d4 04 00
	00 00		 mov	 DWORD PTR _tvi$[ebp+8], 4

; 994  :     tvi.item.lParam = (LPARAM)this;

  000a0	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	89 4d f8	 mov	 DWORD PTR _tvi$[ebp+44], ecx

; 995  : 
; 996  :     if(pszText)

  000a6	83 7d 10 00	 cmp	 DWORD PTR _pszText$[ebp], 0
  000aa	74 0f		 je	 SHORT $L50699

; 997  :     {
; 998  :         tvi.item.mask |= TVIF_TEXT;

  000ac	8b 55 d4	 mov	 edx, DWORD PTR _tvi$[ebp+8]
  000af	83 ca 01	 or	 edx, 1
  000b2	89 55 d4	 mov	 DWORD PTR _tvi$[ebp+8], edx

; 999  :         tvi.item.pszText = (LPTSTR)pszText;

  000b5	8b 45 10	 mov	 eax, DWORD PTR _pszText$[ebp]
  000b8	89 45 e4	 mov	 DWORD PTR _tvi$[ebp+24], eax
$L50699:

; 1000 :     }
; 1001 : 
; 1002 :     if(pszType)

  000bb	83 7d 14 00	 cmp	 DWORD PTR _pszType$[ebp], 0
  000bf	74 6b		 je	 SHORT $L50701

; 1003 :     {
; 1004 :         if(pType = pTree->FindRegisteredType(pszType))

  000c1	8b 4d 14	 mov	 ecx, DWORD PTR _pszType$[ebp]
  000c4	51		 push	 ecx
  000c5	8b 55 08	 mov	 edx, DWORD PTR _pTree$[ebp]
  000c8	8b 02		 mov	 eax, DWORD PTR [edx]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  000cd	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]
  000d3	89 45 c8	 mov	 DWORD PTR _pType$[ebp], eax
  000d6	83 7d c8 00	 cmp	 DWORD PTR _pType$[ebp], 0
  000da	74 23		 je	 SHORT $L50702

; 1005 :         {
; 1006 :             tvi.item.mask |= TVIF_IMAGE | TVIF_SELECTEDIMAGE;

  000dc	8b 4d d4	 mov	 ecx, DWORD PTR _tvi$[ebp+8]
  000df	83 c9 22	 or	 ecx, 34			; 00000022H
  000e2	89 4d d4	 mov	 DWORD PTR _tvi$[ebp+8], ecx

; 1007 :             tvi.item.iImage = pType->m_nImageIndex;

  000e5	8b 55 c8	 mov	 edx, DWORD PTR _pType$[ebp]
  000e8	8b 82 10 01 00
	00		 mov	 eax, DWORD PTR [edx+272]
  000ee	89 45 ec	 mov	 DWORD PTR _tvi$[ebp+32], eax

; 1008 :             tvi.item.iSelectedImage = pType->m_nImageIndex;

  000f1	8b 4d c8	 mov	 ecx, DWORD PTR _pType$[ebp]
  000f4	8b 91 10 01 00
	00		 mov	 edx, DWORD PTR [ecx+272]
  000fa	89 55 f0	 mov	 DWORD PTR _tvi$[ebp+36], edx

; 1009 :         }
; 1010 :         else

  000fd	eb 2d		 jmp	 SHORT $L50703
$L50702:

; 1011 :         {
; 1012 :             DPF_ERROR("Type not registered");

  000ff	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FEMJ@XACTGUI?$AA@ ; `string'
  00104	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@PKKF@CTreeViewItem?3?3Create?$AA@ ; `string'
  00109	68 f4 03 00 00	 push	 1012			; 000003f4H
  0010e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EGDA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00113	6a 01		 push	 1
  00115	6a 09		 push	 9
  00117	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0011c	83 c4 18	 add	 esp, 24			; 00000018H
  0011f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@FCMH@Type?5not?5registered?$AA@ ; `string'
  00124	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00129	83 c4 04	 add	 esp, 4
$L50703:
$L50701:

; 1013 :         }
; 1014 :     }
; 1015 : 
; 1016 :     return MAKEBOOL(m_hTreeItem = TreeView_InsertItem(pTree->m_TreeCtrl, &tvi));

  0012c	8d 45 cc	 lea	 eax, DWORD PTR _tvi$[ebp]
  0012f	50		 push	 eax
  00130	6a 00		 push	 0
  00132	68 00 11 00 00	 push	 4352			; 00001100H
  00137	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  0013a	83 c1 30	 add	 ecx, 48			; 00000030H
  0013d	8b 55 08	 mov	 edx, DWORD PTR _pTree$[ebp]
  00140	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00143	ff 50 58	 call	 DWORD PTR [eax+88]
  00146	50		 push	 eax
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0014d	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00153	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  00156	33 c0		 xor	 eax, eax
  00158	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0015c	0f 95 c0	 setne	 al

; 1017 : }

  0015f	5f		 pop	 edi
  00160	8b e5		 mov	 esp, ebp
  00162	5d		 pop	 ebp
  00163	c2 14 00	 ret	 20			; 00000014H
?Create@CTreeViewItem@@UAEHPAVCTreeView@@PAV1@PBD2PAX@Z ENDP ; CTreeViewItem::Create
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Remove@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Remove@CTreeViewItem@@UAEXXZ PROC NEAR			; CTreeViewItem::Remove, COMDAT
; _this$ = ecx

; 1043 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1044 :     if(m_hTreeItem && m_pTree)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0000e	74 33		 je	 SHORT $L50714
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00017	74 2a		 je	 SHORT $L50714

; 1045 :     {
; 1046 :         TreeView_DeleteItem(m_pTree->m_TreeCtrl, m_hTreeItem);

  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001f	50		 push	 eax
  00020	6a 00		 push	 0
  00022	68 01 11 00 00	 push	 4353			; 00001101H
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00033	83 c1 30	 add	 ecx, 48			; 00000030H
  00036	8b 52 30	 mov	 edx, DWORD PTR [edx+48]
  00039	ff 52 58	 call	 DWORD PTR [edx+88]
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L50714:

; 1047 :     }
; 1048 : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?Remove@CTreeViewItem@@UAEXXZ ENDP			; CTreeViewItem::Remove
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDelete@CTreeViewItem@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnDelete@CTreeViewItem@@UAEXXZ PROC NEAR		; CTreeViewItem::OnDelete, COMDAT
; _this$ = ecx

; 1074 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1075 :     m_hTreeItem = NULL;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 1076 :     m_pTree = NULL;

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 1077 :     m_pvContext = NULL;

  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 1078 : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?OnDelete@CTreeViewItem@@UAEXXZ ENDP			; CTreeViewItem::OnDelete
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetText@CTreeViewItem@@UAEXPBD@Z
_TEXT	SEGMENT
_pszText$ = 8
_this$ = -44
_tvi$ = -40
?SetText@CTreeViewItem@@UAEXPBD@Z PROC NEAR		; CTreeViewItem::SetText, COMDAT
; _this$ = ecx

; 1104 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 1105 :     TVITEM                  tvi;
; 1106 : 
; 1107 :     if(!m_pTree || !m_hTreeItem)

  00009	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00010	74 09		 je	 SHORT $L50728
  00012	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00019	75 02		 jne	 SHORT $L50727
$L50728:

; 1108 :     {
; 1109 :         return;

  0001b	eb 3f		 jmp	 SHORT $L50725
$L50727:

; 1110 :     }
; 1111 : 
; 1112 :     tvi.mask = TVIF_TEXT;

  0001d	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR _tvi$[ebp], 1

; 1113 :     tvi.hItem = m_hTreeItem;

  00024	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0002a	89 45 dc	 mov	 DWORD PTR _tvi$[ebp+4], eax

; 1114 :     tvi.pszText = (LPTSTR)pszText;

  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _pszText$[ebp]
  00030	89 4d e8	 mov	 DWORD PTR _tvi$[ebp+16], ecx

; 1115 : 
; 1116 :     TreeView_SetItem(m_pTree->m_TreeCtrl, &tvi);

  00033	8d 55 d8	 lea	 edx, DWORD PTR _tvi$[ebp]
  00036	52		 push	 edx
  00037	6a 00		 push	 0
  00039	68 0d 11 00 00	 push	 4365			; 0000110dH
  0003e	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00044	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00047	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004a	83 c0 30	 add	 eax, 48			; 00000030H
  0004d	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00050	8b c8		 mov	 ecx, eax
  00052	ff 52 58	 call	 DWORD PTR [edx+88]
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L50725:

; 1117 : }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?SetText@CTreeViewItem@@UAEXPBD@Z ENDP			; CTreeViewItem::SetText
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?PtrFromTreeItem@CTreeViewItem@@SGPAV1@PAVCTreeView@@PAU_TREEITEM@@@Z
_TEXT	SEGMENT
_pTree$ = 8
_hItem$ = 12
?PtrFromTreeItem@CTreeViewItem@@SGPAV1@PAVCTreeView@@PAU_TREEITEM@@@Z PROC NEAR ; CTreeViewItem::PtrFromTreeItem, COMDAT

; 1145 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1146 :     return pTree->PtrFromTreeItem(hItem);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _hItem$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _pTree$[ebp]
  0000f	ff 92 b4 00 00
	00		 call	 DWORD PTR [edx+180]

; 1147 : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?PtrFromTreeItem@CTreeViewItem@@SGPAV1@PAVCTreeView@@PAU_TREEITEM@@@Z ENDP ; CTreeViewItem::PtrFromTreeItem
_TEXT	ENDS
END
