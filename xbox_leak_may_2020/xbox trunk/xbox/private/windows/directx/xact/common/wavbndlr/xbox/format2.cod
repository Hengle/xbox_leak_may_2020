; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	..\format2.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@HLNMLIHP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09GPGAJHPD@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05NLEMHEGP@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05CDPEDPM@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KMNOOPDE@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@GJENLBGG@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@ICAFBHOE@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08OKNPBAEH@WAVBNDLR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAONOLFE@WaveBankCompressFormat?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EB@ICHLKOMH@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@NEGDFCOA@Unsupported?5format?5tag?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _KeGetCurrentIrql@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _KeIsExecutingDpc@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Direct3D_AddRef@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Direct3D_Release@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_BeginScene@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_EndScene@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DPalette_Unlock@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CIrql@DirectSound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Raise@CIrql@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lower@CIrql@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Save@CFpState@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Restore@CFpState@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WaveBankExpandFormat@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WaveBankCompressFormat@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
CONST	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
CONST	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
CONST	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
CONST	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
CONST	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
CONST	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
CONST	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
CONST	ENDS
PUBLIC	_WaveBankExpandFormat@8
EXTRN	_XAudioCreatePcmFormat@16:NEAR
EXTRN	_XAudioCreateAdpcmFormat@12:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\format2.cpp
;	COMDAT _WaveBankExpandFormat@8
_TEXT	SEGMENT
_pwfxCompressed$ = 8
_pwfxExpanded$ = 12
_WaveBankExpandFormat@8 PROC NEAR			; COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   :     DPF_ENTER();
; 46   : 
; 47   :     if(WAVEBANKMINIFORMAT_TAG_ADPCM == pwfxCompressed->wFormatTag)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	83 e1 01	 and	 ecx, 1
  0000b	83 f9 01	 cmp	 ecx, 1
  0000e	75 25		 jne	 SHORT $L31448

; 48   :     {
; 49   :         XAudioCreateAdpcmFormat((WORD)pwfxCompressed->nChannels, pwfxCompressed->nSamplesPerSec, &pwfxExpanded->AdpcmWaveFormat);

  00010	8b 55 0c	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	c1 e9 04	 shr	 ecx, 4
  0001c	81 e1 ff ff ff
	07		 and	 ecx, 134217727		; 07ffffffH
  00022	51		 push	 ecx
  00023	8b 55 08	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	d1 e8		 shr	 eax, 1
  0002a	83 e0 07	 and	 eax, 7
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _XAudioCreateAdpcmFormat@12

; 50   :     }
; 51   :     else

  00033	eb 3c		 jmp	 SHORT $L31450
$L31448:

; 52   :     {
; 53   :         XAudioCreatePcmFormat((WORD)pwfxCompressed->nChannels, pwfxCompressed->nSamplesPerSec, (WAVEBANKMINIFORMAT_BITDEPTH_16 == pwfxCompressed->wBitsPerSample) ? 16 : 8, &pwfxExpanded->WaveFormatEx);

  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxExpanded$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 08	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  0003c	8b 02		 mov	 eax, DWORD PTR [edx]
  0003e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00041	83 e0 01	 and	 eax, 1
  00044	83 e8 01	 sub	 eax, 1
  00047	f7 d8		 neg	 eax
  00049	1b c0		 sbb	 eax, eax
  0004b	83 e0 f8	 and	 eax, -8			; fffffff8H
  0004e	83 c0 10	 add	 eax, 16			; 00000010H
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	c1 ea 04	 shr	 edx, 4
  0005a	81 e2 ff ff ff
	07		 and	 edx, 134217727		; 07ffffffH
  00060	52		 push	 edx
  00061	8b 45 08	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	d1 e9		 shr	 ecx, 1
  00068	83 e1 07	 and	 ecx, 7
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 _XAudioCreatePcmFormat@16
$L31450:

; 54   :     }
; 55   : 
; 56   :     DPF_LEAVE(TRUE);
; 57   : 
; 58   :     return TRUE;

  00071	b8 01 00 00 00	 mov	 eax, 1

; 59   : }

  00076	5d		 pop	 ebp
  00077	c2 08 00	 ret	 8
_WaveBankExpandFormat@8 ENDP
_TEXT	ENDS
PUBLIC	_WaveBankCompressFormat@8
PUBLIC	??_C@_08OKNPBAEH@WAVBNDLR?$AA@			; `string'
PUBLIC	??_C@_0BH@JAONOLFE@WaveBankCompressFormat?$AA@	; `string'
PUBLIC	??_C@_0EB@ICHLKOMH@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0BH@NEGDFCOA@Unsupported?5format?5tag?$AA@ ; `string'
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
EXTRN	?IsValidPcmFormat@WaveFormat@DirectSound@@YGHPBUtWAVEFORMATEX@@@Z:NEAR ; DirectSound::WaveFormat::IsValidPcmFormat
EXTRN	?IsValidAdpcmFormat@WaveFormat@DirectSound@@YGHPBUxbox_adpcmwaveformat_tag@@@Z:NEAR ; DirectSound::WaveFormat::IsValidAdpcmFormat
;	COMDAT ??_C@_08OKNPBAEH@WAVBNDLR?$AA@
CONST	SEGMENT
??_C@_08OKNPBAEH@WAVBNDLR?$AA@ DB 'WAVBNDLR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAONOLFE@WaveBankCompressFormat?$AA@
CONST	SEGMENT
??_C@_0BH@JAONOLFE@WaveBankCompressFormat?$AA@ DB 'WaveBankCompressFormat'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@ICHLKOMH@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EB@ICHLKOMH@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\xact\common\wavbndlr\format2.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NEGDFCOA@Unsupported?5format?5tag?$AA@
CONST	SEGMENT
??_C@_0BH@NEGDFCOA@Unsupported?5format?5tag?$AA@ DB 'Unsupported format t'
	DB	'ag', 00H					; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _WaveBankCompressFormat@8
_TEXT	SEGMENT
_fValid$ = -4
_pwfxExpanded$ = 8
_pwfxCompressed$ = 12
_WaveBankCompressFormat@8 PROC NEAR			; COMDAT

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 88   :     BOOL                        fValid;
; 89   : 
; 90   :     DPF_ENTER();
; 91   : 
; 92   :     if(WAVE_FORMAT_PCM == pwfxExpanded->WaveFormatEx.wFormatTag)

  00004	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  00007	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0000a	83 f9 01	 cmp	 ecx, 1
  0000d	0f 85 86 00 00
	00		 jne	 $L31457

; 93   :     {
; 94   :         if(fValid = IsValidPcmFormat(&pwfxExpanded->WaveFormatEx))

  00013	8b 55 08	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 ?IsValidPcmFormat@WaveFormat@DirectSound@@YGHPBUtWAVEFORMATEX@@@Z ; DirectSound::WaveFormat::IsValidPcmFormat
  0001c	89 45 fc	 mov	 DWORD PTR _fValid$[ebp], eax
  0001f	83 7d fc 00	 cmp	 DWORD PTR _fValid$[ebp], 0
  00023	74 6f		 je	 SHORT $L31458

; 95   :         {
; 96   :             pwfxCompressed->wFormatTag = WAVEBANKMINIFORMAT_TAG_PCM;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	83 e1 fe	 and	 ecx, -2			; fffffffeH
  0002d	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  00030	89 0a		 mov	 DWORD PTR [edx], ecx

; 97   :             pwfxCompressed->nChannels = pwfxExpanded->WaveFormatEx.nChannels;

  00032	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  00035	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00039	83 e1 07	 and	 ecx, 7
  0003c	d1 e1		 shl	 ecx, 1
  0003e	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  00041	8b 02		 mov	 eax, DWORD PTR [edx]
  00043	83 e0 f1	 and	 eax, -15		; fffffff1H
  00046	0b c1		 or	 eax, ecx
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  0004b	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :             pwfxCompressed->nSamplesPerSec = pwfxExpanded->WaveFormatEx.nSamplesPerSec;

  0004d	8b 55 08	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  00050	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00053	25 ff ff ff 07	 and	 eax, 134217727		; 07ffffffH
  00058	c1 e0 04	 shl	 eax, 4
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  0005e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00060	81 e2 0f 00 00
	80		 and	 edx, -2147483633	; 8000000fH
  00066	0b d0		 or	 edx, eax
  00068	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 99   :             pwfxCompressed->wBitsPerSample = (16 == pwfxExpanded->WaveFormatEx.wBitsPerSample) ? WAVEBANKMINIFORMAT_BITDEPTH_16 : WAVEBANKMINIFORMAT_BITDEPTH_8;

  0006d	8b 4d 08	 mov	 ecx, DWORD PTR _pwfxExpanded$[ebp]
  00070	0f b7 51 0e	 movzx	 edx, WORD PTR [ecx+14]
  00074	83 ea 10	 sub	 edx, 16			; 00000010H
  00077	f7 da		 neg	 edx
  00079	1b d2		 sbb	 edx, edx
  0007b	42		 inc	 edx
  0007c	83 e2 01	 and	 edx, 1
  0007f	c1 e2 1f	 shl	 edx, 31			; 0000001fH
  00082	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00085	8b 08		 mov	 ecx, DWORD PTR [eax]
  00087	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH
  0008d	0b ca		 or	 ecx, edx
  0008f	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  00092	89 0a		 mov	 DWORD PTR [edx], ecx
$L31458:

; 100  :         }
; 101  :     }
; 102  :     else if(WAVE_FORMAT_XBOX_ADPCM == pwfxExpanded->WaveFormatEx.wFormatTag)

  00094	e9 a8 00 00 00	 jmp	 $L31459
$L31457:
  00099	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  0009c	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0009f	83 f9 69	 cmp	 ecx, 105		; 00000069H
  000a2	75 6c		 jne	 SHORT $L31460

; 103  :     {
; 104  :         if(fValid = IsValidAdpcmFormat(&pwfxExpanded->AdpcmWaveFormat))

  000a4	8b 55 08	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  000a7	52		 push	 edx
  000a8	e8 00 00 00 00	 call	 ?IsValidAdpcmFormat@WaveFormat@DirectSound@@YGHPBUxbox_adpcmwaveformat_tag@@@Z ; DirectSound::WaveFormat::IsValidAdpcmFormat
  000ad	89 45 fc	 mov	 DWORD PTR _fValid$[ebp], eax
  000b0	83 7d fc 00	 cmp	 DWORD PTR _fValid$[ebp], 0
  000b4	74 58		 je	 SHORT $L31461

; 105  :         {
; 106  :             pwfxCompressed->wFormatTag = WAVEBANKMINIFORMAT_TAG_ADPCM;

  000b6	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	83 c9 01	 or	 ecx, 1
  000be	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  000c1	89 0a		 mov	 DWORD PTR [edx], ecx

; 107  :             pwfxCompressed->nChannels = pwfxExpanded->WaveFormatEx.nChannels;

  000c3	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  000c6	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000ca	83 e1 07	 and	 ecx, 7
  000cd	d1 e1		 shl	 ecx, 1
  000cf	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  000d2	8b 02		 mov	 eax, DWORD PTR [edx]
  000d4	83 e0 f1	 and	 eax, -15		; fffffff1H
  000d7	0b c1		 or	 eax, ecx
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  000dc	89 01		 mov	 DWORD PTR [ecx], eax

; 108  :             pwfxCompressed->nSamplesPerSec = pwfxExpanded->WaveFormatEx.nSamplesPerSec;

  000de	8b 55 08	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	25 ff ff ff 07	 and	 eax, 134217727		; 07ffffffH
  000e9	c1 e0 04	 shl	 eax, 4
  000ec	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	81 e2 0f 00 00
	80		 and	 edx, -2147483633	; 8000000fH
  000f7	0b d0		 or	 edx, eax
  000f9	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  000fc	89 10		 mov	 DWORD PTR [eax], edx

; 109  :             pwfxCompressed->wBitsPerSample = WAVEBANKMINIFORMAT_BITDEPTH_4;

  000fe	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  00101	8b 11		 mov	 edx, DWORD PTR [ecx]
  00103	81 e2 ff ff ff
	7f		 and	 edx, 2147483647		; 7fffffffH
  00109	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  0010c	89 10		 mov	 DWORD PTR [eax], edx
$L31461:

; 110  :         }
; 111  :     }
; 112  :     else

  0010e	eb 31		 jmp	 SHORT $L31459
$L31460:

; 113  :     {
; 114  :         DPF_ERROR("Unsupported format tag");

  00110	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08OKNPBAEH@WAVBNDLR?$AA@
  00115	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@JAONOLFE@WaveBankCompressFormat?$AA@
  0011a	6a 72		 push	 114			; 00000072H
  0011c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EB@ICHLKOMH@c?3?2xbox?2private?2windows?2directx?2@
  00121	6a 01		 push	 1
  00123	6a 09		 push	 9
  00125	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0012a	83 c4 18	 add	 esp, 24			; 00000018H
  0012d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@NEGDFCOA@Unsupported?5format?5tag?$AA@
  00132	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00137	83 c4 04	 add	 esp, 4

; 115  :         fValid = FALSE;

  0013a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _fValid$[ebp], 0
$L31459:

; 116  :     }   
; 117  : 
; 118  :     DPF_LEAVE(fValid);
; 119  : 
; 120  :     return fValid;

  00141	8b 45 fc	 mov	 eax, DWORD PTR _fValid$[ebp]

; 121  : }

  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 08 00	 ret	 8
_WaveBankCompressFormat@8 ENDP
_TEXT	ENDS
END
