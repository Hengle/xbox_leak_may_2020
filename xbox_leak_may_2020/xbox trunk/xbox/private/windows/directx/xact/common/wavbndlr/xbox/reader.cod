; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	..\reader.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@HLNMLIHP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09GPGAJHPD@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05NLEMHEGP@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05CDPEDPM@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KMNOOPDE@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@GJENLBGG@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@ICAFBHOE@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04ELFAHOMP@BYTE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08OKNPBAEH@WAVBNDLR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@GJEFAJIE@CWaveBankReader?3?3Open?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNOCNLLP@Invalid?5signature?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@GHAKPKJA@Invalid?5version?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@JLEMHJEL@m_pvBaseAddress?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@COMNIBAI@m_dwBankSize?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _KeGetCurrentIrql@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _KeIsExecutingDpc@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Direct3D_AddRef@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Direct3D_Release@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_BeginScene@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_EndScene@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DPalette_Unlock@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CIrql@DirectSound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Raise@CIrql@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lower@CIrql@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Save@CFpState@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Restore@CFpState@DirectSound@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankReader@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWaveBankReader@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWaveBankReader@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CWaveBankReader@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Flush@CWaveBankReader@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSectionData@CWaveBankReader@@QAEXPAU_WAVEBANKSECTIONDATA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveBankReader@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
CONST	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
CONST	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
CONST	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
CONST	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
CONST	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
CONST	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
CONST	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
CONST	ENDS
PUBLIC	??0CWaveBankReader@@QAE@XZ			; CWaveBankReader::CWaveBankReader
PUBLIC	??_7CWaveBankReader@@6B@			; CWaveBankReader::`vftable'
PUBLIC	??_GCWaveBankReader@@UAEPAXI@Z			; CWaveBankReader::`scalar deleting destructor'
EXTRN	??_ECWaveBankReader@@UAEPAXI@Z:NEAR		; CWaveBankReader::`vector deleting destructor'
;	COMDAT ??_7CWaveBankReader@@6B@
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\reader.cpp
CONST	SEGMENT
??_7CWaveBankReader@@6B@ DD FLAT:??_ECWaveBankReader@@UAEPAXI@Z ; CWaveBankReader::`vftable'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankReader@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBankReader@@QAE@XZ PROC NEAR			; CWaveBankReader::CWaveBankReader, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankReader@@6B@

; 40   :     DPF_ENTER();
; 41   : 
; 42   :     m_pvBaseAddress = NULL;

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 43   :     m_dwBankSize = 0;

  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 44   : 
; 45   :     DPF_LEAVE_VOID();
; 46   : }

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0CWaveBankReader@@QAE@XZ ENDP				; CWaveBankReader::CWaveBankReader
_TEXT	ENDS
PUBLIC	??1CWaveBankReader@@UAE@XZ			; CWaveBankReader::~CWaveBankReader
; Function compile flags: /Odt
;	COMDAT ??_GCWaveBankReader@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4
___flags$ = 8
??_GCWaveBankReader@@UAEPAXI@Z PROC NEAR		; CWaveBankReader::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWaveBankReader@@UAE@XZ ; CWaveBankReader::~CWaveBankReader
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L31451
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L31451:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWaveBankReader@@UAEPAXI@Z ENDP			; CWaveBankReader::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?Flush@CWaveBankReader@@QAEXXZ			; CWaveBankReader::Flush
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\reader.cpp
;	COMDAT ??1CWaveBankReader@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWaveBankReader@@UAE@XZ PROC NEAR			; CWaveBankReader::~CWaveBankReader, COMDAT
; _this$ = ecx

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankReader@@6B@

; 72   :     DPF_ENTER();
; 73   : 
; 74   :     Flush();

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Flush@CWaveBankReader@@QAEXXZ ; CWaveBankReader::Flush

; 75   : 
; 76   :     DPF_LEAVE_VOID();
; 77   : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CWaveBankReader@@UAE@XZ ENDP				; CWaveBankReader::~CWaveBankReader
_TEXT	ENDS
PUBLIC	?Open@CWaveBankReader@@QAEJPBD@Z		; CWaveBankReader::Open
PUBLIC	??_C@_04ELFAHOMP@BYTE?$AA@			; `string'
PUBLIC	??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_08OKNPBAEH@WAVBNDLR?$AA@			; `string'
PUBLIC	??_C@_0BG@GJEFAJIE@CWaveBankReader?3?3Open?$AA@	; `string'
PUBLIC	??_C@_0BC@CNOCNLLP@Invalid?5signature?$AA@	; `string'
PUBLIC	??_C@_0BA@GHAKPKJA@Invalid?5version?$AA@	; `string'
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
EXTRN	?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolAlloc
EXTRN	??0CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::CStdFileStream
EXTRN	??1CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::~CStdFileStream
EXTRN	?Open@CStdFileStream@WaveLoader@@QAEJPBDKKKK@Z:NEAR ; WaveLoader::CStdFileStream::Open
EXTRN	?Read@CStdFileStream@WaveLoader@@QAEJPAXKPAK@Z:NEAR ; WaveLoader::CStdFileStream::Read
EXTRN	?GetLength@CStdFileStream@WaveLoader@@QAEJPAK@Z:NEAR ; WaveLoader::CStdFileStream::GetLength
;	COMDAT ??_C@_04ELFAHOMP@BYTE?$AA@
CONST	SEGMENT
??_C@_04ELFAHOMP@BYTE?$AA@ DB 'BYTE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\xact\common\wavbndlr\reader.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OKNPBAEH@WAVBNDLR?$AA@
CONST	SEGMENT
??_C@_08OKNPBAEH@WAVBNDLR?$AA@ DB 'WAVBNDLR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GJEFAJIE@CWaveBankReader?3?3Open?$AA@
CONST	SEGMENT
??_C@_0BG@GJEFAJIE@CWaveBankReader?3?3Open?$AA@ DB 'CWaveBankReader::Open'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNOCNLLP@Invalid?5signature?$AA@
CONST	SEGMENT
??_C@_0BC@CNOCNLLP@Invalid?5signature?$AA@ DB 'Invalid signature', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GHAKPKJA@Invalid?5version?$AA@
CONST	SEGMENT
??_C@_0BA@GHAKPKJA@Invalid?5version?$AA@ DB 'Invalid version', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Open@CWaveBankReader@@QAEJPBD@Z
_TEXT	SEGMENT
_this$ = -24
$T31616 = -20
_hr$ = -16
_pHeader$ = -12
_BankFile$ = -8
_pszBankFile$ = 8
?Open@CWaveBankReader@@QAEJPBD@Z PROC NEAR		; CWaveBankReader::Open, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 105  :     CStdFileStream          BankFile;

  00009	8d 4d f8	 lea	 ecx, DWORD PTR _BankFile$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::CStdFileStream

; 106  :     LPCWAVEBANKHEADER       pHeader;
; 107  :     HRESULT                 hr;
; 108  :     
; 109  :     DPF_ENTER();
; 110  : 
; 111  :     //
; 112  :     // Open the file
; 113  :     //
; 114  : 
; 115  :     hr = BankFile.Open(pszBankFile, GENERIC_READ, FILE_SHARE_READ, OPEN_EXISTING, FILE_FLAG_SEQUENTIAL_SCAN);

  00011	68 00 00 00 08	 push	 134217728		; 08000000H
  00016	6a 03		 push	 3
  00018	6a 01		 push	 1
  0001a	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0001f	8b 45 08	 mov	 eax, DWORD PTR _pszBankFile$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _BankFile$[ebp]
  00026	e8 00 00 00 00	 call	 ?Open@CStdFileStream@WaveLoader@@QAEJPBDKKKK@Z ; WaveLoader::CStdFileStream::Open
  0002b	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 116  : 
; 117  :     //
; 118  :     // Read the whole damn thing
; 119  :     //
; 120  : 
; 121  :     if(SUCCEEDED(hr))

  0002e	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00032	7c 12		 jl	 SHORT $L31464

; 122  :     {
; 123  :         hr = BankFile.GetLength(&m_dwBankSize);

  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 08	 add	 ecx, 8
  0003a	51		 push	 ecx
  0003b	8d 4d f8	 lea	 ecx, DWORD PTR _BankFile$[ebp]
  0003e	e8 00 00 00 00	 call	 ?GetLength@CStdFileStream@WaveLoader@@QAEJPAK@Z ; WaveLoader::CStdFileStream::GetLength
  00043	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax
$L31464:

; 124  :     }
; 125  : 
; 126  :     if(SUCCEEDED(hr))

  00046	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004a	7c 3d		 jl	 SHORT $L31466

; 127  :     {
; 128  :         hr = HRFROMP(m_pvBaseAddress = MEMALLOC(BYTE, m_dwBankSize));

  0004c	6a 01		 push	 1
  0004e	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00054	50		 push	 eax
  00055	68 44 53 64 61	 push	 1633964868		; 61645344H
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04ELFAHOMP@BYTE?$AA@
  0005f	68 80 00 00 00	 push	 128			; 00000080H
  00064	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@
  00069	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00074	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00077	33 c0		 xor	 eax, eax
  00079	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  0007d	0f 95 c0	 setne	 al
  00080	48		 dec	 eax
  00081	25 0e 00 07 80	 and	 eax, -2147024882	; 8007000eH
  00086	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax
$L31466:

; 129  :     }
; 130  : 
; 131  :     if(SUCCEEDED(hr))

  00089	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008d	7c 1b		 jl	 SHORT $L31474

; 132  :     {
; 133  :         hr = BankFile.Read(m_pvBaseAddress, m_dwBankSize);

  0008f	6a 00		 push	 0
  00091	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00097	52		 push	 edx
  00098	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009e	51		 push	 ecx
  0009f	8d 4d f8	 lea	 ecx, DWORD PTR _BankFile$[ebp]
  000a2	e8 00 00 00 00	 call	 ?Read@CStdFileStream@WaveLoader@@QAEJPAXKPAK@Z ; WaveLoader::CStdFileStream::Read
  000a7	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax
$L31474:

; 134  :     }
; 135  : 
; 136  :     //
; 137  :     // Validate the header
; 138  :     //
; 139  : 
; 140  :     if(SUCCEEDED(hr))

  000aa	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ae	0f 8c 85 00 00
	00		 jl	 $L31476

; 141  :     {
; 142  :         pHeader = (LPCWAVEBANKHEADER)m_pvBaseAddress;

  000b4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	89 45 f4	 mov	 DWORD PTR _pHeader$[ebp], eax

; 143  : 
; 144  :         if(WAVEBANKHEADER_SIGNATURE != pHeader->dwSignature)

  000bd	8b 4d f4	 mov	 ecx, DWORD PTR _pHeader$[ebp]
  000c0	81 39 57 42 4e
	44		 cmp	 DWORD PTR [ecx], 1145979479 ; 444e4257H
  000c6	74 34		 je	 SHORT $L31478

; 145  :         {
; 146  :             DPF_ERROR("Invalid signature");

  000c8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08OKNPBAEH@WAVBNDLR?$AA@
  000cd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@GJEFAJIE@CWaveBankReader?3?3Open?$AA@
  000d2	68 92 00 00 00	 push	 146			; 00000092H
  000d7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@
  000dc	6a 01		 push	 1
  000de	6a 09		 push	 9
  000e0	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  000e5	83 c4 18	 add	 esp, 24			; 00000018H
  000e8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@CNOCNLLP@Invalid?5signature?$AA@
  000ed	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  000f2	83 c4 04	 add	 esp, 4

; 147  :             hr = E_FAIL;

  000f5	c7 45 f0 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L31478:

; 148  :         }
; 149  : 
; 150  :         if(WAVEBANKHEADER_VERSION != pHeader->dwVersion)

  000fc	8b 55 f4	 mov	 edx, DWORD PTR _pHeader$[ebp]
  000ff	83 7a 04 02	 cmp	 DWORD PTR [edx+4], 2
  00103	74 34		 je	 SHORT $L31476

; 151  :         {
; 152  :             DPF_ERROR("Invalid version");

  00105	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08OKNPBAEH@WAVBNDLR?$AA@
  0010a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@GJEFAJIE@CWaveBankReader?3?3Open?$AA@
  0010f	68 98 00 00 00	 push	 152			; 00000098H
  00114	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@
  00119	6a 01		 push	 1
  0011b	6a 09		 push	 9
  0011d	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00122	83 c4 18	 add	 esp, 24			; 00000018H
  00125	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@GHAKPKJA@Invalid?5version?$AA@
  0012a	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0012f	83 c4 04	 add	 esp, 4

; 153  :             hr = E_FAIL;

  00132	c7 45 f0 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L31476:

; 154  :         }
; 155  :     }
; 156  : 
; 157  :     //
; 158  :     // If anything went wrong, free everything
; 159  :     //
; 160  : 
; 161  :     if(FAILED(hr))

  00139	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0013d	7d 08		 jge	 SHORT $L31487

; 162  :     {
; 163  :         Flush();

  0013f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?Flush@CWaveBankReader@@QAEXXZ ; CWaveBankReader::Flush
$L31487:

; 164  :     }
; 165  : 
; 166  :     DPF_LEAVE_HRESULT(hr);
; 167  : 
; 168  :     return hr;

  00147	8b 45 f0	 mov	 eax, DWORD PTR _hr$[ebp]
  0014a	89 45 ec	 mov	 DWORD PTR $T31616[ebp], eax
  0014d	8d 4d f8	 lea	 ecx, DWORD PTR _BankFile$[ebp]
  00150	e8 00 00 00 00	 call	 ??1CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::~CStdFileStream
  00155	8b 45 ec	 mov	 eax, DWORD PTR $T31616[ebp]

; 169  : }

  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?Open@CWaveBankReader@@QAEJPBD@Z ENDP			; CWaveBankReader::Open
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Flush@CWaveBankReader@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Flush@CWaveBankReader@@QAEXXZ PROC NEAR		; CWaveBankReader::Flush, COMDAT
; _this$ = ecx

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 196  :     DPF_ENTER();
; 197  : 
; 198  :     MEMFREE(m_pvBaseAddress);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000e	74 16		 je	 SHORT $L31493
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$L31493:

; 199  : 
; 200  :     m_dwBankSize = 0;

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 201  : 
; 202  :     DPF_LEAVE_VOID();
; 203  : }

  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?Flush@CWaveBankReader@@QAEXXZ ENDP			; CWaveBankReader::Flush
_TEXT	ENDS
PUBLIC	?GetSectionData@CWaveBankReader@@QAEXPAU_WAVEBANKSECTIONDATA@@@Z ; CWaveBankReader::GetSectionData
PUBLIC	??_C@_0BA@JLEMHJEL@m_pvBaseAddress?$AA@		; `string'
PUBLIC	??_C@_0N@COMNIBAI@m_dwBankSize?$AA@		; `string'
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0BA@JLEMHJEL@m_pvBaseAddress?$AA@
CONST	SEGMENT
??_C@_0BA@JLEMHJEL@m_pvBaseAddress?$AA@ DB 'm_pvBaseAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@COMNIBAI@m_dwBankSize?$AA@
CONST	SEGMENT
??_C@_0N@COMNIBAI@m_dwBankSize?$AA@ DB 'm_dwBankSize', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?GetSectionData@CWaveBankReader@@QAEXPAU_WAVEBANKSECTIONDATA@@@Z
_TEXT	SEGMENT
_this$ = -4
_pSectionData$ = 8
?GetSectionData@CWaveBankReader@@QAEXPAU_WAVEBANKSECTIONDATA@@@Z PROC NEAR ; CWaveBankReader::GetSectionData, COMDAT
; _this$ = ecx

; 229  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 230  :     DPF_ENTER();
; 231  : 
; 232  :     ASSERT(m_pvBaseAddress);

  00007	68 e8 00 00 00	 push	 232			; 000000e8H
  0000c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@JLEMHJEL@m_pvBaseAddress?$AA@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	33 c9		 xor	 ecx, ecx
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	0f 94 c1	 sete	 cl
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 233  :     ASSERT(m_dwBankSize);

  0002b	68 e9 00 00 00	 push	 233			; 000000e9H
  00030	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@FAEIBFDB@c?3?2xbox?2private?2windows?2directx?2@
  00035	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@COMNIBAI@m_dwBankSize?$AA@
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	33 c0		 xor	 eax, eax
  0003f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00043	0f 94 c0	 sete	 al
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0004c	83 c4 10	 add	 esp, 16			; 00000010H

; 234  : 
; 235  :     pSectionData->pHeader = (LPWAVEBANKHEADER)m_pvBaseAddress;

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _pSectionData$[ebp]
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00058	89 01		 mov	 DWORD PTR [ecx], eax

; 236  :     pSectionData->paMetaData = (LPWAVEBANKENTRY)(pSectionData->pHeader + 1);

  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pSectionData$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	83 c2 24	 add	 edx, 36			; 00000024H
  00062	8b 45 08	 mov	 eax, DWORD PTR _pSectionData$[ebp]
  00065	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 237  :     pSectionData->pvData = &pSectionData->paMetaData[pSectionData->pHeader->dwEntryCount];

  00068	8b 4d 08	 mov	 ecx, DWORD PTR _pSectionData$[ebp]
  0006b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006d	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00070	6b c0 14	 imul	 eax, 20			; 00000014H
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _pSectionData$[ebp]
  00076	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00079	8b 55 08	 mov	 edx, DWORD PTR _pSectionData$[ebp]
  0007c	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 238  :     pSectionData->dwDataSize = m_dwBankSize - sizeof(*pSectionData->pHeader) - (sizeof(pSectionData->paMetaData[0]) * pSectionData->pHeader->dwEntryCount);

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00085	83 e9 24	 sub	 ecx, 36			; 00000024H
  00088	8b 55 08	 mov	 edx, DWORD PTR _pSectionData$[ebp]
  0008b	8b 02		 mov	 eax, DWORD PTR [edx]
  0008d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00090	6b d2 14	 imul	 edx, 20			; 00000014H
  00093	2b ca		 sub	 ecx, edx
  00095	8b 45 08	 mov	 eax, DWORD PTR _pSectionData$[ebp]
  00098	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 239  : 
; 240  :     DPF_LEAVE_VOID();
; 241  : }

  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?GetSectionData@CWaveBankReader@@QAEXPAU_WAVEBANKSECTIONDATA@@@Z ENDP ; CWaveBankReader::GetSectionData
_TEXT	ENDS
END
