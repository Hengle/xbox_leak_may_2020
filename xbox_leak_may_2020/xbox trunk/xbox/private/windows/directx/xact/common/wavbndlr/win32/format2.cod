; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\xact\common\wavbndlr\format2.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@EKAA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJLP@WaveBankCompressFormat?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EB@EJOO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@MKMD@Unsupported?5format?5tag?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WaveBankExpandFormat@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WaveBankCompressFormat@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_WaveBankExpandFormat@8
EXTRN	?CreatePcmFormat@WaveFormat@DirectSound@@YGXGKGPAUtWAVEFORMATEX@@@Z:NEAR ; DirectSound::WaveFormat::CreatePcmFormat
EXTRN	?CreateXboxAdpcmFormat@WaveFormat@DirectSound@@YGXGKPAUima_adpcmwaveformat_tag@@@Z:NEAR ; DirectSound::WaveFormat::CreateXboxAdpcmFormat
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\format2.cpp
;	COMDAT _WaveBankExpandFormat@8
_TEXT	SEGMENT
_pwfxCompressed$ = 8
_pwfxExpanded$ = 12
_WaveBankExpandFormat@8 PROC NEAR			; COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   :     DPF_ENTER();
; 46   : 
; 47   :     if(WAVEBANKMINIFORMAT_TAG_ADPCM == pwfxCompressed->wFormatTag)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	83 e1 01	 and	 ecx, 1
  0000b	83 f9 01	 cmp	 ecx, 1
  0000e	75 25		 jne	 SHORT $L48865

; 48   :     {
; 49   :         XAudioCreateAdpcmFormat((WORD)pwfxCompressed->nChannels, pwfxCompressed->nSamplesPerSec, &pwfxExpanded->AdpcmWaveFormat);

  00010	8b 55 0c	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	c1 e9 04	 shr	 ecx, 4
  0001c	81 e1 ff ff ff
	07		 and	 ecx, 134217727		; 07ffffffH
  00022	51		 push	 ecx
  00023	8b 55 08	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	d1 e8		 shr	 eax, 1
  0002a	83 e0 07	 and	 eax, 7
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?CreateXboxAdpcmFormat@WaveFormat@DirectSound@@YGXGKPAUima_adpcmwaveformat_tag@@@Z ; DirectSound::WaveFormat::CreateXboxAdpcmFormat

; 50   :     }
; 51   :     else

  00033	eb 3b		 jmp	 SHORT $L48867
$L48865:

; 52   :     {
; 53   :         XAudioCreatePcmFormat((WORD)pwfxCompressed->nChannels, pwfxCompressed->nSamplesPerSec, (WAVEBANKMINIFORMAT_BITDEPTH_16 == pwfxCompressed->wBitsPerSample) ? 16 : 8, &pwfxExpanded->WaveFormatEx);

  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxExpanded$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 08	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  0003c	8b 02		 mov	 eax, DWORD PTR [edx]
  0003e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00041	83 e0 01	 and	 eax, 1
  00044	83 e8 01	 sub	 eax, 1
  00047	f7 d8		 neg	 eax
  00049	1b c0		 sbb	 eax, eax
  0004b	24 f8		 and	 al, -8			; fffffff8H
  0004d	83 c0 10	 add	 eax, 16			; 00000010H
  00050	50		 push	 eax
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	c1 ea 04	 shr	 edx, 4
  00059	81 e2 ff ff ff
	07		 and	 edx, 134217727		; 07ffffffH
  0005f	52		 push	 edx
  00060	8b 45 08	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	d1 e9		 shr	 ecx, 1
  00067	83 e1 07	 and	 ecx, 7
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?CreatePcmFormat@WaveFormat@DirectSound@@YGXGKGPAUtWAVEFORMATEX@@@Z ; DirectSound::WaveFormat::CreatePcmFormat
$L48867:

; 54   :     }
; 55   : 
; 56   :     DPF_LEAVE(TRUE);
; 57   : 
; 58   :     return TRUE;

  00070	b8 01 00 00 00	 mov	 eax, 1

; 59   : }

  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
_WaveBankExpandFormat@8 ENDP
_TEXT	ENDS
PUBLIC	??_C@_08IMGB@WAVBNDLR?$AA@			; `string'
PUBLIC	??_C@_0BH@GJLP@WaveBankCompressFormat?$AA@	; `string'
PUBLIC	??_C@_0EB@EJOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0BH@MKMD@Unsupported?5format?5tag?$AA@	; `string'
PUBLIC	_WaveBankCompressFormat@8
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
EXTRN	?IsValidPcmFormat@WaveFormat@DirectSound@@YGHPBUtWAVEFORMATEX@@@Z:NEAR ; DirectSound::WaveFormat::IsValidPcmFormat
EXTRN	?IsValidAdpcmFormat@WaveFormat@DirectSound@@YGHPBUima_adpcmwaveformat_tag@@@Z:NEAR ; DirectSound::WaveFormat::IsValidAdpcmFormat
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT
??_C@_08IMGB@WAVBNDLR?$AA@ DB 'WAVBNDLR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJLP@WaveBankCompressFormat?$AA@
CONST	SEGMENT
??_C@_0BH@GJLP@WaveBankCompressFormat?$AA@ DB 'WaveBankCompressFormat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@EJOO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EB@EJOO@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\common\wavbndlr\format2.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MKMD@Unsupported?5format?5tag?$AA@
CONST	SEGMENT
??_C@_0BH@MKMD@Unsupported?5format?5tag?$AA@ DB 'Unsupported format tag', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _WaveBankCompressFormat@8
_TEXT	SEGMENT
_pwfxExpanded$ = 8
_pwfxCompressed$ = 12
_fValid$ = -4
_WaveBankCompressFormat@8 PROC NEAR			; COMDAT

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 88   :     BOOL                        fValid;
; 89   : 
; 90   :     DPF_ENTER();
; 91   : 
; 92   :     if(WAVE_FORMAT_PCM == pwfxExpanded->WaveFormatEx.wFormatTag)

  00004	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  00007	33 c9		 xor	 ecx, ecx
  00009	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000c	83 f9 01	 cmp	 ecx, 1
  0000f	0f 85 89 00 00
	00		 jne	 $L48874

; 93   :     {
; 94   :         if(fValid = IsValidPcmFormat(&pwfxExpanded->WaveFormatEx))

  00015	8b 55 08	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 ?IsValidPcmFormat@WaveFormat@DirectSound@@YGHPBUtWAVEFORMATEX@@@Z ; DirectSound::WaveFormat::IsValidPcmFormat
  0001e	89 45 fc	 mov	 DWORD PTR _fValid$[ebp], eax
  00021	83 7d fc 00	 cmp	 DWORD PTR _fValid$[ebp], 0
  00025	74 72		 je	 SHORT $L48875

; 95   :         {
; 96   :             pwfxCompressed->wFormatTag = WAVEBANKMINIFORMAT_TAG_PCM;

  00027	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	83 e1 fe	 and	 ecx, -2			; fffffffeH
  0002f	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  00032	89 0a		 mov	 DWORD PTR [edx], ecx

; 97   :             pwfxCompressed->nChannels = pwfxExpanded->WaveFormatEx.nChannels;

  00034	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  00037	33 c9		 xor	 ecx, ecx
  00039	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  0003d	83 e1 07	 and	 ecx, 7
  00040	d1 e1		 shl	 ecx, 1
  00042	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  00045	8b 02		 mov	 eax, DWORD PTR [edx]
  00047	24 f1		 and	 al, -15			; fffffff1H
  00049	0b c1		 or	 eax, ecx
  0004b	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  0004e	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :             pwfxCompressed->nSamplesPerSec = pwfxExpanded->WaveFormatEx.nSamplesPerSec;

  00050	8b 55 08	 mov	 edx, DWORD PTR _pwfxExpanded$[ebp]
  00053	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00056	25 ff ff ff 07	 and	 eax, 134217727		; 07ffffffH
  0005b	c1 e0 04	 shl	 eax, 4
  0005e	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  00061	8b 11		 mov	 edx, DWORD PTR [ecx]
  00063	81 e2 0f 00 00
	80		 and	 edx, -2147483633	; 8000000fH
  00069	0b d0		 or	 edx, eax
  0006b	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  0006e	89 10		 mov	 DWORD PTR [eax], edx

; 99   :             pwfxCompressed->wBitsPerSample = (16 == pwfxExpanded->WaveFormatEx.wBitsPerSample) ? WAVEBANKMINIFORMAT_BITDEPTH_16 : WAVEBANKMINIFORMAT_BITDEPTH_8;

  00070	8b 4d 08	 mov	 ecx, DWORD PTR _pwfxExpanded$[ebp]
  00073	33 d2		 xor	 edx, edx
  00075	66 8b 51 0e	 mov	 dx, WORD PTR [ecx+14]
  00079	33 c0		 xor	 eax, eax
  0007b	83 fa 10	 cmp	 edx, 16			; 00000010H
  0007e	0f 94 c0	 sete	 al
  00081	83 e0 01	 and	 eax, 1
  00084	c1 e0 1f	 shl	 eax, 31			; 0000001fH
  00087	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  0008a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008c	81 e2 ff ff ff
	7f		 and	 edx, 2147483647		; 7fffffffH
  00092	0b d0		 or	 edx, eax
  00094	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  00097	89 10		 mov	 DWORD PTR [eax], edx
$L48875:

; 100  :         }
; 101  :     }
; 102  :     else if(WAVE_FORMAT_XBOX_ADPCM == pwfxExpanded->WaveFormatEx.wFormatTag)

  00099	e9 ab 00 00 00	 jmp	 $L48876
$L48874:
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _pwfxExpanded$[ebp]
  000a1	33 d2		 xor	 edx, edx
  000a3	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000a6	83 fa 69	 cmp	 edx, 105		; 00000069H
  000a9	75 6d		 jne	 SHORT $L48877

; 103  :     {
; 104  :         if(fValid = IsValidAdpcmFormat(&pwfxExpanded->AdpcmWaveFormat))

  000ab	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ?IsValidAdpcmFormat@WaveFormat@DirectSound@@YGHPBUima_adpcmwaveformat_tag@@@Z ; DirectSound::WaveFormat::IsValidAdpcmFormat
  000b4	89 45 fc	 mov	 DWORD PTR _fValid$[ebp], eax
  000b7	83 7d fc 00	 cmp	 DWORD PTR _fValid$[ebp], 0
  000bb	74 59		 je	 SHORT $L48878

; 105  :         {
; 106  :             pwfxCompressed->wFormatTag = WAVEBANKMINIFORMAT_TAG_ADPCM;

  000bd	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  000c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c2	83 ca 01	 or	 edx, 1
  000c5	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  000c8	89 10		 mov	 DWORD PTR [eax], edx

; 107  :             pwfxCompressed->nChannels = pwfxExpanded->WaveFormatEx.nChannels;

  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _pwfxExpanded$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  000d3	83 e2 07	 and	 edx, 7
  000d6	d1 e2		 shl	 edx, 1
  000d8	8b 45 0c	 mov	 eax, DWORD PTR _pwfxCompressed$[ebp]
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	83 e1 f1	 and	 ecx, -15		; fffffff1H
  000e0	0b ca		 or	 ecx, edx
  000e2	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  000e5	89 0a		 mov	 DWORD PTR [edx], ecx

; 108  :             pwfxCompressed->nSamplesPerSec = pwfxExpanded->WaveFormatEx.nSamplesPerSec;

  000e7	8b 45 08	 mov	 eax, DWORD PTR _pwfxExpanded$[ebp]
  000ea	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ed	81 e1 ff ff ff
	07		 and	 ecx, 134217727		; 07ffffffH
  000f3	c1 e1 04	 shl	 ecx, 4
  000f6	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  000f9	8b 02		 mov	 eax, DWORD PTR [edx]
  000fb	25 0f 00 00 80	 and	 eax, -2147483633	; 8000000fH
  00100	0b c1		 or	 eax, ecx
  00102	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  00105	89 01		 mov	 DWORD PTR [ecx], eax

; 109  :             pwfxCompressed->wBitsPerSample = WAVEBANKMINIFORMAT_BITDEPTH_4;

  00107	8b 55 0c	 mov	 edx, DWORD PTR _pwfxCompressed$[ebp]
  0010a	8b 02		 mov	 eax, DWORD PTR [edx]
  0010c	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  00111	8b 4d 0c	 mov	 ecx, DWORD PTR _pwfxCompressed$[ebp]
  00114	89 01		 mov	 DWORD PTR [ecx], eax
$L48878:

; 110  :         }
; 111  :     }
; 112  :     else

  00116	eb 31		 jmp	 SHORT $L48879
$L48877:

; 113  :     {
; 114  :         DPF_ERROR("Unsupported format tag");

  00118	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  0011d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@GJLP@WaveBankCompressFormat?$AA@ ; `string'
  00122	6a 72		 push	 114			; 00000072H
  00124	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EB@EJOO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00129	6a 01		 push	 1
  0012b	6a 09		 push	 9
  0012d	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00132	83 c4 18	 add	 esp, 24			; 00000018H
  00135	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@MKMD@Unsupported?5format?5tag?$AA@ ; `string'
  0013a	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0013f	83 c4 04	 add	 esp, 4

; 115  :         fValid = FALSE;

  00142	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _fValid$[ebp], 0
$L48879:
$L48876:

; 116  :     }   
; 117  : 
; 118  :     DPF_LEAVE(fValid);
; 119  : 
; 120  :     return fValid;

  00149	8b 45 fc	 mov	 eax, DWORD PTR _fValid$[ebp]

; 121  : }

  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c2 08 00	 ret	 8
_WaveBankCompressFormat@8 ENDP
_TEXT	ENDS
END
