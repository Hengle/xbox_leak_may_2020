; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\xact\common\wavbndlr\loader.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DO@EKAA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03NLLK@?4?4?2?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BL@JGFN@CWaveBankProjectFile?3?3Load?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CL@BNOK@Unable?5to?5change?5to?5project?5file@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09FLO@BANKCOUNT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KBBM@PROJECT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03JGAL@?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BL@MOPL@CWaveBankProjectFile?3?3Save?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@GIHL@i?5?$DM?5m_pProject?9?$DOm_dwBankCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@NFOP@i?5?$DN?$DN?5m_pProject?9?$DOm_dwBankCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07EKKD@BANK?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_00A@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08MAGD@BANKNAME?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08GMOM@BANKFILE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@EHAE@HEADERFILE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OCBI@ENTRYCOUNT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@NIMJ@i?5?$DM?5pBank?9?$DOm_dwEntryCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BL@PODN@i?5?$DN?$DN?5pBank?9?$DOm_dwEntryCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08OCCE@ENTRY?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@PBCA@CWaveBankProjectFile?3?3LoadEntry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CM@FBL@Unrecognized?5flag?5character?5in?5p@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01IJJ@c?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01KPCI@8?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@MMJK@CWaveBankProjectFile?3?3SaveEntry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CP@KNEC@Error?5?$CFlu?5occurred?5writing?5to?5th@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBankHeaderSize@CWaveBank@@KGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExtractDirectory@@YGPADPAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRelativePath@@YGXPBD0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadBank@CWaveBankProjectFile@@MAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SaveBank@CWaveBankProjectFile@@MAEJPAVCWaveBank@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBank@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SaveEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBankEntry@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z ; CWaveBankProjectFile::Load
PUBLIC	??_C@_08IMGB@WAVBNDLR?$AA@			; `string'
PUBLIC	??_C@_0BL@JGFN@CWaveBankProjectFile?3?3Load?$AA@ ; `string'
PUBLIC	??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0CL@BNOK@Unable?5to?5change?5to?5project?5file@ ; `string'
PUBLIC	??_C@_09FLO@BANKCOUNT?$AA@			; `string'
PUBLIC	??_C@_07KBBM@PROJECT?$AA@			; `string'
EXTRN	__imp__GetFullPathNameA@16:NEAR
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
EXTRN	__imp__GetPrivateProfileIntA@16:NEAR
EXTRN	__imp__SetCurrentDirectoryA@4:NEAR
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
; File c:\xbox\private\windows\directx\xact\common\wavbndlr\loader.cpp
CONST	SEGMENT
??_C@_08IMGB@WAVBNDLR?$AA@ DB 'WAVBNDLR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JGFN@CWaveBankProjectFile?3?3Load?$AA@
CONST	SEGMENT
??_C@_0BL@JGFN@CWaveBankProjectFile?3?3Load?$AA@ DB 'CWaveBankProjectFile'
	DB	'::Load', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\xact\common\wavbndlr\loader.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@BNOK@Unable?5to?5change?5to?5project?5file@
CONST	SEGMENT
??_C@_0CL@BNOK@Unable?5to?5change?5to?5project?5file@ DB 'Unable to chang'
	DB	'e to project file directory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FLO@BANKCOUNT?$AA@
CONST	SEGMENT
??_C@_09FLO@BANKCOUNT?$AA@ DB 'BANKCOUNT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBBM@PROJECT?$AA@
CONST	SEGMENT
??_C@_07KBBM@PROJECT?$AA@ DB 'PROJECT', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z
_TEXT	SEGMENT
_pProject$ = 8
_pszProjectFile$ = 12
_this$ = -24
_hr$ = -8
_pszFilePart$ = -20
_dwBankCount$ = -16
_c$ = -1
_i$ = -12
?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z PROC NEAR ; CWaveBankProjectFile::Load, COMDAT
; _this$ = ecx

; 247  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 248  :     HRESULT                 hr          = S_OK;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 249  :     LPTSTR                  pszFilePart;
; 250  :     DWORD                   dwBankCount;
; 251  :     TCHAR                   c;
; 252  :     DWORD                   i;
; 253  :     
; 254  :     DPF_ENTER();
; 255  : 
; 256  :     //
; 257  :     // Save a pointer to the project
; 258  :     //
; 259  : 
; 260  :     m_pProject = pProject;

  00010	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _pProject$[ebp]
  00016	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 261  : 
; 262  :     //
; 263  :     // Convert the project file name to a full path.  The INI APIs prefer it
; 264  :     //
; 265  : 
; 266  :     GetFullPathName(pszProjectFile, NUMELMS(m_szProjectFile), m_szProjectFile, &pszFilePart);

  00019	8d 55 ec	 lea	 edx, DWORD PTR _pszFilePart$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 c0 08	 add	 eax, 8
  00023	50		 push	 eax
  00024	68 04 01 00 00	 push	 260			; 00000104H
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _pszProjectFile$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFullPathNameA@16

; 267  : 
; 268  :     //
; 269  :     // Set the current directory to the project file's to make sure any 
; 270  :     // relative paths are expanded properly
; 271  :     //
; 272  : 
; 273  :     c = *pszFilePart;

  00033	8b 55 ec	 mov	 edx, DWORD PTR _pszFilePart$[ebp]
  00036	8a 02		 mov	 al, BYTE PTR [edx]
  00038	88 45 ff	 mov	 BYTE PTR _c$[ebp], al

; 274  :     *pszFilePart = 0;

  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _pszFilePart$[ebp]
  0003e	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 275  :     
; 276  :     if(!SetCurrentDirectory(m_szProjectFile))

  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	83 c2 08	 add	 edx, 8
  00047	52		 push	 edx
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCurrentDirectoryA@4
  0004e	85 c0		 test	 eax, eax
  00050	75 34		 jne	 SHORT $L48917

; 277  :     {
; 278  :         DPF_ERROR("Unable to change to project file directory");

  00052	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00057	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@JGFN@CWaveBankProjectFile?3?3Load?$AA@ ; `string'
  0005c	68 16 01 00 00	 push	 278			; 00000116H
  00061	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00066	6a 01		 push	 1
  00068	6a 09		 push	 9
  0006a	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0006f	83 c4 18	 add	 esp, 24			; 00000018H
  00072	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CL@BNOK@Unable?5to?5change?5to?5project?5file@ ; `string'
  00077	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0007c	83 c4 04	 add	 esp, 4

; 279  :         hr = E_FAIL;

  0007f	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L48917:

; 280  :     }
; 281  : 
; 282  :     *pszFilePart = c;

  00086	8b 45 ec	 mov	 eax, DWORD PTR _pszFilePart$[ebp]
  00089	8a 4d ff	 mov	 cl, BYTE PTR _c$[ebp]
  0008c	88 08		 mov	 BYTE PTR [eax], cl

; 283  : 
; 284  :     //
; 285  :     // Start loading banks
; 286  :     //
; 287  : 
; 288  :     if(SUCCEEDED(hr))

  0008e	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00092	7c 50		 jl	 SHORT $L48924

; 289  :     {
; 290  :         dwBankCount = GetPrivateProfileInt(WBPROJECT_PROJECT_MAIN_SECTION, WBPROJECT_PROJECT_BANKCOUNT_KEY, 0, m_szProjectFile);

  00094	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00097	83 c2 08	 add	 edx, 8
  0009a	52		 push	 edx
  0009b	6a 00		 push	 0
  0009d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09FLO@BANKCOUNT?$AA@ ; `string'
  000a2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07KBBM@PROJECT?$AA@ ; `string'
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000ad	89 45 f0	 mov	 DWORD PTR _dwBankCount$[ebp], eax

; 291  : 
; 292  :         for(i = 0; (i < dwBankCount) && SUCCEEDED(hr); i++)

  000b0	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  000b7	eb 09		 jmp	 SHORT $L48928
$L48929:
  000b9	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  000bc	83 c0 01	 add	 eax, 1
  000bf	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$L48928:
  000c2	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  000c5	3b 4d f0	 cmp	 ecx, DWORD PTR _dwBankCount$[ebp]
  000c8	73 1a		 jae	 SHORT $L48930
  000ca	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ce	7c 14		 jl	 SHORT $L48930

; 293  :         {
; 294  :             hr = LoadBank(i);

  000d0	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  000d3	52		 push	 edx
  000d4	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 10		 mov	 edx, DWORD PTR [eax]
  000d9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	ff 52 08	 call	 DWORD PTR [edx+8]
  000df	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 295  :         }

  000e2	eb d5		 jmp	 SHORT $L48929
$L48930:
$L48924:

; 296  :     }
; 297  : 
; 298  :     DPF_LEAVE_HRESULT(hr);
; 299  : 
; 300  :     return hr;

  000e4	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 301  : }

  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c2 08 00	 ret	 8
?Load@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z ENDP ; CWaveBankProjectFile::Load
_TEXT	ENDS
PUBLIC	?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z ; CWaveBankProjectFile::Save
PUBLIC	??_C@_03JGAL@?$CFlu?$AA@			; `string'
PUBLIC	??_C@_0BL@MOPL@CWaveBankProjectFile?3?3Save?$AA@ ; `string'
PUBLIC	??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@ ; `string'
PUBLIC	??_C@_0BO@GIHL@i?5?$DM?5m_pProject?9?$DOm_dwBankCount?$AA@ ; `string'
PUBLIC	??_C@_0BP@NFOP@i?5?$DN?$DN?5m_pProject?9?$DOm_dwBankCount?$AA@ ; `string'
EXTRN	__imp__DeleteFileA@4:NEAR
EXTRN	??0CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::CStdFileStream
EXTRN	??1CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::~CStdFileStream
EXTRN	_sprintf:NEAR
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
EXTRN	__imp__WritePrivateProfileStringA@16:NEAR
;	COMDAT ??_C@_03JGAL@?$CFlu?$AA@
CONST	SEGMENT
??_C@_03JGAL@?$CFlu?$AA@ DB '%lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MOPL@CWaveBankProjectFile?3?3Save?$AA@
CONST	SEGMENT
??_C@_0BL@MOPL@CWaveBankProjectFile?3?3Save?$AA@ DB 'CWaveBankProjectFile'
	DB	'::Save', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@
CONST	SEGMENT
??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@ DB 'An error occurre'
	DB	'd while attempting to write to the project file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GIHL@i?5?$DM?5m_pProject?9?$DOm_dwBankCount?$AA@
CONST	SEGMENT
??_C@_0BO@GIHL@i?5?$DM?5m_pProject?9?$DOm_dwBankCount?$AA@ DB 'i < m_pPro'
	DB	'ject->m_dwBankCount', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NFOP@i?5?$DN?$DN?5m_pProject?9?$DOm_dwBankCount?$AA@
CONST	SEGMENT
??_C@_0BP@NFOP@i?5?$DN?$DN?5m_pProject?9?$DOm_dwBankCount?$AA@ DB 'i == m'
	DB	'_pProject->m_dwBankCount', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z
_TEXT	SEGMENT
_pProject$ = 8
_pszProjectFile$ = 12
_this$ = -304
_hr$ = -276
_ProjectFile$ = -292
_szBankCount$ = -272
_pszFilePart$ = -296
_pleEntry$ = -284
_pBank$ = -4
_i$ = -280
$T49185 = -300
?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z PROC NEAR ; CWaveBankProjectFile::Save, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	89 8d d0 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 329  :     HRESULT                 hr                      = S_OK;

  0000f	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 330  :     CStdFileStream          ProjectFile;

  00019	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _ProjectFile$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::CStdFileStream

; 331  :     TCHAR                   szBankCount[MAX_PATH];
; 332  :     LPTSTR                  pszFilePart;
; 333  :     PLIST_ENTRY             pleEntry;
; 334  :     CWaveBank *             pBank;
; 335  :     DWORD                   i;
; 336  :     
; 337  :     DPF_ENTER();
; 338  : 
; 339  :     //
; 340  :     // Save a pointer to the project
; 341  :     //
; 342  : 
; 343  :     m_pProject = pProject;

  00024	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _pProject$[ebp]
  0002d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 344  : 
; 345  :     //
; 346  :     // Convert the project file name to a full path.  The INI APIs prefer it
; 347  :     //
; 348  : 
; 349  :     GetFullPathName(pszProjectFile, NUMELMS(m_szProjectFile), m_szProjectFile, &pszFilePart);

  00030	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR _pszFilePart$[ebp]
  00036	52		 push	 edx
  00037	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 c0 08	 add	 eax, 8
  00040	50		 push	 eax
  00041	68 04 01 00 00	 push	 260			; 00000104H
  00046	8b 4d 0c	 mov	 ecx, DWORD PTR _pszProjectFile$[ebp]
  00049	51		 push	 ecx
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFullPathNameA@16

; 350  : 
; 351  :     //
; 352  :     // Truncate the existing file
; 353  :     //
; 354  : 
; 355  :     DeleteFile(m_szProjectFile);

  00050	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00056	83 c2 08	 add	 edx, 8
  00059	52		 push	 edx
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteFileA@4

; 356  : 
; 357  :     //
; 358  :     // Write project data
; 359  :     //
; 360  : 
; 361  :     if(SUCCEEDED(hr))

  00060	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00067	7c 7d		 jl	 SHORT $L48945

; 362  :     {
; 363  :         sprintf(szBankCount, TEXT("%lu"), m_pProject->m_dwBankCount);

  00069	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00072	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00075	52		 push	 edx
  00076	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03JGAL@?$CFlu?$AA@ ; `string'
  0007b	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szBankCount$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 _sprintf
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH

; 364  :         
; 365  :         if(!WritePrivateProfileString(WBPROJECT_PROJECT_MAIN_SECTION, WBPROJECT_PROJECT_BANKCOUNT_KEY, szBankCount, m_szProjectFile))

  0008a	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00090	83 c1 08	 add	 ecx, 8
  00093	51		 push	 ecx
  00094	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _szBankCount$[ebp]
  0009a	52		 push	 edx
  0009b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09FLO@BANKCOUNT?$AA@ ; `string'
  000a0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07KBBM@PROJECT?$AA@ ; `string'
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WritePrivateProfileStringA@16
  000ab	85 c0		 test	 eax, eax
  000ad	75 37		 jne	 SHORT $L48947

; 366  :         {
; 367  :             DPF_ERROR("An error occurred while attempting to write to the project file");

  000af	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  000b4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@MOPL@CWaveBankProjectFile?3?3Save?$AA@ ; `string'
  000b9	68 6f 01 00 00	 push	 367			; 0000016fH
  000be	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000c3	6a 01		 push	 1
  000c5	6a 09		 push	 9
  000c7	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  000cc	83 c4 18	 add	 esp, 24			; 00000018H
  000cf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@ ; `string'
  000d4	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  000d9	83 c4 04	 add	 esp, 4

; 368  :             hr = E_FAIL;

  000dc	c7 85 ec fe ff
	ff 05 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L48947:
$L48945:

; 369  :         }
; 370  :     }
; 371  : 
; 372  :     //
; 373  :     // Write all bank data
; 374  :     //
; 375  : 
; 376  :     for(pleEntry = m_pProject->m_lstBanks.Flink, i = 0; (pleEntry != &m_pProject->m_lstBanks) && SUCCEEDED(hr); pleEntry = pleEntry->Flink, i++)

  000e6	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ef	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f2	89 95 e4 fe ff
	ff		 mov	 DWORD PTR _pleEntry$[ebp], edx
  000f8	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$[ebp], 0
  00102	eb 1d		 jmp	 SHORT $L48952
$L48953:
  00104	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _pleEntry$[ebp]
  0010a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010c	89 8d e4 fe ff
	ff		 mov	 DWORD PTR _pleEntry$[ebp], ecx
  00112	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  00118	83 c2 01	 add	 edx, 1
  0011b	89 95 e8 fe ff
	ff		 mov	 DWORD PTR _i$[ebp], edx
$L48952:
  00121	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00127	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0012a	83 c1 04	 add	 ecx, 4
  0012d	39 8d e4 fe ff
	ff		 cmp	 DWORD PTR _pleEntry$[ebp], ecx
  00133	74 69		 je	 SHORT $L48954
  00135	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0013c	7c 60		 jl	 SHORT $L48954

; 377  :     {
; 378  :         ASSERT(i < m_pProject->m_dwBankCount);

  0013e	68 7a 01 00 00	 push	 378			; 0000017aH
  00143	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00148	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@GIHL@i?5?$DM?5m_pProject?9?$DOm_dwBankCount?$AA@ ; `string'
  0014d	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00153	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00156	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _i$[ebp]
  0015c	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  0015f	1b d2		 sbb	 edx, edx
  00161	42		 inc	 edx
  00162	52		 push	 edx
  00163	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00168	83 c4 10	 add	 esp, 16			; 00000010H

; 379  :         
; 380  :         pBank = CONTAINING_RECORD(pleEntry, CWaveBank, m_leBank);

  0016b	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _pleEntry$[ebp]
  00171	83 e8 08	 sub	 eax, 8
  00174	89 45 fc	 mov	 DWORD PTR _pBank$[ebp], eax

; 381  : 
; 382  :         hr = SaveBank(pBank, i);

  00177	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _i$[ebp]
  0017d	51		 push	 ecx
  0017e	8b 55 fc	 mov	 edx, DWORD PTR _pBank$[ebp]
  00181	52		 push	 edx
  00182	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00188	8b 10		 mov	 edx, DWORD PTR [eax]
  0018a	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00190	ff 52 0c	 call	 DWORD PTR [edx+12]
  00193	89 85 ec fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 383  :     }

  00199	e9 66 ff ff ff	 jmp	 $L48953
$L48954:

; 384  : 
; 385  :     if(SUCCEEDED(hr))

  0019e	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001a5	7c 2f		 jl	 SHORT $L48961

; 386  :     {
; 387  :         ASSERT(i == m_pProject->m_dwBankCount);

  001a7	68 83 01 00 00	 push	 387			; 00000183H
  001ac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  001b1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@NFOP@i?5?$DN?$DN?5m_pProject?9?$DOm_dwBankCount?$AA@ ; `string'
  001b6	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001bc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001bf	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  001c5	33 c0		 xor	 eax, eax
  001c7	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  001ca	0f 95 c0	 setne	 al
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  001d3	83 c4 10	 add	 esp, 16			; 00000010H
$L48961:

; 388  :     }
; 389  : 
; 390  :     DPF_LEAVE_HRESULT(hr);
; 391  : 
; 392  :     return hr;

  001d6	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _hr$[ebp]
  001dc	89 8d d4 fe ff
	ff		 mov	 DWORD PTR $T49185[ebp], ecx
  001e2	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _ProjectFile$[ebp]
  001e8	e8 00 00 00 00	 call	 ??1CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::~CStdFileStream
  001ed	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR $T49185[ebp]

; 393  : }

  001f3	8b e5		 mov	 esp, ebp
  001f5	5d		 pop	 ebp
  001f6	c2 08 00	 ret	 8
?Save@CWaveBankProjectFile@@UAEJPAVCWaveBankProject@@PBD@Z ENDP ; CWaveBankProjectFile::Save
_TEXT	ENDS
PUBLIC	?LoadBank@CWaveBankProjectFile@@MAEJK@Z		; CWaveBankProjectFile::LoadBank
PUBLIC	??_C@_07EKKD@BANK?$CFlu?$AA@			; `string'
PUBLIC	??_C@_00A@?$AA@					; `string'
PUBLIC	??_C@_08MAGD@BANKNAME?$AA@			; `string'
PUBLIC	??_C@_08GMOM@BANKFILE?$AA@			; `string'
PUBLIC	??_C@_0L@EHAE@HEADERFILE?$AA@			; `string'
PUBLIC	??_C@_0L@OCBI@ENTRYCOUNT?$AA@			; `string'
EXTRN	__imp__GetPrivateProfileStringA@24:NEAR
;	COMDAT ??_C@_07EKKD@BANK?$CFlu?$AA@
CONST	SEGMENT
??_C@_07EKKD@BANK?$CFlu?$AA@ DB 'BANK%lu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00A@?$AA@
CONST	SEGMENT
??_C@_00A@?$AA@ DB 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08MAGD@BANKNAME?$AA@
CONST	SEGMENT
??_C@_08MAGD@BANKNAME?$AA@ DB 'BANKNAME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GMOM@BANKFILE?$AA@
CONST	SEGMENT
??_C@_08GMOM@BANKFILE?$AA@ DB 'BANKFILE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHAE@HEADERFILE?$AA@
CONST	SEGMENT
??_C@_0L@EHAE@HEADERFILE?$AA@ DB 'HEADERFILE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OCBI@ENTRYCOUNT?$AA@
CONST	SEGMENT
??_C@_0L@OCBI@ENTRYCOUNT?$AA@ DB 'ENTRYCOUNT', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?LoadBank@CWaveBankProjectFile@@MAEJK@Z
_TEXT	SEGMENT
_dwBankIndex$ = 8
_this$ = -1088
_pBank$ = -4
_hr$ = -280
_szSectionName$ = -816
_szBankName$ = -552
_szBankFile$ = -272
_szHeaderFile$ = -1080
_dwEntryCount$ = -288
_i$ = -284
?LoadBank@CWaveBankProjectFile@@MAEJK@Z PROC NEAR	; CWaveBankProjectFile::LoadBank, COMDAT
; _this$ = ecx

; 419  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 40 04 00
	00		 sub	 esp, 1088		; 00000440H
  00009	89 8d c0 fb ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 420  :     CWaveBank *             pBank                   = NULL;

  0000f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pBank$[ebp], 0

; 421  :     HRESULT                 hr                      = S_OK;

  00016	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 422  :     TCHAR                   szSectionName[MAX_PATH];
; 423  :     TCHAR                   szBankName[MAX_PATH];
; 424  :     TCHAR                   szBankFile[MAX_PATH];
; 425  :     TCHAR                   szHeaderFile[MAX_PATH];
; 426  :     DWORD                   dwEntryCount;
; 427  :     CWaveBankEntry *        pEntry;
; 428  :     HRESULT                 hrEntry;
; 429  :     DWORD                   i;
; 430  :     
; 431  :     DPF_ENTER();
; 432  : 
; 433  :     sprintf(szSectionName, WBPROJECT_BANK_KEY, dwBankIndex);

  00020	8b 45 08	 mov	 eax, DWORD PTR _dwBankIndex$[ebp]
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07EKKD@BANK?$CFlu?$AA@ ; `string'
  00029	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 _sprintf
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 434  : 
; 435  :     GetPrivateProfileString(szSectionName, WBPROJECT_BANK_NAME_KEY, TEXT(""), szBankName, NUMELMS(szBankName), m_szProjectFile);

  00038	8b 95 c0 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0003e	83 c2 08	 add	 edx, 8
  00041	52		 push	 edx
  00042	68 04 01 00 00	 push	 260			; 00000104H
  00047	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _szBankName$[ebp]
  0004d	50		 push	 eax
  0004e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08MAGD@BANKNAME?$AA@ ; `string'
  00058	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  0005e	51		 push	 ecx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 436  :     GetPrivateProfileString(szSectionName, WBPROJECT_BANK_FILE_KEY, TEXT(""), szBankFile, NUMELMS(szBankFile), m_szProjectFile);

  00065	8b 95 c0 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0006b	83 c2 08	 add	 edx, 8
  0006e	52		 push	 edx
  0006f	68 04 01 00 00	 push	 260			; 00000104H
  00074	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szBankFile$[ebp]
  0007a	50		 push	 eax
  0007b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
  00080	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08GMOM@BANKFILE?$AA@ ; `string'
  00085	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  0008b	51		 push	 ecx
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 437  :     GetPrivateProfileString(szSectionName, WBPROJECT_BANK_HEADER_KEY, TEXT(""), szHeaderFile, NUMELMS(szHeaderFile), m_szProjectFile);

  00092	8b 95 c0 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00098	83 c2 08	 add	 edx, 8
  0009b	52		 push	 edx
  0009c	68 04 01 00 00	 push	 260			; 00000104H
  000a1	8d 85 c8 fb ff
	ff		 lea	 eax, DWORD PTR _szHeaderFile$[ebp]
  000a7	50		 push	 eax
  000a8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
  000ad	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@EHAE@HEADERFILE?$AA@ ; `string'
  000b2	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  000b8	51		 push	 ecx
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 438  : 
; 439  :     hr = m_pProject->AddBank(szBankName, szBankFile, szHeaderFile, &pBank);

  000bf	8d 55 fc	 lea	 edx, DWORD PTR _pBank$[ebp]
  000c2	52		 push	 edx
  000c3	8d 85 c8 fb ff
	ff		 lea	 eax, DWORD PTR _szHeaderFile$[ebp]
  000c9	50		 push	 eax
  000ca	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _szBankFile$[ebp]
  000d0	51		 push	 ecx
  000d1	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _szBankName$[ebp]
  000d7	52		 push	 edx
  000d8	8b 85 c0 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000de	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000e1	8b 95 c0 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ea	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ec	8b c8		 mov	 ecx, eax
  000ee	ff 52 04	 call	 DWORD PTR [edx+4]
  000f1	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 440  : 
; 441  :     if(SUCCEEDED(hr))

  000f7	83 bd e8 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000fe	0f 8c 81 00 00
	00		 jl	 $L48985

; 442  :     {
; 443  :         dwEntryCount = GetPrivateProfileInt(szSectionName, WBPROJECT_BANK_ENTRYCOUNT_KEY, 0, m_szProjectFile);

  00104	8b 85 c0 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0010a	83 c0 08	 add	 eax, 8
  0010d	50		 push	 eax
  0010e	6a 00		 push	 0
  00110	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@OCBI@ENTRYCOUNT?$AA@ ; `string'
  00115	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  0011b	51		 push	 ecx
  0011c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00122	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _dwEntryCount$[ebp], eax

; 444  : 
; 445  :         for(i = 0; (i < dwEntryCount) && SUCCEEDED(hr); i++)

  00128	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$[ebp], 0
  00132	eb 0f		 jmp	 SHORT $L48988
$L48989:
  00134	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  0013a	83 c2 01	 add	 edx, 1
  0013d	89 95 e4 fe ff
	ff		 mov	 DWORD PTR _i$[ebp], edx
$L48988:
  00143	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  00149	3b 85 e0 fe ff
	ff		 cmp	 eax, DWORD PTR _dwEntryCount$[ebp]
  0014f	73 34		 jae	 SHORT $L48990
  00151	83 bd e8 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00158	7c 2b		 jl	 SHORT $L48990

; 446  :         {
; 447  :             hr = LoadEntry(szSectionName, pBank, i);

  0015a	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR _i$[ebp]
  00160	51		 push	 ecx
  00161	8b 55 fc	 mov	 edx, DWORD PTR _pBank$[ebp]
  00164	52		 push	 edx
  00165	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _szSectionName$[ebp]
  0016b	50		 push	 eax
  0016c	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00172	8b 11		 mov	 edx, DWORD PTR [ecx]
  00174	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	ff 52 10	 call	 DWORD PTR [edx+16]
  0017d	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 448  :         }

  00183	eb af		 jmp	 SHORT $L48989
$L48990:
$L48985:

; 449  :     }
; 450  : 
; 451  :     DPF_LEAVE_HRESULT(hr);
; 452  : 
; 453  :     return hr;

  00185	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]

; 454  : }

  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c2 04 00	 ret	 4
?LoadBank@CWaveBankProjectFile@@MAEJK@Z ENDP		; CWaveBankProjectFile::LoadBank
_TEXT	ENDS
PUBLIC	?SaveBank@CWaveBankProjectFile@@MAEJPAVCWaveBank@@K@Z ; CWaveBankProjectFile::SaveBank
PUBLIC	??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@ ; `string'
PUBLIC	??_C@_0BK@NIMJ@i?5?$DM?5pBank?9?$DOm_dwEntryCount?$AA@ ; `string'
PUBLIC	??_C@_0BL@PODN@i?5?$DN?$DN?5pBank?9?$DOm_dwEntryCount?$AA@ ; `string'
;	COMDAT ??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@
CONST	SEGMENT
??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@ DB 'CWaveBankProject'
	DB	'File::SaveBank', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NIMJ@i?5?$DM?5pBank?9?$DOm_dwEntryCount?$AA@
CONST	SEGMENT
??_C@_0BK@NIMJ@i?5?$DM?5pBank?9?$DOm_dwEntryCount?$AA@ DB 'i < pBank->m_d'
	DB	'wEntryCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PODN@i?5?$DN?$DN?5pBank?9?$DOm_dwEntryCount?$AA@
CONST	SEGMENT
??_C@_0BL@PODN@i?5?$DN?$DN?5pBank?9?$DOm_dwEntryCount?$AA@ DB 'i == pBank'
	DB	'->m_dwEntryCount', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?SaveBank@CWaveBankProjectFile@@MAEJPAVCWaveBank@@K@Z
_TEXT	SEGMENT
_pBank$ = 8
_dwBankIndex$ = 12
_this$ = -548
_hr$ = -272
_szSectionName$ = -544
_szText$ = -264
_pleEntry$ = -280
_pEntry$ = -268
_i$ = -276
?SaveBank@CWaveBankProjectFile@@MAEJPAVCWaveBank@@K@Z PROC NEAR ; CWaveBankProjectFile::SaveBank, COMDAT
; _this$ = ecx

; 482  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 02 00
	00		 sub	 esp, 548		; 00000224H
  00009	89 8d dc fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 483  :     HRESULT                 hr                      = S_OK;

  0000f	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 484  :     TCHAR                   szSectionName[MAX_PATH];
; 485  :     TCHAR                   szText[MAX_PATH];
; 486  :     PLIST_ENTRY             pleEntry;
; 487  :     CWaveBankEntry *        pEntry;
; 488  :     DWORD                   i;
; 489  :     
; 490  :     DPF_ENTER();
; 491  : 
; 492  :     sprintf(szSectionName, WBPROJECT_BANK_KEY, dwBankIndex);

  00019	8b 45 0c	 mov	 eax, DWORD PTR _dwBankIndex$[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07EKKD@BANK?$CFlu?$AA@ ; `string'
  00022	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 _sprintf
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 493  :     
; 494  :     if(!WritePrivateProfileString(szSectionName, WBPROJECT_BANK_NAME_KEY, pBank->m_szBankName, m_szProjectFile))

  00031	8b 95 dc fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00037	83 c2 08	 add	 edx, 8
  0003a	52		 push	 edx
  0003b	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  0003e	83 c0 10	 add	 eax, 16			; 00000010H
  00041	50		 push	 eax
  00042	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08MAGD@BANKNAME?$AA@ ; `string'
  00047	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  0004d	51		 push	 ecx
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WritePrivateProfileStringA@16
  00054	85 c0		 test	 eax, eax
  00056	75 37		 jne	 SHORT $L49003

; 495  :     {
; 496  :         DPF_ERROR("An error occurred while attempting to write to the project file");

  00058	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  0005d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@ ; `string'
  00062	68 f0 01 00 00	 push	 496			; 000001f0H
  00067	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0006c	6a 01		 push	 1
  0006e	6a 09		 push	 9
  00070	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00075	83 c4 18	 add	 esp, 24			; 00000018H
  00078	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@ ; `string'
  0007d	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00082	83 c4 04	 add	 esp, 4

; 497  :         hr = E_FAIL;

  00085	c7 85 f0 fe ff
	ff 05 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L49003:

; 498  :     }        
; 499  : 
; 500  :     if(SUCCEEDED(hr))

  0008f	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00096	7c 7b		 jl	 SHORT $L49007

; 501  :     {
; 502  :         GetRelativePath(m_szProjectFile, pBank->m_szBankFile, szText);

  00098	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  0009e	52		 push	 edx
  0009f	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  000a2	83 c0 30	 add	 eax, 48			; 00000030H
  000a5	50		 push	 eax
  000a6	8b 8d dc fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	83 c1 08	 add	 ecx, 8
  000af	51		 push	 ecx
  000b0	e8 00 00 00 00	 call	 ?GetRelativePath@@YGXPBD0PAD@Z ; GetRelativePath

; 503  :         
; 504  :         if(!WritePrivateProfileString(szSectionName, WBPROJECT_BANK_FILE_KEY, szText, m_szProjectFile))

  000b5	8b 95 dc fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000bb	83 c2 08	 add	 edx, 8
  000be	52		 push	 edx
  000bf	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08GMOM@BANKFILE?$AA@ ; `string'
  000cb	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  000d1	51		 push	 ecx
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WritePrivateProfileStringA@16
  000d8	85 c0		 test	 eax, eax
  000da	75 37		 jne	 SHORT $L49008

; 505  :         {
; 506  :             DPF_ERROR("An error occurred while attempting to write to the project file");

  000dc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  000e1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@ ; `string'
  000e6	68 fa 01 00 00	 push	 506			; 000001faH
  000eb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000f0	6a 01		 push	 1
  000f2	6a 09		 push	 9
  000f4	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  000f9	83 c4 18	 add	 esp, 24			; 00000018H
  000fc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@ ; `string'
  00101	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00106	83 c4 04	 add	 esp, 4

; 507  :             hr = E_FAIL;

  00109	c7 85 f0 fe ff
	ff 05 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L49008:
$L49007:

; 508  :         }
; 509  :     }
; 510  : 
; 511  :     if(SUCCEEDED(hr))

  00113	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0011a	7c 7d		 jl	 SHORT $L49011

; 512  :     {
; 513  :         GetRelativePath(m_szProjectFile, pBank->m_szHeaderFile, szText);

  0011c	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00122	52		 push	 edx
  00123	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  00126	05 34 01 00 00	 add	 eax, 308		; 00000134H
  0012b	50		 push	 eax
  0012c	8b 8d dc fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00132	83 c1 08	 add	 ecx, 8
  00135	51		 push	 ecx
  00136	e8 00 00 00 00	 call	 ?GetRelativePath@@YGXPBD0PAD@Z ; GetRelativePath

; 514  :         
; 515  :         if(!WritePrivateProfileString(szSectionName, WBPROJECT_BANK_HEADER_KEY, szText, m_szProjectFile))

  0013b	8b 95 dc fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00141	83 c2 08	 add	 edx, 8
  00144	52		 push	 edx
  00145	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0014b	50		 push	 eax
  0014c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@EHAE@HEADERFILE?$AA@ ; `string'
  00151	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  00157	51		 push	 ecx
  00158	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WritePrivateProfileStringA@16
  0015e	85 c0		 test	 eax, eax
  00160	75 37		 jne	 SHORT $L49012

; 516  :         {
; 517  :             DPF_ERROR("An error occurred while attempting to write to the project file");

  00162	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00167	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@ ; `string'
  0016c	68 05 02 00 00	 push	 517			; 00000205H
  00171	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00176	6a 01		 push	 1
  00178	6a 09		 push	 9
  0017a	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0017f	83 c4 18	 add	 esp, 24			; 00000018H
  00182	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@ ; `string'
  00187	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0018c	83 c4 04	 add	 esp, 4

; 518  :             hr = E_FAIL;

  0018f	c7 85 f0 fe ff
	ff 05 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L49012:
$L49011:

; 519  :         }        
; 520  :     }
; 521  : 
; 522  :     if(SUCCEEDED(hr))

  00199	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001a0	7c 7c		 jl	 SHORT $L49015

; 523  :     {
; 524  :         sprintf(szText, TEXT("%lu"), pBank->m_dwEntryCount);

  001a2	8b 55 08	 mov	 edx, DWORD PTR _pBank$[ebp]
  001a5	8b 82 40 02 00
	00		 mov	 eax, DWORD PTR [edx+576]
  001ab	50		 push	 eax
  001ac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03JGAL@?$CFlu?$AA@ ; `string'
  001b1	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 _sprintf
  001bd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 525  : 
; 526  :         if(!WritePrivateProfileString(szSectionName, WBPROJECT_BANK_ENTRYCOUNT_KEY, szText, m_szProjectFile))

  001c0	8b 95 dc fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  001c6	83 c2 08	 add	 edx, 8
  001c9	52		 push	 edx
  001ca	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  001d0	50		 push	 eax
  001d1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@OCBI@ENTRYCOUNT?$AA@ ; `string'
  001d6	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _szSectionName$[ebp]
  001dc	51		 push	 ecx
  001dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WritePrivateProfileStringA@16
  001e3	85 c0		 test	 eax, eax
  001e5	75 37		 jne	 SHORT $L49016

; 527  :         {
; 528  :             DPF_ERROR("An error occurred while attempting to write to the project file");

  001e7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  001ec	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@JEHE@CWaveBankProjectFile?3?3SaveBank?$AA@ ; `string'
  001f1	68 10 02 00 00	 push	 528			; 00000210H
  001f6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  001fb	6a 01		 push	 1
  001fd	6a 09		 push	 9
  001ff	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00204	83 c4 18	 add	 esp, 24			; 00000018H
  00207	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@BMIG@An?5error?5occurred?5while?5attempti@ ; `string'
  0020c	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00211	83 c4 04	 add	 esp, 4

; 529  :             hr = E_FAIL;

  00214	c7 85 f0 fe ff
	ff 05 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L49016:
$L49015:

; 530  :         }        
; 531  :     }
; 532  : 
; 533  :     if(SUCCEEDED(hr))

  0021e	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00225	0f 8c bc 00 00
	00		 jl	 $L49019

; 534  :     {
; 535  :         for(pleEntry = pBank->m_lstEntries.Flink, i = 0; (pleEntry != &pBank->m_lstEntries) && SUCCEEDED(hr); pleEntry = pleEntry->Flink, i++)

  0022b	8b 55 08	 mov	 edx, DWORD PTR _pBank$[ebp]
  0022e	8b 82 38 02 00
	00		 mov	 eax, DWORD PTR [edx+568]
  00234	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _pleEntry$[ebp], eax
  0023a	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$[ebp], 0
  00244	eb 1d		 jmp	 SHORT $L49021
$L49022:
  00246	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _pleEntry$[ebp]
  0024c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0024e	89 95 e8 fe ff
	ff		 mov	 DWORD PTR _pleEntry$[ebp], edx
  00254	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  0025a	83 c0 01	 add	 eax, 1
  0025d	89 85 ec fe ff
	ff		 mov	 DWORD PTR _i$[ebp], eax
$L49021:
  00263	8b 4d 08	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00266	81 c1 38 02 00
	00		 add	 ecx, 568		; 00000238H
  0026c	39 8d e8 fe ff
	ff		 cmp	 DWORD PTR _pleEntry$[ebp], ecx
  00272	74 73		 je	 SHORT $L49023
  00274	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0027b	7c 6a		 jl	 SHORT $L49023

; 536  :         {
; 537  :             ASSERT(i < pBank->m_dwEntryCount);

  0027d	68 19 02 00 00	 push	 537			; 00000219H
  00282	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00287	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@NIMJ@i?5?$DM?5pBank?9?$DOm_dwEntryCount?$AA@ ; `string'
  0028c	8b 55 08	 mov	 edx, DWORD PTR _pBank$[ebp]
  0028f	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  00295	3b 82 40 02 00
	00		 cmp	 eax, DWORD PTR [edx+576]
  0029b	1b c9		 sbb	 ecx, ecx
  0029d	41		 inc	 ecx
  0029e	51		 push	 ecx
  0029f	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  002a4	83 c4 10	 add	 esp, 16			; 00000010H

; 538  :         
; 539  :             pEntry = CONTAINING_RECORD(pleEntry, CWaveBankEntry, m_leEntry);

  002a7	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _pleEntry$[ebp]
  002ad	83 ea 08	 sub	 edx, 8
  002b0	89 95 f4 fe ff
	ff		 mov	 DWORD PTR _pEntry$[ebp], edx

; 540  : 
; 541  :             hr = SaveEntry(szSectionName, pEntry, i);

  002b6	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  002bc	50		 push	 eax
  002bd	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _pEntry$[ebp]
  002c3	51		 push	 ecx
  002c4	8d 95 e0 fd ff
	ff		 lea	 edx, DWORD PTR _szSectionName$[ebp]
  002ca	52		 push	 edx
  002cb	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  002d1	8b 10		 mov	 edx, DWORD PTR [eax]
  002d3	8b 8d dc fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  002d9	ff 52 14	 call	 DWORD PTR [edx+20]
  002dc	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 542  :         }

  002e2	e9 5f ff ff ff	 jmp	 $L49022
$L49023:
$L49019:

; 543  :     }
; 544  : 
; 545  :     if(SUCCEEDED(hr))

  002e7	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  002ee	7c 2c		 jl	 SHORT $L49030

; 546  :     {
; 547  :         ASSERT(i == pBank->m_dwEntryCount);

  002f0	68 23 02 00 00	 push	 547			; 00000223H
  002f5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  002fa	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@PODN@i?5?$DN?$DN?5pBank?9?$DOm_dwEntryCount?$AA@ ; `string'
  002ff	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  00302	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR _i$[ebp]
  00308	33 d2		 xor	 edx, edx
  0030a	3b 88 40 02 00
	00		 cmp	 ecx, DWORD PTR [eax+576]
  00310	0f 95 c2	 setne	 dl
  00313	52		 push	 edx
  00314	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00319	83 c4 10	 add	 esp, 16			; 00000010H
$L49030:

; 548  :     }
; 549  : 
; 550  :     DPF_LEAVE_HRESULT(hr);
; 551  : 
; 552  :     return hr;

  0031c	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]

; 553  : }

  00322	8b e5		 mov	 esp, ebp
  00324	5d		 pop	 ebp
  00325	c2 08 00	 ret	 8
?SaveBank@CWaveBankProjectFile@@MAEJPAVCWaveBank@@K@Z ENDP ; CWaveBankProjectFile::SaveBank
_TEXT	ENDS
PUBLIC	??_C@_03NLLK@?4?4?2?$AA@			; `string'
EXTRN	_strcpy:NEAR
EXTRN	_strcat:NEAR
EXTRN	__stricmp:NEAR
;	COMDAT ??_C@_03NLLK@?4?4?2?$AA@
CONST	SEGMENT
??_C@_03NLLK@?4?4?2?$AA@ DB '..\', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?GetRelativePath@@YGXPBD0PAD@Z
_TEXT	SEGMENT
_pszInputParentPath$ = 8
_pszInputChildPath$ = 12
_pszRelativePath$ = 16
_fSuccess$ = -812
_szParentPath$ = -800
_szChildPath$ = -264
_szParentPart$ = -528
_szChildPart$ = -1080
_pszParentPath$ = -804
_pszChildPath$ = -532
_pszParentTemp$ = -536
_pszChildTemp$ = -808
?GetRelativePath@@YGXPBD0PAD@Z PROC NEAR		; GetRelativePath, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 3c 04 00
	00		 sub	 esp, 1084		; 0000043cH

; 100  :     BOOL                    fSuccess                = TRUE;

  00009	c7 85 d4 fc ff
	ff 01 00 00 00	 mov	 DWORD PTR _fSuccess$[ebp], 1

; 101  :     TCHAR                   szParentPath[MAX_PATH];
; 102  :     TCHAR                   szChildPath[MAX_PATH];
; 103  :     TCHAR                   szParentPart[MAX_PATH];
; 104  :     TCHAR                   szChildPart[MAX_PATH];
; 105  :     LPTSTR                  pszParentPath;
; 106  :     LPTSTR                  pszChildPath;
; 107  :     LPTSTR                  pszParentTemp;
; 108  :     LPTSTR                  pszChildTemp;
; 109  : 
; 110  :     *pszRelativePath = 0;

  00013	8b 45 10	 mov	 eax, DWORD PTR _pszRelativePath$[ebp]
  00016	c6 00 00	 mov	 BYTE PTR [eax], 0

; 111  : 
; 112  :     GetFullPathName(pszInputParentPath, NUMELMS(szParentPath), szParentPath, NULL);

  00019	6a 00		 push	 0
  0001b	8d 8d e0 fc ff
	ff		 lea	 ecx, DWORD PTR _szParentPath$[ebp]
  00021	51		 push	 ecx
  00022	68 04 01 00 00	 push	 260			; 00000104H
  00027	8b 55 08	 mov	 edx, DWORD PTR _pszInputParentPath$[ebp]
  0002a	52		 push	 edx
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFullPathNameA@16

; 113  :     GetFullPathName(pszInputChildPath, NUMELMS(szChildPath), szChildPath, NULL);

  00031	6a 00		 push	 0
  00033	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szChildPath$[ebp]
  00039	50		 push	 eax
  0003a	68 04 01 00 00	 push	 260			; 00000104H
  0003f	8b 4d 0c	 mov	 ecx, DWORD PTR _pszInputChildPath$[ebp]
  00042	51		 push	 ecx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFullPathNameA@16

; 114  : 
; 115  :     if((szParentPath[0] >= TEXT('a')) && (szParentPath[0] <= TEXT('z')))

  00049	0f be 95 e0 fc
	ff ff		 movsx	 edx, BYTE PTR _szParentPath$[ebp]
  00050	83 fa 61	 cmp	 edx, 97			; 00000061H
  00053	7c 1c		 jl	 SHORT $L48885
  00055	0f be 85 e0 fc
	ff ff		 movsx	 eax, BYTE PTR _szParentPath$[ebp]
  0005c	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  0005f	7f 10		 jg	 SHORT $L48885

; 116  :     {
; 117  :         szParentPath[0] = TEXT('A') + (szParentPath[0] - TEXT('a'));

  00061	0f be 8d e0 fc
	ff ff		 movsx	 ecx, BYTE PTR _szParentPath$[ebp]
  00068	83 e9 20	 sub	 ecx, 32			; 00000020H
  0006b	88 8d e0 fc ff
	ff		 mov	 BYTE PTR _szParentPath$[ebp], cl
$L48885:

; 118  :     }
; 119  : 
; 120  :     if((szChildPath[0] >= TEXT('a')) && (szChildPath[0] <= TEXT('z')))

  00071	0f be 95 f8 fe
	ff ff		 movsx	 edx, BYTE PTR _szChildPath$[ebp]
  00078	83 fa 61	 cmp	 edx, 97			; 00000061H
  0007b	7c 1c		 jl	 SHORT $L48886
  0007d	0f be 85 f8 fe
	ff ff		 movsx	 eax, BYTE PTR _szChildPath$[ebp]
  00084	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  00087	7f 10		 jg	 SHORT $L48886

; 121  :     {
; 122  :         szChildPath[0] = TEXT('A') + (szChildPath[0] - TEXT('a'));

  00089	0f be 8d f8 fe
	ff ff		 movsx	 ecx, BYTE PTR _szChildPath$[ebp]
  00090	83 e9 20	 sub	 ecx, 32			; 00000020H
  00093	88 8d f8 fe ff
	ff		 mov	 BYTE PTR _szChildPath$[ebp], cl
$L48886:

; 123  :     }
; 124  : 
; 125  :     pszParentPath = szParentPath;

  00099	8d 95 e0 fc ff
	ff		 lea	 edx, DWORD PTR _szParentPath$[ebp]
  0009f	89 95 dc fc ff
	ff		 mov	 DWORD PTR _pszParentPath$[ebp], edx

; 126  :     pszChildPath = szChildPath;

  000a5	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szChildPath$[ebp]
  000ab	89 85 ec fd ff
	ff		 mov	 DWORD PTR _pszChildPath$[ebp], eax

; 127  : 
; 128  :     //
; 129  :     // If the paths aren't on the same drive, bail
; 130  :     //
; 131  : 
; 132  :     if((szParentPath[0] >= TEXT('A')) && (szParentPath[0] <= TEXT('Z')) && (TEXT(':') == szParentPath[1]))

  000b1	0f be 8d e0 fc
	ff ff		 movsx	 ecx, BYTE PTR _szParentPath$[ebp]
  000b8	83 f9 41	 cmp	 ecx, 65			; 00000041H
  000bb	7c 7f		 jl	 SHORT $L48887
  000bd	0f be 95 e0 fc
	ff ff		 movsx	 edx, BYTE PTR _szParentPath$[ebp]
  000c4	83 fa 5a	 cmp	 edx, 90			; 0000005aH
  000c7	7f 73		 jg	 SHORT $L48887
  000c9	0f be 85 e1 fc
	ff ff		 movsx	 eax, BYTE PTR _szParentPath$[ebp+1]
  000d0	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  000d3	75 67		 jne	 SHORT $L48887

; 133  :     {
; 134  :         fSuccess = ((szParentPath[0] == szChildPath[0]) && (szParentPath[1] == szChildPath[1]));

  000d5	0f be 8d e0 fc
	ff ff		 movsx	 ecx, BYTE PTR _szParentPath$[ebp]
  000dc	0f be 95 f8 fe
	ff ff		 movsx	 edx, BYTE PTR _szChildPath$[ebp]
  000e3	3b ca		 cmp	 ecx, edx
  000e5	75 1e		 jne	 SHORT $L49195
  000e7	0f be 85 e1 fc
	ff ff		 movsx	 eax, BYTE PTR _szParentPath$[ebp+1]
  000ee	0f be 8d f9 fe
	ff ff		 movsx	 ecx, BYTE PTR _szChildPath$[ebp+1]
  000f5	3b c1		 cmp	 eax, ecx
  000f7	75 0c		 jne	 SHORT $L49195
  000f9	c7 85 c4 fb ff
	ff 01 00 00 00	 mov	 DWORD PTR -1084+[ebp], 1
  00103	eb 0a		 jmp	 SHORT $L49196
$L49195:
  00105	c7 85 c4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1084+[ebp], 0
$L49196:
  0010f	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR -1084+[ebp]
  00115	89 95 d4 fc ff
	ff		 mov	 DWORD PTR _fSuccess$[ebp], edx

; 135  : 
; 136  :         if(fSuccess)

  0011b	83 bd d4 fc ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00122	74 18		 je	 SHORT $L48888

; 137  :         {
; 138  :             pszParentPath = &szParentPath[2];

  00124	8d 85 e2 fc ff
	ff		 lea	 eax, DWORD PTR _szParentPath$[ebp+2]
  0012a	89 85 dc fc ff
	ff		 mov	 DWORD PTR _pszParentPath$[ebp], eax

; 139  :             pszChildPath = &szChildPath[2];

  00130	8d 8d fa fe ff
	ff		 lea	 ecx, DWORD PTR _szChildPath$[ebp+2]
  00136	89 8d ec fd ff
	ff		 mov	 DWORD PTR _pszChildPath$[ebp], ecx
$L48888:
$L48887:

; 140  :         }
; 141  :     }
; 142  : 
; 143  :     //
; 144  :     // Skip over any matching directories
; 145  :     //
; 146  : 
; 147  :     if(fSuccess)

  0013c	83 bd d4 fc ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00143	0f 84 96 00 00
	00		 je	 $L48889
$L48891:

; 148  :     {
; 149  :         while(TRUE)

  00149	ba 01 00 00 00	 mov	 edx, 1
  0014e	85 d2		 test	 edx, edx
  00150	0f 84 89 00 00
	00		 je	 $L48892

; 150  :         {
; 151  :             pszParentTemp = ExtractDirectory(pszParentPath, szParentPart);

  00156	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _szParentPart$[ebp]
  0015c	50		 push	 eax
  0015d	8b 8d dc fc ff
	ff		 mov	 ecx, DWORD PTR _pszParentPath$[ebp]
  00163	51		 push	 ecx
  00164	e8 00 00 00 00	 call	 ?ExtractDirectory@@YGPADPAD0@Z ; ExtractDirectory
  00169	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _pszParentTemp$[ebp], eax

; 152  : 
; 153  :             if(!*pszParentTemp)

  0016f	8b 95 e8 fd ff
	ff		 mov	 edx, DWORD PTR _pszParentTemp$[ebp]
  00175	0f be 02	 movsx	 eax, BYTE PTR [edx]
  00178	85 c0		 test	 eax, eax
  0017a	75 02		 jne	 SHORT $L48893

; 154  :             {
; 155  :                 break;

  0017c	eb 61		 jmp	 SHORT $L48892
$L48893:

; 156  :             }
; 157  : 
; 158  :             pszChildTemp = ExtractDirectory(pszChildPath, szChildPart);

  0017e	8d 8d c8 fb ff
	ff		 lea	 ecx, DWORD PTR _szChildPart$[ebp]
  00184	51		 push	 ecx
  00185	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR _pszChildPath$[ebp]
  0018b	52		 push	 edx
  0018c	e8 00 00 00 00	 call	 ?ExtractDirectory@@YGPADPAD0@Z ; ExtractDirectory
  00191	89 85 d8 fc ff
	ff		 mov	 DWORD PTR _pszChildTemp$[ebp], eax

; 159  : 
; 160  :             if(!*pszChildTemp)

  00197	8b 85 d8 fc ff
	ff		 mov	 eax, DWORD PTR _pszChildTemp$[ebp]
  0019d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001a0	85 c9		 test	 ecx, ecx
  001a2	75 02		 jne	 SHORT $L48894

; 161  :             {
; 162  :                 break;

  001a4	eb 39		 jmp	 SHORT $L48892
$L48894:

; 163  :             }
; 164  : 
; 165  :             if(_tcsicmp(szParentPart, szChildPart))

  001a6	8d 95 c8 fb ff
	ff		 lea	 edx, DWORD PTR _szChildPart$[ebp]
  001ac	52		 push	 edx
  001ad	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _szParentPart$[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 __stricmp
  001b9	83 c4 08	 add	 esp, 8
  001bc	85 c0		 test	 eax, eax
  001be	74 02		 je	 SHORT $L48895

; 166  :             {
; 167  :                 break;

  001c0	eb 1d		 jmp	 SHORT $L48892
$L48895:

; 168  :             }
; 169  : 
; 170  :             pszParentPath = pszParentTemp;

  001c2	8b 8d e8 fd ff
	ff		 mov	 ecx, DWORD PTR _pszParentTemp$[ebp]
  001c8	89 8d dc fc ff
	ff		 mov	 DWORD PTR _pszParentPath$[ebp], ecx

; 171  :             pszChildPath = pszChildTemp;

  001ce	8b 95 d8 fc ff
	ff		 mov	 edx, DWORD PTR _pszChildTemp$[ebp]
  001d4	89 95 ec fd ff
	ff		 mov	 DWORD PTR _pszChildPath$[ebp], edx

; 172  :         }

  001da	e9 6a ff ff ff	 jmp	 $L48891
$L48892:
$L48889:

; 173  :     }
; 174  : 
; 175  :     //
; 176  :     // For every directory that appears in the parent but not the child, add
; 177  :     // a "..\"
; 178  :     //
; 179  : 
; 180  :     if(fSuccess)

  001df	83 bd d4 fc ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  001e6	0f 84 99 00 00
	00		 je	 $L48896
$L48898:

; 181  :     {
; 182  :         while(TRUE)

  001ec	b8 01 00 00 00	 mov	 eax, 1
  001f1	85 c0		 test	 eax, eax
  001f3	0f 84 8c 00 00
	00		 je	 $L48899

; 183  :         {
; 184  :             pszParentTemp = ExtractDirectory(pszParentPath, szParentPart);

  001f9	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR _szParentPart$[ebp]
  001ff	51		 push	 ecx
  00200	8b 95 dc fc ff
	ff		 mov	 edx, DWORD PTR _pszParentPath$[ebp]
  00206	52		 push	 edx
  00207	e8 00 00 00 00	 call	 ?ExtractDirectory@@YGPADPAD0@Z ; ExtractDirectory
  0020c	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _pszParentTemp$[ebp], eax

; 185  : 
; 186  :             if(!*pszParentTemp)

  00212	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _pszParentTemp$[ebp]
  00218	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0021b	85 c9		 test	 ecx, ecx
  0021d	75 02		 jne	 SHORT $L48900

; 187  :             {
; 188  :                 break;

  0021f	eb 64		 jmp	 SHORT $L48899
$L48900:

; 189  :             }
; 190  : 
; 191  :             pszChildTemp = ExtractDirectory(pszChildPath, szChildPart);

  00221	8d 95 c8 fb ff
	ff		 lea	 edx, DWORD PTR _szChildPart$[ebp]
  00227	52		 push	 edx
  00228	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pszChildPath$[ebp]
  0022e	50		 push	 eax
  0022f	e8 00 00 00 00	 call	 ?ExtractDirectory@@YGPADPAD0@Z ; ExtractDirectory
  00234	89 85 d8 fc ff
	ff		 mov	 DWORD PTR _pszChildTemp$[ebp], eax

; 192  : 
; 193  :             if(*pszChildTemp)

  0023a	8b 8d d8 fc ff
	ff		 mov	 ecx, DWORD PTR _pszChildTemp$[ebp]
  00240	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  00243	85 d2		 test	 edx, edx
  00245	74 1c		 je	 SHORT $L48901

; 194  :             {
; 195  :                 if(!_tcsicmp(szParentPart, szChildPart))

  00247	8d 85 c8 fb ff
	ff		 lea	 eax, DWORD PTR _szChildPart$[ebp]
  0024d	50		 push	 eax
  0024e	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR _szParentPart$[ebp]
  00254	51		 push	 ecx
  00255	e8 00 00 00 00	 call	 __stricmp
  0025a	83 c4 08	 add	 esp, 8
  0025d	85 c0		 test	 eax, eax
  0025f	75 02		 jne	 SHORT $L48902

; 196  :                 {
; 197  :                     break;

  00261	eb 22		 jmp	 SHORT $L48899
$L48902:
$L48901:

; 198  :                 }
; 199  :             }
; 200  : 
; 201  :             _tcscat(pszRelativePath, TEXT("..\\"));

  00263	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03NLLK@?4?4?2?$AA@ ; `string'
  00268	8b 55 10	 mov	 edx, DWORD PTR _pszRelativePath$[ebp]
  0026b	52		 push	 edx
  0026c	e8 00 00 00 00	 call	 _strcat
  00271	83 c4 08	 add	 esp, 8

; 202  : 
; 203  :             pszParentPath = pszParentTemp;

  00274	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _pszParentTemp$[ebp]
  0027a	89 85 dc fc ff
	ff		 mov	 DWORD PTR _pszParentPath$[ebp], eax

; 204  :         }

  00280	e9 67 ff ff ff	 jmp	 $L48898
$L48899:
$L48896:

; 205  :     }
; 206  : 
; 207  :     //
; 208  :     // If anything went wrong, just copy the full child path.  If all is good,
; 209  :     // build the relative path.
; 210  :     //
; 211  :     
; 212  :     if(fSuccess)

  00285	83 bd d4 fc ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  0028c	74 15		 je	 SHORT $L48904

; 213  :     {
; 214  :         _tcscat(pszRelativePath, pszChildPath);

  0028e	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _pszChildPath$[ebp]
  00294	51		 push	 ecx
  00295	8b 55 10	 mov	 edx, DWORD PTR _pszRelativePath$[ebp]
  00298	52		 push	 edx
  00299	e8 00 00 00 00	 call	 _strcat
  0029e	83 c4 08	 add	 esp, 8

; 215  :     }
; 216  :     else

  002a1	eb 13		 jmp	 SHORT $L48905
$L48904:

; 217  :     {
; 218  :         _tcscpy(pszRelativePath, szChildPath);

  002a3	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szChildPath$[ebp]
  002a9	50		 push	 eax
  002aa	8b 4d 10	 mov	 ecx, DWORD PTR _pszRelativePath$[ebp]
  002ad	51		 push	 ecx
  002ae	e8 00 00 00 00	 call	 _strcpy
  002b3	83 c4 08	 add	 esp, 8
$L48905:

; 219  :     }
; 220  : }

  002b6	8b e5		 mov	 esp, ebp
  002b8	5d		 pop	 ebp
  002b9	c2 0c 00	 ret	 12			; 0000000cH
?GetRelativePath@@YGXPBD0PAD@Z ENDP			; GetRelativePath
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?ExtractDirectory@@YGPADPAD0@Z
_TEXT	SEGMENT
_pszSrc$ = 8
_pszDst$ = 12
?ExtractDirectory@@YGPADPAD0@Z PROC NEAR		; ExtractDirectory, COMDAT

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 43   :     if(TEXT('\\') == *pszSrc)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00006	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00009	83 f9 5c	 cmp	 ecx, 92			; 0000005cH
  0000c	75 09		 jne	 SHORT $L48865

; 44   :     {
; 45   :         pszSrc++;

  0000e	8b 55 08	 mov	 edx, DWORD PTR _pszSrc$[ebp]
  00011	83 c2 01	 add	 edx, 1
  00014	89 55 08	 mov	 DWORD PTR _pszSrc$[ebp], edx
$L48865:
$L48867:

; 46   :     }
; 47   : 
; 48   :     while(TRUE)

  00017	b8 01 00 00 00	 mov	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 46		 je	 SHORT $L48868

; 49   :     {
; 50   :         if(TEXT('\\') == *pszSrc)

  00020	8b 4d 08	 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  00023	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  00026	83 fa 5c	 cmp	 edx, 92			; 0000005cH
  00029	75 11		 jne	 SHORT $L48869

; 51   :         {
; 52   :             *pszDst = 0;

  0002b	8b 45 0c	 mov	 eax, DWORD PTR _pszDst$[ebp]
  0002e	c6 00 00	 mov	 BYTE PTR [eax], 0

; 53   :             pszSrc++;

  00031	8b 4d 08	 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  00034	83 c1 01	 add	 ecx, 1
  00037	89 4d 08	 mov	 DWORD PTR _pszSrc$[ebp], ecx

; 54   :             break;

  0003a	eb 2a		 jmp	 SHORT $L48868
$L48869:

; 55   :         }
; 56   :         
; 57   :         *pszDst = *pszSrc;

  0003c	8b 55 0c	 mov	 edx, DWORD PTR _pszDst$[ebp]
  0003f	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00042	8a 08		 mov	 cl, BYTE PTR [eax]
  00044	88 0a		 mov	 BYTE PTR [edx], cl

; 58   : 
; 59   :         if(!*pszDst)

  00046	8b 55 0c	 mov	 edx, DWORD PTR _pszDst$[ebp]
  00049	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0004c	85 c0		 test	 eax, eax
  0004e	75 02		 jne	 SHORT $L48870

; 60   :         {
; 61   :             break;

  00050	eb 14		 jmp	 SHORT $L48868
$L48870:

; 62   :         }
; 63   : 
; 64   :         pszDst++;

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _pszDst$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	89 4d 0c	 mov	 DWORD PTR _pszDst$[ebp], ecx

; 65   :         pszSrc++;

  0005b	8b 55 08	 mov	 edx, DWORD PTR _pszSrc$[ebp]
  0005e	83 c2 01	 add	 edx, 1
  00061	89 55 08	 mov	 DWORD PTR _pszSrc$[ebp], edx

; 66   :     }

  00064	eb b1		 jmp	 SHORT $L48867
$L48868:

; 67   : 
; 68   :     return pszSrc;

  00066	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]

; 69   : }

  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?ExtractDirectory@@YGPADPAD0@Z ENDP			; ExtractDirectory
_TEXT	ENDS
PUBLIC	?LoadEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBank@@K@Z ; CWaveBankProjectFile::LoadEntry
PUBLIC	??_C@_08OCCE@ENTRY?$CFlu?$AA@			; `string'
PUBLIC	??_C@_0CA@PBCA@CWaveBankProjectFile?3?3LoadEntry?$AA@ ; `string'
PUBLIC	??_C@_0CM@FBL@Unrecognized?5flag?5character?5in?5p@ ; `string'
EXTRN	_tolower:NEAR
;	COMDAT ??_C@_08OCCE@ENTRY?$CFlu?$AA@
CONST	SEGMENT
??_C@_08OCCE@ENTRY?$CFlu?$AA@ DB 'ENTRY%lu', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PBCA@CWaveBankProjectFile?3?3LoadEntry?$AA@
CONST	SEGMENT
??_C@_0CA@PBCA@CWaveBankProjectFile?3?3LoadEntry?$AA@ DB 'CWaveBankProjec'
	DB	'tFile::LoadEntry', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FBL@Unrecognized?5flag?5character?5in?5p@
CONST	SEGMENT
??_C@_0CM@FBL@Unrecognized?5flag?5character?5in?5p@ DB 'Unrecognized flag'
	DB	' character in project file', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?LoadEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBank@@K@Z
_TEXT	SEGMENT
_pszSectionName$ = 8
_pBank$ = 12
_dwEntryIndex$ = 16
_this$ = -1580
_szKeyName$ = -1304
_szEntryData$ = -776
_szEntryName$ = -1576
_szFileName$ = -1040
_dwFlags$ = -1316
_pszSrc$ = -1308
_pszDst$ = -1044
_hr$ = -1312
?LoadEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBank@@K@Z PROC NEAR ; CWaveBankProjectFile::LoadEntry, COMDAT
; _this$ = ecx

; 583  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 38 06 00
	00		 sub	 esp, 1592		; 00000638H
  00009	89 8d d4 f9 ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 584  :     TCHAR                   szKeyName[0x100];
; 585  :     TCHAR                   szEntryData[MAX_PATH + 0x200];
; 586  :     TCHAR                   szEntryName[0x100];
; 587  :     TCHAR                   szFileName[MAX_PATH];
; 588  :     DWORD                   dwFlags;
; 589  :     LPCTSTR                 pszSrc;
; 590  :     LPTSTR                  pszDst;
; 591  :     HRESULT                 hr;
; 592  :     
; 593  :     DPF_ENTER();
; 594  : 
; 595  :     //
; 596  :     // Load the whole entry string
; 597  :     //
; 598  : 
; 599  :     sprintf(szKeyName, WBPROJECT_ENTRY_KEY, dwEntryIndex);

  0000f	8b 45 10	 mov	 eax, DWORD PTR _dwEntryIndex$[ebp]
  00012	50		 push	 eax
  00013	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08OCCE@ENTRY?$CFlu?$AA@ ; `string'
  00018	8d 8d e8 fa ff
	ff		 lea	 ecx, DWORD PTR _szKeyName$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 _sprintf
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 600  : 
; 601  :     GetPrivateProfileString(pszSectionName, szKeyName, "", szEntryData, NUMELMS(szEntryData), m_szProjectFile);

  00027	8b 95 d4 f9 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0002d	83 c2 08	 add	 edx, 8
  00030	52		 push	 edx
  00031	68 04 03 00 00	 push	 772			; 00000304H
  00036	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR _szEntryData$[ebp]
  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
  00042	8d 8d e8 fa ff
	ff		 lea	 ecx, DWORD PTR _szKeyName$[ebp]
  00048	51		 push	 ecx
  00049	8b 55 08	 mov	 edx, DWORD PTR _pszSectionName$[ebp]
  0004c	52		 push	 edx
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 602  : 
; 603  :     pszSrc = szEntryData;

  00053	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR _szEntryData$[ebp]
  00059	89 85 e4 fa ff
	ff		 mov	 DWORD PTR _pszSrc$[ebp], eax

; 604  :     
; 605  :     //
; 606  :     // Extract the entry name
; 607  :     //
; 608  :     
; 609  :     pszDst = szEntryName;

  0005f	8d 8d d8 f9 ff
	ff		 lea	 ecx, DWORD PTR _szEntryName$[ebp]
  00065	89 8d ec fb ff
	ff		 mov	 DWORD PTR _pszDst$[ebp], ecx
$L49048:

; 610  : 
; 611  :     while(TRUE)

  0006b	ba 01 00 00 00	 mov	 edx, 1
  00070	85 d2		 test	 edx, edx
  00072	74 7f		 je	 SHORT $L49049

; 612  :     {
; 613  :         switch(tolower(*pszSrc))
; 614  :         {

  00074	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _pszSrc$[ebp]
  0007a	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 _tolower
  00083	83 c4 04	 add	 esp, 4
  00086	89 85 d0 f9 ff
	ff		 mov	 DWORD PTR -1584+[ebp], eax
  0008c	83 bd d0 f9 ff
	ff 2c		 cmp	 DWORD PTR -1584+[ebp], 44 ; 0000002cH
  00093	74 02		 je	 SHORT $L49054
  00095	eb 1a		 jmp	 SHORT $L49055
$L49054:

; 615  :             case WBPROJECT_ENTRYEXT_SEPARATOR_LCHAR:
; 616  :                 pszSrc++;

  00097	8b 95 e4 fa ff
	ff		 mov	 edx, DWORD PTR _pszSrc$[ebp]
  0009d	83 c2 01	 add	 edx, 1
  000a0	89 95 e4 fa ff
	ff		 mov	 DWORD PTR _pszSrc$[ebp], edx

; 617  :                 *pszDst = 0;

  000a6	8b 85 ec fb ff
	ff		 mov	 eax, DWORD PTR _pszDst$[ebp]
  000ac	c6 00 00	 mov	 BYTE PTR [eax], 0

; 618  :                 break;

  000af	eb 10		 jmp	 SHORT $L49051
$L49055:

; 619  : 
; 620  :             default:
; 621  :                 *pszDst = *pszSrc;

  000b1	8b 8d ec fb ff
	ff		 mov	 ecx, DWORD PTR _pszDst$[ebp]
  000b7	8b 95 e4 fa ff
	ff		 mov	 edx, DWORD PTR _pszSrc$[ebp]
  000bd	8a 02		 mov	 al, BYTE PTR [edx]
  000bf	88 01		 mov	 BYTE PTR [ecx], al
$L49051:

; 622  :                 break;
; 623  :         }
; 624  : 
; 625  :         if(!*pszDst)

  000c1	8b 8d ec fb ff
	ff		 mov	 ecx, DWORD PTR _pszDst$[ebp]
  000c7	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  000ca	85 d2		 test	 edx, edx
  000cc	75 02		 jne	 SHORT $L49056

; 626  :         {
; 627  :             break;

  000ce	eb 23		 jmp	 SHORT $L49049
$L49056:

; 628  :         }
; 629  : 
; 630  :         pszDst++;

  000d0	8b 85 ec fb ff
	ff		 mov	 eax, DWORD PTR _pszDst$[ebp]
  000d6	83 c0 01	 add	 eax, 1
  000d9	89 85 ec fb ff
	ff		 mov	 DWORD PTR _pszDst$[ebp], eax

; 631  :         pszSrc++;

  000df	8b 8d e4 fa ff
	ff		 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  000e5	83 c1 01	 add	 ecx, 1
  000e8	89 8d e4 fa ff
	ff		 mov	 DWORD PTR _pszSrc$[ebp], ecx

; 632  :     }

  000ee	e9 78 ff ff ff	 jmp	 $L49048
$L49049:

; 633  : 
; 634  :     //
; 635  :     // Extract the file name
; 636  :     //
; 637  :     
; 638  :     pszDst = szFileName;

  000f3	8d 95 f0 fb ff
	ff		 lea	 edx, DWORD PTR _szFileName$[ebp]
  000f9	89 95 ec fb ff
	ff		 mov	 DWORD PTR _pszDst$[ebp], edx
$L49058:

; 639  : 
; 640  :     while(TRUE)

  000ff	b8 01 00 00 00	 mov	 eax, 1
  00104	85 c0		 test	 eax, eax
  00106	74 7f		 je	 SHORT $L49059

; 641  :     {
; 642  :         switch(tolower(*pszSrc))
; 643  :         {

  00108	8b 8d e4 fa ff
	ff		 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  0010e	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _tolower
  00117	83 c4 04	 add	 esp, 4
  0011a	89 85 cc f9 ff
	ff		 mov	 DWORD PTR -1588+[ebp], eax
  00120	83 bd cc f9 ff
	ff 2c		 cmp	 DWORD PTR -1588+[ebp], 44 ; 0000002cH
  00127	74 02		 je	 SHORT $L49064
  00129	eb 1a		 jmp	 SHORT $L49065
$L49064:

; 644  :             case WBPROJECT_ENTRYEXT_SEPARATOR_LCHAR:
; 645  :                 pszSrc++;

  0012b	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00131	83 c0 01	 add	 eax, 1
  00134	89 85 e4 fa ff
	ff		 mov	 DWORD PTR _pszSrc$[ebp], eax

; 646  :                 *pszDst = 0;

  0013a	8b 8d ec fb ff
	ff		 mov	 ecx, DWORD PTR _pszDst$[ebp]
  00140	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 647  :                 break;

  00143	eb 10		 jmp	 SHORT $L49061
$L49065:

; 648  : 
; 649  :             default:
; 650  :                 *pszDst = *pszSrc;

  00145	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR _pszDst$[ebp]
  0014b	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00151	8a 08		 mov	 cl, BYTE PTR [eax]
  00153	88 0a		 mov	 BYTE PTR [edx], cl
$L49061:

; 651  :                 break;
; 652  :         }
; 653  : 
; 654  :         if(!*pszDst)

  00155	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR _pszDst$[ebp]
  0015b	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0015e	85 c0		 test	 eax, eax
  00160	75 02		 jne	 SHORT $L49066

; 655  :         {
; 656  :             break;

  00162	eb 23		 jmp	 SHORT $L49059
$L49066:

; 657  :         }
; 658  : 
; 659  :         pszDst++;

  00164	8b 8d ec fb ff
	ff		 mov	 ecx, DWORD PTR _pszDst$[ebp]
  0016a	83 c1 01	 add	 ecx, 1
  0016d	89 8d ec fb ff
	ff		 mov	 DWORD PTR _pszDst$[ebp], ecx

; 660  :         pszSrc++;

  00173	8b 95 e4 fa ff
	ff		 mov	 edx, DWORD PTR _pszSrc$[ebp]
  00179	83 c2 01	 add	 edx, 1
  0017c	89 95 e4 fa ff
	ff		 mov	 DWORD PTR _pszSrc$[ebp], edx

; 661  :     }

  00182	e9 78 ff ff ff	 jmp	 $L49058
$L49059:

; 662  : 
; 663  :     //
; 664  :     // Extract the flags
; 665  :     //
; 666  : 
; 667  :     dwFlags = 0;

  00187	c7 85 dc fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwFlags$[ebp], 0
$L49068:

; 668  : 
; 669  :     while(*pszSrc)

  00191	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00197	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0019a	85 c9		 test	 ecx, ecx
  0019c	0f 84 9a 00 00
	00		 je	 $L49069

; 670  :     {
; 671  :         switch(tolower(*pszSrc))
; 672  :         {

  001a2	8b 95 e4 fa ff
	ff		 mov	 edx, DWORD PTR _pszSrc$[ebp]
  001a8	0f be 02	 movsx	 eax, BYTE PTR [edx]
  001ab	50		 push	 eax
  001ac	e8 00 00 00 00	 call	 _tolower
  001b1	83 c4 04	 add	 esp, 4
  001b4	89 85 c8 f9 ff
	ff		 mov	 DWORD PTR -1592+[ebp], eax
  001ba	83 bd c8 f9 ff
	ff 2c		 cmp	 DWORD PTR -1592+[ebp], 44 ; 0000002cH
  001c1	74 14		 je	 SHORT $L49074
  001c3	83 bd c8 f9 ff
	ff 38		 cmp	 DWORD PTR -1592+[ebp], 56 ; 00000038H
  001ca	74 1e		 je	 SHORT $L49076
  001cc	83 bd c8 f9 ff
	ff 63		 cmp	 DWORD PTR -1592+[ebp], 99 ; 00000063H
  001d3	74 04		 je	 SHORT $L49075
  001d5	eb 24		 jmp	 SHORT $L49077
$L49074:

; 673  :             case WBPROJECT_ENTRYEXT_SEPARATOR_LCHAR:
; 674  :                 break;

  001d7	eb 4f		 jmp	 SHORT $L49071
$L49075:

; 675  : 
; 676  :             case WBPROJECT_ENTRYEXT_ADPCMFILTER_LCHAR:
; 677  :                 dwFlags |= WBFILTER_ADPCM;

  001d9	8b 8d dc fa ff
	ff		 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  001df	83 c9 01	 or	 ecx, 1
  001e2	89 8d dc fa ff
	ff		 mov	 DWORD PTR _dwFlags$[ebp], ecx

; 678  :                 break;

  001e8	eb 3e		 jmp	 SHORT $L49071
$L49076:

; 679  : 
; 680  :             case WBPROJECT_ENTRYEXT_8BITFILTER_LCHAR:
; 681  :                 dwFlags |= WBFILTER_8BIT;

  001ea	8b 95 dc fa ff
	ff		 mov	 edx, DWORD PTR _dwFlags$[ebp]
  001f0	83 ca 02	 or	 edx, 2
  001f3	89 95 dc fa ff
	ff		 mov	 DWORD PTR _dwFlags$[ebp], edx

; 682  :                 break;

  001f9	eb 2d		 jmp	 SHORT $L49071
$L49077:

; 683  : 
; 684  :             default:
; 685  :                 DPF_WARNING("Unrecognized flag character in project file");

  001fb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00200	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@PBCA@CWaveBankProjectFile?3?3LoadEntry?$AA@ ; `string'
  00205	68 ad 02 00 00	 push	 685			; 000002adH
  0020a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0020f	6a 03		 push	 3
  00211	6a 09		 push	 9
  00213	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00218	83 c4 18	 add	 esp, 24			; 00000018H
  0021b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CM@FBL@Unrecognized?5flag?5character?5in?5p@ ; `string'
  00220	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00225	83 c4 04	 add	 esp, 4
$L49071:

; 686  :                 break;
; 687  :         }
; 688  : 
; 689  :         pszSrc++;

  00228	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _pszSrc$[ebp]
  0022e	83 c0 01	 add	 eax, 1
  00231	89 85 e4 fa ff
	ff		 mov	 DWORD PTR _pszSrc$[ebp], eax

; 690  :     }

  00237	e9 55 ff ff ff	 jmp	 $L49068
$L49069:

; 691  : 
; 692  :     //
; 693  :     // Create the entry
; 694  :     //
; 695  : 
; 696  :     hr = pBank->AddEntry(szEntryName, szFileName, dwFlags);

  0023c	6a 00		 push	 0
  0023e	8b 8d dc fa ff
	ff		 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  00244	51		 push	 ecx
  00245	8d 95 f0 fb ff
	ff		 lea	 edx, DWORD PTR _szFileName$[ebp]
  0024b	52		 push	 edx
  0024c	8d 85 d8 f9 ff
	ff		 lea	 eax, DWORD PTR _szEntryName$[ebp]
  00252	50		 push	 eax
  00253	8b 4d 0c	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00256	8b 11		 mov	 edx, DWORD PTR [ecx]
  00258	8b 4d 0c	 mov	 ecx, DWORD PTR _pBank$[ebp]
  0025b	ff 52 14	 call	 DWORD PTR [edx+20]
  0025e	89 85 e0 fa ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 697  : 
; 698  :     DPF_LEAVE_HRESULT(hr);
; 699  : 
; 700  :     return hr;

  00264	8b 85 e0 fa ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]

; 701  : }

  0026a	8b e5		 mov	 esp, ebp
  0026c	5d		 pop	 ebp
  0026d	c2 0c 00	 ret	 12			; 0000000cH
?LoadEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBank@@K@Z ENDP ; CWaveBankProjectFile::LoadEntry
_TEXT	ENDS
PUBLIC	?SaveEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBankEntry@@K@Z ; CWaveBankProjectFile::SaveEntry
PUBLIC	??_C@_01KMAE@?0?$AA@				; `string'
PUBLIC	??_C@_01IJJ@c?$AA@				; `string'
PUBLIC	??_C@_01KPCI@8?$AA@				; `string'
PUBLIC	??_C@_0CA@MMJK@CWaveBankProjectFile?3?3SaveEntry?$AA@ ; `string'
PUBLIC	??_C@_0CP@KNEC@Error?5?$CFlu?5occurred?5writing?5to?5th@ ; `string'
EXTRN	__imp__GetLastError@0:NEAR
EXTRN	_strlen:NEAR
;	COMDAT ??_C@_01KMAE@?0?$AA@
CONST	SEGMENT
??_C@_01KMAE@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01IJJ@c?$AA@
CONST	SEGMENT
??_C@_01IJJ@c?$AA@ DB 'c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KPCI@8?$AA@
CONST	SEGMENT
??_C@_01KPCI@8?$AA@ DB '8', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MMJK@CWaveBankProjectFile?3?3SaveEntry?$AA@
CONST	SEGMENT
??_C@_0CA@MMJK@CWaveBankProjectFile?3?3SaveEntry?$AA@ DB 'CWaveBankProjec'
	DB	'tFile::SaveEntry', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KNEC@Error?5?$CFlu?5occurred?5writing?5to?5th@
CONST	SEGMENT
??_C@_0CP@KNEC@Error?5?$CFlu?5occurred?5writing?5to?5th@ DB 'Error %lu oc'
	DB	'curred writing to the project file', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?SaveEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBankEntry@@K@Z
_TEXT	SEGMENT
_pszSectionName$ = 8
_pEntry$ = 12
_dwEntryIndex$ = 16
_this$ = -1040
_hr$ = -1036
_szKeyName$ = -1032
_szEntryData$ = -776
?SaveEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBankEntry@@K@Z PROC NEAR ; CWaveBankProjectFile::SaveEntry, COMDAT
; _this$ = ecx

; 731  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 04 00
	00		 sub	 esp, 1040		; 00000410H
  00009	89 8d f0 fb ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 732  :     HRESULT                 hr                              = S_OK;

  0000f	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 733  :     TCHAR                   szKeyName[0x100];
; 734  :     TCHAR                   szEntryData[MAX_PATH + 0x200];
; 735  :     
; 736  :     DPF_ENTER();
; 737  : 
; 738  :     sprintf(szKeyName, WBPROJECT_ENTRY_KEY, dwEntryIndex);

  00019	8b 45 10	 mov	 eax, DWORD PTR _dwEntryIndex$[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08OCCE@ENTRY?$CFlu?$AA@ ; `string'
  00022	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _szKeyName$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 _sprintf
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 739  : 
; 740  :     _tcscpy(szEntryData, pEntry->m_szEntryName);

  00031	8b 55 0c	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00034	83 c2 10	 add	 edx, 16			; 00000010H
  00037	52		 push	 edx
  00038	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR _szEntryData$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 _strcpy
  00044	83 c4 08	 add	 esp, 8

; 741  :     _tcscat(szEntryData, WBPROJECT_ENTRYEXT_SEPARATOR_STR);

  00047	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01KMAE@?0?$AA@ ; `string'
  0004c	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _szEntryData$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 _strcat
  00058	83 c4 08	 add	 esp, 8

; 742  : 
; 743  :     GetRelativePath(m_szProjectFile, pEntry->m_szFileName, &szEntryData[_tcslen(szEntryData)]);

  0005b	8d 95 f8 fc ff
	ff		 lea	 edx, DWORD PTR _szEntryData$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 _strlen
  00067	83 c4 04	 add	 esp, 4
  0006a	8d 84 05 f8 fc
	ff ff		 lea	 eax, DWORD PTR _szEntryData$[ebp+eax]
  00071	50		 push	 eax
  00072	8b 4d 0c	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00075	81 c1 10 02 00
	00		 add	 ecx, 528		; 00000210H
  0007b	51		 push	 ecx
  0007c	8b 95 f0 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00082	83 c2 08	 add	 edx, 8
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 ?GetRelativePath@@YGXPBD0PAD@Z ; GetRelativePath

; 744  : 
; 745  :     if(pEntry->m_dwFlags & WBFILTER_MASK)

  0008b	8b 45 0c	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0008e	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  00094	83 e1 03	 and	 ecx, 3
  00097	85 c9		 test	 ecx, ecx
  00099	74 5c		 je	 SHORT $L49091

; 746  :     {
; 747  :         _tcscat(szEntryData, WBPROJECT_ENTRYEXT_SEPARATOR_STR);

  0009b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01KMAE@?0?$AA@ ; `string'
  000a0	8d 95 f8 fc ff
	ff		 lea	 edx, DWORD PTR _szEntryData$[ebp]
  000a6	52		 push	 edx
  000a7	e8 00 00 00 00	 call	 _strcat
  000ac	83 c4 08	 add	 esp, 8

; 748  : 
; 749  :         if(pEntry->m_dwFlags & WBFILTER_ADPCM)

  000af	8b 45 0c	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000b2	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  000b8	83 e1 01	 and	 ecx, 1
  000bb	85 c9		 test	 ecx, ecx
  000bd	74 14		 je	 SHORT $L49092

; 750  :         {
; 751  :             _tcscat(szEntryData, WBPROJECT_ENTRYEXT_ADPCMFILTER_STR);

  000bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01IJJ@c?$AA@ ; `string'
  000c4	8d 95 f8 fc ff
	ff		 lea	 edx, DWORD PTR _szEntryData$[ebp]
  000ca	52		 push	 edx
  000cb	e8 00 00 00 00	 call	 _strcat
  000d0	83 c4 08	 add	 esp, 8
$L49092:

; 752  :         }
; 753  : 
; 754  :         if(pEntry->m_dwFlags & WBFILTER_8BIT)

  000d3	8b 45 0c	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000d6	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  000dc	83 e1 02	 and	 ecx, 2
  000df	85 c9		 test	 ecx, ecx
  000e1	74 14		 je	 SHORT $L49094

; 755  :         {
; 756  :             _tcscat(szEntryData, WBPROJECT_ENTRYEXT_8BITFILTER_STR);

  000e3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01KPCI@8?$AA@ ; `string'
  000e8	8d 95 f8 fc ff
	ff		 lea	 edx, DWORD PTR _szEntryData$[ebp]
  000ee	52		 push	 edx
  000ef	e8 00 00 00 00	 call	 _strcat
  000f4	83 c4 08	 add	 esp, 8
$L49094:
$L49091:

; 757  :         }
; 758  :     }
; 759  : 
; 760  :     if(!WritePrivateProfileString(pszSectionName, szKeyName, szEntryData, m_szProjectFile))

  000f7	8b 85 f0 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000fd	83 c0 08	 add	 eax, 8
  00100	50		 push	 eax
  00101	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _szEntryData$[ebp]
  00107	51		 push	 ecx
  00108	8d 95 f8 fb ff
	ff		 lea	 edx, DWORD PTR _szKeyName$[ebp]
  0010e	52		 push	 edx
  0010f	8b 45 08	 mov	 eax, DWORD PTR _pszSectionName$[ebp]
  00112	50		 push	 eax
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WritePrivateProfileStringA@16
  00119	85 c0		 test	 eax, eax
  0011b	75 3e		 jne	 SHORT $L49096

; 761  :     {
; 762  :         DPF_ERROR("Error %lu occurred writing to the project file", GetLastError());

  0011d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00122	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@MMJK@CWaveBankProjectFile?3?3SaveEntry?$AA@ ; `string'
  00127	68 fa 02 00 00	 push	 762			; 000002faH
  0012c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@PNJF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00131	6a 01		 push	 1
  00133	6a 09		 push	 9
  00135	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0013a	83 c4 18	 add	 esp, 24			; 00000018H
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00143	50		 push	 eax
  00144	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CP@KNEC@Error?5?$CFlu?5occurred?5writing?5to?5th@ ; `string'
  00149	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0014e	83 c4 08	 add	 esp, 8

; 763  :         hr = E_FAIL;

  00151	c7 85 f4 fb ff
	ff 05 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L49096:

; 764  :     }        
; 765  : 
; 766  :     DPF_LEAVE_HRESULT(hr);
; 767  : 
; 768  :     return hr;

  0015b	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]

; 769  : }

  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 0c 00	 ret	 12			; 0000000cH
?SaveEntry@CWaveBankProjectFile@@MAEJPBDPAVCWaveBankEntry@@K@Z ENDP ; CWaveBankProjectFile::SaveEntry
_TEXT	ENDS
END
