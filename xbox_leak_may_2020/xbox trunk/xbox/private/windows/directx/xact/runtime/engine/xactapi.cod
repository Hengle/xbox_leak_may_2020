; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\xactapi.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
XACTENG_URW	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_URW	ENDS
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0DN@ODCKAJDD@c?3?2xbox?2private?2windows?2directx?2@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0DP@FDDAALAG@c?3?2xbox?2private?2windows?2directx?2@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_07NDMLHGOG@XACTENG?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0DJ@KLBKCGNG@c?3?2xbox?2private?2windows?2directx?2@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0CG@FEMHCPBP@Invalid?5soundbank?5signature?5in?5h@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_0CL@DBJIOONK@Invalid?5version?5?$CI?$CFd?$CJ?5in?5header?4?5@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_C@_07OFNMHBKJ@pBuffer?$AA@
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
XACTENG_RW	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RW	ENDS
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IsEqualGUID@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _==@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _KeGetCurrentIrql@0
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _Direct3D_AddRef@0
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _Direct3D_Release@0
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DDevice_BeginScene@0
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DDevice_EndScene@0
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DPalette_Unlock@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _sqrtf@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?GetStatus@IDirectSoundBuffer@@QAGJPAK@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?SetBufferData@IDirectSoundBuffer@@QAGJPAXK@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0CIrql@XACT@@QAE@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?Raise@CIrql@XACT@@QAEXXZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?Lower@CIrql@XACT@@QAEXXZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?__AssertValidEntryList@XACT@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@1@PBDI@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?MoveEntryTailList@XACT@@YGPAU_LIST_ENTRY@@PAU2@0@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??_GCRefCount@XACT@@UAEPAXI@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??1CRefCount@XACT@@UAE@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?AddRef@CRefCount@XACT@@UAGKXZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?Release@CRefCount@XACT@@UAGKXZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??3@YAXPAX@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?XACTEnterCriticalSection@@YGHXZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?XACTLeaveCriticalSection@@YGXXZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??0CAutoLock@XACT@@QAE@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ??1CAutoLock@XACT@@QAE@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?GetCueTable@CSoundBank@XACT@@AAEPAU_XACT_SOUNDBANK_CUE_ENTRY@@XZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?GetCueFriendlyName@CSoundBank@XACT@@AAEPBDK@Z
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT ?GetBaseDataOffset@CSoundBank@XACT@@AAEPAEXZ
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_AddRef@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_Release@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_LoadDspImage@16
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_CreateSoundSource@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_CreateSoundBank@16
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_RegisterWaveBank@16
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_RegisterStreamedWaveBank@24
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_UnRegisterWaveBank@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_SetMasterVolume@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_SetListenerParameters@16
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_GlobalPause@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_RegisterNotification@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_UnRegisterNotification@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_GetNotification@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_FlushNotification@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_ScheduleEvent@16
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTEngine_CommitDeferredSettings@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundBank_AddRef@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundBank_Release@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundBank_GetSoundCueIndexFromFriendlyName@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundBank_Play@20
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundBank_Stop@16
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_AddRef@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_Release@4
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_SetPosition@20
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_SetAllParameters@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_SetConeOrientation@20
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_SetI3DL2Source@12
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_SetVelocity@20
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_SetMixBins@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _IXACTSoundSource_SetMixBinVolumes@8
XACTENG	SEGMENT PARA USE32 PUBLIC ''
XACTENG	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT ??_7CRefCount@XACT@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
XACTENG_RD	SEGMENT DWORD USE32 PUBLIC ''
XACTENG_RD	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XACTENG_RW
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
PUBLIC	_g_XACTCriticalSection
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
XACTENG_RD	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
XACTENG_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
XACTENG_RD	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
XACTENG_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
XACTENG_RD	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
XACTENG_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
XACTENG_RD	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
XACTENG_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
XACTENG_RD	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
XACTENG_RD	ENDS
XACTENG_RW	SEGMENT
_g_XACTCriticalSection DB 01H
	DB	00H
	DB	04H
	DB	00H
	DD	00H
	DD	FLAT:_g_XACTCriticalSection+8
	DD	FLAT:_g_XACTCriticalSection+8
	DD	0ffffffffH
	DD	00H
	DD	00H
XACTENG_RW	ENDS
PUBLIC	_IXACTEngine_AddRef@4
EXTRN	?AddRef@CEngine@XACT@@QAGKXZ:NEAR		; XACT::CEngine::AddRef
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\xact\runtime\engine\xactapi.cpp
;	COMDAT _IXACTEngine_AddRef@4
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_IXACTEngine_AddRef@4 PROC NEAR				; COMDAT

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 27   :     using namespace XACT;
; 28   :     return ((CEngine *)pEngine)->AddRef();

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32130
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32131
$L32130:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32131:
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?AddRef@CEngine@XACT@@QAGKXZ ; XACT::CEngine::AddRef

; 29   : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
_IXACTEngine_AddRef@4 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_Release@4
EXTRN	?Release@CEngine@XACT@@QAGKXZ:NEAR		; XACT::CEngine::Release
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_Release@4
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_IXACTEngine_Release@4 PROC NEAR			; COMDAT

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 33   :     using namespace XACT;
; 34   :     return ((CEngine *)pEngine)->Release();

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32135
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32136
$L32135:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32136:
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?Release@CEngine@XACT@@QAGKXZ ; XACT::CEngine::Release

; 35   : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
_IXACTEngine_Release@4 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_LoadDspImage@16
EXTRN	?LoadDspImage@CEngine@XACT@@QAGJPAXKPBU_DSEFFECTIMAGELOC@@@Z:NEAR ; XACT::CEngine::LoadDspImage
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_LoadDspImage@16
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pvBuffer$ = 12
_dwSize$ = 16
_pEffectLoc$ = 20
_IXACTEngine_LoadDspImage@16 PROC NEAR			; COMDAT

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 40   :     using namespace XACT;
; 41   :     return ((CEngine *)pEngine)->LoadDspImage(pvBuffer, dwSize, pEffectLoc);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32140
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32141
$L32140:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32141:
  0001c	8b 4d 14	 mov	 ecx, DWORD PTR _pEffectLoc$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR _dwSize$[ebp]
  00023	52		 push	 edx
  00024	8b 45 0c	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?LoadDspImage@CEngine@XACT@@QAGJPAXKPBU_DSEFFECTIMAGELOC@@@Z ; XACT::CEngine::LoadDspImage

; 42   : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 10 00	 ret	 16			; 00000010H
_IXACTEngine_LoadDspImage@16 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_CreateSoundSource@12
EXTRN	?CreateSoundSource@CEngine@XACT@@QAGJKPAPAUIXACTSoundSource@@@Z:NEAR ; XACT::CEngine::CreateSoundSource
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_CreateSoundSource@12
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_dwFlags$ = 12
_ppSoundSource$ = 16
_IXACTEngine_CreateSoundSource@12 PROC NEAR		; COMDAT

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 46   :     using namespace XACT;
; 47   :     return ((CEngine *)pEngine)->CreateSoundSource(dwFlags, ppSoundSource);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32145
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32146
$L32145:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32146:
  0001c	8b 4d 10	 mov	 ecx, DWORD PTR _ppSoundSource$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 0c	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?CreateSoundSource@CEngine@XACT@@QAGJKPAPAUIXACTSoundSource@@@Z ; XACT::CEngine::CreateSoundSource

; 48   : }

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
_IXACTEngine_CreateSoundSource@12 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_CreateSoundBank@16
EXTRN	?CreateSoundBank@CEngine@XACT@@QAGJPAXKPAPAUIXACTSoundBank@@@Z:NEAR ; XACT::CEngine::CreateSoundBank
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_CreateSoundBank@16
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pvBuffer$ = 12
_dwSize$ = 16
_ppSoundBank$ = 20
_IXACTEngine_CreateSoundBank@16 PROC NEAR		; COMDAT

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 52   :     using namespace XACT;
; 53   :     return ((CEngine *)pEngine)->CreateSoundBank(pvBuffer, dwSize, ppSoundBank);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32150
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32151
$L32150:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32151:
  0001c	8b 4d 14	 mov	 ecx, DWORD PTR _ppSoundBank$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR _dwSize$[ebp]
  00023	52		 push	 edx
  00024	8b 45 0c	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?CreateSoundBank@CEngine@XACT@@QAGJPAXKPAPAUIXACTSoundBank@@@Z ; XACT::CEngine::CreateSoundBank

; 54   : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 10 00	 ret	 16			; 00000010H
_IXACTEngine_CreateSoundBank@16 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_RegisterWaveBank@16
EXTRN	?RegisterWaveBank@CEngine@XACT@@QAGJPAXKPAPAUIXACTWaveBank@@@Z:NEAR ; XACT::CEngine::RegisterWaveBank
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_RegisterWaveBank@16
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pvData$ = 12
_dwSize$ = 16
_ppWaveBank$ = 20
_IXACTEngine_RegisterWaveBank@16 PROC NEAR		; COMDAT

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 58   :     using namespace XACT;
; 59   :     return ((CEngine *)pEngine)->RegisterWaveBank(pvData, dwSize, ppWaveBank);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32155
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32156
$L32155:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32156:
  0001c	8b 4d 14	 mov	 ecx, DWORD PTR _ppWaveBank$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR _dwSize$[ebp]
  00023	52		 push	 edx
  00024	8b 45 0c	 mov	 eax, DWORD PTR _pvData$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?RegisterWaveBank@CEngine@XACT@@QAGJPAXKPAPAUIXACTWaveBank@@@Z ; XACT::CEngine::RegisterWaveBank

; 60   : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 10 00	 ret	 16			; 00000010H
_IXACTEngine_RegisterWaveBank@16 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_RegisterStreamedWaveBank@24
EXTRN	?RegisterStreamedWaveBank@CEngine@XACT@@QAGJPAXK0KPAPAUIXACTWaveBank@@@Z:NEAR ; XACT::CEngine::RegisterStreamedWaveBank
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_RegisterStreamedWaveBank@24
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pvStreamingBuffer$ = 12
_dwSize$ = 16
_hFileHandle$ = 20
_dwOffset$ = 24
_ppWaveBank$ = 28
_IXACTEngine_RegisterStreamedWaveBank@24 PROC NEAR	; COMDAT

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 64   :     using namespace XACT;
; 65   :     return ((CEngine *)pEngine)->RegisterStreamedWaveBank(pvStreamingBuffer, dwSize, hFileHandle, dwOffset, ppWaveBank);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32160
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32161
$L32160:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32161:
  0001c	8b 4d 1c	 mov	 ecx, DWORD PTR _ppWaveBank$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 18	 mov	 edx, DWORD PTR _dwOffset$[ebp]
  00023	52		 push	 edx
  00024	8b 45 14	 mov	 eax, DWORD PTR _hFileHandle$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 10	 mov	 ecx, DWORD PTR _dwSize$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 0c	 mov	 edx, DWORD PTR _pvStreamingBuffer$[ebp]
  0002f	52		 push	 edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?RegisterStreamedWaveBank@CEngine@XACT@@QAGJPAXK0KPAPAUIXACTWaveBank@@@Z ; XACT::CEngine::RegisterStreamedWaveBank

; 66   : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 18 00	 ret	 24			; 00000018H
_IXACTEngine_RegisterStreamedWaveBank@24 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_UnRegisterWaveBank@8
EXTRN	?UnRegisterWaveBank@CEngine@XACT@@QAGJPAUIXACTWaveBank@@@Z:NEAR ; XACT::CEngine::UnRegisterWaveBank
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_UnRegisterWaveBank@8
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pWaveBank$ = 12
_IXACTEngine_UnRegisterWaveBank@8 PROC NEAR		; COMDAT

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 70   :     using namespace XACT;
; 71   :     return ((CEngine *)pEngine)->UnRegisterWaveBank(pWaveBank);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32165
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32166
$L32165:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32166:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _pWaveBank$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?UnRegisterWaveBank@CEngine@XACT@@QAGJPAUIXACTWaveBank@@@Z ; XACT::CEngine::UnRegisterWaveBank

; 72   : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTEngine_UnRegisterWaveBank@8 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_SetMasterVolume@8
EXTRN	?SetMasterVolume@CEngine@XACT@@QAGJJ@Z:NEAR	; XACT::CEngine::SetMasterVolume
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_SetMasterVolume@8
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_lVolume$ = 12
_IXACTEngine_SetMasterVolume@8 PROC NEAR		; COMDAT

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 76   :     using namespace XACT;
; 77   :     return ((CEngine *)pEngine)->SetMasterVolume(lVolume);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32170
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32171
$L32170:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32171:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _lVolume$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?SetMasterVolume@CEngine@XACT@@QAGJJ@Z ; XACT::CEngine::SetMasterVolume

; 78   : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTEngine_SetMasterVolume@8 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_SetListenerParameters@16
EXTRN	?SetListenerParameters@CEngine@XACT@@QAGJPBU_DS3DLISTENER@@PBU_DSI3DL2LISTENER@@K@Z:NEAR ; XACT::CEngine::SetListenerParameters
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_SetListenerParameters@16
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pcDs3dListener$ = 12
_pds3dl$ = 16
_dwApply$ = 20
_IXACTEngine_SetListenerParameters@16 PROC NEAR		; COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 82   :     using namespace XACT;
; 83   :     return ((CEngine *)pEngine)->SetListenerParameters(pcDs3dListener, pds3dl, dwApply);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32175
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32176
$L32175:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32176:
  0001c	8b 4d 14	 mov	 ecx, DWORD PTR _dwApply$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR _pds3dl$[ebp]
  00023	52		 push	 edx
  00024	8b 45 0c	 mov	 eax, DWORD PTR _pcDs3dListener$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?SetListenerParameters@CEngine@XACT@@QAGJPBU_DS3DLISTENER@@PBU_DSI3DL2LISTENER@@K@Z ; XACT::CEngine::SetListenerParameters

; 84   : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 10 00	 ret	 16			; 00000010H
_IXACTEngine_SetListenerParameters@16 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_GlobalPause@8
EXTRN	?GlobalPause@CEngine@XACT@@QAGJH@Z:NEAR		; XACT::CEngine::GlobalPause
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_GlobalPause@8
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_bPause$ = 12
_IXACTEngine_GlobalPause@8 PROC NEAR			; COMDAT

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 88   :     using namespace XACT;
; 89   :     return ((CEngine *)pEngine)->GlobalPause(bPause);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32180
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32181
$L32180:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32181:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _bPause$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?GlobalPause@CEngine@XACT@@QAGJH@Z ; XACT::CEngine::GlobalPause

; 90   : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTEngine_GlobalPause@8 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_RegisterNotification@8
EXTRN	?RegisterNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@@Z:NEAR ; XACT::CEngine::RegisterNotification
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_RegisterNotification@8
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pNotificationDesc$ = 12
_IXACTEngine_RegisterNotification@8 PROC NEAR		; COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 94   :     using namespace XACT;
; 95   :     return ((CEngine *)pEngine)->RegisterNotification(pNotificationDesc);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32185
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32186
$L32185:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32186:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _pNotificationDesc$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?RegisterNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@@Z ; XACT::CEngine::RegisterNotification

; 96   : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTEngine_RegisterNotification@8 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_UnRegisterNotification@8
EXTRN	?UnRegisterNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@@Z:NEAR ; XACT::CEngine::UnRegisterNotification
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_UnRegisterNotification@8
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pNotificationDesc$ = 12
_IXACTEngine_UnRegisterNotification@8 PROC NEAR		; COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 100  :     using namespace XACT;
; 101  :     return ((CEngine *)pEngine)->UnRegisterNotification(pNotificationDesc);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32190
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32191
$L32190:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32191:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _pNotificationDesc$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?UnRegisterNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@@Z ; XACT::CEngine::UnRegisterNotification

; 102  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTEngine_UnRegisterNotification@8 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_GetNotification@12
EXTRN	?GetNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@PAU_XACT_NOTIFICATION@@@Z:NEAR ; XACT::CEngine::GetNotification
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_GetNotification@12
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pNotificationDesc$ = 12
_pNotification$ = 16
_IXACTEngine_GetNotification@12 PROC NEAR		; COMDAT

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 106  :     using namespace XACT;
; 107  :     return ((CEngine *)pEngine)->GetNotification(pNotificationDesc, pNotification);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32195
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32196
$L32195:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32196:
  0001c	8b 4d 10	 mov	 ecx, DWORD PTR _pNotification$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 0c	 mov	 edx, DWORD PTR _pNotificationDesc$[ebp]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?GetNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@PAU_XACT_NOTIFICATION@@@Z ; XACT::CEngine::GetNotification

; 108  : }

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
_IXACTEngine_GetNotification@12 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_FlushNotification@8
EXTRN	?FlushNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@@Z:NEAR ; XACT::CEngine::FlushNotification
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_FlushNotification@8
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pNotificationDesc$ = 12
_IXACTEngine_FlushNotification@8 PROC NEAR		; COMDAT

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 112  :     using namespace XACT;
; 113  :     return ((CEngine *)pEngine)->FlushNotification(pNotificationDesc);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32200
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32201
$L32200:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32201:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _pNotificationDesc$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?FlushNotification@CEngine@XACT@@QAGJPAU_XACT_NOTIFICATION_DESCRIPTION@@@Z ; XACT::CEngine::FlushNotification

; 114  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTEngine_FlushNotification@8 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_ScheduleEvent@16
EXTRN	?ScheduleEvent@CEngine@XACT@@QAGJPAUXACT_TRACK_EVENT@@PAUIXACTSoundCue@@K@Z:NEAR ; XACT::CEngine::ScheduleEvent
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_ScheduleEvent@16
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_pEventDesc$ = 12
_pSoundCue$ = 16
_dwTrackIndex$ = 20
_IXACTEngine_ScheduleEvent@16 PROC NEAR			; COMDAT

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 118  :     using namespace XACT;
; 119  :     return ((CEngine *)pEngine)->ScheduleEvent(pEventDesc, pSoundCue, dwTrackIndex);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32205
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32206
$L32205:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32206:
  0001c	8b 4d 14	 mov	 ecx, DWORD PTR _dwTrackIndex$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR _pSoundCue$[ebp]
  00023	52		 push	 edx
  00024	8b 45 0c	 mov	 eax, DWORD PTR _pEventDesc$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?ScheduleEvent@CEngine@XACT@@QAGJPAUXACT_TRACK_EVENT@@PAUIXACTSoundCue@@K@Z ; XACT::CEngine::ScheduleEvent

; 120  : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 10 00	 ret	 16			; 00000010H
_IXACTEngine_ScheduleEvent@16 ENDP
XACTENG	ENDS
PUBLIC	_IXACTEngine_CommitDeferredSettings@4
EXTRN	?CommitDeferredSettings@CEngine@XACT@@QAGJXZ:NEAR ; XACT::CEngine::CommitDeferredSettings
; Function compile flags: /Odt
;	COMDAT _IXACTEngine_CommitDeferredSettings@4
XACTENG	SEGMENT
tv66 = -4
_pEngine$ = 8
_IXACTEngine_CommitDeferredSettings@4 PROC NEAR		; COMDAT

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 124  :     using namespace XACT;
; 125  :     return ((CEngine *)pEngine)->CommitDeferredSettings();

  00004	83 7d 08 00	 cmp	 DWORD PTR _pEngine$[ebp], 0
  00008	74 0b		 je	 SHORT $L32210
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pEngine$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32211
$L32210:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32211:
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ?CommitDeferredSettings@CEngine@XACT@@QAGJXZ ; XACT::CEngine::CommitDeferredSettings

; 126  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
_IXACTEngine_CommitDeferredSettings@4 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundBank_AddRef@4
; Function compile flags: /Odt
;	COMDAT _IXACTSoundBank_AddRef@4
XACTENG	SEGMENT
tv66 = -4
_pBank$ = 8
_IXACTSoundBank_AddRef@4 PROC NEAR			; COMDAT

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 134  :     using namespace XACT;
; 135  :     return ((CSoundBank *)pBank)->AddRef();

  00004	83 7d 08 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  00008	74 0b		 je	 SHORT $L32215
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32216
$L32215:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32216:
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00024	50		 push	 eax
  00025	ff 52 04	 call	 DWORD PTR [edx+4]

; 136  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
_IXACTSoundBank_AddRef@4 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundBank_Release@4
; Function compile flags: /Odt
;	COMDAT _IXACTSoundBank_Release@4
XACTENG	SEGMENT
tv66 = -4
_pBank$ = 8
_IXACTSoundBank_Release@4 PROC NEAR			; COMDAT

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 139  :     using namespace XACT;
; 140  :     return ((CSoundBank *)pBank)->Release();

  00004	83 7d 08 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  00008	74 0b		 je	 SHORT $L32220
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32221
$L32220:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32221:
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00024	50		 push	 eax
  00025	ff 52 08	 call	 DWORD PTR [edx+8]

; 141  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
_IXACTSoundBank_Release@4 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundBank_GetSoundCueIndexFromFriendlyName@12
EXTRN	?GetSoundCueIndexFromFriendlyName@CSoundBank@XACT@@QAGJPBDPAK@Z:NEAR ; XACT::CSoundBank::GetSoundCueIndexFromFriendlyName
; Function compile flags: /Odt
;	COMDAT _IXACTSoundBank_GetSoundCueIndexFromFriendlyName@12
XACTENG	SEGMENT
tv66 = -4
_pBank$ = 8
_lpFriendlyName$ = 12
_pdwCueIndex$ = 16
_IXACTSoundBank_GetSoundCueIndexFromFriendlyName@12 PROC NEAR ; COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 145  :     using namespace XACT;
; 146  :     return ((CSoundBank *)pBank)->GetSoundCueIndexFromFriendlyName(lpFriendlyName, pdwCueIndex);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  00008	74 0b		 je	 SHORT $L32225
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32226
$L32225:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32226:
  0001c	8b 4d 10	 mov	 ecx, DWORD PTR _pdwCueIndex$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 0c	 mov	 edx, DWORD PTR _lpFriendlyName$[ebp]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?GetSoundCueIndexFromFriendlyName@CSoundBank@XACT@@QAGJPBDPAK@Z ; XACT::CSoundBank::GetSoundCueIndexFromFriendlyName

; 147  : }

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
_IXACTSoundBank_GetSoundCueIndexFromFriendlyName@12 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundBank_Play@20
EXTRN	?Play@CSoundBank@XACT@@QAGJKPAUIXACTSoundSource@@KPAPAUIXACTSoundCue@@@Z:NEAR ; XACT::CSoundBank::Play
; Function compile flags: /Odt
;	COMDAT _IXACTSoundBank_Play@20
XACTENG	SEGMENT
tv66 = -4
_pBank$ = 8
_dwCueIndex$ = 12
_pSoundSource$ = 16
_dwFlags$ = 20
_ppCue$ = 24
_IXACTSoundBank_Play@20 PROC NEAR			; COMDAT

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 151  :     using namespace XACT;
; 152  :     return ((CSoundBank *)pBank)->Play(dwCueIndex, pSoundSource, dwFlags, ppCue);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  00008	74 0b		 je	 SHORT $L32230
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32231
$L32230:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32231:
  0001c	8b 4d 18	 mov	 ecx, DWORD PTR _ppCue$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 14	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  00023	52		 push	 edx
  00024	8b 45 10	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCueIndex$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?Play@CSoundBank@XACT@@QAGJKPAUIXACTSoundSource@@KPAPAUIXACTSoundCue@@@Z ; XACT::CSoundBank::Play

; 153  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 14 00	 ret	 20			; 00000014H
_IXACTSoundBank_Play@20 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundBank_Stop@16
EXTRN	?Stop@CSoundBank@XACT@@QAGJKKPAUIXACTSoundCue@@@Z:NEAR ; XACT::CSoundBank::Stop
; Function compile flags: /Odt
;	COMDAT _IXACTSoundBank_Stop@16
XACTENG	SEGMENT
tv66 = -4
_pBank$ = 8
_dwCueIndex$ = 12
_dwFlags$ = 16
_pCue$ = 20
_IXACTSoundBank_Stop@16 PROC NEAR			; COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 157  :     using namespace XACT;
; 158  :     return ((CSoundBank *)pBank)->Stop(dwCueIndex, dwFlags, pCue);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  00008	74 0b		 je	 SHORT $L32235
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32236
$L32235:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32236:
  0001c	8b 4d 14	 mov	 ecx, DWORD PTR _pCue$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 10	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  00023	52		 push	 edx
  00024	8b 45 0c	 mov	 eax, DWORD PTR _dwCueIndex$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?Stop@CSoundBank@XACT@@QAGJKKPAUIXACTSoundCue@@@Z ; XACT::CSoundBank::Stop

; 159  : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 10 00	 ret	 16			; 00000010H
_IXACTSoundBank_Stop@16 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_AddRef@4
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_AddRef@4
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_IXACTSoundSource_AddRef@4 PROC NEAR			; COMDAT

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 168  :     using namespace XACT;
; 169  :     return ((CSoundSource *)pSoundSource)->AddRef();

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32240
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32241
$L32240:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32241:
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00024	50		 push	 eax
  00025	ff 52 04	 call	 DWORD PTR [edx+4]

; 170  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
_IXACTSoundSource_AddRef@4 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_Release@4
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_Release@4
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_IXACTSoundSource_Release@4 PROC NEAR			; COMDAT

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 174  :     using namespace XACT;
; 175  :     return ((CSoundSource *)pSoundSource)->Release();

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32245
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32246
$L32245:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32246:
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR tv66[ebp]
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00024	50		 push	 eax
  00025	ff 52 08	 call	 DWORD PTR [edx+8]

; 176  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
_IXACTSoundSource_Release@4 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_SetPosition@20
EXTRN	?SetPosition@CSoundSource@XACT@@QAGJMMMK@Z:NEAR	; XACT::CSoundSource::SetPosition
EXTRN	__fltused:NEAR
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_SetPosition@20
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_x$ = 12
_y$ = 16
_z$ = 20
_dwApply$ = 24
_IXACTSoundSource_SetPosition@20 PROC NEAR		; COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 180  :     using namespace XACT;
; 181  :     return ((CSoundSource *)pSoundSource)->SetPosition(x, y, z, dwApply);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32250
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32251
$L32250:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32251:
  0001c	8b 4d 18	 mov	 ecx, DWORD PTR _dwApply$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 14	 mov	 edx, DWORD PTR _z$[ebp]
  00023	52		 push	 edx
  00024	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?SetPosition@CSoundSource@XACT@@QAGJMMMK@Z ; XACT::CSoundSource::SetPosition

; 182  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 14 00	 ret	 20			; 00000014H
_IXACTSoundSource_SetPosition@20 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_SetAllParameters@12
EXTRN	?SetAllParameters@CSoundSource@XACT@@QAGJPBU_DS3DBUFFER@@K@Z:NEAR ; XACT::CSoundSource::SetAllParameters
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_SetAllParameters@12
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_pcDs3dBuffer$ = 12
_dwApply$ = 16
_IXACTSoundSource_SetAllParameters@12 PROC NEAR		; COMDAT

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 186  :     using namespace XACT;
; 187  :     return ((CSoundSource *)pSoundSource)->SetAllParameters(pcDs3dBuffer, dwApply);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32256
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32257
$L32256:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32257:
  0001c	8b 4d 10	 mov	 ecx, DWORD PTR _dwApply$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 0c	 mov	 edx, DWORD PTR _pcDs3dBuffer$[ebp]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?SetAllParameters@CSoundSource@XACT@@QAGJPBU_DS3DBUFFER@@K@Z ; XACT::CSoundSource::SetAllParameters

; 188  : }

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
_IXACTSoundSource_SetAllParameters@12 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_SetConeOrientation@20
EXTRN	?SetConeOrientation@CSoundSource@XACT@@QAGJMMMK@Z:NEAR ; XACT::CSoundSource::SetConeOrientation
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_SetConeOrientation@20
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_x$ = 12
_y$ = 16
_z$ = 20
_dwApply$ = 24
_IXACTSoundSource_SetConeOrientation@20 PROC NEAR	; COMDAT

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 192  :     using namespace XACT;
; 193  :     return ((CSoundSource *)pSoundSource)->SetConeOrientation(x, y, z, dwApply);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32261
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32262
$L32261:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32262:
  0001c	8b 4d 18	 mov	 ecx, DWORD PTR _dwApply$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 14	 mov	 edx, DWORD PTR _z$[ebp]
  00023	52		 push	 edx
  00024	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?SetConeOrientation@CSoundSource@XACT@@QAGJMMMK@Z ; XACT::CSoundSource::SetConeOrientation

; 194  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 14 00	 ret	 20			; 00000014H
_IXACTSoundSource_SetConeOrientation@20 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_SetI3DL2Source@12
EXTRN	?SetI3DL2Source@CSoundSource@XACT@@QAGJPBU_DSI3DL2BUFFER@@K@Z:NEAR ; XACT::CSoundSource::SetI3DL2Source
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_SetI3DL2Source@12
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_pds3db$ = 12
_dwApply$ = 16
_IXACTSoundSource_SetI3DL2Source@12 PROC NEAR		; COMDAT

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 198  :     using namespace XACT;
; 199  :     return ((CSoundSource *)pSoundSource)->SetI3DL2Source(pds3db,dwApply);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32266
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32267
$L32266:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32267:
  0001c	8b 4d 10	 mov	 ecx, DWORD PTR _dwApply$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 0c	 mov	 edx, DWORD PTR _pds3db$[ebp]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR tv66[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?SetI3DL2Source@CSoundSource@XACT@@QAGJPBU_DSI3DL2BUFFER@@K@Z ; XACT::CSoundSource::SetI3DL2Source

; 200  : }

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
_IXACTSoundSource_SetI3DL2Source@12 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_SetVelocity@20
EXTRN	?SetVelocity@CSoundSource@XACT@@QAGJMMMK@Z:NEAR	; XACT::CSoundSource::SetVelocity
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_SetVelocity@20
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_x$ = 12
_y$ = 16
_z$ = 20
_dwApply$ = 24
_IXACTSoundSource_SetVelocity@20 PROC NEAR		; COMDAT

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 204  :     using namespace XACT;
; 205  :     return ((CSoundSource *)pSoundSource)->SetVelocity(x, y, z, dwApply);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32271
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32272
$L32271:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32272:
  0001c	8b 4d 18	 mov	 ecx, DWORD PTR _dwApply$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 14	 mov	 edx, DWORD PTR _z$[ebp]
  00023	52		 push	 edx
  00024	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?SetVelocity@CSoundSource@XACT@@QAGJMMMK@Z ; XACT::CSoundSource::SetVelocity

; 206  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 14 00	 ret	 20			; 00000014H
_IXACTSoundSource_SetVelocity@20 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_SetMixBins@8
EXTRN	?SetMixBins@CSoundSource@XACT@@QAGJPBU_DSMIXBINS@@@Z:NEAR ; XACT::CSoundSource::SetMixBins
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_SetMixBins@8
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_pMixBins$ = 12
_IXACTSoundSource_SetMixBins@8 PROC NEAR		; COMDAT

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 210  :     using namespace XACT;
; 211  :     return ((CSoundSource *)pSoundSource)->SetMixBins(pMixBins);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32276
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32277
$L32276:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32277:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _pMixBins$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?SetMixBins@CSoundSource@XACT@@QAGJPBU_DSMIXBINS@@@Z ; XACT::CSoundSource::SetMixBins

; 212  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTSoundSource_SetMixBins@8 ENDP
XACTENG	ENDS
PUBLIC	_IXACTSoundSource_SetMixBinVolumes@8
EXTRN	?SetMixBinVolumes@CSoundSource@XACT@@QAGJPBU_DSMIXBINS@@@Z:NEAR ; XACT::CSoundSource::SetMixBinVolumes
; Function compile flags: /Odt
;	COMDAT _IXACTSoundSource_SetMixBinVolumes@8
XACTENG	SEGMENT
tv66 = -4
_pSoundSource$ = 8
_pMixBins$ = 12
_IXACTSoundSource_SetMixBinVolumes@8 PROC NEAR		; COMDAT

; 215  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 216  :     using namespace XACT;
; 217  :     return ((CSoundSource *)pSoundSource)->SetMixBinVolumes(pMixBins);

  00004	83 7d 08 00	 cmp	 DWORD PTR _pSoundSource$[ebp], 0
  00008	74 0b		 je	 SHORT $L32281
  0000a	8b 45 08	 mov	 eax, DWORD PTR _pSoundSource$[ebp]
  0000d	83 e8 08	 sub	 eax, 8
  00010	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  00013	eb 07		 jmp	 SHORT $L32282
$L32281:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$L32282:
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _pMixBins$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv66[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ?SetMixBinVolumes@CSoundSource@XACT@@QAGJPBU_DSMIXBINS@@@Z ; XACT::CSoundSource::SetMixBinVolumes

; 218  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
_IXACTSoundSource_SetMixBinVolumes@8 ENDP
XACTENG	ENDS
END
