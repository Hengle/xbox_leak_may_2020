; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	..\phoneyds.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_02BGAOHDMM@?$CBp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT ??0CPhoneyDSound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IDirectSoundPrivate@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPhoneyDSound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CPhoneyDSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CPhoneyDSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPhoneyDSound@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateSoundBuffer@CPhoneyDSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCaps@CPhoneyDSound@@QAGJPAU_DSCAPS@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DuplicateSoundBuffer@CPhoneyDSound@@QAGJPAUIDirectSoundBuffer@@PAPAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCooperativeLevel@CPhoneyDSound@@QAGJPAUHWND__@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compact@CPhoneyDSound@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSpeakerConfig@CPhoneyDSound@@QAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSpeakerConfig@CPhoneyDSound@@QAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Initialize@CPhoneyDSound@@QAGJPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VerifyCertification@CPhoneyDSound@@QAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocSink@CPhoneyDSound@@UAGJPAUtWAVEFORMATEX@@PAPAUIDirectSoundConnect@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$TList@UTriggerInfo@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHead@?$TList@UTriggerInfo@@@@QBEPAV?$TListItem@UTriggerInfo@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CleanUp@?$TList@UTriggerInfo@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddHead@?$TList@UTriggerInfo@@@@QAEXPAV?$TListItem@UTriggerInfo@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$TList@ULyricInfo@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHead@?$TList@ULyricInfo@@@@QBEPAV?$TListItem@ULyricInfo@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CleanUp@?$TList@ULyricInfo@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddHead@?$TList@ULyricInfo@@@@QAEXPAV?$TListItem@ULyricInfo@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$TListItem@UTriggerInfo@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNext@?$TListItem@UTriggerInfo@@@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemValue@?$TListItem@UTriggerInfo@@@@QAEAAUTriggerInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$TListItem@ULyricInfo@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNext@?$TListItem@ULyricInfo@@@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemValue@?$TListItem@ULyricInfo@@@@QAEAAULyricInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ComPtr@UIDirectMusicLoader@@@SmartRef@@QAE@PAUIDirectMusicLoader@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$ComPtr@UIDirectMusicLoader@@@SmartRef@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$ComPtr@UIDirectMusicLoader@@@SmartRef@@QAEPAUIDirectMusicLoader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$ComPtr@UIDirectMusicLoader@@@SmartRef@@QAEPAPAUIDirectMusicLoader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EventCompare@?$CmpStruct@UTriggerInfo@@@@SGHAAUTriggerInfo@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EventCompare@?$CmpStruct@ULyricInfo@@@@SGHAAULyricInfo@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStandardStateData@ULyricInfo@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1LyricInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetNext@?$TListItem@UTriggerInfo@@@@QAEXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetNext@?$TListItem@ULyricInfo@@@@QAEXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ComPtr@UIDirectMusicLoader@@@SmartRef@@QAEAAV01@PAUIDirectMusicLoader@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MergeSort@?$TList@UTriggerInfo@@@@QAEXP6GHAAUTriggerInfo@@0@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reverse@?$TList@UTriggerInfo@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@UTriggerInfo@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MergeSort@?$TList@ULyricInfo@@@@QAEXP6GHAAULyricInfo@@0@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reverse@?$TList@ULyricInfo@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@ULyricInfo@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@UWaveItem@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@U_DMUS_IO_SEQ_ITEM@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@U_DMUS_IO_CURVE_ITEM@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@UParamInfo@CParamControlTrack@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@_J@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TListItem@UObjectInfo@CParamControlTrack@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ObjectInfo@CParamControlTrack@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MergeSort@?$TListItem@UTriggerInfo@@@@QAEPAV1@P6GHAAUTriggerInfo@@0@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MergeSort@?$TListItem@ULyricInfo@@@@QAEPAV1@P6GHAAULyricInfo@@0@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Divide@?$TListItem@UTriggerInfo@@@@AAEXAAPAV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Merge@?$TListItem@UTriggerInfo@@@@AAEPAV1@PAV1@P6GHAAUTriggerInfo@@1@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Divide@?$TListItem@ULyricInfo@@@@AAEXAAPAV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Merge@?$TListItem@ULyricInfo@@@@AAEPAV1@PAV1@P6GHAAULyricInfo@@1@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$TList@UParamInfo@CParamControlTrack@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Delete@?$TListItem@UParamInfo@CParamControlTrack@@@@SGXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$TListItem@UParamInfo@CParamControlTrack@@@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ParamInfo@CParamControlTrack@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_V@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1WaveItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1WString@SmartRef@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DJ@BKGKOLMN@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0LyricInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0WString@SmartRef@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1TriggerInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0TriggerInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Delete@?$TListItem@ULyricInfo@@@@SGXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$TListItem@ULyricInfo@@@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Delete@?$TListItem@UTriggerInfo@@@@SGXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$TListItem@UTriggerInfo@@@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CPhoneyDSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?AddRef@CPhoneyDSound@@UAGKXZ			; CPhoneyDSound::AddRef
PUBLIC	?Release@CPhoneyDSound@@UAGKXZ			; CPhoneyDSound::Release
PUBLIC	?AllocSink@CPhoneyDSound@@UAGJPAUtWAVEFORMATEX@@PAPAUIDirectSoundConnect@@@Z ; CPhoneyDSound::AllocSink
PUBLIC	??0CPhoneyDSound@@QAE@XZ			; CPhoneyDSound::CPhoneyDSound
PUBLIC	??_7CPhoneyDSound@@6B@				; CPhoneyDSound::`vftable'
PUBLIC	??0IDirectSoundPrivate@@QAE@XZ			; IDirectSoundPrivate::IDirectSoundPrivate
EXTRN	?QueryInterface@CPhoneyDSound@@UAGJABU_GUID@@PAPAX@Z:NEAR ; CPhoneyDSound::QueryInterface
;	COMDAT ??_7CPhoneyDSound@@6B@
; File c:\xbox\private\windows\directx\dmusic\dmime\phoneyds.cpp
CONST	SEGMENT
??_7CPhoneyDSound@@6B@ DD FLAT:?QueryInterface@CPhoneyDSound@@UAGJABU_GUID@@PAPAX@Z ; CPhoneyDSound::`vftable'
	DD	FLAT:?AddRef@CPhoneyDSound@@UAGKXZ
	DD	FLAT:?Release@CPhoneyDSound@@UAGKXZ
	DD	FLAT:?AllocSink@CPhoneyDSound@@UAGJPAUtWAVEFORMATEX@@PAPAUIDirectSoundConnect@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CPhoneyDSound@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CPhoneyDSound@@QAE@XZ PROC NEAR			; CPhoneyDSound::CPhoneyDSound, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0IDirectSoundPrivate@@QAE@XZ
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPhoneyDSound@@6B@

; 29   :     m_cRef = 0;

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 30   : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0CPhoneyDSound@@QAE@XZ ENDP				; CPhoneyDSound::CPhoneyDSound
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Odt
;	COMDAT ??0IDirectSoundPrivate@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0IDirectSoundPrivate@@QAE@XZ PROC NEAR		; IDirectSoundPrivate::IDirectSoundPrivate, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0IUnknown@@QAE@XZ
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0IDirectSoundPrivate@@QAE@XZ ENDP			; IDirectSoundPrivate::IDirectSoundPrivate
_TEXT	ENDS
PUBLIC	??1CPhoneyDSound@@QAE@XZ			; CPhoneyDSound::~CPhoneyDSound
; Function compile flags: /Odt
;	COMDAT ??1CPhoneyDSound@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CPhoneyDSound@@QAE@XZ PROC NEAR			; CPhoneyDSound::~CPhoneyDSound, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPhoneyDSound@@6B@

; 34   : }

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1CPhoneyDSound@@QAE@XZ ENDP				; CPhoneyDSound::~CPhoneyDSound
_TEXT	ENDS
EXTRN	__InterlockedIncrement@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?AddRef@CPhoneyDSound@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8
?AddRef@CPhoneyDSound@@UAGKXZ PROC NEAR			; CPhoneyDSound::AddRef, COMDAT

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 59   :     return InterlockedIncrement(&m_cRef);

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 __InterlockedIncrement@4

; 60   : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?AddRef@CPhoneyDSound@@UAGKXZ ENDP			; CPhoneyDSound::AddRef
_TEXT	ENDS
PUBLIC	??_GCPhoneyDSound@@QAEPAXI@Z			; CPhoneyDSound::`scalar deleting destructor'
EXTRN	__InterlockedDecrement@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?Release@CPhoneyDSound@@UAGKXZ
_TEXT	SEGMENT
tv72 = -12
$T69800 = -8
$T69799 = -4
_this$ = 8
?Release@CPhoneyDSound@@UAGKXZ PROC NEAR		; CPhoneyDSound::Release, COMDAT

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 64   :     if(!InterlockedDecrement(&m_cRef))

  00006	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00009	83 c0 04	 add	 eax, 4
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 __InterlockedDecrement@4
  00012	85 c0		 test	 eax, eax
  00014	75 2c		 jne	 SHORT $L69430

; 65   :     {
; 66   :         delete this;

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	89 4d f8	 mov	 DWORD PTR $T69800[ebp], ecx
  0001c	8b 55 f8	 mov	 edx, DWORD PTR $T69800[ebp]
  0001f	89 55 fc	 mov	 DWORD PTR $T69799[ebp], edx
  00022	83 7d fc 00	 cmp	 DWORD PTR $T69799[ebp], 0
  00026	74 0f		 je	 SHORT $L69801
  00028	6a 01		 push	 1
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR $T69799[ebp]
  0002d	e8 00 00 00 00	 call	 ??_GCPhoneyDSound@@QAEPAXI@Z
  00032	89 45 f4	 mov	 DWORD PTR tv72[ebp], eax
  00035	eb 07		 jmp	 SHORT $L69802
$L69801:
  00037	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$L69802:

; 67   :         return 0;

  0003e	33 c0		 xor	 eax, eax
  00040	eb 06		 jmp	 SHORT $L69429
$L69430:

; 68   :     }
; 69   : 
; 70   :     return m_cRef;

  00042	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L69429:

; 71   : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?Release@CPhoneyDSound@@UAGKXZ ENDP			; CPhoneyDSound::Release
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCPhoneyDSound@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4
___flags$ = 8
??_GCPhoneyDSound@@QAEPAXI@Z PROC NEAR			; CPhoneyDSound::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CPhoneyDSound@@QAE@XZ ; CPhoneyDSound::~CPhoneyDSound
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L69436
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L69436:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCPhoneyDSound@@QAEPAXI@Z ENDP			; CPhoneyDSound::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?CreateSoundBuffer@CPhoneyDSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z ; CPhoneyDSound::CreateSoundBuffer
PUBLIC	__GUID_00000000_0000_0000_0000_000000000000
EXTRN	?AddRef@CBuffer@@QAGKXZ:NEAR			; CBuffer::AddRef
EXTRN	??0CBuffer@@QAE@PAVCAudioSink@@PBU_DSBUFFERDESC@@PAKKABU_GUID@@@Z:NEAR ; CBuffer::CBuffer
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
CONST	SEGMENT
__GUID_00000000_0000_0000_0000_000000000000 DD 00H
	DW	00H
	DW	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?CreateSoundBuffer@CPhoneyDSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z
_TEXT	SEGMENT
tv74 = -12
$T69809 = -8
_pBuffer$ = -4
_this$ = 8
_pcDSBufferDesc$ = 12
_ppDSBuffer$ = 16
_pUnkOuter$ = 20
?CreateSoundBuffer@CPhoneyDSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z PROC NEAR ; CPhoneyDSound::CreateSoundBuffer, COMDAT

; 74   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 75   :     CBuffer *pBuffer = new CBuffer(NULL,NULL,NULL,0,GUID_NULL);

  00006	6a 60		 push	 96			; 00000060H
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4
  00010	89 45 f8	 mov	 DWORD PTR $T69809[ebp], eax
  00013	83 7d f8 00	 cmp	 DWORD PTR $T69809[ebp], 0
  00017	74 1a		 je	 SHORT $L69810
  00019	68 00 00 00 00	 push	 OFFSET FLAT:__GUID_00000000_0000_0000_0000_000000000000
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	8b 4d f8	 mov	 ecx, DWORD PTR $T69809[ebp]
  00029	e8 00 00 00 00	 call	 ??0CBuffer@@QAE@PAVCAudioSink@@PBU_DSBUFFERDESC@@PAKKABU_GUID@@@Z ; CBuffer::CBuffer
  0002e	89 45 f4	 mov	 DWORD PTR tv74[ebp], eax
  00031	eb 07		 jmp	 SHORT $L69811
$L69810:
  00033	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$L69811:
  0003a	8b 45 f4	 mov	 eax, DWORD PTR tv74[ebp]
  0003d	89 45 fc	 mov	 DWORD PTR _pBuffer$[ebp], eax

; 76   :     if (pBuffer)

  00040	83 7d fc 00	 cmp	 DWORD PTR _pBuffer$[ebp], 0
  00044	74 15		 je	 SHORT $L69447

; 77   :     {
; 78   :         pBuffer->AddRef();

  00046	8b 4d fc	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ?AddRef@CBuffer@@QAGKXZ	; CBuffer::AddRef

; 79   :         (*ppDSBuffer) = (LPDIRECTSOUNDBUFFER) pBuffer;

  0004f	8b 55 10	 mov	 edx, DWORD PTR _ppDSBuffer$[ebp]
  00052	8b 45 fc	 mov	 eax, DWORD PTR _pBuffer$[ebp]
  00055	89 02		 mov	 DWORD PTR [edx], eax

; 80   :         return S_OK;

  00057	33 c0		 xor	 eax, eax
  00059	eb 05		 jmp	 SHORT $L69442
$L69447:

; 81   :     }
; 82   :     return E_OUTOFMEMORY; 

  0005b	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
$L69442:

; 83   : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 10 00	 ret	 16			; 00000010H
?CreateSoundBuffer@CPhoneyDSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z ENDP ; CPhoneyDSound::CreateSoundBuffer
_TEXT	ENDS
PUBLIC	?GetCaps@CPhoneyDSound@@QAGJPAU_DSCAPS@@@Z	; CPhoneyDSound::GetCaps
; Function compile flags: /Odt
;	COMDAT ?GetCaps@CPhoneyDSound@@QAGJPAU_DSCAPS@@@Z
_TEXT	SEGMENT
_this$ = 8
_pDSCaps$ = 12
?GetCaps@CPhoneyDSound@@QAGJPAU_DSCAPS@@@Z PROC NEAR	; CPhoneyDSound::GetCaps, COMDAT

; 86   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 88   : }

  00008	5d		 pop	 ebp
  00009	c2 08 00	 ret	 8
?GetCaps@CPhoneyDSound@@QAGJPAU_DSCAPS@@@Z ENDP		; CPhoneyDSound::GetCaps
_TEXT	ENDS
PUBLIC	?DuplicateSoundBuffer@CPhoneyDSound@@QAGJPAUIDirectSoundBuffer@@PAPAU2@@Z ; CPhoneyDSound::DuplicateSoundBuffer
; Function compile flags: /Odt
;	COMDAT ?DuplicateSoundBuffer@CPhoneyDSound@@QAGJPAUIDirectSoundBuffer@@PAPAU2@@Z
_TEXT	SEGMENT
_this$ = 8
_pDSBufferOriginal$ = 12
_ppDSBufferDuplicate$ = 16
?DuplicateSoundBuffer@CPhoneyDSound@@QAGJPAUIDirectSoundBuffer@@PAPAU2@@Z PROC NEAR ; CPhoneyDSound::DuplicateSoundBuffer, COMDAT

; 91   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 93   : }

  00008	5d		 pop	 ebp
  00009	c2 0c 00	 ret	 12			; 0000000cH
?DuplicateSoundBuffer@CPhoneyDSound@@QAGJPAUIDirectSoundBuffer@@PAPAU2@@Z ENDP ; CPhoneyDSound::DuplicateSoundBuffer
_TEXT	ENDS
PUBLIC	?SetCooperativeLevel@CPhoneyDSound@@QAGJPAUHWND__@@K@Z ; CPhoneyDSound::SetCooperativeLevel
; Function compile flags: /Odt
;	COMDAT ?SetCooperativeLevel@CPhoneyDSound@@QAGJPAUHWND__@@K@Z
_TEXT	SEGMENT
_this$ = 8
_hwnd$ = 12
_dwLevel$ = 16
?SetCooperativeLevel@CPhoneyDSound@@QAGJPAUHWND__@@K@Z PROC NEAR ; CPhoneyDSound::SetCooperativeLevel, COMDAT

; 96   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 97   :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 98   : }

  00008	5d		 pop	 ebp
  00009	c2 0c 00	 ret	 12			; 0000000cH
?SetCooperativeLevel@CPhoneyDSound@@QAGJPAUHWND__@@K@Z ENDP ; CPhoneyDSound::SetCooperativeLevel
_TEXT	ENDS
PUBLIC	?Compact@CPhoneyDSound@@QAGJXZ			; CPhoneyDSound::Compact
; Function compile flags: /Odt
;	COMDAT ?Compact@CPhoneyDSound@@QAGJXZ
_TEXT	SEGMENT
_this$ = 8
?Compact@CPhoneyDSound@@QAGJXZ PROC NEAR		; CPhoneyDSound::Compact, COMDAT

; 101  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 103  : }

  00008	5d		 pop	 ebp
  00009	c2 04 00	 ret	 4
?Compact@CPhoneyDSound@@QAGJXZ ENDP			; CPhoneyDSound::Compact
_TEXT	ENDS
PUBLIC	?GetSpeakerConfig@CPhoneyDSound@@QAGJPAK@Z	; CPhoneyDSound::GetSpeakerConfig
; Function compile flags: /Odt
;	COMDAT ?GetSpeakerConfig@CPhoneyDSound@@QAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8
_pdwSpeakerConfig$ = 12
?GetSpeakerConfig@CPhoneyDSound@@QAGJPAK@Z PROC NEAR	; CPhoneyDSound::GetSpeakerConfig, COMDAT

; 106  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 107  :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 108  : }

  00008	5d		 pop	 ebp
  00009	c2 08 00	 ret	 8
?GetSpeakerConfig@CPhoneyDSound@@QAGJPAK@Z ENDP		; CPhoneyDSound::GetSpeakerConfig
_TEXT	ENDS
PUBLIC	?SetSpeakerConfig@CPhoneyDSound@@QAGJK@Z	; CPhoneyDSound::SetSpeakerConfig
; Function compile flags: /Odt
;	COMDAT ?SetSpeakerConfig@CPhoneyDSound@@QAGJK@Z
_TEXT	SEGMENT
_this$ = 8
_dwSpeakerConfig$ = 12
?SetSpeakerConfig@CPhoneyDSound@@QAGJK@Z PROC NEAR	; CPhoneyDSound::SetSpeakerConfig, COMDAT

; 111  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 112  :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 113  : }

  00008	5d		 pop	 ebp
  00009	c2 08 00	 ret	 8
?SetSpeakerConfig@CPhoneyDSound@@QAGJK@Z ENDP		; CPhoneyDSound::SetSpeakerConfig
_TEXT	ENDS
PUBLIC	?Initialize@CPhoneyDSound@@QAGJPBU_GUID@@@Z	; CPhoneyDSound::Initialize
; Function compile flags: /Odt
;	COMDAT ?Initialize@CPhoneyDSound@@QAGJPBU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8
_pcGuidDevice$ = 12
?Initialize@CPhoneyDSound@@QAGJPBU_GUID@@@Z PROC NEAR	; CPhoneyDSound::Initialize, COMDAT

; 116  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 118  : }

  00008	5d		 pop	 ebp
  00009	c2 08 00	 ret	 8
?Initialize@CPhoneyDSound@@QAGJPBU_GUID@@@Z ENDP	; CPhoneyDSound::Initialize
_TEXT	ENDS
PUBLIC	?VerifyCertification@CPhoneyDSound@@QAGJPAK@Z	; CPhoneyDSound::VerifyCertification
; Function compile flags: /Odt
;	COMDAT ?VerifyCertification@CPhoneyDSound@@QAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8
_pdwCertified$ = 12
?VerifyCertification@CPhoneyDSound@@QAGJPAK@Z PROC NEAR	; CPhoneyDSound::VerifyCertification, COMDAT

; 121  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 122  :     return E_NOTIMPL; 

  00003	b8 01 40 00 80	 mov	 eax, -2147467263	; 80004001H

; 123  : }

  00008	5d		 pop	 ebp
  00009	c2 08 00	 ret	 8
?VerifyCertification@CPhoneyDSound@@QAGJPAK@Z ENDP	; CPhoneyDSound::VerifyCertification
_TEXT	ENDS
EXTRN	??0CAudioSink@@QAE@PAUtWAVEFORMATEX@@@Z:NEAR	; CAudioSink::CAudioSink
EXTRN	_IID_IDirectSoundConnect:BYTE
; Function compile flags: /Odt
;	COMDAT ?AllocSink@CPhoneyDSound@@UAGJPAUtWAVEFORMATEX@@PAPAUIDirectSoundConnect@@@Z
_TEXT	SEGMENT
tv70 = -12
$T69839 = -8
_pSink$ = -4
_this$ = 8
_pwfxFormat$ = 12
_ppSinkConnect$ = 16
?AllocSink@CPhoneyDSound@@UAGJPAUtWAVEFORMATEX@@PAPAUIDirectSoundConnect@@@Z PROC NEAR ; CPhoneyDSound::AllocSink, COMDAT

; 127  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 128  :     CAudioSink *pSink = new CAudioSink(pwfxFormat);

  00006	68 b8 00 00 00	 push	 184			; 000000b8H
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4
  00013	89 45 f8	 mov	 DWORD PTR $T69839[ebp], eax
  00016	83 7d f8 00	 cmp	 DWORD PTR $T69839[ebp], 0
  0001a	74 11		 je	 SHORT $L69840
  0001c	8b 45 0c	 mov	 eax, DWORD PTR _pwfxFormat$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f8	 mov	 ecx, DWORD PTR $T69839[ebp]
  00023	e8 00 00 00 00	 call	 ??0CAudioSink@@QAE@PAUtWAVEFORMATEX@@@Z ; CAudioSink::CAudioSink
  00028	89 45 f4	 mov	 DWORD PTR tv70[ebp], eax
  0002b	eb 07		 jmp	 SHORT $L69841
$L69840:
  0002d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$L69841:
  00034	8b 4d f4	 mov	 ecx, DWORD PTR tv70[ebp]
  00037	89 4d fc	 mov	 DWORD PTR _pSink$[ebp], ecx

; 129  :     if (pSink)

  0003a	83 7d fc 00	 cmp	 DWORD PTR _pSink$[ebp], 0
  0003e	74 16		 je	 SHORT $L69500

; 130  :     {
; 131  :         return pSink->QueryInterface(IID_IDirectSoundConnect,(void **)ppSinkConnect);

  00040	8b 55 10	 mov	 edx, DWORD PTR _ppSinkConnect$[ebp]
  00043	52		 push	 edx
  00044	68 00 00 00 00	 push	 OFFSET FLAT:_IID_IDirectSoundConnect
  00049	8b 45 fc	 mov	 eax, DWORD PTR _pSink$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _pSink$[ebp]
  00051	52		 push	 edx
  00052	ff 11		 call	 DWORD PTR [ecx]
  00054	eb 05		 jmp	 SHORT $L69496
$L69500:

; 132  :     }
; 133  :     return E_OUTOFMEMORY;

  00056	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
$L69496:

; 134  : }

  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
?AllocSink@CPhoneyDSound@@UAGJPAUtWAVEFORMATEX@@PAPAUIDirectSoundConnect@@@Z ENDP ; CPhoneyDSound::AllocSink
_TEXT	ENDS
EXTRN	?DirectMusicAllocI@@YGPAXI@Z:NEAR		; DirectMusicAllocI
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dmusic\shared\xalloc.h
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_cb$ = 8
??2@YAPAXI@Z PROC NEAR					; operator new, COMDAT

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 13   :     return DirectMusicAllocI(cb);

  00003	8b 45 08	 mov	 eax, DWORD PTR _cb$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?DirectMusicAllocI@@YGPAXI@Z ; DirectMusicAllocI

; 14   : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
EXTRN	?DirectMusicFreeI@@YGXPAX@Z:NEAR		; DirectMusicFreeI
; Function compile flags: /Odt
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pv$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 18   :     DirectMusicFreeI(pv);

  00003	8b 45 08	 mov	 eax, DWORD PTR _pv$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?DirectMusicFreeI@@YGXPAX@Z ; DirectMusicFreeI

; 19   : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0IUnknown@@QAE@XZ PROC NEAR				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
END
