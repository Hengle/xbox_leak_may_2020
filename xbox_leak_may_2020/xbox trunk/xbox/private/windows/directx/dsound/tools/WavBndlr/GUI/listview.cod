; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\listview.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@ELIP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ListView_SelectItem@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ListView_ResizeColumns@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ListView_AutoSizeColumn@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ListView_AutoSizeColumns@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ListView_SetItemText
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ListView_SortCallback@@YGHJJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ListView_SortItems@24
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ListView_GetItemParam@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

CONST	SEGMENT
?dwMajor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01H	; `GetWaveBundlerVersion'::`2'::dwMajor
?dwMinor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 00H	; `GetWaveBundlerVersion'::`2'::dwMinor
?dwBuild@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01130H ; `GetWaveBundlerVersion'::`2'::dwBuild
?dwStateMask@?1??ListView_SelectItem@@9@16@4KB DD 03H	; `ListView_SelectItem'::`2'::dwStateMask
?nMarginWidth@?1??ListView_AutoSizeColumn@@9@8@4HB DD 07H ; `ListView_AutoSizeColumn'::`2'::nMarginWidth
CONST	ENDS
PUBLIC	_ListView_SelectItem@16
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\listview.cpp
;	COMDAT _ListView_SelectItem@16
_TEXT	SEGMENT
_hwnd$ = 8
_nItem$ = 12
_fSelected$ = 16
_fSingleSelect$ = 20
_nItemCount$ = -4
_i$ = -8
__ms_lvi$51341 = -48
__ms_lvi$51345 = -88
_ListView_SelectItem@16 PROC NEAR			; COMDAT

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H

; 56   :     static const DWORD      dwStateMask = LVIS_SELECTED | LVIS_FOCUSED;
; 57   :     int                     nItemCount;
; 58   :     int                     i;
; 59   :     
; 60   :     if(fSingleSelect)

  00006	83 7d 14 00	 cmp	 DWORD PTR _fSingleSelect$[ebp], 0
  0000a	74 5f		 je	 SHORT $L51333

; 61   :     {
; 62   :         nItemCount = ListView_GetItemCount(hwnd);

  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	68 04 10 00 00	 push	 4100			; 00001004H
  00015	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00018	50		 push	 eax
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	89 45 fc	 mov	 DWORD PTR _nItemCount$[ebp], eax

; 63   : 
; 64   :         for(i = 0; i < (int)nItemCount; i++)

  00022	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00029	eb 09		 jmp	 SHORT $L51336
$L51337:
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  0002e	83 c1 01	 add	 ecx, 1
  00031	89 4d f8	 mov	 DWORD PTR _i$[ebp], ecx
$L51336:
  00034	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  00037	3b 55 fc	 cmp	 edx, DWORD PTR _nItemCount$[ebp]
  0003a	7d 2f		 jge	 SHORT $L51338

; 65   :         {
; 66   :             if(i != (int)nItem)

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0003f	3b 45 0c	 cmp	 eax, DWORD PTR _nItem$[ebp]
  00042	74 25		 je	 SHORT $L51340

; 67   :             {
; 68   :                 ListView_SetItemState(hwnd, i, 0, dwStateMask);

  00044	c7 45 e0 03 00
	00 00		 mov	 DWORD PTR __ms_lvi$51341[ebp+16], 3
  0004b	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR __ms_lvi$51341[ebp+12], 0
  00052	8d 4d d0	 lea	 ecx, DWORD PTR __ms_lvi$51341[ebp]
  00055	51		 push	 ecx
  00056	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  00059	52		 push	 edx
  0005a	68 2b 10 00 00	 push	 4139			; 0000102bH
  0005f	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00062	50		 push	 eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L51340:

; 69   :             }
; 70   :         }

  00069	eb c0		 jmp	 SHORT $L51337
$L51338:
$L51333:

; 71   :     }
; 72   : 
; 73   :     ListView_SetItemState(hwnd, nItem, fSelected ? dwStateMask : 0, dwStateMask);

  0006b	c7 45 b8 03 00
	00 00		 mov	 DWORD PTR __ms_lvi$51345[ebp+16], 3
  00072	8b 4d 10	 mov	 ecx, DWORD PTR _fSelected$[ebp]
  00075	f7 d9		 neg	 ecx
  00077	1b c9		 sbb	 ecx, ecx
  00079	83 e1 03	 and	 ecx, 3
  0007c	89 4d b4	 mov	 DWORD PTR __ms_lvi$51345[ebp+12], ecx
  0007f	8d 55 a8	 lea	 edx, DWORD PTR __ms_lvi$51345[ebp]
  00082	52		 push	 edx
  00083	8b 45 0c	 mov	 eax, DWORD PTR _nItem$[ebp]
  00086	50		 push	 eax
  00087	68 2b 10 00 00	 push	 4139			; 0000102bH
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0008f	51		 push	 ecx
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 74   : }

  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 10 00	 ret	 16			; 00000010H
_ListView_SelectItem@16 ENDP
_TEXT	ENDS
PUBLIC	_ListView_ResizeColumns@8
; Function compile flags: /Odt
;	COMDAT _ListView_ResizeColumns@8
_TEXT	SEGMENT
_hwnd$ = 8
_cx$ = 12
_hwndHeader$ = -12
_nColumns$ = -4
_i$ = -8
_ListView_ResizeColumns@8 PROC NEAR			; COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 103  :     HWND                    hwndHeader;
; 104  :     int                     nColumns;
; 105  :     int                     i;
; 106  : 
; 107  :     hwndHeader = ListView_GetHeader(hwnd);

  00006	6a 00		 push	 0
  00008	6a 00		 push	 0
  0000a	68 1f 10 00 00	 push	 4127			; 0000101fH
  0000f	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00019	89 45 f4	 mov	 DWORD PTR _hwndHeader$[ebp], eax

; 108  :     nColumns = Header_GetItemCount(hwndHeader);

  0001c	6a 00		 push	 0
  0001e	6a 00		 push	 0
  00020	68 00 12 00 00	 push	 4608			; 00001200H
  00025	8b 4d f4	 mov	 ecx, DWORD PTR _hwndHeader$[ebp]
  00028	51		 push	 ecx
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0002f	89 45 fc	 mov	 DWORD PTR _nColumns$[ebp], eax

; 109  : 
; 110  :     for(i = 0; i < nColumns; i++)

  00032	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00039	eb 09		 jmp	 SHORT $L51358
$L51359:
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  0003e	83 c2 01	 add	 edx, 1
  00041	89 55 f8	 mov	 DWORD PTR _i$[ebp], edx
$L51358:
  00044	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00047	3b 45 fc	 cmp	 eax, DWORD PTR _nColumns$[ebp]
  0004a	7d 25		 jge	 SHORT $L51360

; 111  :     {
; 112  :         ListView_SetColumnWidth(hwnd, i, cx);

  0004c	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0004f	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00055	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0005b	51		 push	 ecx
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  0005f	52		 push	 edx
  00060	68 1e 10 00 00	 push	 4126			; 0000101eH
  00065	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 113  :     }

  0006f	eb ca		 jmp	 SHORT $L51359
$L51360:

; 114  : }

  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 08 00	 ret	 8
_ListView_ResizeColumns@8 ENDP
_TEXT	ENDS
PUBLIC	_ListView_AutoSizeColumn@8
; Function compile flags: /Odt
;	COMDAT _ListView_AutoSizeColumn@8
_TEXT	SEGMENT
_hwnd$ = 8
_nColumn$ = 12
_szText$ = -1024
_nLargestWidth$ = -1072
_nWidth$ = -1060
_nCount$ = -1068
_lvc$ = -1056
_i$ = -1064
__ms_lvi$51396 = -1112
_ListView_AutoSizeColumn@8 PROC NEAR			; COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 04 00
	00		 sub	 esp, 1112		; 00000458H

; 143  :     static const int        nMarginWidth    = 7;
; 144  :     CHAR                    szText[0x400];
; 145  :     int                     nLargestWidth;
; 146  :     int                     nWidth;
; 147  :     int                     nCount;
; 148  :     LVCOLUMN                lvc;
; 149  :     int                     i;
; 150  :     
; 151  :     //
; 152  :     // Get the width of the column header text
; 153  :     //
; 154  : 
; 155  :     lvc.mask = LVCF_TEXT;

  00009	c7 85 e0 fb ff
	ff 04 00 00 00	 mov	 DWORD PTR _lvc$[ebp], 4

; 156  :     lvc.pszText = szText;

  00013	8d 85 00 fc ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00019	89 85 ec fb ff
	ff		 mov	 DWORD PTR _lvc$[ebp+12], eax

; 157  :     lvc.cchTextMax = NUMELMS(szText);

  0001f	c7 85 f0 fb ff
	ff 00 04 00 00	 mov	 DWORD PTR _lvc$[ebp+16], 1024 ; 00000400H

; 158  :     
; 159  :     ListView_GetColumn(hwnd, nColumn, &lvc);

  00029	8d 8d e0 fb ff
	ff		 lea	 ecx, DWORD PTR _lvc$[ebp]
  0002f	51		 push	 ecx
  00030	8b 55 0c	 mov	 edx, DWORD PTR _nColumn$[ebp]
  00033	52		 push	 edx
  00034	68 19 10 00 00	 push	 4121			; 00001019H
  00039	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 160  : 
; 161  :     nLargestWidth = ListView_GetStringWidth(hwnd, szText);

  00043	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00049	51		 push	 ecx
  0004a	6a 00		 push	 0
  0004c	68 11 10 00 00	 push	 4113			; 00001011H
  00051	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00054	52		 push	 edx
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0005b	89 85 d0 fb ff
	ff		 mov	 DWORD PTR _nLargestWidth$[ebp], eax

; 162  : 
; 163  :     //
; 164  :     // Get the width of each item in the column
; 165  :     //
; 166  : 
; 167  :     nCount = ListView_GetItemCount(hwnd);

  00061	6a 00		 push	 0
  00063	6a 00		 push	 0
  00065	68 04 10 00 00	 push	 4100			; 00001004H
  0006a	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0006d	50		 push	 eax
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00074	89 85 d4 fb ff
	ff		 mov	 DWORD PTR _nCount$[ebp], eax

; 168  :     
; 169  :     for(i = 0; i < nCount; i++)

  0007a	c7 85 d8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$[ebp], 0
  00084	eb 0f		 jmp	 SHORT $L51393
$L51394:
  00086	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR _i$[ebp]
  0008c	83 c1 01	 add	 ecx, 1
  0008f	89 8d d8 fb ff
	ff		 mov	 DWORD PTR _i$[ebp], ecx
$L51393:
  00095	8b 95 d8 fb ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  0009b	3b 95 d4 fb ff
	ff		 cmp	 edx, DWORD PTR _nCount$[ebp]
  000a1	7d 79		 jge	 SHORT $L51395

; 170  :     {
; 171  :         ListView_GetItemText(hwnd, i, nColumn, szText, NUMELMS(szText));

  000a3	8b 45 0c	 mov	 eax, DWORD PTR _nColumn$[ebp]
  000a6	89 85 b0 fb ff
	ff		 mov	 DWORD PTR __ms_lvi$51396[ebp+8], eax
  000ac	c7 85 c0 fb ff
	ff 00 04 00 00	 mov	 DWORD PTR __ms_lvi$51396[ebp+24], 1024 ; 00000400H
  000b6	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  000bc	89 8d bc fb ff
	ff		 mov	 DWORD PTR __ms_lvi$51396[ebp+20], ecx
  000c2	8d 95 a8 fb ff
	ff		 lea	 edx, DWORD PTR __ms_lvi$51396[ebp]
  000c8	52		 push	 edx
  000c9	8b 85 d8 fb ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  000cf	50		 push	 eax
  000d0	68 2d 10 00 00	 push	 4141			; 0000102dH
  000d5	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  000d8	51		 push	 ecx
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 172  : 
; 173  :         if((nWidth = ListView_GetStringWidth(hwnd, szText)) > nLargestWidth)

  000df	8d 95 00 fc ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  000e5	52		 push	 edx
  000e6	6a 00		 push	 0
  000e8	68 11 10 00 00	 push	 4113			; 00001011H
  000ed	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000f0	50		 push	 eax
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000f7	89 85 dc fb ff
	ff		 mov	 DWORD PTR _nWidth$[ebp], eax
  000fd	8b 8d dc fb ff
	ff		 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00103	3b 8d d0 fb ff
	ff		 cmp	 ecx, DWORD PTR _nLargestWidth$[ebp]
  00109	7e 0c		 jle	 SHORT $L51403

; 174  :         {
; 175  :             nLargestWidth = nWidth;

  0010b	8b 95 dc fb ff
	ff		 mov	 edx, DWORD PTR _nWidth$[ebp]
  00111	89 95 d0 fb ff
	ff		 mov	 DWORD PTR _nLargestWidth$[ebp], edx
$L51403:

; 176  :         }
; 177  :     }

  00117	e9 6a ff ff ff	 jmp	 $L51394
$L51395:

; 178  : 
; 179  :     //
; 180  :     // Factor in the margins and set the column width
; 181  :     //
; 182  : 
; 183  :     ListView_SetColumnWidth(hwnd, nColumn, nLargestWidth + (nMarginWidth * 2));

  0011c	8b 85 d0 fb ff
	ff		 mov	 eax, DWORD PTR _nLargestWidth$[ebp]
  00122	83 c0 0e	 add	 eax, 14			; 0000000eH
  00125	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0012a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0012f	50		 push	 eax
  00130	8b 4d 0c	 mov	 ecx, DWORD PTR _nColumn$[ebp]
  00133	51		 push	 ecx
  00134	68 1e 10 00 00	 push	 4126			; 0000101eH
  00139	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  0013c	52		 push	 edx
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 184  : }

  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 08 00	 ret	 8
_ListView_AutoSizeColumn@8 ENDP
_TEXT	ENDS
PUBLIC	_ListView_AutoSizeColumns@4
; Function compile flags: /Odt
;	COMDAT _ListView_AutoSizeColumns@4
_TEXT	SEGMENT
_hwnd$ = 8
_hwndHeader$ = -12
_nCount$ = -8
_i$ = -4
_ListView_AutoSizeColumns@4 PROC NEAR			; COMDAT

; 210  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 211  :     HWND                    hwndHeader;
; 212  :     int                     nCount;
; 213  :     int                     i;
; 214  :     
; 215  :     hwndHeader = ListView_GetHeader(hwnd);

  00006	6a 00		 push	 0
  00008	6a 00		 push	 0
  0000a	68 1f 10 00 00	 push	 4127			; 0000101fH
  0000f	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00019	89 45 f4	 mov	 DWORD PTR _hwndHeader$[ebp], eax

; 216  :     nCount = Header_GetItemCount(hwndHeader);

  0001c	6a 00		 push	 0
  0001e	6a 00		 push	 0
  00020	68 00 12 00 00	 push	 4608			; 00001200H
  00025	8b 4d f4	 mov	 ecx, DWORD PTR _hwndHeader$[ebp]
  00028	51		 push	 ecx
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0002f	89 45 f8	 mov	 DWORD PTR _nCount$[ebp], eax

; 217  : 
; 218  :     for(i = 0; i < nCount; i++)

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00039	eb 09		 jmp	 SHORT $L51423
$L51424:
  0003b	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  0003e	83 c2 01	 add	 edx, 1
  00041	89 55 fc	 mov	 DWORD PTR _i$[ebp], edx
$L51423:
  00044	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00047	3b 45 f8	 cmp	 eax, DWORD PTR _nCount$[ebp]
  0004a	7d 0f		 jge	 SHORT $L51425

; 219  :     {
; 220  :         ListView_AutoSizeColumn(hwnd, i);

  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0004f	51		 push	 ecx
  00050	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00053	52		 push	 edx
  00054	e8 00 00 00 00	 call	 _ListView_AutoSizeColumn@8

; 221  :     }

  00059	eb e0		 jmp	 SHORT $L51424
$L51425:

; 222  : }

  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
_ListView_AutoSizeColumns@4 ENDP
_TEXT	ENDS
PUBLIC	_ListView_SetItemText
EXTRN	_vsprintf:NEAR
; Function compile flags: /Odt
;	COMDAT _ListView_SetItemText
_TEXT	SEGMENT
_hwnd$ = 8
_nItem$ = 12
_nSubItem$ = 16
_pszFormat$ = 20
_szText$ = -264
_lvi$ = -304
_va$ = -4
_ListView_SetItemText PROC NEAR				; COMDAT

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H

; 257  :     CHAR                    szText[0x100];
; 258  :     LVITEM                  lvi;
; 259  :     va_list                 va;
; 260  : 
; 261  :     va_start(va, pszFormat);

  00009	8d 45 18	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR _va$[ebp], eax

; 262  :     vsprintf(szText, pszFormat, va);

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _va$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 14	 mov	 edx, DWORD PTR _pszFormat$[ebp]
  00016	52		 push	 edx
  00017	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _vsprintf
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 263  :     va_end(va);

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _va$[ebp], 0

; 264  : 
; 265  :     lvi.mask = LVIF_TEXT;

  0002d	c7 85 d0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _lvi$[ebp], 1

; 266  :     lvi.iItem = nItem;

  00037	8b 4d 0c	 mov	 ecx, DWORD PTR _nItem$[ebp]
  0003a	89 8d d4 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+4], ecx

; 267  :     lvi.iSubItem = nSubItem;

  00040	8b 55 10	 mov	 edx, DWORD PTR _nSubItem$[ebp]
  00043	89 95 d8 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+8], edx

; 268  :     lvi.pszText = szText;

  00049	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0004f	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+20], eax

; 269  :     
; 270  :     return ListView_SetItem(hwnd, &lvi);

  00055	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _lvi$[ebp]
  0005b	51		 push	 ecx
  0005c	6a 00		 push	 0
  0005e	68 06 10 00 00	 push	 4102			; 00001006H
  00063	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00066	52		 push	 edx
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 271  : }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_ListView_SetItemText ENDP
_TEXT	ENDS
PUBLIC	?ListView_SortCallback@@YGHJJJ@Z		; ListView_SortCallback
EXTRN	_strcmp:NEAR
EXTRN	_atoi:NEAR
; Function compile flags: /Odt
;	COMDAT ?ListView_SortCallback@@YGHJJJ@Z
_TEXT	SEGMENT
_nItem0$ = 8
_nItem1$ = 12
_lContext$ = 16
_pContext$ = -4
_szText$ = -2056
_nValue$ = -2064
_nResult$ = -2068
__ms_lvi$51452 = -2108
__ms_lvi$51456 = -2148
?ListView_SortCallback@@YGHJJJ@Z PROC NEAR		; ListView_SortCallback, COMDAT

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 64 08 00
	00		 sub	 esp, 2148		; 00000864H

; 304  :     LPCLVSORTITEMDATA       pContext            = (LPCLVSORTITEMDATA)lContext;

  00009	8b 45 10	 mov	 eax, DWORD PTR _lContext$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _pContext$[ebp], eax

; 305  :     CHAR                    szText[2][0x400];
; 306  :     INT                     nValue[2];
; 307  :     int                     nResult;
; 308  :     
; 309  :     ListView_GetItemText(pContext->hwnd, nItem0, pContext->nSubItem, szText[0], NUMELMS(szText[0]));

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 95 cc f7 ff
	ff		 mov	 DWORD PTR __ms_lvi$51452[ebp+8], edx
  0001b	c7 85 dc f7 ff
	ff 00 04 00 00	 mov	 DWORD PTR __ms_lvi$51452[ebp+24], 1024 ; 00000400H
  00025	8d 85 f8 f7 ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0002b	89 85 d8 f7 ff
	ff		 mov	 DWORD PTR __ms_lvi$51452[ebp+20], eax
  00031	8d 8d c4 f7 ff
	ff		 lea	 ecx, DWORD PTR __ms_lvi$51452[ebp]
  00037	51		 push	 ecx
  00038	8b 55 08	 mov	 edx, DWORD PTR _nItem0$[ebp]
  0003b	52		 push	 edx
  0003c	68 2d 10 00 00	 push	 4141			; 0000102dH
  00041	8b 45 fc	 mov	 eax, DWORD PTR _pContext$[ebp]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	51		 push	 ecx
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 310  :     ListView_GetItemText(pContext->hwnd, nItem1, pContext->nSubItem, szText[1], NUMELMS(szText[1]));

  0004d	8b 55 fc	 mov	 edx, DWORD PTR _pContext$[ebp]
  00050	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00053	89 85 a4 f7 ff
	ff		 mov	 DWORD PTR __ms_lvi$51456[ebp+8], eax
  00059	c7 85 b4 f7 ff
	ff 00 04 00 00	 mov	 DWORD PTR __ms_lvi$51456[ebp+24], 1024 ; 00000400H
  00063	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp+1024]
  00069	89 8d b0 f7 ff
	ff		 mov	 DWORD PTR __ms_lvi$51456[ebp+20], ecx
  0006f	8d 95 9c f7 ff
	ff		 lea	 edx, DWORD PTR __ms_lvi$51456[ebp]
  00075	52		 push	 edx
  00076	8b 45 0c	 mov	 eax, DWORD PTR _nItem1$[ebp]
  00079	50		 push	 eax
  0007a	68 2d 10 00 00	 push	 4141			; 0000102dH
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00082	8b 11		 mov	 edx, DWORD PTR [ecx]
  00084	52		 push	 edx
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 311  : 
; 312  :     if(pContext->fString)

  0008b	8b 45 fc	 mov	 eax, DWORD PTR _pContext$[ebp]
  0008e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00092	74 1e		 je	 SHORT $L51460

; 313  :     {
; 314  :         nResult = strcmp(szText[0], szText[1]);

  00094	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp+1024]
  0009a	51		 push	 ecx
  0009b	8d 95 f8 f7 ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 _strcmp
  000a7	83 c4 08	 add	 esp, 8
  000aa	89 85 ec f7 ff
	ff		 mov	 DWORD PTR _nResult$[ebp], eax

; 315  :     }
; 316  :     else

  000b0	eb 3c		 jmp	 SHORT $L51461
$L51460:

; 317  :     {
; 318  :         nValue[0] = atoi(szText[0]);

  000b2	8d 85 f8 f7 ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 _atoi
  000be	83 c4 04	 add	 esp, 4
  000c1	89 85 f0 f7 ff
	ff		 mov	 DWORD PTR _nValue$[ebp], eax

; 319  :         nValue[1] = atoi(szText[1]);

  000c7	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp+1024]
  000cd	51		 push	 ecx
  000ce	e8 00 00 00 00	 call	 _atoi
  000d3	83 c4 04	 add	 esp, 4
  000d6	89 85 f4 f7 ff
	ff		 mov	 DWORD PTR _nValue$[ebp+4], eax

; 320  : 
; 321  :         nResult = nValue[0] - nValue[1];

  000dc	8b 95 f0 f7 ff
	ff		 mov	 edx, DWORD PTR _nValue$[ebp]
  000e2	2b 95 f4 f7 ff
	ff		 sub	 edx, DWORD PTR _nValue$[ebp+4]
  000e8	89 95 ec f7 ff
	ff		 mov	 DWORD PTR _nResult$[ebp], edx
$L51461:

; 322  :     }        
; 323  : 
; 324  :     if(!pContext->fAscending)

  000ee	8b 45 fc	 mov	 eax, DWORD PTR _pContext$[ebp]
  000f1	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  000f5	75 0e		 jne	 SHORT $L51462

; 325  :     {
; 326  :         nResult = -nResult;

  000f7	8b 8d ec f7 ff
	ff		 mov	 ecx, DWORD PTR _nResult$[ebp]
  000fd	f7 d9		 neg	 ecx
  000ff	89 8d ec f7 ff
	ff		 mov	 DWORD PTR _nResult$[ebp], ecx
$L51462:

; 327  :     }
; 328  : 
; 329  :     if((nResult > 0) && pContext->pfnCallback)

  00105	83 bd ec f7 ff
	ff 00		 cmp	 DWORD PTR _nResult$[ebp], 0
  0010c	7e 24		 jle	 SHORT $L51463
  0010e	8b 55 fc	 mov	 edx, DWORD PTR _pContext$[ebp]
  00111	83 7a 10 00	 cmp	 DWORD PTR [edx+16], 0
  00115	74 1b		 je	 SHORT $L51463

; 330  :     {
; 331  :         pContext->pfnCallback(pContext->hwnd, nItem0, nItem1, pContext->pvContext);

  00117	8b 45 fc	 mov	 eax, DWORD PTR _pContext$[ebp]
  0011a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0011d	51		 push	 ecx
  0011e	8b 55 0c	 mov	 edx, DWORD PTR _nItem1$[ebp]
  00121	52		 push	 edx
  00122	8b 45 08	 mov	 eax, DWORD PTR _nItem0$[ebp]
  00125	50		 push	 eax
  00126	8b 4d fc	 mov	 ecx, DWORD PTR _pContext$[ebp]
  00129	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012b	52		 push	 edx
  0012c	8b 45 fc	 mov	 eax, DWORD PTR _pContext$[ebp]
  0012f	ff 50 10	 call	 DWORD PTR [eax+16]
$L51463:

; 332  :     }
; 333  : 
; 334  :     return nResult;

  00132	8b 85 ec f7 ff
	ff		 mov	 eax, DWORD PTR _nResult$[ebp]

; 335  : }

  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 0c 00	 ret	 12			; 0000000cH
?ListView_SortCallback@@YGHJJJ@Z ENDP			; ListView_SortCallback
_TEXT	ENDS
PUBLIC	_ListView_SortItems@24
; Function compile flags: /Odt
;	COMDAT _ListView_SortItems@24
_TEXT	SEGMENT
_hwnd$ = 8
_nSubItem$ = 12
_fString$ = 16
_fAscending$ = 20
_pfnCallback$ = 24
_pvContext$ = 28
_data$ = -24
_ListView_SortItems@24 PROC NEAR			; COMDAT

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 374  :     LVSORTITEMDATA          data;
; 375  : 
; 376  :     data.hwnd = hwnd;

  00006	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00009	89 45 e8	 mov	 DWORD PTR _data$[ebp], eax

; 377  :     data.nSubItem = nSubItem;

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _nSubItem$[ebp]
  0000f	89 4d ec	 mov	 DWORD PTR _data$[ebp+4], ecx

; 378  :     data.fString = fString;

  00012	8b 55 10	 mov	 edx, DWORD PTR _fString$[ebp]
  00015	89 55 f0	 mov	 DWORD PTR _data$[ebp+8], edx

; 379  :     data.fAscending = fAscending;

  00018	8b 45 14	 mov	 eax, DWORD PTR _fAscending$[ebp]
  0001b	89 45 f4	 mov	 DWORD PTR _data$[ebp+12], eax

; 380  :     data.pfnCallback = pfnCallback;

  0001e	8b 4d 18	 mov	 ecx, DWORD PTR _pfnCallback$[ebp]
  00021	89 4d f8	 mov	 DWORD PTR _data$[ebp+16], ecx

; 381  :     data.pvContext = pvContext;

  00024	8b 55 1c	 mov	 edx, DWORD PTR _pvContext$[ebp]
  00027	89 55 fc	 mov	 DWORD PTR _data$[ebp+20], edx

; 382  :     
; 383  :     return ListView_SortItemsEx(hwnd, ListView_SortCallback, (LPARAM)&data);

  0002a	68 00 00 00 00	 push	 OFFSET FLAT:?ListView_SortCallback@@YGHJJJ@Z ; ListView_SortCallback
  0002f	8d 45 e8	 lea	 eax, DWORD PTR _data$[ebp]
  00032	50		 push	 eax
  00033	68 51 10 00 00	 push	 4177			; 00001051H
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0003b	51		 push	 ecx
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 384  : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 18 00	 ret	 24			; 00000018H
_ListView_SortItems@24 ENDP
_TEXT	ENDS
PUBLIC	_ListView_GetItemParam@8
; Function compile flags: /Odt
;	COMDAT _ListView_GetItemParam@8
_TEXT	SEGMENT
_hwnd$ = 8
_nItem$ = 12
_lvi$ = -40
_ListView_GetItemParam@8 PROC NEAR			; COMDAT

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H

; 413  :     LVITEM                  lvi;
; 414  : 
; 415  :     lvi.mask = LVIF_PARAM;

  00006	c7 45 d8 04 00
	00 00		 mov	 DWORD PTR _lvi$[ebp], 4

; 416  :     lvi.iItem = nItem;

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _nItem$[ebp]
  00010	89 45 dc	 mov	 DWORD PTR _lvi$[ebp+4], eax

; 417  :     lvi.iSubItem = 0;

  00013	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _lvi$[ebp+8], 0

; 418  : 
; 419  :     if(!ListView_GetItem(hwnd, &lvi))

  0001a	8d 4d d8	 lea	 ecx, DWORD PTR _lvi$[ebp]
  0001d	51		 push	 ecx
  0001e	6a 00		 push	 0
  00020	68 05 10 00 00	 push	 4101			; 00001005H
  00025	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00028	52		 push	 edx
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0002f	85 c0		 test	 eax, eax
  00031	75 04		 jne	 SHORT $L51487

; 420  :     {
; 421  :         return 0;

  00033	33 c0		 xor	 eax, eax
  00035	eb 03		 jmp	 SHORT $L51482
$L51487:

; 422  :     }
; 423  : 
; 424  :     return lvi.lParam;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _lvi$[ebp+32]
$L51482:

; 425  : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
_ListView_GetItemParam@8 ENDP
_TEXT	ENDS
END
