; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@ELIP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08POFP@?5?$CIdebug?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JDPP@XAUD?$CBdisconnect?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@EFNC@Wave?5Bundler?5GUI?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DD@OCIN@Software?2Microsoft?2Microsoft?5Xbo@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@ONMM@Window?5Placement?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CE@CBIO@nCommandId?5?$DM?5NUMELMS?$CIm_aColumnDa@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@NFAI@SysListView32?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@BJDK@msctls_statusbar32?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@DDID@XDK?5version?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@ONNI@Bad?5item?5data?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@MDEA@CGuiWaveBankProject?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DL@CAJC@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EF@INBG@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@BPPI@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EE@NLLL@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@HCFJ@Not?5all?5of?5the?5selected?5entries?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06JCGL@pEntry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@ICAK@Processing?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@CHBE@Save?5changes?5to?5?$CFs?$DP?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@PLIP@New?5Project?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02IGCE@?5?$CK?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@IKME@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_A@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CF@MPPP@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_8@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@NBKI@CMainWindow?3?3OnAudition?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@BJC@Can?8t?5connect?5to?5audio?5console?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@NFFB@CMainWindow?3?3OnCancelAudition?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@OPDH@XAUD?$CBWaveBank?4StopAll?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@LPKH@XAUD?$CBconnect?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBankCallback@@UAEHII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBankCallback@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseBank@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBankCallback@@UAEXPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWaveBundlerVersion@@YGXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@@UAEHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@@UAEHII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableAccelerators@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DebugCallback@CWindow@@SGXKPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOk@CDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCancel@CDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMainWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainWindow@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankCallback@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainWindow@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CMainWindow@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CMainWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateStatusBar@CMainWindow@@MAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CMainWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CMainWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CMainWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnExit@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAbout@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CMainWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnToolTipDisplayInfo@CMainWindow@@UAEXPAUtagNMTTDISPINFOA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnListViewItemChanged@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnBankListItemStateChange@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEntryListItemStateChange@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnListViewColumnClick@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnListViewBeginLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnListViewEndLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CMainWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CMainWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNewProject@CMainWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNewBank@CMainWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRemoveBank@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNewEntry@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRemoveEntry@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnConvert@CMainWindow@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGenerate@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginEntry@CMainWindow@@UAEHPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSaveProject@CMainWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOpenProject@CMainWindow@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDelete@CMainWindow@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRename@CMainWindow@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSelectAll@CMainWindow@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CMainWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckDirty@CMainWindow@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeDirty@CMainWindow@@MAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateAppTitle@CMainWindow@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCommandState@CMainWindow@@MAEXIHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBankCommandStates@CMainWindow@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetEntryCommandStates@CMainWindow@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCommandStates@CMainWindow@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRefresh@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnAudition@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCancelAudition@CMainWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConnectRemote@CMainWindow@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAboutDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAboutDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAboutDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CAboutDialog@@UAEHPAVCWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CAboutDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CWaveBankCallback@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAboutDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainWindow@@6BCWaveBankCallback@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMainWindow@@6BCWindow@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BE@CHBE@Save?5changes?5to?5?$CFs?$DP?$AA@ ; `string'
PUBLIC	??_C@_0M@PLIP@New?5Project?$AA@			; `string'
PUBLIC	?g_szAppTitle@@3PADA				; g_szAppTitle
PUBLIC	_g_hwndMain
PUBLIC	_g_pszAppTitle
PUBLIC	_g_hInstance
PUBLIC	??_C@_0DL@CAJC@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `string'
PUBLIC	??_C@_0EF@INBG@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `string'
PUBLIC	??_C@_0DJ@BPPI@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `string'
PUBLIC	??_C@_0EE@NLLL@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `string'
PUBLIC	??_C@_0DJ@HCFJ@Not?5all?5of?5the?5selected?5entries?5@ ; `string'
_BSS	SEGMENT
?g_szAppTitle@@3PADA DB 0100H DUP (?)			; g_szAppTitle
_g_hwndMain DD	01H DUP (?)
_g_hInstance DD	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?dwMajor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01H	; `GetWaveBundlerVersion'::`2'::dwMajor
?dwMinor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 00H	; `GetWaveBundlerVersion'::`2'::dwMinor
?dwBuild@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01130H ; `GetWaveBundlerVersion'::`2'::dwBuild
CONST	ENDS
_DATA	SEGMENT
_g_pszAppTitle DD FLAT:?g_szAppTitle@@3PADA
_DATA	ENDS
CONST	SEGMENT
?dwStyle@?1??CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z@4KB DD 050000309H ; `CMainWindow::CreateListView'::`2'::dwStyle
?dwStyleEx@?1??CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z@4KB DD 0200H ; `CMainWindow::CreateListView'::`2'::dwStyleEx
?dwLvStyleEx@?1??CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z@4KB DD 04020H ; `CMainWindow::CreateListView'::`2'::dwLvStyleEx
?aButtons@?1??CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ@4QBU_TBBUTTON@@B DD 00H ; `CMainWindow::CreateToolBar'::`2'::aButtons
	DD	0e100H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DB	04H
	DB	01H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	01H
	DD	0e101H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	02H
	DD	0e103H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DB	04H
	DB	01H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	03H
	DD	09c47H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	04H
	DD	09c49H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DB	04H
	DB	01H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	06H
	DD	09c5bH
	DB	04H
	DB	02H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	07H
	DD	09c5aH
	DB	04H
	DB	02H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DB	04H
	DB	01H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	08H
	DD	09c5eH
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	09H
	DD	09c60H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DB	04H
	DB	01H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	05H
	DD	09c4eH
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
?dwStyle@?1??CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ@4KB DD 050008901H ; `CMainWindow::CreateToolBar'::`2'::dwStyle
?dwStyle@?1??CreateStatusBar@CMainWindow@@MAEPAUHWND__@@XZ@4KB DD 050000103H ; `CMainWindow::CreateStatusBar'::`2'::dwStyle
?nMargin@?1??OnSize@CMainWindow@@UAEHKHHPAJ@Z@4HB DD 07H ; `CMainWindow::OnSize'::`2'::nMargin
?nBankListPercent@?1??OnSize@CMainWindow@@UAEHKHHPAJ@Z@4HB DD 023H ; `CMainWindow::OnSize'::`2'::nBankListPercent
CONST	ENDS
;	COMDAT ??_C@_0DL@CAJC@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT
??_C@_0DL@CAJC@Are?5you?5sure?5you?5want?5to?5remove?5@ DB 'Are you sure '
	DB	'you want to remove the bank from the project?', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszSingle@?1??OnRemoveBank@CMainWindow@@UAEXXZ@4QBDB DD FLAT:??_C@_0DL@CAJC@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `CMainWindow::OnRemoveBank'::`2'::pszSingle
CONST	ENDS
;	COMDAT ??_C@_0EF@INBG@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT
??_C@_0EF@INBG@Are?5you?5sure?5you?5want?5to?5remove?5@ DB 'Are you sure '
	DB	'you want to remove the selected banks from the project?', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszMultiple@?1??OnRemoveBank@CMainWindow@@UAEXXZ@4QBDB DD FLAT:??_C@_0EF@INBG@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `CMainWindow::OnRemoveBank'::`2'::pszMultiple
CONST	ENDS
;	COMDAT ??_C@_0DJ@BPPI@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT
??_C@_0DJ@BPPI@Are?5you?5sure?5you?5want?5to?5remove?5@ DB 'Are you sure '
	DB	'you want to remove the entry from the bank?', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszSingle@?1??OnRemoveEntry@CMainWindow@@UAEXXZ@4QBDB DD FLAT:??_C@_0DJ@BPPI@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `CMainWindow::OnRemoveEntry'::`2'::pszSingle
CONST	ENDS
;	COMDAT ??_C@_0EE@NLLL@Are?5you?5sure?5you?5want?5to?5remove?5@
CONST	SEGMENT
??_C@_0EE@NLLL@Are?5you?5sure?5you?5want?5to?5remove?5@ DB 'Are you sure '
	DB	'you want to remove the selected entries from the bank?', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszMultiple@?1??OnRemoveEntry@CMainWindow@@UAEXXZ@4QBDB DD FLAT:??_C@_0EE@NLLL@Are?5you?5sure?5you?5want?5to?5remove?5@ ; `CMainWindow::OnRemoveEntry'::`2'::pszMultiple
CONST	ENDS
;	COMDAT ??_C@_0DJ@HCFJ@Not?5all?5of?5the?5selected?5entries?5@
CONST	SEGMENT
??_C@_0DJ@HCFJ@Not?5all?5of?5the?5selected?5entries?5@ DB 'Not all of the'
	DB	' selected entries are able to be converted', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszConfusion@?1??OnConvert@CMainWindow@@UAEXK@Z@4QBDB DD FLAT:??_C@_0DJ@HCFJ@Not?5all?5of?5the?5selected?5entries?5@ ; `CMainWindow::OnConvert'::`2'::pszConfusion
CONST	ENDS
;	COMDAT ??_C@_0BE@CHBE@Save?5changes?5to?5?$CFs?$DP?$AA@
CONST	SEGMENT
??_C@_0BE@CHBE@Save?5changes?5to?5?$CFs?$DP?$AA@ DB 'Save changes to %s?', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszMessage@?1??CheckDirty@CMainWindow@@MAEHXZ@4QBDB DD FLAT:??_C@_0BE@CHBE@Save?5changes?5to?5?$CFs?$DP?$AA@ ; `CMainWindow::CheckDirty'::`2'::pszMessage
CONST	ENDS
;	COMDAT ??_C@_0M@PLIP@New?5Project?$AA@
CONST	SEGMENT
??_C@_0M@PLIP@New?5Project?$AA@ DB 'New Project', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
?pszNoName@?1??CheckDirty@CMainWindow@@MAEHXZ@4QBDB DD FLAT:??_C@_0M@PLIP@New?5Project?$AA@ ; `CMainWindow::CheckDirty'::`2'::pszNoName
?adwMenuSelected@?1??SetCommandState@CMainWindow@@MAEXIHH@Z@4QBKB DD 01H ; `CMainWindow::SetCommandState'::`2'::adwMenuSelected
	DD	00H
?adwCheckState@?1??SetCommandState@CMainWindow@@MAEXIHH@Z@4QBKB DD 00H ; `CMainWindow::SetCommandState'::`2'::adwCheckState
	DD	08H
CONST	ENDS
PUBLIC	_WinMain@16
PUBLIC	??0CMainWindow@@QAE@XZ				; CMainWindow::CMainWindow
PUBLIC	??1CMainWindow@@UAE@XZ				; CMainWindow::~CMainWindow
PUBLIC	?Create@CMainWindow@@UAEHXZ			; CMainWindow::Create
PUBLIC	?OnOpenProject@CMainWindow@@UAEXPBD@Z		; CMainWindow::OnOpenProject
PUBLIC	??_C@_08POFP@?5?$CIdebug?$CJ?$AA@		; `string'
PUBLIC	?DebugCallback@CWindow@@SGXKPBD@Z		; CWindow::DebugCallback
EXTRN	?m_pfnDpfCallback@CDebug@DirectSound@@2P6GXKPBD@ZA:DWORD ; DirectSound::CDebug::m_pfnDpfCallback
EXTRN	_strcat:NEAR
EXTRN	?PumpMessages@CWindow@@UAEXXZ:NEAR		; CWindow::PumpMessages
EXTRN	__imp__LoadStringA@16:NEAR
EXTRN	__imp__InitCommonControlsEx@4:NEAR
;	COMDAT ??_C@_08POFP@?5?$CIdebug?$CJ?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
CONST	SEGMENT
??_C@_08POFP@?5?$CIdebug?$CJ?$AA@ DB ' (debug)', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_hInstance$ = 8
_pszCmdLine$ = 16
_icc$ = -280
_Window$ = -1440
_fSuccess$ = -1444
$T52383 = -1448
_WinMain@16 PROC NEAR					; COMDAT

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 05 00
	00		 sub	 esp, 1448		; 000005a8H

; 52   :     INITCOMMONCONTROLSEX    icc;
; 53   :     CMainWindow             Window;

  00009	8d 8d 60 fa ff
	ff		 lea	 ecx, DWORD PTR _Window$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CMainWindow@@QAE@XZ	; CMainWindow::CMainWindow

; 54   :     BOOL                    fSuccess;
; 55   :     CHAR                    szPath[MAX_PATH];
; 56   :     UINT                    a, b;
; 57   : 
; 58   :     //
; 59   :     // Initialize globals
; 60   :     //
; 61   :     
; 62   :     g_hInstance = hInstance;

  00014	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00017	a3 00 00 00 00	 mov	 DWORD PTR _g_hInstance, eax

; 63   :     CDebug::m_pfnDpfCallback = CWindow::DebugCallback;

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pfnDpfCallback@CDebug@DirectSound@@2P6GXKPBD@ZA, OFFSET FLAT:?DebugCallback@CWindow@@SGXKPBD@Z ; DirectSound::CDebug::m_pfnDpfCallback, CWindow::DebugCallback

; 64   : 
; 65   :     //
; 66   :     // Initialize the common controls library
; 67   :     //
; 68   :     
; 69   :     icc.dwSize = sizeof(icc);

  00026	c7 85 e8 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR _icc$[ebp], 8

; 70   :     icc.dwICC = ICC_WIN95_CLASSES;

  00030	c7 85 ec fe ff
	ff ff 00 00 00	 mov	 DWORD PTR _icc$[ebp+4], 255 ; 000000ffH

; 71   :     
; 72   :     fSuccess = InitCommonControlsEx(&icc);

  0003a	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _icc$[ebp]
  00040	51		 push	 ecx
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitCommonControlsEx@4
  00047	89 85 5c fa ff
	ff		 mov	 DWORD PTR _fSuccess$[ebp], eax

; 73   : 
; 74   :     //
; 75   :     // Load the application title
; 76   :     //
; 77   : 
; 78   :     LoadString(hInstance, IDS_APPTITLE, g_szAppTitle, NUMELMS(g_szAppTitle));

  0004d	68 00 01 00 00	 push	 256			; 00000100H
  00052	68 00 00 00 00	 push	 OFFSET FLAT:?g_szAppTitle@@3PADA ; g_szAppTitle
  00057	68 0f e1 00 00	 push	 57615			; 0000e10fH
  0005c	8b 55 08	 mov	 edx, DWORD PTR _hInstance$[ebp]
  0005f	52		 push	 edx
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16

; 79   : 
; 80   : #ifdef _DEBUG
; 81   : 
; 82   :     strcat(g_szAppTitle, " (debug)");

  00066	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08POFP@?5?$CIdebug?$CJ?$AA@ ; `string'
  0006b	68 00 00 00 00	 push	 OFFSET FLAT:?g_szAppTitle@@3PADA ; g_szAppTitle
  00070	e8 00 00 00 00	 call	 _strcat
  00075	83 c4 08	 add	 esp, 8

; 83   : 
; 84   : #endif // _DEBUG
; 85   :     
; 86   :     //
; 87   :     // Create the main window
; 88   :     //
; 89   : 
; 90   :     if(fSuccess)

  00078	83 bd 5c fa ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  0007f	74 11		 je	 SHORT $L51318

; 91   :     {
; 92   :         fSuccess = Window.Create();

  00081	8d 8d 60 fa ff
	ff		 lea	 ecx, DWORD PTR _Window$[ebp]
  00087	e8 00 00 00 00	 call	 ?Create@CMainWindow@@UAEHXZ ; CMainWindow::Create
  0008c	89 85 5c fa ff
	ff		 mov	 DWORD PTR _fSuccess$[ebp], eax
$L51318:

; 93   :     }
; 94   : 
; 95   :     //
; 96   :     // If a project file was specified in the command line, open it
; 97   :     //
; 98   : 
; 99   :     if(fSuccess && pszCmdLine)

  00092	83 bd 5c fa ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00099	74 15		 je	 SHORT $L51319
  0009b	83 7d 10 00	 cmp	 DWORD PTR _pszCmdLine$[ebp], 0
  0009f	74 0f		 je	 SHORT $L51319

; 100  :     {
; 101  :         Window.OnOpenProject(pszCmdLine);

  000a1	8b 45 10	 mov	 eax, DWORD PTR _pszCmdLine$[ebp]
  000a4	50		 push	 eax
  000a5	8d 8d 60 fa ff
	ff		 lea	 ecx, DWORD PTR _Window$[ebp]
  000ab	e8 00 00 00 00	 call	 ?OnOpenProject@CMainWindow@@UAEXPBD@Z ; CMainWindow::OnOpenProject
$L51319:

; 102  :     }
; 103  : 
; 104  :     //
; 105  :     // Enter the message pump
; 106  :     //
; 107  : 
; 108  :     if(fSuccess)

  000b0	83 bd 5c fa ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000b7	74 0b		 je	 SHORT $L51320

; 109  :     {
; 110  :         Window.PumpMessages();

  000b9	8d 8d 60 fa ff
	ff		 lea	 ecx, DWORD PTR _Window$[ebp]
  000bf	e8 00 00 00 00	 call	 ?PumpMessages@CWindow@@UAEXXZ ; CWindow::PumpMessages
$L51320:

; 111  :     }
; 112  : 
; 113  :     return !fSuccess;

  000c4	33 c9		 xor	 ecx, ecx
  000c6	83 bd 5c fa ff
	ff 00		 cmp	 DWORD PTR _fSuccess$[ebp], 0
  000cd	0f 94 c1	 sete	 cl
  000d0	89 8d 58 fa ff
	ff		 mov	 DWORD PTR $T52383[ebp], ecx
  000d6	8d 8d 60 fa ff
	ff		 lea	 ecx, DWORD PTR _Window$[ebp]
  000dc	e8 00 00 00 00	 call	 ??1CMainWindow@@UAE@XZ	; CMainWindow::~CMainWindow
  000e1	8b 85 58 fa ff
	ff		 mov	 eax, DWORD PTR $T52383[ebp]

; 114  : }

  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c2 10 00	 ret	 16			; 00000010H
_WinMain@16 ENDP
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
;	COMDAT ?DebugCallback@CWindow@@SGXKPBD@Z
_TEXT	SEGMENT
_dwLevel$ = 8
_pszString$ = 12
?DebugCallback@CWindow@@SGXKPBD@Z PROC NEAR		; CWindow::DebugCallback, COMDAT

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 218  :     SendMessage(g_hwndMain, WM_DPF, MAKELONG(dwLevel, WM_DPF_SIGNATURE), (LPARAM)pszString);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _dwLevel$[ebp]
  0000a	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00010	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00016	81 c9 00 00 df
	00		 or	 ecx, 14614528		; 00df0000H
  0001c	51		 push	 ecx
  0001d	68 00 80 00 00	 push	 32768			; 00008000H
  00022	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_hwndMain
  00028	52		 push	 edx
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 219  : }

  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?DebugCallback@CWindow@@SGXKPBD@Z ENDP			; CWindow::DebugCallback
_TEXT	ENDS
PUBLIC	?EndEntry@CWaveBankCallback@@UAEXPBDK@Z		; CWaveBankCallback::EndEntry
PUBLIC	??0CWaveBankCallback@@QAE@XZ			; CWaveBankCallback::CWaveBankCallback
PUBLIC	?OnCreate@CMainWindow@@UAEHPAXPAJ@Z		; CMainWindow::OnCreate
PUBLIC	?OnClose@CMainWindow@@UAEHPAJ@Z			; CMainWindow::OnClose
PUBLIC	?OnDestroy@CMainWindow@@UAEHPAJ@Z		; CMainWindow::OnDestroy
PUBLIC	?OnSize@CMainWindow@@UAEHKHHPAJ@Z		; CMainWindow::OnSize
PUBLIC	?OnCommand@CMainWindow@@UAEHIIPAUHWND__@@PAJ@Z	; CMainWindow::OnCommand
PUBLIC	?OnNotify@CMainWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CMainWindow::OnNotify
PUBLIC	?OnContextMenu@CMainWindow@@UAEHPAUHWND__@@HHPAJ@Z ; CMainWindow::OnContextMenu
PUBLIC	?OnMenuSelect@CMainWindow@@UAEHIIPAUHMENU__@@PAJ@Z ; CMainWindow::OnMenuSelect
PUBLIC	?OnNewProject@CMainWindow@@UAEXH@Z		; CMainWindow::OnNewProject
PUBLIC	?OnSaveProject@CMainWindow@@UAEXH@Z		; CMainWindow::OnSaveProject
PUBLIC	?OnNewBank@CMainWindow@@UAEXH@Z			; CMainWindow::OnNewBank
PUBLIC	?OnRemoveBank@CMainWindow@@UAEXXZ		; CMainWindow::OnRemoveBank
PUBLIC	?OnNewEntry@CMainWindow@@UAEXXZ			; CMainWindow::OnNewEntry
PUBLIC	?OnRemoveEntry@CMainWindow@@UAEXXZ		; CMainWindow::OnRemoveEntry
PUBLIC	?OnConvert@CMainWindow@@UAEXK@Z			; CMainWindow::OnConvert
PUBLIC	?OnGenerate@CMainWindow@@UAEXXZ			; CMainWindow::OnGenerate
PUBLIC	?OnDelete@CMainWindow@@UAEXPAUHWND__@@@Z	; CMainWindow::OnDelete
PUBLIC	?OnRename@CMainWindow@@UAEXPAUHWND__@@@Z	; CMainWindow::OnRename
PUBLIC	?OnSelectAll@CMainWindow@@UAEXPAUHWND__@@@Z	; CMainWindow::OnSelectAll
PUBLIC	?OnExit@CMainWindow@@UAEXXZ			; CMainWindow::OnExit
PUBLIC	?OnAbout@CMainWindow@@UAEXXZ			; CMainWindow::OnAbout
PUBLIC	?OnRefresh@CMainWindow@@UAEXXZ			; CMainWindow::OnRefresh
PUBLIC	?OnAudition@CMainWindow@@UAEXXZ			; CMainWindow::OnAudition
PUBLIC	?OnCancelAudition@CMainWindow@@UAEXXZ		; CMainWindow::OnCancelAudition
PUBLIC	?OnToolTipDisplayInfo@CMainWindow@@UAEXPAUtagNMTTDISPINFOA@@@Z ; CMainWindow::OnToolTipDisplayInfo
PUBLIC	?OnListViewItemChanged@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z ; CMainWindow::OnListViewItemChanged
PUBLIC	?OnBankListItemStateChange@CMainWindow@@UAEXXZ	; CMainWindow::OnBankListItemStateChange
PUBLIC	?OnEntryListItemStateChange@CMainWindow@@UAEXXZ	; CMainWindow::OnEntryListItemStateChange
PUBLIC	?OnListViewColumnClick@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z ; CMainWindow::OnListViewColumnClick
PUBLIC	?OnListViewBeginLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z ; CMainWindow::OnListViewBeginLabelEdit
PUBLIC	?OnListViewEndLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z ; CMainWindow::OnListViewEndLabelEdit
PUBLIC	?BeginEntry@CMainWindow@@UAEHPBDK@Z		; CMainWindow::BeginEntry
PUBLIC	?CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z	; CMainWindow::CreateListView
PUBLIC	?CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ	; CMainWindow::CreateToolBar
PUBLIC	?CreateStatusBar@CMainWindow@@MAEPAUHWND__@@XZ	; CMainWindow::CreateStatusBar
PUBLIC	?MakeDirty@CMainWindow@@MAEXHH@Z		; CMainWindow::MakeDirty
PUBLIC	?CheckDirty@CMainWindow@@MAEHXZ			; CMainWindow::CheckDirty
PUBLIC	?UpdateAppTitle@CMainWindow@@MAEXXZ		; CMainWindow::UpdateAppTitle
PUBLIC	?SetCommandState@CMainWindow@@MAEXIHH@Z		; CMainWindow::SetCommandState
PUBLIC	?SetBankCommandStates@CMainWindow@@MAEXXZ	; CMainWindow::SetBankCommandStates
PUBLIC	?SetEntryCommandStates@CMainWindow@@MAEXXZ	; CMainWindow::SetEntryCommandStates
PUBLIC	?SetCommandStates@CMainWindow@@MAEXXZ		; CMainWindow::SetCommandStates
PUBLIC	?ConnectRemote@CMainWindow@@MAEHXZ		; CMainWindow::ConnectRemote
PUBLIC	??_7CMainWindow@@6BCWindow@@@			; CMainWindow::`vftable'
PUBLIC	??_7CMainWindow@@6BCWaveBankCallback@@@		; CMainWindow::`vftable'
PUBLIC	??_GCMainWindow@@UAEPAXI@Z			; CMainWindow::`scalar deleting destructor'
PUBLIC	??_ECMainWindow@@UAEPAXI@Z			; CMainWindow::`vector deleting destructor'
PUBLIC	?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z ; CWindow::MoveWindow
PUBLIC	?MessageBoxA@CWindow@@UAEHPBDI@Z		; CWindow::MessageBoxA
PUBLIC	?MessageBoxA@CWindow@@UAEHII@Z			; CWindow::MessageBoxA
PUBLIC	?EnableAccelerators@CWindow@@UAEXH@Z		; CWindow::EnableAccelerators
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	?BeginProject@CWaveBankCallback@@UAEHII@Z	; CWaveBankCallback::BeginProject
PUBLIC	?EndProject@CWaveBankCallback@@UAEXJ@Z		; CWaveBankCallback::EndProject
PUBLIC	?OpenBank@CWaveBankCallback@@UAEHPBD@Z		; CWaveBankCallback::OpenBank
PUBLIC	?CloseBank@CWaveBankCallback@@UAEXPBD@Z		; CWaveBankCallback::CloseBank
PUBLIC	?OpenHeader@CWaveBankCallback@@UAEHPBD@Z	; CWaveBankCallback::OpenHeader
PUBLIC	?CloseHeader@CWaveBankCallback@@UAEXPBD@Z	; CWaveBankCallback::CloseHeader
EXTRN	??0CMRU@@QAE@XZ:NEAR				; CMRU::CMRU
EXTRN	?m_aColumnData@CGuiWaveBankEntry@@2PAULVCOLUMNDATA@@A:BYTE ; CGuiWaveBankEntry::m_aColumnData
EXTRN	?m_aColumnData@CGuiWaveBank@@2PAULVCOLUMNDATA@@A:BYTE ; CGuiWaveBank::m_aColumnData
EXTRN	_memset:NEAR
EXTRN	??0CWindow@@QAE@XZ:NEAR				; CWindow::CWindow
EXTRN	?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z:NEAR ; CWindow::Create
EXTRN	?SetParent@CWindow@@UAEXPAV1@@Z:NEAR		; CWindow::SetParent
EXTRN	?OnDebug@CWindow@@UAEHIIPBDPAJ@Z:NEAR		; CWindow::OnDebug
EXTRN	?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z:NEAR ; CWindow::DispatchMessageA
EXTRN	?HandleMessage@CWindow@@MAEHIIJPAJ@Z:NEAR	; CWindow::HandleMessage
;	COMDAT ??_7CMainWindow@@6BCWindow@@@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
CONST	SEGMENT
??_7CMainWindow@@6BCWindow@@@ DD FLAT:??_ECMainWindow@@UAEPAXI@Z ; CMainWindow::`vftable'
	DD	FLAT:?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
	DD	FLAT:?SetParent@CWindow@@UAEXPAV1@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHII@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHPBDI@Z
	DD	FLAT:?PumpMessages@CWindow@@UAEXXZ
	DD	FLAT:?OnCreate@CMainWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CMainWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CMainWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CMainWindow@@UAEHKHHPAJ@Z
	DD	FLAT:?OnCommand@CMainWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnNotify@CMainWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
	DD	FLAT:?OnContextMenu@CMainWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnMenuSelect@CMainWindow@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?EnableAccelerators@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?HandleMessage@CWindow@@MAEHIIJPAJ@Z
	DD	FLAT:?Create@CMainWindow@@UAEHXZ
	DD	FLAT:?OnNewProject@CMainWindow@@UAEXH@Z
	DD	FLAT:?OnOpenProject@CMainWindow@@UAEXPBD@Z
	DD	FLAT:?OnSaveProject@CMainWindow@@UAEXH@Z
	DD	FLAT:?OnNewBank@CMainWindow@@UAEXH@Z
	DD	FLAT:?OnRemoveBank@CMainWindow@@UAEXXZ
	DD	FLAT:?OnNewEntry@CMainWindow@@UAEXXZ
	DD	FLAT:?OnRemoveEntry@CMainWindow@@UAEXXZ
	DD	FLAT:?OnConvert@CMainWindow@@UAEXK@Z
	DD	FLAT:?OnGenerate@CMainWindow@@UAEXXZ
	DD	FLAT:?OnDelete@CMainWindow@@UAEXPAUHWND__@@@Z
	DD	FLAT:?OnRename@CMainWindow@@UAEXPAUHWND__@@@Z
	DD	FLAT:?OnSelectAll@CMainWindow@@UAEXPAUHWND__@@@Z
	DD	FLAT:?OnExit@CMainWindow@@UAEXXZ
	DD	FLAT:?OnAbout@CMainWindow@@UAEXXZ
	DD	FLAT:?OnRefresh@CMainWindow@@UAEXXZ
	DD	FLAT:?OnAudition@CMainWindow@@UAEXXZ
	DD	FLAT:?OnCancelAudition@CMainWindow@@UAEXXZ
	DD	FLAT:?OnToolTipDisplayInfo@CMainWindow@@UAEXPAUtagNMTTDISPINFOA@@@Z
	DD	FLAT:?OnListViewItemChanged@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z
	DD	FLAT:?OnBankListItemStateChange@CMainWindow@@UAEXXZ
	DD	FLAT:?OnEntryListItemStateChange@CMainWindow@@UAEXXZ
	DD	FLAT:?OnListViewColumnClick@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z
	DD	FLAT:?OnListViewBeginLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z
	DD	FLAT:?OnListViewEndLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z
	DD	FLAT:?CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z
	DD	FLAT:?CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ
	DD	FLAT:?CreateStatusBar@CMainWindow@@MAEPAUHWND__@@XZ
	DD	FLAT:?MakeDirty@CMainWindow@@MAEXHH@Z
	DD	FLAT:?CheckDirty@CMainWindow@@MAEHXZ
	DD	FLAT:?UpdateAppTitle@CMainWindow@@MAEXXZ
	DD	FLAT:?SetCommandState@CMainWindow@@MAEXIHH@Z
	DD	FLAT:?SetBankCommandStates@CMainWindow@@MAEXXZ
	DD	FLAT:?SetEntryCommandStates@CMainWindow@@MAEXXZ
	DD	FLAT:?SetCommandStates@CMainWindow@@MAEXXZ
	DD	FLAT:?ConnectRemote@CMainWindow@@MAEHXZ
CONST	ENDS
;	COMDAT ??_7CMainWindow@@6BCWaveBankCallback@@@
CONST	SEGMENT
??_7CMainWindow@@6BCWaveBankCallback@@@ DD FLAT:?BeginProject@CWaveBankCallback@@UAEHII@Z ; CMainWindow::`vftable'
	DD	FLAT:?EndProject@CWaveBankCallback@@UAEXJ@Z
	DD	FLAT:?OpenBank@CWaveBankCallback@@UAEHPBD@Z
	DD	FLAT:?CloseBank@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
	DD	FLAT:?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?BeginEntry@CMainWindow@@UAEHPBDK@Z
	DD	FLAT:?EndEntry@CWaveBankCallback@@UAEXPBDK@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CMainWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMainWindow@@QAE@XZ PROC NEAR			; CMainWindow::CMainWindow, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CWindow@@QAE@XZ	; CWindow::CWindow
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00015	e8 00 00 00 00	 call	 ??0CWaveBankCallback@@QAE@XZ ; CWaveBankCallback::CWaveBankCallback
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00020	e8 00 00 00 00	 call	 ??0CMRU@@QAE@XZ		; CMRU::CMRU
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainWindow@@6BCWindow@@@ ; CMainWindow::`vftable'
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], OFFSET FLAT:??_7CMainWindow@@6BCWaveBankCallback@@@ ; CMainWindow::`vftable'

; 140  :     ZeroMemory(&m_ahwndControls, sizeof(m_ahwndControls));

  00038	6a 10		 push	 16			; 00000010H
  0003a	6a 00		 push	 0
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	83 c2 40	 add	 edx, 64			; 00000040H
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 _memset
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 141  :     ZeroMemory(&m_ahmenuPopup, sizeof(m_ahmenuPopup));

  0004b	6a 08		 push	 8
  0004d	6a 00		 push	 0
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	83 c0 50	 add	 eax, 80			; 00000050H
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _memset
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 142  : 
; 143  :     m_pProject = NULL;

  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0

; 144  :     m_fDirty = FALSE;

  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	c7 82 7c 04 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+1148], 0

; 145  :     m_pxbdm = NULL;

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	c7 80 80 04 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1152], 0

; 146  : 
; 147  :     m_aColumnData[IDC_MAIN_BANKLIST].paColumnData = CGuiWaveBank::m_aColumnData;

  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], OFFSET FLAT:?m_aColumnData@CGuiWaveBank@@2PAULVCOLUMNDATA@@A ; CGuiWaveBank::m_aColumnData

; 148  :     m_aColumnData[IDC_MAIN_BANKLIST].nColumnCount = NUMELMS(CGuiWaveBank::m_aColumnData);

  0008c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008f	c7 42 34 05 00
	00 00		 mov	 DWORD PTR [edx+52], 5

; 149  : 
; 150  :     m_aColumnData[IDC_MAIN_ENTRYLIST].paColumnData = CGuiWaveBankEntry::m_aColumnData;

  00096	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00099	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], OFFSET FLAT:?m_aColumnData@CGuiWaveBankEntry@@2PAULVCOLUMNDATA@@A ; CGuiWaveBankEntry::m_aColumnData

; 151  :     m_aColumnData[IDC_MAIN_ENTRYLIST].nColumnCount = NUMELMS(CGuiWaveBankEntry::m_aColumnData);

  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	c7 41 3c 08 00
	00 00		 mov	 DWORD PTR [ecx+60], 8

; 152  : }

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
??0CMainWindow@@QAE@XZ ENDP				; CMainWindow::CMainWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\writer.h
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBankCallback@@UAEHII@Z
_TEXT	SEGMENT
_this$ = -4
?BeginProject@CWaveBankCallback@@UAEHII@Z PROC NEAR	; CWaveBankCallback::BeginProject, COMDAT
; _this$ = ecx

; 236  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 237  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 238  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?BeginProject@CWaveBankCallback@@UAEHII@Z ENDP		; CWaveBankCallback::BeginProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBankCallback@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4
?EndProject@CWaveBankCallback@@UAEXJ@Z PROC NEAR	; CWaveBankCallback::EndProject, COMDAT
; _this$ = ecx

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?EndProject@CWaveBankCallback@@UAEXJ@Z ENDP		; CWaveBankCallback::EndProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4
?OpenBank@CWaveBankCallback@@UAEHPBD@Z PROC NEAR	; CWaveBankCallback::OpenBank, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 247  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?OpenBank@CWaveBankCallback@@UAEHPBD@Z ENDP		; CWaveBankCallback::OpenBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?CloseBank@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4
?CloseBank@CWaveBankCallback@@UAEXPBD@Z PROC NEAR	; CWaveBankCallback::CloseBank, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?CloseBank@CWaveBankCallback@@UAEXPBD@Z ENDP		; CWaveBankCallback::CloseBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4
?OpenHeader@CWaveBankCallback@@UAEHPBD@Z PROC NEAR	; CWaveBankCallback::OpenHeader, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 255  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 256  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?OpenHeader@CWaveBankCallback@@UAEHPBD@Z ENDP		; CWaveBankCallback::OpenHeader
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4
?CloseHeader@CWaveBankCallback@@UAEXPBD@Z PROC NEAR	; CWaveBankCallback::CloseHeader, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 260  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?CloseHeader@CWaveBankCallback@@UAEXPBD@Z ENDP		; CWaveBankCallback::CloseHeader
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBankCallback@@UAEXPBDK@Z
_TEXT	SEGMENT
_this$ = -4
?EndEntry@CWaveBankCallback@@UAEXPBDK@Z PROC NEAR	; CWaveBankCallback::EndEntry, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 269  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 08 00	 ret	 8
?EndEntry@CWaveBankCallback@@UAEXPBDK@Z ENDP		; CWaveBankCallback::EndEntry
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  :     return m_hwnd;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]

; 145  : }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_rc$ = 8
_this$ = -4
?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 189  :     MoveWindow(m_hwnd, rc);

  00007	8b 45 08	 mov	 eax, DWORD PTR _rc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 10		 mov	 edx, DWORD PTR [eax]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	ff 52 0c	 call	 DWORD PTR [edx+12]

; 190  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z ENDP		; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__MoveWindow@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
_TEXT	SEGMENT
_hwnd$ = 8
_rc$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z PROC NEAR ; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 194  :     ::MoveWindow(hwnd, rc.left, rc.top, rc.right - rc.left, rc.bottom - rc.top, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _rc$[ebp]
  0000f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00012	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _rc$[ebp]
  0001c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0001f	2b 11		 sub	 edx, DWORD PTR [ecx]
  00021	52		 push	 edx
  00022	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  00025	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00028	51		 push	 ecx
  00029	8b 55 0c	 mov	 edx, DWORD PTR _rc$[ebp]
  0002c	8b 02		 mov	 eax, DWORD PTR [edx]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00032	51		 push	 ecx
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 195  : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z ENDP	; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__MessageBoxA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?MessageBoxA@CWindow@@UAEHPBDI@Z
_TEXT	SEGMENT
_pszText$ = 8
_uType$ = 12
_this$ = -4
?MessageBoxA@CWindow@@UAEHPBDI@Z PROC NEAR		; CWindow::MessageBoxA, COMDAT
; _this$ = ecx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :     return ::MessageBox(m_hwnd, pszText, g_pszAppTitle, uType);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _uType$[ebp]
  0000a	50		 push	 eax
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_pszAppTitle
  00011	51		 push	 ecx
  00012	8b 55 08	 mov	 edx, DWORD PTR _pszText$[ebp]
  00015	52		 push	 edx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001c	51		 push	 ecx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 200  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?MessageBoxA@CWindow@@UAEHPBDI@Z ENDP			; CWindow::MessageBoxA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@@UAEHII@Z
_TEXT	SEGMENT
_nResourceId$ = 8
_uType$ = 12
_this$ = -260
_szText$ = -256
?MessageBoxA@CWindow@@UAEHII@Z PROC NEAR		; CWindow::MessageBoxA, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	89 8d fc fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 204  :     TCHAR                   szText[0x100];
; 205  : 
; 206  :     LoadString(g_hInstance, nResourceId, szText, NUMELMS(szText));

  0000f	68 00 01 00 00	 push	 256			; 00000100H
  00014	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _nResourceId$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_hInstance
  00025	52		 push	 edx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16

; 207  :     
; 208  :     return MessageBox(szText, uType);

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _uType$[ebp]
  0002f	50		 push	 eax
  00030	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00036	51		 push	 ecx
  00037	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 02		 mov	 eax, DWORD PTR [edx]
  0003f	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00045	ff 50 18	 call	 DWORD PTR [eax+24]

; 209  : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?MessageBoxA@CWindow@@UAEHII@Z ENDP			; CWindow::MessageBoxA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EnableAccelerators@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fEnable$ = 8
_this$ = -4
?EnableAccelerators@CWindow@@UAEXH@Z PROC NEAR		; CWindow::EnableAccelerators, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  :     m_fEnableAccel = fEnable;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  0000d	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 214  : }

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?EnableAccelerators@CWindow@@UAEXH@Z ENDP		; CWindow::EnableAccelerators
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCMainWindow@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainWindow@@UAEPAXI@Z PROC NEAR			; CMainWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainWindow@@UAE@XZ	; CMainWindow::~CMainWindow
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51329
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51329:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMainWindow@@UAEPAXI@Z ENDP				; CMainWindow::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z	; CWaveBankCallback::BeginEntry
PUBLIC	??_7CWaveBankCallback@@6B@			; CWaveBankCallback::`vftable'
;	COMDAT ??_7CWaveBankCallback@@6B@
CONST	SEGMENT
??_7CWaveBankCallback@@6B@ DD FLAT:?BeginProject@CWaveBankCallback@@UAEHII@Z ; CWaveBankCallback::`vftable'
	DD	FLAT:?EndProject@CWaveBankCallback@@UAEXJ@Z
	DD	FLAT:?OpenBank@CWaveBankCallback@@UAEHPBD@Z
	DD	FLAT:?CloseBank@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
	DD	FLAT:?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z
	DD	FLAT:?EndEntry@CWaveBankCallback@@UAEXPBDK@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankCallback@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBankCallback@@QAE@XZ PROC NEAR			; CWaveBankCallback::CWaveBankCallback, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankCallback@@6B@ ; CWaveBankCallback::`vftable'
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CWaveBankCallback@@QAE@XZ ENDP			; CWaveBankCallback::CWaveBankCallback
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\writer.h
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z
_TEXT	SEGMENT
_this$ = -4
?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z PROC NEAR	; CWaveBankCallback::BeginEntry, COMDAT
; _this$ = ecx

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 265  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z ENDP		; CWaveBankCallback::BeginEntry
_TEXT	ENDS
PUBLIC	??_C@_0BD@JDPP@XAUD?$CBdisconnect?5?$CFs?$AA@	; `string'
EXTRN	??1CMRU@@UAE@XZ:NEAR				; CMRU::~CMRU
EXTRN	_sprintf:NEAR
EXTRN	__imp__DmCloseConnection@4:NEAR
EXTRN	__imp__DmSendCommand@16:NEAR
EXTRN	??1CWindow@@UAE@XZ:NEAR				; CWindow::~CWindow
EXTRN	__imp__DestroyMenu@4:NEAR
;	COMDAT ??_C@_0BD@JDPP@XAUD?$CBdisconnect?5?$CFs?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
CONST	SEGMENT
??_C@_0BD@JDPP@XAUD?$CBdisconnect?5?$CFs?$AA@ DB 'XAUD!disconnect %s', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??1CMainWindow@@UAE@XZ
_TEXT	SEGMENT
_this$ = -264
_szCommand$ = -256
_i$ = -260
??1CMainWindow@@UAE@XZ PROC NEAR			; CMainWindow::~CMainWindow, COMDAT
; _this$ = ecx

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainWindow@@6BCWindow@@@ ; CMainWindow::`vftable'
  0001b	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00021	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], OFFSET FLAT:??_7CMainWindow@@6BCWaveBankCallback@@@ ; CMainWindow::`vftable'

; 178  :     CHAR                    szCommand[0x100];
; 179  :     UINT                    i;
; 180  : 
; 181  :     for(i = 0; i < NUMELMS(m_ahmenuPopup); i++)

  00028	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$[ebp], 0
  00032	eb 0f		 jmp	 SHORT $L51338
$L51339:
  00034	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  0003a	83 c2 01	 add	 edx, 1
  0003d	89 95 fc fe ff
	ff		 mov	 DWORD PTR _i$[ebp], edx
$L51338:
  00043	83 bd fc fe ff
	ff 02		 cmp	 DWORD PTR _i$[ebp], 2
  0004a	73 2c		 jae	 SHORT $L51340

; 182  :     {
; 183  :         if(m_ahmenuPopup[i])

  0004c	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  00052	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 7c 81 50 00	 cmp	 DWORD PTR [ecx+eax*4+80], 0
  0005d	74 17		 je	 SHORT $L51341

; 184  :         {
; 185  :             DestroyMenu(m_ahmenuPopup[i]);

  0005f	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  00065	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4c 90 50	 mov	 ecx, DWORD PTR [eax+edx*4+80]
  0006f	51		 push	 ecx
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyMenu@4
$L51341:

; 186  :         }
; 187  :     }

  00076	eb bc		 jmp	 SHORT $L51339
$L51340:

; 188  : 
; 189  :     if(m_pxbdm)

  00078	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0007e	83 ba 80 04 00
	00 00		 cmp	 DWORD PTR [edx+1152], 0
  00085	74 4b		 je	 SHORT $L51342

; 190  :     {
; 191  :         sprintf(szCommand, "XAUD!disconnect %s", g_pszAppTitle);

  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pszAppTitle
  0008c	50		 push	 eax
  0008d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@JDPP@XAUD?$CBdisconnect?5?$CFs?$AA@ ; `string'
  00092	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szCommand$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 _sprintf
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 192  : 
; 193  :         DmSendCommand(m_pxbdm, szCommand, NULL, NULL);

  000a1	6a 00		 push	 0
  000a3	6a 00		 push	 0
  000a5	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szCommand$[ebp]
  000ab	52		 push	 edx
  000ac	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  000b8	51		 push	 ecx
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmSendCommand@16

; 194  :         DmCloseConnection(m_pxbdm);

  000bf	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000c5	8b 82 80 04 00
	00		 mov	 eax, DWORD PTR [edx+1152]
  000cb	50		 push	 eax
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmCloseConnection@4
$L51342:

; 195  :     }
; 196  : }

  000d2	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	83 c1 5c	 add	 ecx, 92			; 0000005cH
  000db	e8 00 00 00 00	 call	 ??1CMRU@@UAE@XZ		; CMRU::~CMRU
  000e0	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c3		 ret	 0
??1CMainWindow@@UAE@XZ ENDP				; CMainWindow::~CMainWindow
_TEXT	ENDS
PUBLIC	??_C@_0BB@EFNC@Wave?5Bundler?5GUI?$AA@		; `string'
PUBLIC	??_C@_0DD@OCIN@Software?2Microsoft?2Microsoft?5Xbo@ ; `string'
PUBLIC	??_C@_0BB@ONMM@Window?5Placement?$AA@		; `string'
EXTRN	__imp__RegOpenKeyA@12:NEAR
EXTRN	__imp__RegQueryValueExA@24:NEAR
EXTRN	__imp__ShowWindow@8:NEAR
EXTRN	__imp__GetSysColorBrush@4:NEAR
EXTRN	_CenterWindow@8:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
EXTRN	__imp__LoadIconA@8:NEAR
EXTRN	__imp__RegCloseKey@4:NEAR
;	COMDAT ??_C@_0BB@EFNC@Wave?5Bundler?5GUI?$AA@
CONST	SEGMENT
??_C@_0BB@EFNC@Wave?5Bundler?5GUI?$AA@ DB 'Wave Bundler GUI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@OCIN@Software?2Microsoft?2Microsoft?5Xbo@
CONST	SEGMENT
??_C@_0DD@OCIN@Software?2Microsoft?2Microsoft?5Xbo@ DB 'Software\Microsof'
	DB	't\Microsoft Xbox SDK\Wave Bundler', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ONMM@Window?5Placement?$AA@
CONST	SEGMENT
??_C@_0BB@ONMM@Window?5Placement?$AA@ DB 'Window Placement', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CMainWindow@@UAEHXZ
_TEXT	SEGMENT
_this$ = -136
_Create$ = -120
_lrWndPos$ = -124
_hkey$ = -132
_wp$ = -44
_cbSize$ = -128
?Create@CMainWindow@@UAEHXZ PROC NEAR			; CMainWindow::Create, COMDAT
; _this$ = ecx

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	89 8d 78 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 223  :     WNDCREATE               Create;
; 224  :     LRESULT                 lrWndPos;
; 225  :     HKEY                    hkey;
; 226  :     WINDOWPLACEMENT         wp;
; 227  :     DWORD                   cbSize;
; 228  : 
; 229  :     ZeroMemory(&Create, sizeof(Create));

  0000f	6a 44		 push	 68			; 00000044H
  00011	6a 00		 push	 0
  00013	8d 45 88	 lea	 eax, DWORD PTR _Create$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 _memset
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 230  : 
; 231  :     Create.dwClassStyle = CS_OWNDC;

  0001f	c7 45 88 20 00
	00 00		 mov	 DWORD PTR _Create$[ebp], 32 ; 00000020H

; 232  :     Create.hIcon = LoadIcon(g_hInstance, MAKEINTRESOURCE(IDI_PROJECT));

  00026	6a 6d		 push	 109			; 0000006dH
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0002e	51		 push	 ecx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00035	89 45 94	 mov	 DWORD PTR _Create$[ebp+12], eax

; 233  :     Create.hCursor = LoadCursor(NULL, IDC_ARROW);

  00038	68 00 7f 00 00	 push	 32512			; 00007f00H
  0003d	6a 00		 push	 0
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00045	89 45 9c	 mov	 DWORD PTR _Create$[ebp+20], eax

; 234  :     Create.hbrBackground = GetSysColorBrush(COLOR_3DFACE);

  00048	6a 0f		 push	 15			; 0000000fH
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSysColorBrush@4
  00050	89 45 a0	 mov	 DWORD PTR _Create$[ebp+24], eax

; 235  :     Create.pszClassName = "Wave Bundler GUI";

  00053	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _Create$[ebp+28], OFFSET FLAT:??_C@_0BB@EFNC@Wave?5Bundler?5GUI?$AA@ ; `string'

; 236  :     Create.pszWindowName = NULL;

  0005a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _Create$[ebp+32], 0

; 237  :     Create.dwStyle = WS_OVERLAPPEDWINDOW;

  00061	c7 45 ac 00 00
	cf 00		 mov	 DWORD PTR _Create$[ebp+36], 13565952 ; 00cf0000H

; 238  :     Create.x = CW_USEDEFAULT;

  00068	c7 45 b4 00 00
	00 80		 mov	 DWORD PTR _Create$[ebp+44], -2147483648 ; 80000000H

; 239  :     Create.y = CW_USEDEFAULT;

  0006f	c7 45 b8 00 00
	00 80		 mov	 DWORD PTR _Create$[ebp+48], -2147483648 ; 80000000H

; 240  :     Create.nWidth = CW_USEDEFAULT;

  00076	c7 45 bc 00 00
	00 80		 mov	 DWORD PTR _Create$[ebp+52], -2147483648 ; 80000000H

; 241  :     Create.nHeight = CW_USEDEFAULT;

  0007d	c7 45 c0 00 00
	00 80		 mov	 DWORD PTR _Create$[ebp+56], -2147483648 ; 80000000H

; 242  :     Create.pszMenu = MAKEINTRESOURCE(IDM_MAIN);

  00084	c7 45 c4 65 00
	00 00		 mov	 DWORD PTR _Create$[ebp+60], 101 ; 00000065H

; 243  :     Create.pszAccelerator = MAKEINTRESOURCE(IDA_MAIN);

  0008b	c7 45 c8 66 00
	00 00		 mov	 DWORD PTR _Create$[ebp+64], 102 ; 00000066H

; 244  : 
; 245  :     if(!CWindow::Create(&Create))

  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	8d 55 88	 lea	 edx, DWORD PTR _Create$[ebp]
  00099	52		 push	 edx
  0009a	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	e8 00 00 00 00	 call	 ?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z ; CWindow::Create
  000a5	85 c0		 test	 eax, eax
  000a7	75 07		 jne	 SHORT $L51370

; 246  :     {
; 247  :         return FALSE;

  000a9	33 c0		 xor	 eax, eax
  000ab	e9 e2 00 00 00	 jmp	 $L51347
$L51370:

; 248  :     }
; 249  : 
; 250  :     //
; 251  :     // Load window position and state.  If none exist, center the window
; 252  :     // over the default monitor
; 253  :     //
; 254  : 
; 255  :     if(ERROR_SUCCESS == (lrWndPos = RegOpenKey(HKEY_CURRENT_USER, WBND_REG_KEY, &hkey)))

  000b0	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _hkey$[ebp]
  000b6	50		 push	 eax
  000b7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DD@OCIN@Software?2Microsoft?2Microsoft?5Xbo@ ; `string'
  000bc	68 01 00 00 80	 push	 -2147483647		; 80000001H
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  000c7	89 45 84	 mov	 DWORD PTR _lrWndPos$[ebp], eax
  000ca	83 7d 84 00	 cmp	 DWORD PTR _lrWndPos$[ebp], 0
  000ce	75 35		 jne	 SHORT $L51374

; 256  :     {
; 257  :         cbSize = sizeof(wp);

  000d0	c7 45 80 2c 00
	00 00		 mov	 DWORD PTR _cbSize$[ebp], 44 ; 0000002cH

; 258  :         
; 259  :         lrWndPos = RegQueryValueEx(hkey, WBND_REG_VAL_WNDPOS, NULL, NULL, (LPBYTE)&wp, &cbSize);

  000d7	8d 4d 80	 lea	 ecx, DWORD PTR _cbSize$[ebp]
  000da	51		 push	 ecx
  000db	8d 55 d4	 lea	 edx, DWORD PTR _wp$[ebp]
  000de	52		 push	 edx
  000df	6a 00		 push	 0
  000e1	6a 00		 push	 0
  000e3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@ONMM@Window?5Placement?$AA@ ; `string'
  000e8	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _hkey$[ebp]
  000ee	50		 push	 eax
  000ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryValueExA@24
  000f5	89 45 84	 mov	 DWORD PTR _lrWndPos$[ebp], eax

; 260  : 
; 261  :         RegCloseKey(hkey);

  000f8	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _hkey$[ebp]
  000fe	51		 push	 ecx
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$L51374:

; 262  :     }
; 263  : 
; 264  :     if(ERROR_SUCCESS == lrWndPos)

  00105	83 7d 84 00	 cmp	 DWORD PTR _lrWndPos$[ebp], 0
  00109	75 38		 jne	 SHORT $L51378

; 265  :     {
; 266  :         if(SW_SHOWMAXIMIZED != wp.showCmd)

  0010b	83 7d dc 03	 cmp	 DWORD PTR _wp$[ebp+8], 3
  0010f	74 07		 je	 SHORT $L51379

; 267  :         {
; 268  :             wp.showCmd = SW_SHOWNORMAL;

  00111	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _wp$[ebp+8], 1
$L51379:

; 269  :         }
; 270  :         
; 271  :         MoveWindow(wp.rcNormalPosition);

  00118	8d 55 f0	 lea	 edx, DWORD PTR _wp$[ebp+28]
  0011b	52		 push	 edx
  0011c	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 10		 mov	 edx, DWORD PTR [eax]
  00124	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	ff 52 10	 call	 DWORD PTR [edx+16]

; 272  :         ShowWindow(m_hwnd, wp.showCmd);

  0012d	8b 45 dc	 mov	 eax, DWORD PTR _wp$[ebp+8]
  00130	50		 push	 eax
  00131	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00137	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0013a	52		 push	 edx
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 273  :     }
; 274  :     else

  00141	eb 23		 jmp	 SHORT $L51380
$L51378:

; 275  :     {            
; 276  :         CenterWindow(m_hwnd, NULL);

  00143	6a 00		 push	 0
  00145	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0014b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0014e	51		 push	 ecx
  0014f	e8 00 00 00 00	 call	 _CenterWindow@8

; 277  :         ShowWindow(m_hwnd, SW_SHOWNORMAL);

  00154	6a 01		 push	 1
  00156	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0015c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0015f	50		 push	 eax
  00160	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
$L51380:

; 278  :     }
; 279  : 
; 280  :     //
; 281  :     // Connect to the remote audio console
; 282  :     //
; 283  : 
; 284  :     ConnectRemote();

  00166	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0016c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016e	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00174	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]

; 285  : 
; 286  :     //
; 287  :     // Initialize the project
; 288  :     //
; 289  : 
; 290  :     OnNewProject(FALSE);

  0017a	6a 00		 push	 0
  0017c	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00182	8b 10		 mov	 edx, DWORD PTR [eax]
  00184	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0018a	ff 52 58	 call	 DWORD PTR [edx+88]

; 291  : 
; 292  :     return TRUE;

  0018d	b8 01 00 00 00	 mov	 eax, 1
$L51347:

; 293  : }

  00192	8b e5		 mov	 esp, ebp
  00194	5d		 pop	 ebp
  00195	c3		 ret	 0
?Create@CMainWindow@@UAEHXZ ENDP			; CMainWindow::Create
_TEXT	ENDS
EXTRN	?OnCreate@CWindow@@UAEHPAXPAJ@Z:NEAR		; CWindow::OnCreate
EXTRN	__imp__LoadMenuA@8:NEAR
EXTRN	__imp__GetSubMenu@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CMainWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -12
_fHandled$ = -8
_hSubMenu$ = -4
?OnCreate@CMainWindow@@UAEHPAXPAJ@Z PROC NEAR		; CMainWindow::OnCreate, COMDAT
; _this$ = ecx

; 321  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 322  :     BOOL                    fHandled;
; 323  :     HMENU                   hSubMenu;
; 324  :     
; 325  :     //
; 326  :     // Save the main window handle
; 327  :     //
; 328  : 
; 329  :     g_hwndMain = m_hwnd;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0000f	89 0d 00 00 00
	00		 mov	 DWORD PTR _g_hwndMain, ecx

; 330  : 
; 331  :     //
; 332  :     // Hand off to the base class
; 333  :     //
; 334  :     
; 335  :     fHandled = CWindow::OnCreate(pvContext, plResult);

  00015	8b 55 0c	 mov	 edx, DWORD PTR _plResult$[ebp]
  00018	52		 push	 edx
  00019	8b 45 08	 mov	 eax, DWORD PTR _pvContext$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?OnCreate@CWindow@@UAEHPAXPAJ@Z ; CWindow::OnCreate
  00025	89 45 f8	 mov	 DWORD PTR _fHandled$[ebp], eax

; 336  : 
; 337  :     //
; 338  :     // Set the window title
; 339  :     //
; 340  : 
; 341  :     UpdateAppTitle();

  00028	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	ff 92 cc 00 00
	00		 call	 DWORD PTR [edx+204]

; 342  : 
; 343  :     //
; 344  :     // Create the toolbar
; 345  :     //
; 346  : 
; 347  :     if(!(m_ahwndControls[IDC_MAIN_TOOLBAR] = CreateToolBar()))

  00036	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 10		 mov	 edx, DWORD PTR [eax]
  0003b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	ff 92 bc 00 00
	00		 call	 DWORD PTR [edx+188]
  00044	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	89 41 48	 mov	 DWORD PTR [ecx+72], eax
  0004a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0004d	83 7a 48 00	 cmp	 DWORD PTR [edx+72], 0
  00051	75 13		 jne	 SHORT $L51388

; 348  :     {
; 349  :         *plResult = -1;

  00053	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  00056	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 350  :         return TRUE;

  0005c	b8 01 00 00 00	 mov	 eax, 1
  00061	e9 fb 00 00 00	 jmp	 $L51385
$L51388:

; 351  :     }
; 352  : 
; 353  :     //
; 354  :     // Create the status bar
; 355  :     //
; 356  : 
; 357  :     if(!(m_ahwndControls[IDC_MAIN_STATUSBAR] = CreateStatusBar()))

  00066	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	89 41 4c	 mov	 DWORD PTR [ecx+76], eax
  0007a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	83 7a 4c 00	 cmp	 DWORD PTR [edx+76], 0
  00081	75 13		 jne	 SHORT $L51389

; 358  :     {
; 359  :         *plResult = -1;

  00083	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  00086	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 360  :         return TRUE;

  0008c	b8 01 00 00 00	 mov	 eax, 1
  00091	e9 cb 00 00 00	 jmp	 $L51385
$L51389:

; 361  :     }
; 362  : 
; 363  :     //
; 364  :     // Create the list views
; 365  :     //
; 366  : 
; 367  :     if(!(m_ahwndControls[IDC_MAIN_BANKLIST] = CreateListView(IDC_MAIN_BANKLIST)))

  00096	6a 00		 push	 0
  00098	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	ff 92 b8 00 00
	00		 call	 DWORD PTR [edx+184]
  000a6	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  000ac	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  000af	83 7a 40 00	 cmp	 DWORD PTR [edx+64], 0
  000b3	75 13		 jne	 SHORT $L51390

; 368  :     {
; 369  :         *plResult = -1;

  000b5	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  000b8	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 370  :         return TRUE;

  000be	b8 01 00 00 00	 mov	 eax, 1
  000c3	e9 99 00 00 00	 jmp	 $L51385
$L51390:

; 371  :     }
; 372  : 
; 373  :     if(!(m_ahwndControls[IDC_MAIN_ENTRYLIST] = CreateListView(IDC_MAIN_ENTRYLIST)))

  000c8	6a 01		 push	 1
  000ca	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cf	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	ff 92 b8 00 00
	00		 call	 DWORD PTR [edx+184]
  000d8	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 44	 mov	 DWORD PTR [ecx+68], eax
  000de	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	83 7a 44 00	 cmp	 DWORD PTR [edx+68], 0
  000e5	75 10		 jne	 SHORT $L51391

; 374  :     {
; 375  :         *plResult = -1;

  000e7	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  000ea	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 376  :         return TRUE;

  000f0	b8 01 00 00 00	 mov	 eax, 1
  000f5	eb 6a		 jmp	 SHORT $L51385
$L51391:

; 377  :     }
; 378  : 
; 379  :     //
; 380  :     // Initialize the MRU list
; 381  :     //
; 382  : 
; 383  :     hSubMenu = GetSubMenu(m_hmenu, 0);

  000f7	6a 00		 push	 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  000ff	52		 push	 edx
  00100	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8
  00106	89 45 fc	 mov	 DWORD PTR _hSubMenu$[ebp], eax

; 384  :     hSubMenu = GetSubMenu(hSubMenu, 6);

  00109	6a 06		 push	 6
  0010b	8b 45 fc	 mov	 eax, DWORD PTR _hSubMenu$[ebp]
  0010e	50		 push	 eax
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8
  00115	89 45 fc	 mov	 DWORD PTR _hSubMenu$[ebp], eax

; 385  :     
; 386  :     m_MRU.Initialize(WBND_REG_KEY, hSubMenu, ID_FILE_MRU_FILE1);

  00118	68 10 e1 00 00	 push	 57616			; 0000e110H
  0011d	8b 4d fc	 mov	 ecx, DWORD PTR _hSubMenu$[ebp]
  00120	51		 push	 ecx
  00121	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DD@OCIN@Software?2Microsoft?2Microsoft?5Xbo@ ; `string'
  00126	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00129	83 c1 5c	 add	 ecx, 92			; 0000005cH
  0012c	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0012f	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00132	ff 50 04	 call	 DWORD PTR [eax+4]

; 387  : 
; 388  :     //
; 389  :     // Load popup menus
; 390  :     //
; 391  : 
; 392  :     m_ahmenuPopup[IDC_MAIN_BANKLIST] = LoadMenu(g_hInstance, MAKEINTRESOURCE(IDM_BANK_POPUP));

  00135	6a 7e		 push	 126			; 0000007eH
  00137	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0013d	51		 push	 ecx
  0013e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadMenuA@8
  00144	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00147	89 42 50	 mov	 DWORD PTR [edx+80], eax

; 393  :     m_ahmenuPopup[IDC_MAIN_ENTRYLIST] = LoadMenu(g_hInstance, MAKEINTRESOURCE(IDM_ENTRY_POPUP));

  0014a	6a 7f		 push	 127			; 0000007fH
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  00151	50		 push	 eax
  00152	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadMenuA@8
  00158	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0015b	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 394  : 
; 395  :     return fHandled;

  0015e	8b 45 f8	 mov	 eax, DWORD PTR _fHandled$[ebp]
$L51385:

; 396  : }

  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 08 00	 ret	 8
?OnCreate@CMainWindow@@UAEHPAXPAJ@Z ENDP		; CMainWindow::OnCreate
_TEXT	ENDS
PUBLIC	??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0CE@CBIO@nCommandId?5?$DM?5NUMELMS?$CIm_aColumnDa@ ; `string'
PUBLIC	??_C@_0O@NFAI@SysListView32?$AA@		; `string'
EXTRN	_ListView_AutoSizeColumn@8:NEAR
EXTRN	__imp__CreateWindowExA@48:NEAR
EXTRN	__imp__SetWindowLongA@12:NEAR
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CBIO@nCommandId?5?$DM?5NUMELMS?$CIm_aColumnDa@
CONST	SEGMENT
??_C@_0CE@CBIO@nCommandId?5?$DM?5NUMELMS?$CIm_aColumnDa@ DB 'nCommandId <'
	DB	' NUMELMS(m_aColumnData)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NFAI@SysListView32?$AA@
CONST	SEGMENT
??_C@_0O@NFAI@SysListView32?$AA@ DB 'SysListView32', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_this$ = -44
_pColumnData$ = -8
_hwnd$ = -4
_lvc$ = -40
?CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z PROC NEAR ; CMainWindow::CreateListView, COMDAT
; _this$ = ecx

; 422  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 423  :     static const DWORD      dwStyle         = WS_CHILD | WS_VISIBLE | LVS_AUTOARRANGE | LVS_EDITLABELS | LVS_REPORT | LVS_SHOWSELALWAYS;
; 424  :     static const DWORD      dwStyleEx       = WS_EX_CLIENTEDGE;
; 425  :     static const DWORD      dwLvStyleEx     = LVS_EX_FULLROWSELECT | LVS_EX_LABELTIP;
; 426  :     LPCLVCOLUMNDATAPTR      pColumnData     = &m_aColumnData[nCommandId];

  00009	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  0000c	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8d 54 c1 30	 lea	 edx, DWORD PTR [ecx+eax*8+48]
  00013	89 55 f8	 mov	 DWORD PTR _pColumnData$[ebp], edx

; 427  :     HWND                    hwnd;
; 428  :     LVCOLUMN                lvc;
; 429  : 
; 430  :     ASSERT(nCommandId < NUMELMS(m_aColumnData));

  00016	68 ae 01 00 00	 push	 430			; 000001aeH
  0001b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00020	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@CBIO@nCommandId?5?$DM?5NUMELMS?$CIm_aColumnDa@ ; `string'
  00025	83 7d 08 02	 cmp	 DWORD PTR _nCommandId$[ebp], 2
  00029	1b c0		 sbb	 eax, eax
  0002b	40		 inc	 eax
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00032	83 c4 10	 add	 esp, 16			; 00000010H

; 431  :     
; 432  :     lvc.mask = LVCF_FMT | LVCF_TEXT | LVCF_SUBITEM;

  00035	c7 45 d8 0d 00
	00 00		 mov	 DWORD PTR _lvc$[ebp], 13 ; 0000000dH

; 433  :     lvc.fmt = LVCFMT_LEFT;

  0003c	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _lvc$[ebp+4], 0

; 434  :     lvc.iSubItem = 0;

  00043	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _lvc$[ebp+20], 0

; 435  : 
; 436  :     if(hwnd = CreateWindowEx(dwStyleEx, WC_LISTVIEW, NULL, dwStyle, 0, 0, 0, 0, m_hwnd, NULL, g_hInstance, NULL))

  0004a	6a 00		 push	 0
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  00052	51		 push	 ecx
  00053	6a 00		 push	 0
  00055	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00058	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0005b	50		 push	 eax
  0005c	6a 00		 push	 0
  0005e	6a 00		 push	 0
  00060	6a 00		 push	 0
  00062	6a 00		 push	 0
  00064	68 09 03 00 50	 push	 1342178057		; 50000309H
  00069	6a 00		 push	 0
  0006b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@NFAI@SysListView32?$AA@ ; `string'
  00070	68 00 02 00 00	 push	 512			; 00000200H
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExA@48
  0007b	89 45 fc	 mov	 DWORD PTR _hwnd$[ebp], eax
  0007e	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  00082	0f 84 b2 00 00
	00		 je	 $L51413

; 437  :     {
; 438  :         SetWindowLong(hwnd, GWL_ID, nCommandId);

  00088	8b 4d 08	 mov	 ecx, DWORD PTR _nCommandId$[ebp]
  0008b	51		 push	 ecx
  0008c	6a f4		 push	 -12			; fffffff4H
  0008e	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00091	52		 push	 edx
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 439  :         
; 440  :         ListView_SetExtendedListViewStyleEx(hwnd, dwLvStyleEx, dwLvStyleEx);

  00098	68 20 40 00 00	 push	 16416			; 00004020H
  0009d	68 20 40 00 00	 push	 16416			; 00004020H
  000a2	68 36 10 00 00	 push	 4150			; 00001036H
  000a7	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000aa	50		 push	 eax
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 441  : 
; 442  : #ifdef USE_XBOX_COLORS
; 443  : 
; 444  :         ListView_SetBkColor(hwnd, XBOX_BLACK);

  000b1	6a 00		 push	 0
  000b3	6a 00		 push	 0
  000b5	68 01 10 00 00	 push	 4097			; 00001001H
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  000bd	51		 push	 ecx
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 445  :         ListView_SetTextBkColor(hwnd, XBOX_BLACK);

  000c4	6a 00		 push	 0
  000c6	6a 00		 push	 0
  000c8	68 26 10 00 00	 push	 4134			; 00001026H
  000cd	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  000d0	52		 push	 edx
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 446  :         ListView_SetTextColor(hwnd, XBOX_GREEN);

  000d7	68 00 ff 00 00	 push	 65280			; 0000ff00H
  000dc	6a 00		 push	 0
  000de	68 24 10 00 00	 push	 4132			; 00001024H
  000e3	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000e6	50		 push	 eax
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 447  : 
; 448  : #endif // USE_XBOX_COLORS
; 449  :         
; 450  :         for(; lvc.iSubItem < (int)pColumnData->nColumnCount; lvc.iSubItem++)

  000ed	eb 09		 jmp	 SHORT $L51444
$L51445:
  000ef	8b 4d ec	 mov	 ecx, DWORD PTR _lvc$[ebp+20]
  000f2	83 c1 01	 add	 ecx, 1
  000f5	89 4d ec	 mov	 DWORD PTR _lvc$[ebp+20], ecx
$L51444:
  000f8	8b 55 f8	 mov	 edx, DWORD PTR _pColumnData$[ebp]
  000fb	8b 45 ec	 mov	 eax, DWORD PTR _lvc$[ebp+20]
  000fe	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00101	7d 37		 jge	 SHORT $L51446

; 451  :         {
; 452  :             lvc.pszText = (LPSTR)pColumnData->paColumnData[lvc.iSubItem].pszText;

  00103	8b 4d ec	 mov	 ecx, DWORD PTR _lvc$[ebp+20]
  00106	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00109	8b 55 f8	 mov	 edx, DWORD PTR _pColumnData$[ebp]
  0010c	8b 02		 mov	 eax, DWORD PTR [edx]
  0010e	8b 0c 01	 mov	 ecx, DWORD PTR [ecx+eax]
  00111	89 4d e4	 mov	 DWORD PTR _lvc$[ebp+12], ecx

; 453  :     
; 454  :             ListView_InsertColumn(hwnd, lvc.iSubItem, &lvc);

  00114	8d 55 d8	 lea	 edx, DWORD PTR _lvc$[ebp]
  00117	52		 push	 edx
  00118	8b 45 ec	 mov	 eax, DWORD PTR _lvc$[ebp+20]
  0011b	50		 push	 eax
  0011c	68 1b 10 00 00	 push	 4123			; 0000101bH
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00124	51		 push	 ecx
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 455  :             ListView_AutoSizeColumn(hwnd, lvc.iSubItem);

  0012b	8b 55 ec	 mov	 edx, DWORD PTR _lvc$[ebp+20]
  0012e	52		 push	 edx
  0012f	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 _ListView_AutoSizeColumn@8

; 456  :         }

  00138	eb b5		 jmp	 SHORT $L51445
$L51446:
$L51413:

; 457  :     }
; 458  : 
; 459  :     return hwnd;

  0013a	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]

; 460  : }

  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c2 04 00	 ret	 4
?CreateListView@CMainWindow@@MAEPAUHWND__@@I@Z ENDP	; CMainWindow::CreateListView
_TEXT	ENDS
EXTRN	__imp__CreateToolbarEx@52:NEAR
; Function compile flags: /Odt
;	COMDAT ?CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -16
_nBitmaps$ = -8
_i$ = -12
?CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ PROC NEAR	; CMainWindow::CreateToolBar, COMDAT
; _this$ = ecx

; 486  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 487  :     #define MAKE_TOOLBAR_BUTTON(command, image) \
; 488  :         { image, command, TBSTATE_ENABLED, BTNS_BUTTON, { 0, 0 }, 0, 0 }
; 489  : 
; 490  :     #define MAKE_TOOLBAR_CHECKBUTTON(command, image) \
; 491  :         { image, command, TBSTATE_ENABLED, BTNS_CHECK, { 0, 0 }, 0, 0 }
; 492  : 
; 493  :     #define MAKE_TOOLBAR_SEPARATOR() \
; 494  :         { 0, IDC_STATIC, TBSTATE_ENABLED, BTNS_SEP, { 0, 0 }, 0, 0 }
; 495  :     
; 496  :     static const TBBUTTON   aButtons[] =
; 497  :     {
; 498  :         MAKE_TOOLBAR_BUTTON(ID_FILE_NEW, BTN_LEAF),
; 499  :         MAKE_TOOLBAR_SEPARATOR(),
; 500  :         MAKE_TOOLBAR_BUTTON(ID_FILE_OPEN, BTN_OPEN),
; 501  :         MAKE_TOOLBAR_BUTTON(ID_FILE_SAVE, BTN_SAVE),
; 502  :         MAKE_TOOLBAR_SEPARATOR(),
; 503  :         MAKE_TOOLBAR_BUTTON(ID_BANK_ADD, BTN_BANK),
; 504  :         MAKE_TOOLBAR_BUTTON(ID_ENTRY_ADD, BTN_ENTRY),
; 505  :         MAKE_TOOLBAR_SEPARATOR(),
; 506  :         MAKE_TOOLBAR_CHECKBUTTON(ID_CONVERT_ADPCM, BTN_ADPCM),
; 507  :         MAKE_TOOLBAR_CHECKBUTTON(ID_CONVERT_8BIT, BTN_8BIT),
; 508  :         MAKE_TOOLBAR_SEPARATOR(),
; 509  :         MAKE_TOOLBAR_BUTTON(ID_ENTRY_AUDITION, BTN_AUDITION),
; 510  :         MAKE_TOOLBAR_BUTTON(ID_ENTRY_CANCEL_AUDITION, BTN_STOP),
; 511  :         MAKE_TOOLBAR_SEPARATOR(),
; 512  :         MAKE_TOOLBAR_BUTTON(ID_PROJECT_GENERATE, BTN_GENERATE),
; 513  :     };
; 514  :     
; 515  :     static const DWORD      dwStyle     = WS_CHILD | WS_VISIBLE | CCS_TOP | TBSTYLE_FLAT | TBSTYLE_TRANSPARENT | TBSTYLE_TOOLTIPS;
; 516  :     UINT                    nBitmaps;
; 517  :     HWND                    hwnd;
; 518  :     UINT                    i;
; 519  : 
; 520  :     for(i = 0, nBitmaps = 0; i < NUMELMS(aButtons); i++)

  00009	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00010	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nBitmaps$[ebp], 0
  00017	eb 09		 jmp	 SHORT $L51464
$L51465:
  00019	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0001c	83 c0 01	 add	 eax, 1
  0001f	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$L51464:
  00022	83 7d f4 0f	 cmp	 DWORD PTR _i$[ebp], 15	; 0000000fH
  00026	73 1e		 jae	 SHORT $L51466

; 521  :     {
; 522  :         if(BTNS_SEP != aButtons[i].fsStyle)

  00028	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  0002b	6b c9 14	 imul	 ecx, 20			; 00000014H
  0002e	33 d2		 xor	 edx, edx
  00030	8a 91 09 00 00
	00		 mov	 dl, BYTE PTR ?aButtons@?1??CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ@4QBU_TBBUTTON@@B[ecx+9]
  00036	83 fa 01	 cmp	 edx, 1
  00039	74 09		 je	 SHORT $L51467

; 523  :         {
; 524  :             nBitmaps++;

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _nBitmaps$[ebp]
  0003e	83 c0 01	 add	 eax, 1
  00041	89 45 f8	 mov	 DWORD PTR _nBitmaps$[ebp], eax
$L51467:

; 525  :         }
; 526  :     }

  00044	eb d3		 jmp	 SHORT $L51465
$L51466:

; 527  : 
; 528  :     return CreateToolbarEx(m_hwnd, dwStyle, IDC_MAIN_TOOLBAR, nBitmaps, g_hInstance, IDB_TOOLBAR, aButtons, NUMELMS(aButtons), 16, 16, 16, 16, sizeof(aButtons[0]));

  00046	6a 14		 push	 20			; 00000014H
  00048	6a 10		 push	 16			; 00000010H
  0004a	6a 10		 push	 16			; 00000010H
  0004c	6a 10		 push	 16			; 00000010H
  0004e	6a 10		 push	 16			; 00000010H
  00050	6a 0f		 push	 15			; 0000000fH
  00052	68 00 00 00 00	 push	 OFFSET FLAT:?aButtons@?1??CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ@4QBU_TBBUTTON@@B
  00057	6a 78		 push	 120			; 00000078H
  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0005f	51		 push	 ecx
  00060	8b 55 f8	 mov	 edx, DWORD PTR _nBitmaps$[ebp]
  00063	52		 push	 edx
  00064	6a 02		 push	 2
  00066	68 01 89 00 50	 push	 1342212353		; 50008901H
  0006b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00071	51		 push	 ecx
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateToolbarEx@52

; 529  : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?CreateToolBar@CMainWindow@@MAEPAUHWND__@@XZ ENDP	; CMainWindow::CreateToolBar
_TEXT	ENDS
PUBLIC	??_C@_0BD@BJDK@msctls_statusbar32?$AA@		; `string'
;	COMDAT ??_C@_0BD@BJDK@msctls_statusbar32?$AA@
CONST	SEGMENT
??_C@_0BD@BJDK@msctls_statusbar32?$AA@ DB 'msctls_statusbar32', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?CreateStatusBar@CMainWindow@@MAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -8
_hwnd$ = -4
?CreateStatusBar@CMainWindow@@MAEPAUHWND__@@XZ PROC NEAR ; CMainWindow::CreateStatusBar, COMDAT
; _this$ = ecx

; 555  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 556  :     static const DWORD      dwStyle = WS_CHILD | WS_VISIBLE | CCS_BOTTOM | SBARS_SIZEGRIP;
; 557  :     HWND                    hwnd;
; 558  :     
; 559  :     if(hwnd = CreateWindowEx(0, STATUSCLASSNAME, NULL, dwStyle, 0, 0, 0, 0, m_hwnd, NULL, g_hInstance, NULL))

  00009	6a 00		 push	 0
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  00010	50		 push	 eax
  00011	6a 00		 push	 0
  00013	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00019	52		 push	 edx
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	68 03 01 00 50	 push	 1342177539		; 50000103H
  00027	6a 00		 push	 0
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@BJDK@msctls_statusbar32?$AA@ ; `string'
  0002e	6a 00		 push	 0
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExA@48
  00036	89 45 fc	 mov	 DWORD PTR _hwnd$[ebp], eax
  00039	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0003d	74 0e		 je	 SHORT $L51475

; 560  :     {
; 561  :         SetWindowLong(hwnd, GWL_ID, IDC_MAIN_STATUSBAR);

  0003f	6a 03		 push	 3
  00041	6a f4		 push	 -12			; fffffff4H
  00043	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00046	50		 push	 eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12
$L51475:

; 562  :     }
; 563  : 
; 564  :     return hwnd;

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]

; 565  : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?CreateStatusBar@CMainWindow@@MAEPAUHWND__@@XZ ENDP	; CMainWindow::CreateStatusBar
_TEXT	ENDS
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
EXTRN	__imp__PostQuitMessage@4:NEAR
EXTRN	__imp__RegSetValueExA@24:NEAR
EXTRN	__imp__GetWindowPlacement@8:NEAR
EXTRN	__imp__RegCreateKeyA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnDestroy@CMainWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_plResult$ = 8
_this$ = -56
_hkey$ = -52
_wp$ = -44
_fHandled$ = -48
?OnDestroy@CMainWindow@@UAEHPAJ@Z PROC NEAR		; CMainWindow::OnDestroy, COMDAT
; _this$ = ecx

; 591  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 592  :     HKEY                    hkey;
; 593  :     WINDOWPLACEMENT         wp;
; 594  :     BOOL                    fHandled;
; 595  :     
; 596  :     fHandled = CWindow::OnDestroy(plResult);

  00009	8b 45 08	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?OnDestroy@CWindow@@UAEHPAJ@Z ; CWindow::OnDestroy
  00015	89 45 d0	 mov	 DWORD PTR _fHandled$[ebp], eax

; 597  : 
; 598  :     //
; 599  :     // Save window placement
; 600  :     //
; 601  :     
; 602  :     if(ERROR_SUCCESS == RegCreateKey(HKEY_CURRENT_USER, WBND_REG_KEY, &hkey))

  00018	8d 4d cc	 lea	 ecx, DWORD PTR _hkey$[ebp]
  0001b	51		 push	 ecx
  0001c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DD@OCIN@Software?2Microsoft?2Microsoft?5Xbo@ ; `string'
  00021	68 01 00 00 80	 push	 -2147483647		; 80000001H
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCreateKeyA@12
  0002c	85 c0		 test	 eax, eax
  0002e	75 3f		 jne	 SHORT $L51487

; 603  :     {
; 604  :         wp.length = sizeof(wp);

  00030	c7 45 d4 2c 00
	00 00		 mov	 DWORD PTR _wp$[ebp], 44	; 0000002cH

; 605  :         
; 606  :         if(GetWindowPlacement(m_hwnd, &wp))

  00037	8d 55 d4	 lea	 edx, DWORD PTR _wp$[ebp]
  0003a	52		 push	 edx
  0003b	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00041	51		 push	 ecx
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowPlacement@8
  00048	85 c0		 test	 eax, eax
  0004a	74 19		 je	 SHORT $L51488

; 607  :         {
; 608  :             RegSetValueEx(hkey, WBND_REG_VAL_WNDPOS, 0, REG_BINARY, (const BYTE *)&wp, sizeof(wp));

  0004c	6a 2c		 push	 44			; 0000002cH
  0004e	8d 55 d4	 lea	 edx, DWORD PTR _wp$[ebp]
  00051	52		 push	 edx
  00052	6a 03		 push	 3
  00054	6a 00		 push	 0
  00056	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@ONMM@Window?5Placement?$AA@ ; `string'
  0005b	8b 45 cc	 mov	 eax, DWORD PTR _hkey$[ebp]
  0005e	50		 push	 eax
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegSetValueExA@24
$L51488:

; 609  :         }
; 610  : 
; 611  :         RegCloseKey(hkey);

  00065	8b 4d cc	 mov	 ecx, DWORD PTR _hkey$[ebp]
  00068	51		 push	 ecx
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$L51487:

; 612  :     }
; 613  : 
; 614  :     //
; 615  :     // Bail
; 616  :     //
; 617  : 
; 618  :     PostQuitMessage(0);

  0006f	6a 00		 push	 0
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4

; 619  : 
; 620  :     return fHandled;

  00077	8b 45 d0	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 621  : }

  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
?OnDestroy@CMainWindow@@UAEHPAJ@Z ENDP			; CMainWindow::OnDestroy
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 159  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 160  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
_TEXT	ENDS
PUBLIC	?OnSize@CWindow@@UAEHKHHPAJ@Z			; CWindow::OnSize
EXTRN	__imp__GetWindowRect@8:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
;	COMDAT ?OnSize@CMainWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT
_dwResize$ = 8
_nWidth$ = 12
_nHeight$ = 16
_plResult$ = 20
_this$ = -88
_fHandled$ = -68
_rcClient$ = -84
_rcToolBar$ = -32
_rcStatusBar$ = -48
_rcBankList$ = -64
_rcEntryList$ = -16
?OnSize@CMainWindow@@UAEHKHHPAJ@Z PROC NEAR		; CMainWindow::OnSize, COMDAT
; _this$ = ecx

; 653  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	89 4d a8	 mov	 DWORD PTR _this$[ebp], ecx

; 654  :     static const int        nMargin             = 7;
; 655  :     static const int        nBankListPercent    = 35;
; 656  :     BOOL                    fHandled;
; 657  :     RECT                    rcClient;
; 658  :     RECT                    rcToolBar;
; 659  :     RECT                    rcStatusBar;
; 660  :     RECT                    rcBankList;
; 661  :     RECT                    rcEntryList;
; 662  :     
; 663  :     fHandled = CWindow::OnSize(dwResize, nWidth, nHeight, plResult);

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _dwResize$[ebp]
  00018	50		 push	 eax
  00019	8b 4d a8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnSize@CWindow@@UAEHKHHPAJ@Z ; CWindow::OnSize
  00021	89 45 bc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 664  : 
; 665  :     rcClient.left = 0;

  00024	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _rcClient$[ebp], 0

; 666  :     rcClient.top = 0;

  0002b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _rcClient$[ebp+4], 0

; 667  :     rcClient.right = nWidth;

  00032	8b 4d 0c	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00035	89 4d b4	 mov	 DWORD PTR _rcClient$[ebp+8], ecx

; 668  :     rcClient.bottom = nHeight;

  00038	8b 55 10	 mov	 edx, DWORD PTR _nHeight$[ebp]
  0003b	89 55 b8	 mov	 DWORD PTR _rcClient$[ebp+12], edx

; 669  : 
; 670  :     //
; 671  :     // Resize toolbar and status bar
; 672  :     //
; 673  :     
; 674  :     SendMessage(m_ahwndControls[IDC_MAIN_TOOLBAR], WM_SIZE, dwResize, MAKELPARAM(nWidth, nHeight));

  0003e	8b 45 0c	 mov	 eax, DWORD PTR _nWidth$[ebp]
  00041	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00046	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0004b	8b 4d 10	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  0004e	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00054	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0005a	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0005d	0b c1		 or	 eax, ecx
  0005f	50		 push	 eax
  00060	8b 55 08	 mov	 edx, DWORD PTR _dwResize$[ebp]
  00063	52		 push	 edx
  00064	6a 05		 push	 5
  00066	8b 45 a8	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0006c	51		 push	 ecx
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 675  :     SendMessage(m_ahwndControls[IDC_MAIN_STATUSBAR], WM_SIZE, dwResize, MAKELPARAM(nWidth, nHeight));

  00073	8b 55 0c	 mov	 edx, DWORD PTR _nWidth$[ebp]
  00076	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0007c	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00082	8b 45 10	 mov	 eax, DWORD PTR _nHeight$[ebp]
  00085	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0008a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0008f	c1 e0 10	 shl	 eax, 16			; 00000010H
  00092	0b d0		 or	 edx, eax
  00094	52		 push	 edx
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dwResize$[ebp]
  00098	51		 push	 ecx
  00099	6a 05		 push	 5
  0009b	8b 55 a8	 mov	 edx, DWORD PTR _this$[ebp]
  0009e	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  000a1	50		 push	 eax
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 676  : 
; 677  :     GetWindowRect(m_ahwndControls[IDC_MAIN_TOOLBAR], &rcToolBar);

  000a8	8d 4d e0	 lea	 ecx, DWORD PTR _rcToolBar$[ebp]
  000ab	51		 push	 ecx
  000ac	8b 55 a8	 mov	 edx, DWORD PTR _this$[ebp]
  000af	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  000b2	50		 push	 eax
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 678  :     GetWindowRect(m_ahwndControls[IDC_MAIN_STATUSBAR], &rcStatusBar);

  000b9	8d 4d d0	 lea	 ecx, DWORD PTR _rcStatusBar$[ebp]
  000bc	51		 push	 ecx
  000bd	8b 55 a8	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  000c3	50		 push	 eax
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 679  : 
; 680  :     rcClient.top += rcToolBar.bottom - rcToolBar.top;

  000ca	8b 4d ec	 mov	 ecx, DWORD PTR _rcToolBar$[ebp+12]
  000cd	2b 4d e4	 sub	 ecx, DWORD PTR _rcToolBar$[ebp+4]
  000d0	8b 55 b0	 mov	 edx, DWORD PTR _rcClient$[ebp+4]
  000d3	03 d1		 add	 edx, ecx
  000d5	89 55 b0	 mov	 DWORD PTR _rcClient$[ebp+4], edx

; 681  :     rcClient.bottom -= rcStatusBar.bottom - rcStatusBar.top;

  000d8	8b 45 dc	 mov	 eax, DWORD PTR _rcStatusBar$[ebp+12]
  000db	2b 45 d4	 sub	 eax, DWORD PTR _rcStatusBar$[ebp+4]
  000de	8b 4d b8	 mov	 ecx, DWORD PTR _rcClient$[ebp+12]
  000e1	2b c8		 sub	 ecx, eax
  000e3	89 4d b8	 mov	 DWORD PTR _rcClient$[ebp+12], ecx

; 682  : 
; 683  :     //
; 684  :     // Resize list views
; 685  :     //
; 686  : 
; 687  :     rcClient.left += nMargin;

  000e6	8b 55 ac	 mov	 edx, DWORD PTR _rcClient$[ebp]
  000e9	83 c2 07	 add	 edx, 7
  000ec	89 55 ac	 mov	 DWORD PTR _rcClient$[ebp], edx

; 688  :     rcClient.top += nMargin;

  000ef	8b 45 b0	 mov	 eax, DWORD PTR _rcClient$[ebp+4]
  000f2	83 c0 07	 add	 eax, 7
  000f5	89 45 b0	 mov	 DWORD PTR _rcClient$[ebp+4], eax

; 689  :     rcClient.right -= nMargin;

  000f8	8b 4d b4	 mov	 ecx, DWORD PTR _rcClient$[ebp+8]
  000fb	83 e9 07	 sub	 ecx, 7
  000fe	89 4d b4	 mov	 DWORD PTR _rcClient$[ebp+8], ecx

; 690  :     rcClient.bottom -= nMargin;

  00101	8b 55 b8	 mov	 edx, DWORD PTR _rcClient$[ebp+12]
  00104	83 ea 07	 sub	 edx, 7
  00107	89 55 b8	 mov	 DWORD PTR _rcClient$[ebp+12], edx

; 691  : 
; 692  :     rcBankList.left = rcClient.left;

  0010a	8b 45 ac	 mov	 eax, DWORD PTR _rcClient$[ebp]
  0010d	89 45 c0	 mov	 DWORD PTR _rcBankList$[ebp], eax

; 693  :     rcBankList.top = rcClient.top;

  00110	8b 4d b0	 mov	 ecx, DWORD PTR _rcClient$[ebp+4]
  00113	89 4d c4	 mov	 DWORD PTR _rcBankList$[ebp+4], ecx

; 694  :     rcBankList.right = rcBankList.left + ((rcClient.right - rcClient.left) * nBankListPercent / 100);

  00116	8b 45 b4	 mov	 eax, DWORD PTR _rcClient$[ebp+8]
  00119	2b 45 ac	 sub	 eax, DWORD PTR _rcClient$[ebp]
  0011c	6b c0 23	 imul	 eax, 35			; 00000023H
  0011f	99		 cdq
  00120	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00125	f7 f9		 idiv	 ecx
  00127	8b 55 c0	 mov	 edx, DWORD PTR _rcBankList$[ebp]
  0012a	03 d0		 add	 edx, eax
  0012c	89 55 c8	 mov	 DWORD PTR _rcBankList$[ebp+8], edx

; 695  :     rcBankList.bottom = rcClient.bottom;

  0012f	8b 45 b8	 mov	 eax, DWORD PTR _rcClient$[ebp+12]
  00132	89 45 cc	 mov	 DWORD PTR _rcBankList$[ebp+12], eax

; 696  : 
; 697  :     rcEntryList.left = rcBankList.right + nMargin;

  00135	8b 4d c8	 mov	 ecx, DWORD PTR _rcBankList$[ebp+8]
  00138	83 c1 07	 add	 ecx, 7
  0013b	89 4d f0	 mov	 DWORD PTR _rcEntryList$[ebp], ecx

; 698  :     rcEntryList.top = rcClient.top;

  0013e	8b 55 b0	 mov	 edx, DWORD PTR _rcClient$[ebp+4]
  00141	89 55 f4	 mov	 DWORD PTR _rcEntryList$[ebp+4], edx

; 699  :     rcEntryList.right = rcClient.right;

  00144	8b 45 b4	 mov	 eax, DWORD PTR _rcClient$[ebp+8]
  00147	89 45 f8	 mov	 DWORD PTR _rcEntryList$[ebp+8], eax

; 700  :     rcEntryList.bottom = rcClient.bottom;

  0014a	8b 4d b8	 mov	 ecx, DWORD PTR _rcClient$[ebp+12]
  0014d	89 4d fc	 mov	 DWORD PTR _rcEntryList$[ebp+12], ecx

; 701  :     
; 702  :     MoveWindow(m_ahwndControls[IDC_MAIN_BANKLIST], rcBankList);

  00150	8d 55 c0	 lea	 edx, DWORD PTR _rcBankList$[ebp]
  00153	52		 push	 edx
  00154	8b 45 a8	 mov	 eax, DWORD PTR _this$[ebp]
  00157	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0015a	51		 push	 ecx
  0015b	8b 55 a8	 mov	 edx, DWORD PTR _this$[ebp]
  0015e	8b 02		 mov	 eax, DWORD PTR [edx]
  00160	8b 4d a8	 mov	 ecx, DWORD PTR _this$[ebp]
  00163	ff 50 0c	 call	 DWORD PTR [eax+12]

; 703  :     MoveWindow(m_ahwndControls[IDC_MAIN_ENTRYLIST], rcEntryList);

  00166	8d 4d f0	 lea	 ecx, DWORD PTR _rcEntryList$[ebp]
  00169	51		 push	 ecx
  0016a	8b 55 a8	 mov	 edx, DWORD PTR _this$[ebp]
  0016d	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00170	50		 push	 eax
  00171	8b 4d a8	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	8b 11		 mov	 edx, DWORD PTR [ecx]
  00176	8b 4d a8	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	ff 52 0c	 call	 DWORD PTR [edx+12]

; 704  : 
; 705  :     return fHandled;

  0017c	8b 45 bc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 706  : }

  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 10 00	 ret	 16			; 00000010H
?OnSize@CMainWindow@@UAEHKHHPAJ@Z ENDP			; CMainWindow::OnSize
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHKHHPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 165  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHKHHPAJ@Z ENDP			; CWindow::OnSize
_TEXT	ENDS
PUBLIC	?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z	; CWindow::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
;	COMDAT ?OnCommand@CMainWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hwndControl$ = 16
_plResult$ = 20
_this$ = -8
_fHandled$ = -4
?OnCommand@CMainWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR ; CMainWindow::OnCommand, COMDAT
; _this$ = ecx

; 738  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 739  :     BOOL                    fHandled;
; 740  : 
; 741  :     fHandled = CWindow::OnCommand(nCommandId, nControlId, hwndControl, plResult);

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _hwndControl$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWindow::OnCommand
  00021	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 742  : 
; 743  :     if((nControlId >= ID_FILE_MRU_FILE1) && (nControlId < ID_FILE_MRU_FILE1 + MRU_MAX_COUNT))

  00024	81 7d 0c 10 e1
	00 00		 cmp	 DWORD PTR _nControlId$[ebp], 57616 ; 0000e110H
  0002b	72 30		 jb	 SHORT $L51531
  0002d	81 7d 0c 14 e1
	00 00		 cmp	 DWORD PTR _nControlId$[ebp], 57620 ; 0000e114H
  00034	73 27		 jae	 SHORT $L51531

; 744  :     {
; 745  :         OnOpenProject(m_MRU.m_aszPaths[nControlId - ID_FILE_MRU_FILE1]);

  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  00039	81 e9 10 e1 00
	00		 sub	 ecx, 57616		; 0000e110H
  0003f	69 c9 04 01 00
	00		 imul	 ecx, 260		; 00000104H
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8d 44 0a 64	 lea	 eax, DWORD PTR [edx+ecx+100]
  0004c	50		 push	 eax
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 11		 mov	 edx, DWORD PTR [ecx]
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	ff 52 5c	 call	 DWORD PTR [edx+92]

; 746  :     }
; 747  :     else

  00058	e9 0c 02 00 00	 jmp	 $L51532
$L51531:

; 748  :     {
; 749  :         switch(nControlId)
; 750  :         {

  0005d	8b 45 0c	 mov	 eax, DWORD PTR _nControlId$[ebp]
  00060	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00063	81 7d f4 55 9c
	00 00		 cmp	 DWORD PTR -12+[ebp], 40021 ; 00009c55H
  0006a	77 35		 ja	 SHORT $L52474
  0006c	81 7d f4 55 9c
	00 00		 cmp	 DWORD PTR -12+[ebp], 40021 ; 00009c55H
  00073	0f 84 6f 01 00
	00		 je	 $L51550
  00079	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  0007c	81 e9 41 9c 00
	00		 sub	 ecx, 40001		; 00009c41H
  00082	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  00085	83 7d f4 12	 cmp	 DWORD PTR -12+[ebp], 18	; 00000012H
  00089	0f 87 da 01 00
	00		 ja	 $L51534
  0008f	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  00092	33 c0		 xor	 eax, eax
  00094	8a 82 00 00 00
	00		 mov	 al, BYTE PTR $L52476[edx]
  0009a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L52477[eax*4]
$L52474:
  000a1	81 7d f4 60 9c
	00 00		 cmp	 DWORD PTR -12+[ebp], 40032 ; 00009c60H
  000a8	77 2d		 ja	 SHORT $L52475
  000aa	81 7d f4 60 9c
	00 00		 cmp	 DWORD PTR -12+[ebp], 40032 ; 00009c60H
  000b1	0f 84 a4 01 00
	00		 je	 $L51557
  000b7	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  000ba	81 e9 57 9c 00
	00		 sub	 ecx, 40023		; 00009c57H
  000c0	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  000c3	83 7d f4 08	 cmp	 DWORD PTR -12+[ebp], 8
  000c7	0f 87 9c 01 00
	00		 ja	 $L51534
  000cd	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  000d0	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L52478[edx*4]
$L52475:
  000d7	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]
  000da	2d 00 e1 00 00	 sub	 eax, 57600		; 0000e100H
  000df	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  000e2	83 7d f4 04	 cmp	 DWORD PTR -12+[ebp], 4
  000e6	0f 87 7d 01 00
	00		 ja	 $L51534
  000ec	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  000ef	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $L52479[ecx*4]
$L51537:

; 751  :             case ID_FILE_NEW:
; 752  :                 OnNewProject();

  000f6	6a 01		 push	 1
  000f8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fb	8b 02		 mov	 eax, DWORD PTR [edx]
  000fd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	ff 50 58	 call	 DWORD PTR [eax+88]

; 753  :                 break;

  00103	e9 61 01 00 00	 jmp	 $L51534
$L51538:

; 754  : 
; 755  :             case ID_FILE_OPEN:
; 756  :                 OnOpenProject();

  00108	6a 00		 push	 0
  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	ff 52 5c	 call	 DWORD PTR [edx+92]

; 757  :                 break;

  00115	e9 4f 01 00 00	 jmp	 $L51534
$L51539:

; 758  : 
; 759  :             case ID_FILE_SAVE:
; 760  :                 OnSaveProject(FALSE);

  0011a	6a 00		 push	 0
  0011c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	8b 10		 mov	 edx, DWORD PTR [eax]
  00121	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	ff 52 60	 call	 DWORD PTR [edx+96]

; 761  :                 break;

  00127	e9 3d 01 00 00	 jmp	 $L51534
$L51540:

; 762  : 
; 763  :             case ID_FILE_SAVE_AS:
; 764  :                 OnSaveProject(TRUE);

  0012c	6a 01		 push	 1
  0012e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00131	8b 10		 mov	 edx, DWORD PTR [eax]
  00133	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	ff 52 60	 call	 DWORD PTR [edx+96]

; 765  :                 break;

  00139	e9 2b 01 00 00	 jmp	 $L51534
$L51541:

; 766  : 
; 767  :             case ID_BANK_ADD:
; 768  :                 OnNewBank();

  0013e	6a 01		 push	 1
  00140	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00143	8b 10		 mov	 edx, DWORD PTR [eax]
  00145	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	ff 52 64	 call	 DWORD PTR [edx+100]

; 769  :                 break;

  0014b	e9 19 01 00 00	 jmp	 $L51534
$L51542:

; 770  :         
; 771  :             case ID_BANK_RENAME:
; 772  :                 OnRename(m_ahwndControls[IDC_MAIN_BANKLIST]);

  00150	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00153	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00156	51		 push	 ecx
  00157	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0015a	8b 02		 mov	 eax, DWORD PTR [edx]
  0015c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]

; 773  :                 break;

  00165	e9 ff 00 00 00	 jmp	 $L51534
$L51543:

; 774  :         
; 775  :             case ID_BANK_REMOVE:
; 776  :                 OnRemoveBank();

  0016a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00172	ff 52 68	 call	 DWORD PTR [edx+104]

; 777  :                 break;

  00175	e9 ef 00 00 00	 jmp	 $L51534
$L51544:

; 778  :         
; 779  :             case ID_ENTRY_ADD:
; 780  :                 OnNewEntry();

  0017a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017d	8b 10		 mov	 edx, DWORD PTR [eax]
  0017f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	ff 52 6c	 call	 DWORD PTR [edx+108]

; 781  :                 break;

  00185	e9 df 00 00 00	 jmp	 $L51534
$L51545:

; 782  :         
; 783  :             case ID_ENTRY_RENAME:
; 784  :                 OnRename(m_ahwndControls[IDC_MAIN_ENTRYLIST]);

  0018a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018d	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00190	51		 push	 ecx
  00191	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00194	8b 02		 mov	 eax, DWORD PTR [edx]
  00196	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00199	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]

; 785  :                 break;

  0019f	e9 c5 00 00 00	 jmp	 $L51534
$L51546:

; 786  :         
; 787  :             case ID_ENTRY_REMOVE:
; 788  :                 OnRemoveEntry();

  001a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	ff 52 70	 call	 DWORD PTR [edx+112]

; 789  :                 break;

  001af	e9 b5 00 00 00	 jmp	 $L51534
$L51547:

; 790  : 
; 791  :             case ID_CONVERT_ADPCM:
; 792  :                 OnConvert(WBFILTER_ADPCM);

  001b4	6a 01		 push	 1
  001b6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001b9	8b 10		 mov	 edx, DWORD PTR [eax]
  001bb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001be	ff 52 74	 call	 DWORD PTR [edx+116]

; 793  :                 break;

  001c1	e9 a3 00 00 00	 jmp	 $L51534
$L51548:

; 794  : 
; 795  :             case ID_CONVERT_8BIT:
; 796  :                 OnConvert(WBFILTER_8BIT);

  001c6	6a 02		 push	 2
  001c8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001cb	8b 10		 mov	 edx, DWORD PTR [eax]
  001cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	ff 52 74	 call	 DWORD PTR [edx+116]

; 797  :                 break;

  001d3	e9 91 00 00 00	 jmp	 $L51534
$L51549:

; 798  : 
; 799  :             case ID_PROJECT_GENERATE:
; 800  :                 OnGenerate();

  001d8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001db	8b 10		 mov	 edx, DWORD PTR [eax]
  001dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e0	ff 52 78	 call	 DWORD PTR [edx+120]

; 801  :                 break;

  001e3	e9 81 00 00 00	 jmp	 $L51534
$L51550:

; 802  :         
; 803  :             case ID_RENAME:
; 804  :                 OnRename();

  001e8	6a 00		 push	 0
  001ea	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ed	8b 10		 mov	 edx, DWORD PTR [eax]
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	ff 92 80 00 00
	00		 call	 DWORD PTR [edx+128]

; 805  :                 break;

  001f8	eb 6f		 jmp	 SHORT $L51534
$L51551:

; 806  :         
; 807  :             case ID_DELETE:
; 808  :                 OnDelete();

  001fa	6a 00		 push	 0
  001fc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00201	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00204	ff 52 7c	 call	 DWORD PTR [edx+124]

; 809  :                 break;

  00207	eb 60		 jmp	 SHORT $L51534
$L51552:

; 810  : 
; 811  :             case ID_SELECT_ALL:
; 812  :                 OnSelectAll();

  00209	6a 00		 push	 0
  0020b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0020e	8b 10		 mov	 edx, DWORD PTR [eax]
  00210	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	ff 92 84 00 00
	00		 call	 DWORD PTR [edx+132]

; 813  :                 break;

  00219	eb 4e		 jmp	 SHORT $L51534
$L51553:

; 814  :         
; 815  :             case ID_FILE_EXIT:
; 816  :                 OnExit();

  0021b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021e	8b 10		 mov	 edx, DWORD PTR [eax]
  00220	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00223	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]

; 817  :                 break;

  00229	eb 3e		 jmp	 SHORT $L51534
$L51554:

; 818  : 
; 819  :             case ID_HELP_ABOUT:
; 820  :                 OnAbout();

  0022b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0022e	8b 10		 mov	 edx, DWORD PTR [eax]
  00230	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00233	ff 92 8c 00 00
	00		 call	 DWORD PTR [edx+140]

; 821  :                 break;

  00239	eb 2e		 jmp	 SHORT $L51534
$L51555:

; 822  : 
; 823  :             case ID_REFRESH:
; 824  :                 OnRefresh();

  0023b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0023e	8b 10		 mov	 edx, DWORD PTR [eax]
  00240	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00243	ff 92 90 00 00
	00		 call	 DWORD PTR [edx+144]

; 825  :                 break;

  00249	eb 1e		 jmp	 SHORT $L51534
$L51556:

; 826  : 
; 827  :             case ID_ENTRY_AUDITION:
; 828  :                 OnAudition();

  0024b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0024e	8b 10		 mov	 edx, DWORD PTR [eax]
  00250	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00253	ff 92 94 00 00
	00		 call	 DWORD PTR [edx+148]

; 829  :                 break;

  00259	eb 0e		 jmp	 SHORT $L51534
$L51557:

; 830  : 
; 831  :             case ID_ENTRY_CANCEL_AUDITION:
; 832  :                 OnCancelAudition();

  0025b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0025e	8b 10		 mov	 edx, DWORD PTR [eax]
  00260	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00263	ff 92 98 00 00
	00		 call	 DWORD PTR [edx+152]
$L51534:
$L51532:

; 833  :                 break;
; 834  :         }
; 835  :     }
; 836  : 
; 837  :     return fHandled;

  00269	8b 45 fc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 838  : }

  0026c	8b e5		 mov	 esp, ebp
  0026e	5d		 pop	 ebp
  0026f	c2 10 00	 ret	 16			; 00000010H
$L52477:
  00272	00 00 00 00	 DD	 $L51553
  00276	00 00 00 00	 DD	 $L51554
  0027a	00 00 00 00	 DD	 $L51541
  0027e	00 00 00 00	 DD	 $L51543
  00282	00 00 00 00	 DD	 $L51544
  00286	00 00 00 00	 DD	 $L51546
  0028a	00 00 00 00	 DD	 $L51549
  0028e	00 00 00 00	 DD	 $L51551
  00292	00 00 00 00	 DD	 $L51542
  00296	00 00 00 00	 DD	 $L51545
  0029a	00 00 00 00	 DD	 $L51534
$L52476:
  0029e	00		 DB	 0
  0029f	0a		 DB	 10			; 0000000aH
  002a0	0a		 DB	 10			; 0000000aH
  002a1	0a		 DB	 10			; 0000000aH
  002a2	0a		 DB	 10			; 0000000aH
  002a3	01		 DB	 1
  002a4	02		 DB	 2
  002a5	03		 DB	 3
  002a6	04		 DB	 4
  002a7	05		 DB	 5
  002a8	0a		 DB	 10			; 0000000aH
  002a9	0a		 DB	 10			; 0000000aH
  002aa	0a		 DB	 10			; 0000000aH
  002ab	06		 DB	 6
  002ac	07		 DB	 7
  002ad	08		 DB	 8
  002ae	0a		 DB	 10			; 0000000aH
  002af	0a		 DB	 10			; 0000000aH
  002b0	09		 DB	 9
$L52478:
  002b1	00 00 00 00	 DD	 $L51552
  002b5	00 00 00 00	 DD	 $L51534
  002b9	00 00 00 00	 DD	 $L51534
  002bd	00 00 00 00	 DD	 $L51548
  002c1	00 00 00 00	 DD	 $L51547
  002c5	00 00 00 00	 DD	 $L51534
  002c9	00 00 00 00	 DD	 $L51534
  002cd	00 00 00 00	 DD	 $L51556
  002d1	00 00 00 00	 DD	 $L51555
$L52479:
  002d5	00 00 00 00	 DD	 $L51537
  002d9	00 00 00 00	 DD	 $L51538
  002dd	00 00 00 00	 DD	 $L51534
  002e1	00 00 00 00	 DD	 $L51539
  002e5	00 00 00 00	 DD	 $L51540
?OnCommand@CMainWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP	; CMainWindow::OnCommand
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CWindow::OnCommand, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 169  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 170  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CWindow::OnCommand
_TEXT	ENDS
EXTRN	__imp__DestroyWindow@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
;	COMDAT ?OnExit@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnExit@CMainWindow@@UAEXXZ PROC NEAR			; CMainWindow::OnExit, COMDAT
; _this$ = ecx

; 864  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 865  :     if(!CheckDirty())

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 92 c8 00 00
	00		 call	 DWORD PTR [edx+200]
  00015	85 c0		 test	 eax, eax
  00017	75 02		 jne	 SHORT $L51562

; 866  :     {
; 867  :         return;

  00019	eb 0d		 jmp	 SHORT $L51561
$L51562:

; 868  :     }
; 869  : 
; 870  :     DestroyWindow(m_hwnd);

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00021	51		 push	 ecx
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
$L51561:

; 871  : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?OnExit@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnExit
_TEXT	ENDS
PUBLIC	??_C@_0P@DDID@XDK?5version?5?$CFs?$AA@		; `string'
EXTRN	__imp__ShellAboutA@16:NEAR
EXTRN	__imp__DestroyIcon@4:NEAR
EXTRN	__imp__LoadImageA@24:NEAR
;	COMDAT ??_C@_0P@DDID@XDK?5version?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@DDID@XDK?5version?5?$CFs?$AA@ DB 'XDK version %s', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnAbout@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -520
_hicon$ = -516
_szText$ = -256
_szVersion$ = -512
?OnAbout@CMainWindow@@UAEXXZ PROC NEAR			; CMainWindow::OnAbout, COMDAT
; _this$ = ecx

; 897  : {   

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 02 00
	00		 sub	 esp, 520		; 00000208H
  00009	89 8d f8 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 898  : 
; 899  : #if 1
; 900  : 
; 901  :     HICON                   hicon;
; 902  :     CHAR                    szText[0x100];
; 903  :     CHAR                    szVersion[0x100];
; 904  : 
; 905  :     hicon = (HICON)LoadImage(g_hInstance, MAKEINTRESOURCE(IDI_PROJECT), IMAGE_ICON, 0, 0, LR_DEFAULTSIZE);

  0000f	6a 40		 push	 64			; 00000040H
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	6a 01		 push	 1
  00017	6a 6d		 push	 109			; 0000006dH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  0001e	50		 push	 eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageA@24
  00025	89 85 fc fd ff
	ff		 mov	 DWORD PTR _hicon$[ebp], eax

; 906  : 
; 907  :     GetWaveBundlerVersion(szVersion);

  0002b	8d 8d 00 fe ff
	ff		 lea	 ecx, DWORD PTR _szVersion$[ebp]
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 ?GetWaveBundlerVersion@@YGXPAD@Z ; GetWaveBundlerVersion

; 908  : 
; 909  :     sprintf(szText, "XDK version %s", szVersion);

  00037	8d 95 00 fe ff
	ff		 lea	 edx, DWORD PTR _szVersion$[ebp]
  0003d	52		 push	 edx
  0003e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@DDID@XDK?5version?5?$CFs?$AA@ ; `string'
  00043	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _sprintf
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 910  : 
; 911  :     ShellAbout(m_hwnd, g_pszAppTitle, szText, hicon);

  00052	8b 8d fc fd ff
	ff		 mov	 ecx, DWORD PTR _hicon$[ebp]
  00058	51		 push	 ecx
  00059	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  0005f	52		 push	 edx
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pszAppTitle
  00065	50		 push	 eax
  00066	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0006f	52		 push	 edx
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShellAboutA@16

; 912  : 
; 913  :     DestroyIcon(hicon);

  00076	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR _hicon$[ebp]
  0007c	50		 push	 eax
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyIcon@4

; 914  : 
; 915  : #else
; 916  : 
; 917  :     CAboutDialog            AboutDialog;
; 918  : 
; 919  :     AboutDialog.Create(this);
; 920  : 
; 921  : #endif
; 922  : 
; 923  : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?OnAbout@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnAbout
_TEXT	ENDS
PUBLIC	??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@	; `string'
;	COMDAT ??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\wavbndli.h
CONST	SEGMENT
??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@ DB '%lu.%lu.%lu', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?GetWaveBundlerVersion@@YGXPAD@Z
_TEXT	SEGMENT
_pszString$ = 8
?GetWaveBundlerVersion@@YGXPAD@Z PROC NEAR		; GetWaveBundlerVersion, COMDAT

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 43   :     static const DWORD      dwMajor = (VER_PRODUCTVERSION_DW >> 24) & 0xFF;
; 44   :     static const DWORD      dwMinor = (VER_PRODUCTVERSION_DW >> 16) & 0xFF;
; 45   :     static const DWORD      dwBuild = VER_PRODUCTVERSION_DW & 0xFFFF;
; 46   :     
; 47   :     sprintf(pszString, "%lu.%lu.%lu", dwMajor, dwMinor, dwBuild);

  00003	68 30 11 00 00	 push	 4400			; 00001130H
  00008	6a 00		 push	 0
  0000a	6a 01		 push	 1
  0000c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@ ; `string'
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszString$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _sprintf
  0001a	83 c4 14	 add	 esp, 20			; 00000014H

; 48   : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?GetWaveBundlerVersion@@YGXPAD@Z ENDP			; GetWaveBundlerVersion
_TEXT	ENDS
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
;	COMDAT ?OnNotify@CMainWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_pHdr$ = 8
_plResult$ = 12
_this$ = -8
_fHandled$ = -4
?OnNotify@CMainWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CMainWindow::OnNotify, COMDAT
; _this$ = ecx

; 951  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 952  :     BOOL                    fHandled;
; 953  : 
; 954  :     fHandled = CWindow::OnNotify(pHdr, plResult);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ; CWindow::OnNotify
  00019	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 955  : 
; 956  :     switch(pHdr->code)
; 957  :     {

  0001c	8b 55 08	 mov	 edx, DWORD PTR _pHdr$[ebp]
  0001f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00022	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00025	83 7d f4 96	 cmp	 DWORD PTR -12+[ebp], -106 ; ffffff96H
  00029	77 17		 ja	 SHORT $L52495
  0002b	83 7d f4 96	 cmp	 DWORD PTR -12+[ebp], -106 ; ffffff96H
  0002f	74 6f		 je	 SHORT $L51593
  00031	81 7d f4 f8 fd
	ff ff		 cmp	 DWORD PTR -12+[ebp], -520 ; fffffdf8H
  00038	74 16		 je	 SHORT $L51585
  0003a	83 7d f4 94	 cmp	 DWORD PTR -12+[ebp], -108 ; ffffff94H
  0003e	74 38		 je	 SHORT $L51589
  00040	eb 70		 jmp	 SHORT $L51582
$L52495:
  00042	83 7d f4 97	 cmp	 DWORD PTR -12+[ebp], -105 ; ffffff97H
  00046	74 44		 je	 SHORT $L51591
  00048	83 7d f4 9b	 cmp	 DWORD PTR -12+[ebp], -101 ; ffffff9bH
  0004c	74 16		 je	 SHORT $L51587
  0004e	eb 62		 jmp	 SHORT $L51582
$L51585:

; 958  :         case TTN_GETDISPINFO:
; 959  :             OnToolTipDisplayInfo((LPNMTTDISPINFO)pHdr);

  00050	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  00053	51		 push	 ecx
  00054	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 02		 mov	 eax, DWORD PTR [edx]
  00059	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 960  :             break;

  00062	eb 4e		 jmp	 SHORT $L51582
$L51587:

; 961  : 
; 962  :         case LVN_ITEMCHANGED:
; 963  :             OnListViewItemChanged((LPNMLISTVIEW)pHdr);

  00064	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  00067	51		 push	 ecx
  00068	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 02		 mov	 eax, DWORD PTR [edx]
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 964  :             break;

  00076	eb 3a		 jmp	 SHORT $L51582
$L51589:

; 965  : 
; 966  :         case LVN_COLUMNCLICK:
; 967  :             OnListViewColumnClick((LPNMLISTVIEW)pHdr);

  00078	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  0007b	51		 push	 ecx
  0007c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007f	8b 02		 mov	 eax, DWORD PTR [edx]
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	ff 90 ac 00 00
	00		 call	 DWORD PTR [eax+172]

; 968  :             break;

  0008a	eb 26		 jmp	 SHORT $L51582
$L51591:

; 969  : 
; 970  :         case LVN_BEGINLABELEDIT:
; 971  :             OnListViewBeginLabelEdit((NMLVDISPINFO *)pHdr);

  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  0008f	51		 push	 ecx
  00090	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00093	8b 02		 mov	 eax, DWORD PTR [edx]
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 972  :             break;

  0009e	eb 12		 jmp	 SHORT $L51582
$L51593:

; 973  : 
; 974  :         case LVN_ENDLABELEDIT:
; 975  :             OnListViewEndLabelEdit((NMLVDISPINFO *)pHdr);

  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _pHdr$[ebp]
  000a3	51		 push	 ecx
  000a4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a7	8b 02		 mov	 eax, DWORD PTR [edx]
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	ff 90 b4 00 00
	00		 call	 DWORD PTR [eax+180]
$L51582:

; 976  :             break;
; 977  :     }
; 978  : 
; 979  :     return fHandled;

  000b2	8b 45 fc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 980  : }

  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 08 00	 ret	 8
?OnNotify@CMainWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP	; CMainWindow::OnNotify
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 174  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 175  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
_TEXT	ENDS
;	COMDAT ?OnToolTipDisplayInfo@CMainWindow@@UAEXPAUtagNMTTDISPINFOA@@@Z
_TEXT	SEGMENT
_pInfo$ = 8
_this$ = -4
?OnToolTipDisplayInfo@CMainWindow@@UAEXPAUtagNMTTDISPINFOA@@@Z PROC NEAR ; CMainWindow::OnToolTipDisplayInfo, COMDAT
; _this$ = ecx

; 1006 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1007 :     pInfo->hinst = g_hInstance;

  00007	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  00010	89 48 60	 mov	 DWORD PTR [eax+96], ecx

; 1008 :     pInfo->lpszText = MAKEINTRESOURCE(pInfo->hdr.idFrom);

  00013	8b 55 08	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00016	33 c0		 xor	 eax, eax
  00018	66 8b 42 04	 mov	 ax, WORD PTR [edx+4]
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  0001f	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 1009 : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?OnToolTipDisplayInfo@CMainWindow@@UAEXPAUtagNMTTDISPINFOA@@@Z ENDP ; CMainWindow::OnToolTipDisplayInfo
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnListViewItemChanged@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z
_TEXT	SEGMENT
_pInfo$ = 8
_this$ = -4
?OnListViewItemChanged@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z PROC NEAR ; CMainWindow::OnListViewItemChanged, COMDAT
; _this$ = ecx

; 1035 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1036 :     if(pInfo->uChanged & LVIF_STATE)

  00009	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  0000c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0000f	83 e1 08	 and	 ecx, 8
  00012	85 c9		 test	 ecx, ecx
  00014	74 4f		 je	 SHORT $L51606

; 1037 :     {
; 1038 :         if((pInfo->uOldState & LVIS_SELECTED) || (pInfo->uNewState & LVIS_SELECTED))

  00016	8b 55 08	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00019	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0001c	83 e0 02	 and	 eax, 2
  0001f	85 c0		 test	 eax, eax
  00021	75 0d		 jne	 SHORT $L51608
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  00026	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00029	83 e2 02	 and	 edx, 2
  0002c	85 d2		 test	 edx, edx
  0002e	74 35		 je	 SHORT $L51607
$L51608:

; 1039 :         {
; 1040 :             switch(pInfo->hdr.idFrom)
; 1041 :             {

  00030	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  00033	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00036	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  00039	83 7d f8 00	 cmp	 DWORD PTR -8+[ebp], 0
  0003d	74 08		 je	 SHORT $L51613
  0003f	83 7d f8 01	 cmp	 DWORD PTR -8+[ebp], 1
  00043	74 12		 je	 SHORT $L51614
  00045	eb 1e		 jmp	 SHORT $L51610
$L51613:

; 1042 :                 case IDC_MAIN_BANKLIST:
; 1043 :                     OnBankListItemStateChange();

  00047	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	8b 02		 mov	 eax, DWORD PTR [edx]
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]

; 1044 :                     break;

  00055	eb 0e		 jmp	 SHORT $L51610
$L51614:

; 1045 : 
; 1046 :                 case IDC_MAIN_ENTRYLIST:
; 1047 :                     OnEntryListItemStateChange();

  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]
$L51610:
$L51607:
$L51606:

; 1048 :                     break;
; 1049 :             }
; 1050 :         }
; 1051 :     }
; 1052 : }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?OnListViewItemChanged@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z ENDP ; CMainWindow::OnListViewItemChanged
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnBankListItemStateChange@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -16
_hwnd$ = -4
_nSelCount$ = -12
_nSelItem$ = -8
?OnBankListItemStateChange@CMainWindow@@UAEXXZ PROC NEAR ; CMainWindow::OnBankListItemStateChange, COMDAT
; _this$ = ecx

; 1078 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1079 :     HWND                    hwnd        = m_ahwndControls[IDC_MAIN_BANKLIST];

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0000f	89 4d fc	 mov	 DWORD PTR _hwnd$[ebp], ecx

; 1080 :     int                     nSelCount;
; 1081 :     int                     nSelItem;
; 1082 :     
; 1083 :     //
; 1084 :     // If only one bank is selected, activate it
; 1085 :     //
; 1086 : 
; 1087 :     if(m_pProject)

  00012	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00015	83 7a 58 00	 cmp	 DWORD PTR [edx+88], 0
  00019	74 52		 je	 SHORT $L51622

; 1088 :     {
; 1089 :         if(1 == (nSelCount = ListView_GetSelectedCount(hwnd)))

  0001b	6a 00		 push	 0
  0001d	6a 00		 push	 0
  0001f	68 32 10 00 00	 push	 4146			; 00001032H
  00024	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0002e	89 45 f4	 mov	 DWORD PTR _nSelCount$[ebp], eax
  00031	83 7d f4 01	 cmp	 DWORD PTR _nSelCount$[ebp], 1
  00035	75 18		 jne	 SHORT $L51624

; 1090 :         {
; 1091 :             nSelItem = ListView_GetNextItem(hwnd, -1, LVNI_SELECTED);

  00037	6a 02		 push	 2
  00039	6a ff		 push	 -1
  0003b	68 0c 10 00 00	 push	 4108			; 0000100cH
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00043	51		 push	 ecx
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0004a	89 45 f8	 mov	 DWORD PTR _nSelItem$[ebp], eax

; 1092 :         }
; 1093 :         else

  0004d	eb 07		 jmp	 SHORT $L51636
$L51624:

; 1094 :         {
; 1095 :             nSelItem = -1;

  0004f	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _nSelItem$[ebp], -1
$L51636:

; 1096 :         }
; 1097 : 
; 1098 :         m_pProject->SelectBank(nSelItem);

  00056	8b 55 f8	 mov	 edx, DWORD PTR _nSelItem$[ebp]
  00059	52		 push	 edx
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00060	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00063	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	8b c8		 mov	 ecx, eax
  0006a	ff 52 48	 call	 DWORD PTR [edx+72]
$L51622:

; 1099 :     }
; 1100 : 
; 1101 :     //
; 1102 :     // Update command states
; 1103 :     //
; 1104 : 
; 1105 :     SetCommandStates();

  0006d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 10		 mov	 edx, DWORD PTR [eax]
  00072	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 1106 : }

  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
?OnBankListItemStateChange@CMainWindow@@UAEXXZ ENDP	; CMainWindow::OnBankListItemStateChange
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnEntryListItemStateChange@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnEntryListItemStateChange@CMainWindow@@UAEXXZ PROC NEAR ; CMainWindow::OnEntryListItemStateChange, COMDAT
; _this$ = ecx

; 1132 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1133 :     //
; 1134 :     // Update command states
; 1135 :     //
; 1136 :     
; 1137 :     SetCommandStates();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 1138 : }

  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?OnEntryListItemStateChange@CMainWindow@@UAEXXZ ENDP	; CMainWindow::OnEntryListItemStateChange
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnListViewColumnClick@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z
_TEXT	SEGMENT
_pInfo$ = 8
_this$ = -4
?OnListViewColumnClick@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z PROC NEAR ; CMainWindow::OnListViewColumnClick, COMDAT
; _this$ = ecx

; 1164 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1165 :     if(!m_pProject)

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  00010	75 02		 jne	 SHORT $L51645

; 1166 :     {
; 1167 :         return;

  00012	eb 6d		 jmp	 SHORT $L51644
$L51645:

; 1168 :     }
; 1169 :     
; 1170 :     switch(pInfo->hdr.idFrom)
; 1171 :     {

  00014	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	89 55 f8	 mov	 DWORD PTR -8+[ebp], edx
  0001d	83 7d f8 00	 cmp	 DWORD PTR -8+[ebp], 0
  00021	74 08		 je	 SHORT $L51650
  00023	83 7d f8 01	 cmp	 DWORD PTR -8+[ebp], 1
  00027	74 2e		 je	 SHORT $L51651
  00029	eb 56		 jmp	 SHORT $L51647
$L51650:

; 1172 :         case IDC_MAIN_BANKLIST:
; 1173 :             m_pProject->SortBankList(pInfo->iSubItem);

  0002b	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  0002e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00031	51		 push	 ecx
  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 49 58	 mov	 ecx, DWORD PTR [ecx+88]
  0003e	8b 10		 mov	 edx, DWORD PTR [eax]
  00040	ff 52 34	 call	 DWORD PTR [edx+52]

; 1174 : 
; 1175 :             MakeDirty();

  00043	6a 00		 push	 0
  00045	6a 01		 push	 1
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 10		 mov	 edx, DWORD PTR [eax]
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 1176 : 
; 1177 :             break;

  00055	eb 2a		 jmp	 SHORT $L51647
$L51651:

; 1178 : 
; 1179 :         case IDC_MAIN_ENTRYLIST:
; 1180 :             m_pProject->SortEntryList(pInfo->iSubItem);

  00057	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  0005a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0005d	51		 push	 ecx
  0005e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 49 58	 mov	 ecx, DWORD PTR [ecx+88]
  0006a	8b 10		 mov	 edx, DWORD PTR [eax]
  0006c	ff 52 38	 call	 DWORD PTR [edx+56]

; 1181 : 
; 1182 :             MakeDirty();

  0006f	6a 00		 push	 0
  00071	6a 01		 push	 1
  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 10		 mov	 edx, DWORD PTR [eax]
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L51647:
$L51644:

; 1183 : 
; 1184 :             break;
; 1185 :     }
; 1186 : }

  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?OnListViewColumnClick@CMainWindow@@UAEXPAUtagNMLISTVIEW@@@Z ENDP ; CMainWindow::OnListViewColumnClick
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnListViewBeginLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z
_TEXT	SEGMENT
_this$ = -4
?OnListViewBeginLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z PROC NEAR ; CMainWindow::OnListViewBeginLabelEdit, COMDAT
; _this$ = ecx

; 1212 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1213 :     EnableAccelerators(FALSE);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 10		 mov	 edx, DWORD PTR [eax]
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	ff 52 44	 call	 DWORD PTR [edx+68]

; 1214 : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?OnListViewBeginLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z ENDP ; CMainWindow::OnListViewBeginLabelEdit
_TEXT	ENDS
PUBLIC	??_C@_0O@ONNI@Bad?5item?5data?$AA@		; `string'
EXTRN	_ListView_GetItemParam@8:NEAR
;	COMDAT ??_C@_0O@ONNI@Bad?5item?5data?$AA@
CONST	SEGMENT
??_C@_0O@ONNI@Bad?5item?5data?$AA@ DB 'Bad item data', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnListViewEndLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z
_TEXT	SEGMENT
_pInfo$ = 8
_this$ = -12
_pBank$ = -4
_pEntry$ = -8
?OnListViewEndLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z PROC NEAR ; CMainWindow::OnListViewEndLabelEdit, COMDAT
; _this$ = ecx

; 1240 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1241 :     CGuiWaveBank *         pBank;
; 1242 :     CGuiWaveBankEntry *    pEntry;
; 1243 :     
; 1244 :     EnableAccelerators(TRUE);

  00009	6a 01		 push	 1
  0000b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000e	8b 10		 mov	 edx, DWORD PTR [eax]
  00010	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	ff 52 44	 call	 DWORD PTR [edx+68]

; 1245 : 
; 1246 :     if(!m_pProject)

  00016	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  0001d	75 05		 jne	 SHORT $L51662

; 1247 :     {
; 1248 :         return;

  0001f	e9 ee 00 00 00	 jmp	 $L51659
$L51662:

; 1249 :     }
; 1250 : 
; 1251 :     if(!pInfo->item.pszText)

  00024	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  00027	83 79 20 00	 cmp	 DWORD PTR [ecx+32], 0
  0002b	75 05		 jne	 SHORT $L51663

; 1252 :     {
; 1253 :         return;

  0002d	e9 e0 00 00 00	 jmp	 $L51659
$L51663:

; 1254 :     }
; 1255 : 
; 1256 :     if(!*pInfo->item.pszText)

  00032	8b 55 08	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00035	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00038	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0003b	85 c9		 test	 ecx, ecx
  0003d	75 05		 jne	 SHORT $L51664

; 1257 :     {
; 1258 :         return;

  0003f	e9 ce 00 00 00	 jmp	 $L51659
$L51664:

; 1259 :     }
; 1260 : 
; 1261 :     if(IDC_MAIN_BANKLIST == pInfo->hdr.idFrom)

  00044	8b 55 08	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00047	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  0004b	75 5d		 jne	 SHORT $L51665

; 1262 :     {
; 1263 :         if(pBank = (CGuiWaveBank *)ListView_GetItemParam(m_ahwndControls[IDC_MAIN_BANKLIST], pInfo->item.iItem))

  0004d	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  00050	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00053	51		 push	 ecx
  00054	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 _ListView_GetItemParam@8
  00060	89 45 fc	 mov	 DWORD PTR _pBank$[ebp], eax
  00063	83 7d fc 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  00067	74 26		 je	 SHORT $L51667

; 1264 :         {
; 1265 :             pBank->SetName(pInfo->item.pszText);

  00069	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  0006c	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0006f	52		 push	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _pBank$[ebp]
  00073	8b 10		 mov	 edx, DWORD PTR [eax]
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00078	ff 52 08	 call	 DWORD PTR [edx+8]

; 1266 : 
; 1267 :             MakeDirty();

  0007b	6a 00		 push	 0
  0007d	6a 01		 push	 1
  0007f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 10		 mov	 edx, DWORD PTR [eax]
  00084	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 1268 :         }
; 1269 :         else

  0008d	eb 19		 jmp	 SHORT $L51668
$L51667:

; 1270 :         {
; 1271 :             ASSERTMSG("Bad item data");

  0008f	68 f7 04 00 00	 push	 1271			; 000004f7H
  00094	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00099	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@ONNI@Bad?5item?5data?$AA@ ; `string'
  0009e	6a 01		 push	 1
  000a0	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000a5	83 c4 10	 add	 esp, 16			; 00000010H
$L51668:

; 1272 :         }
; 1273 :     }
; 1274 :     else if(IDC_MAIN_ENTRYLIST == pInfo->hdr.idFrom)

  000a8	eb 68		 jmp	 SHORT $L51670
$L51665:
  000aa	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  000ad	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  000b1	75 5f		 jne	 SHORT $L51671

; 1275 :     {
; 1276 :         if(pEntry = (CGuiWaveBankEntry *)ListView_GetItemParam(m_ahwndControls[IDC_MAIN_ENTRYLIST], pInfo->item.iItem))

  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  000b6	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000b9	52		 push	 edx
  000ba	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  000c0	51		 push	 ecx
  000c1	e8 00 00 00 00	 call	 _ListView_GetItemParam@8
  000c6	89 45 f8	 mov	 DWORD PTR _pEntry$[ebp], eax
  000c9	83 7d f8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000cd	74 2a		 je	 SHORT $L51673

; 1277 :         {
; 1278 :             if(SUCCEEDED(pEntry->SetName(pInfo->item.pszText)))

  000cf	8b 55 08	 mov	 edx, DWORD PTR _pInfo$[ebp]
  000d2	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000d5	50		 push	 eax
  000d6	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  000d9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000db	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  000de	ff 52 08	 call	 DWORD PTR [edx+8]
  000e1	85 c0		 test	 eax, eax
  000e3	7c 12		 jl	 SHORT $L51675

; 1279 :             {
; 1280 :                 MakeDirty();

  000e5	6a 00		 push	 0
  000e7	6a 01		 push	 1
  000e9	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 10		 mov	 edx, DWORD PTR [eax]
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L51675:

; 1281 :             }
; 1282 :         }
; 1283 :         else

  000f7	eb 19		 jmp	 SHORT $L51676
$L51673:

; 1284 :         {
; 1285 :             ASSERTMSG("Bad item data");

  000f9	68 05 05 00 00	 push	 1285			; 00000505H
  000fe	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00103	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@ONNI@Bad?5item?5data?$AA@ ; `string'
  00108	6a 01		 push	 1
  0010a	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0010f	83 c4 10	 add	 esp, 16			; 00000010H
$L51676:
$L51671:
$L51670:
$L51659:

; 1286 :         }
; 1287 :     }
; 1288 : }

  00112	8b e5		 mov	 esp, ebp
  00114	5d		 pop	 ebp
  00115	c2 04 00	 ret	 4
?OnListViewEndLabelEdit@CMainWindow@@UAEXPAUtagLVDISPINFO@@@Z ENDP ; CMainWindow::OnListViewEndLabelEdit
_TEXT	ENDS
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
EXTRN	__imp__TrackPopupMenu@28:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnContextMenu@CMainWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_hwnd$ = 8
_x$ = 12
_y$ = 16
_plResult$ = 20
_this$ = -12
_hmenu$ = -4
_fHandled$ = -8
?OnContextMenu@CMainWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CMainWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 1320 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1321 :     HMENU                   hmenu;
; 1322 :     BOOL                    fHandled;
; 1323 : 
; 1324 :     fHandled = CWindow::OnContextMenu(hwnd, x, y, plResult);

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ; CWindow::OnContextMenu
  00021	89 45 f8	 mov	 DWORD PTR _fHandled$[ebp], eax

; 1325 :     
; 1326 :     if(hwnd == m_ahwndControls[IDC_MAIN_BANKLIST])

  00024	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  0002a	3b 51 40	 cmp	 edx, DWORD PTR [ecx+64]
  0002d	75 14		 jne	 SHORT $L51686

; 1327 :     {
; 1328 :         hmenu = GetSubMenu(m_ahmenuPopup[IDC_MAIN_BANKLIST], 0);

  0002f	6a 00		 push	 0
  00031	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00037	51		 push	 ecx
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8
  0003e	89 45 fc	 mov	 DWORD PTR _hmenu$[ebp], eax

; 1329 :     }
; 1330 :     else if(hwnd == m_ahwndControls[IDC_MAIN_ENTRYLIST])

  00041	eb 26		 jmp	 SHORT $L51687
$L51686:
  00043	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00046	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00049	3b 42 44	 cmp	 eax, DWORD PTR [edx+68]
  0004c	75 14		 jne	 SHORT $L51688

; 1331 :     {
; 1332 :         hmenu = GetSubMenu(m_ahmenuPopup[IDC_MAIN_ENTRYLIST], 0);

  0004e	6a 00		 push	 0
  00050	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  00056	52		 push	 edx
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSubMenu@8
  0005d	89 45 fc	 mov	 DWORD PTR _hmenu$[ebp], eax

; 1333 :     }
; 1334 :     else

  00060	eb 07		 jmp	 SHORT $L51689
$L51688:

; 1335 :     {
; 1336 :         hmenu = NULL;

  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hmenu$[ebp], 0
$L51689:
$L51687:

; 1337 :     }
; 1338 :     
; 1339 :     if(hmenu)

  00069	83 7d fc 00	 cmp	 DWORD PTR _hmenu$[ebp], 0
  0006d	74 1f		 je	 SHORT $L51690

; 1340 :     {
; 1341 :         TrackPopupMenu(hmenu, TPM_RIGHTBUTTON, x, y, 0, m_hwnd, NULL);

  0006f	6a 00		 push	 0
  00071	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00077	51		 push	 ecx
  00078	6a 00		 push	 0
  0007a	8b 55 10	 mov	 edx, DWORD PTR _y$[ebp]
  0007d	52		 push	 edx
  0007e	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00081	50		 push	 eax
  00082	6a 02		 push	 2
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _hmenu$[ebp]
  00087	51		 push	 ecx
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TrackPopupMenu@28
$L51690:

; 1342 :     }
; 1343 : 
; 1344 :     return fHandled;

  0008e	8b 45 f8	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 1345 : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CMainWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CMainWindow::OnContextMenu
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 179  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 180  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
_TEXT	ENDS
PUBLIC	?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z	; CWindow::OnMenuSelect
EXTRN	__imp__SetWindowTextA@8:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
;	COMDAT ?OnMenuSelect@CMainWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT
_nMenuItem$ = 8
_nFlags$ = 12
_hMenu$ = 16
_plResult$ = 20
_this$ = -264
_szText$ = -256
_fHandled$ = -260
?OnMenuSelect@CMainWindow@@UAEHIIPAUHMENU__@@PAJ@Z PROC NEAR ; CMainWindow::OnMenuSelect, COMDAT
; _this$ = ecx

; 1377 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1378 :     CHAR                    szText[0x100];
; 1379 :     BOOL                    fHandled;
; 1380 : 
; 1381 :     fHandled = CWindow::OnMenuSelect(nMenuItem, nFlags, hMenu, plResult);

  0000f	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _hMenu$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR _nFlags$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR _nMenuItem$[ebp]
  0001e	50		 push	 eax
  0001f	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z ; CWindow::OnMenuSelect
  0002a	89 85 fc fe ff
	ff		 mov	 DWORD PTR _fHandled$[ebp], eax

; 1382 : 
; 1383 :     szText[0] = 0;

  00030	c6 85 00 ff ff
	ff 00		 mov	 BYTE PTR _szText$[ebp], 0

; 1384 : 
; 1385 :     if(!(nFlags & (MF_SYSMENU | MF_POPUP)))

  00037	8b 4d 0c	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  0003a	81 e1 10 20 00
	00		 and	 ecx, 8208		; 00002010H
  00040	85 c9		 test	 ecx, ecx
  00042	75 1d		 jne	 SHORT $L51700

; 1386 :     {
; 1387 :         LoadString(g_hInstance, nMenuItem, szText, NUMELMS(szText));

  00044	68 00 01 00 00	 push	 256			; 00000100H
  00049	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  0004f	52		 push	 edx
  00050	8b 45 08	 mov	 eax, DWORD PTR _nMenuItem$[ebp]
  00053	50		 push	 eax
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0005a	51		 push	 ecx
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16
$L51700:

; 1388 :     }
; 1389 : 
; 1390 :     SetWindowText(m_ahwndControls[IDC_MAIN_STATUSBAR], szText);

  00061	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00067	52		 push	 edx
  00068	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00071	51		 push	 ecx
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 1391 : 
; 1392 :     return fHandled;

  00078	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _fHandled$[ebp]

; 1393 : }

  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 10 00	 ret	 16			; 00000010H
?OnMenuSelect@CMainWindow@@UAEHIIPAUHMENU__@@PAJ@Z ENDP	; CMainWindow::OnMenuSelect
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z PROC NEAR ; CWindow::OnMenuSelect, COMDAT
; _this$ = ecx

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 185  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z ENDP	; CWindow::OnMenuSelect
_TEXT	ENDS
PUBLIC	??_C@_0BK@MDEA@CGuiWaveBankProject?$CIthis?$CJ?$AA@ ; `string'
EXTRN	??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z:NEAR	; CGuiWaveBankProject::CGuiWaveBankProject
;	COMDAT ??_C@_0BK@MDEA@CGuiWaveBankProject?$CIthis?$CJ?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
CONST	SEGMENT
??_C@_0BK@MDEA@CGuiWaveBankProject?$CIthis?$CJ?$AA@ DB 'CGuiWaveBankProje'
	DB	'ct(this)', 00H				; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnNewProject@CMainWindow@@UAEXH@Z
_TEXT	SEGMENT
$T52535 = -8
$T52536 = -12
$T52539 = -16
_fAddBank$ = 8
_this$ = -20
_hr$ = -4
?OnNewProject@CMainWindow@@UAEXH@Z PROC NEAR		; CMainWindow::OnNewProject, COMDAT
; _this$ = ecx

; 1419 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1420 :     HRESULT                 hr;
; 1421 :     
; 1422 :     if(!CheckDirty())

  00009	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 10		 mov	 edx, DWORD PTR [eax]
  0000e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	ff 92 c8 00 00
	00		 call	 DWORD PTR [edx+200]
  00017	85 c0		 test	 eax, eax
  00019	75 05		 jne	 SHORT $L51706

; 1423 :     {
; 1424 :         return;

  0001b	e9 08 01 00 00	 jmp	 $L51704
$L51706:

; 1425 :     }
; 1426 : 
; 1427 :     //
; 1428 :     // Delete the old project
; 1429 :     //
; 1430 :     
; 1431 :     DELETE(m_pProject);

  00020	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  00027	74 37		 je	 SHORT $L51707
  00029	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0002f	89 55 f4	 mov	 DWORD PTR $T52536[ebp], edx
  00032	8b 45 f4	 mov	 eax, DWORD PTR $T52536[ebp]
  00035	89 45 f8	 mov	 DWORD PTR $T52535[ebp], eax
  00038	83 7d f8 00	 cmp	 DWORD PTR $T52535[ebp], 0
  0003c	74 11		 je	 SHORT $L52537
  0003e	6a 01		 push	 1
  00040	8b 4d f8	 mov	 ecx, DWORD PTR $T52535[ebp]
  00043	8b 11		 mov	 edx, DWORD PTR [ecx]
  00045	8b 4d f8	 mov	 ecx, DWORD PTR $T52535[ebp]
  00048	ff 12		 call	 DWORD PTR [edx]
  0004a	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0004d	eb 07		 jmp	 SHORT $L52538
$L52537:
  0004f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L52538:
  00056	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00059	c7 40 58 00 00
	00 00		 mov	 DWORD PTR [eax+88], 0
$L51707:

; 1432 :     
; 1433 :     //
; 1434 :     // Update UI
; 1435 :     //
; 1436 : 
; 1437 :     UpdateAppTitle();

  00060	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 11		 mov	 edx, DWORD PTR [ecx]
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	ff 92 cc 00 00
	00		 call	 DWORD PTR [edx+204]

; 1438 :     SetCommandStates();

  0006e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b 10		 mov	 edx, DWORD PTR [eax]
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 1439 : 
; 1440 :     //
; 1441 :     // Create a new project
; 1442 :     //
; 1443 :     
; 1444 :     hr = HRFROMP(m_pProject = NEW(CGuiWaveBankProject(this)));

  0007c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@MDEA@CGuiWaveBankProject?$CIthis?$CJ?$AA@ ; `string'
  00081	68 a4 05 00 00	 push	 1444			; 000005a4H
  00086	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0008b	68 74 03 00 00	 push	 884			; 00000374H
  00090	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00095	83 c4 10	 add	 esp, 16			; 00000010H
  00098	89 45 f0	 mov	 DWORD PTR $T52539[ebp], eax
  0009b	83 7d f0 00	 cmp	 DWORD PTR $T52539[ebp], 0
  0009f	74 11		 je	 SHORT $L52540
  000a1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d f0	 mov	 ecx, DWORD PTR $T52539[ebp]
  000a8	e8 00 00 00 00	 call	 ??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z ; CGuiWaveBankProject::CGuiWaveBankProject
  000ad	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  000b0	eb 07		 jmp	 SHORT $L52541
$L52540:
  000b2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L52541:
  000b9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	8b 55 e4	 mov	 edx, DWORD PTR -28+[ebp]
  000bf	89 51 58	 mov	 DWORD PTR [ecx+88], edx
  000c2	8b 45 e4	 mov	 eax, DWORD PTR -28+[ebp]
  000c5	f7 d8		 neg	 eax
  000c7	1b c0		 sbb	 eax, eax
  000c9	25 f2 ff f8 7f	 and	 eax, 2147024882		; 7ff8fff2H
  000ce	05 0e 00 07 80	 add	 eax, -2147024882	; 8007000eH
  000d3	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1445 : 
; 1446 :     if(SUCCEEDED(hr))

  000d6	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000da	7c 1f		 jl	 SHORT $L51716

; 1447 :     {
; 1448 :         m_pProject->Attach(m_ahwndControls[IDC_MAIN_BANKLIST], m_ahwndControls[IDC_MAIN_ENTRYLIST]);

  000dc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  000e2	52		 push	 edx
  000e3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  000e9	51		 push	 ecx
  000ea	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ed	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 49 58	 mov	 ecx, DWORD PTR [ecx+88]
  000f6	8b 10		 mov	 edx, DWORD PTR [eax]
  000f8	ff 52 40	 call	 DWORD PTR [edx+64]
$L51716:

; 1449 :     }
; 1450 : 
; 1451 :     if(SUCCEEDED(hr))

  000fb	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ff	7c 0e		 jl	 SHORT $L51718

; 1452 :     {
; 1453 :         UpdateAppTitle();

  00101	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 10		 mov	 edx, DWORD PTR [eax]
  00106	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	ff 92 cc 00 00
	00		 call	 DWORD PTR [edx+204]
$L51718:

; 1454 :     }
; 1455 : 
; 1456 :     //
; 1457 :     // Add a bank to the new project
; 1458 :     //
; 1459 : 
; 1460 :     if(SUCCEEDED(hr) && fAddBank)

  0010f	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00113	7c 13		 jl	 SHORT $L51720
  00115	83 7d 08 00	 cmp	 DWORD PTR _fAddBank$[ebp], 0
  00119	74 0d		 je	 SHORT $L51720

; 1461 :     {
; 1462 :         OnNewBank();

  0011b	6a 01		 push	 1
  0011d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00120	8b 10		 mov	 edx, DWORD PTR [eax]
  00122	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	ff 52 64	 call	 DWORD PTR [edx+100]
$L51720:
$L51704:

; 1463 :     }
; 1464 : }

  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 04 00	 ret	 4
?OnNewProject@CMainWindow@@UAEXH@Z ENDP			; CMainWindow::OnNewProject
_TEXT	ENDS
EXTRN	?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolAlloc
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT
_cbBuffer$ = 8
_pszFile$ = 12
_nLine$ = 16
_pszClass$ = 20
??2@YAPAXIPBDK0@Z PROC NEAR				; operator new, COMDAT

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 233  :     return DirectSound::CMemoryManager::TrackingMemAlloc(pszFile, nLine, pszClass, DSOUND_OBJECT_POOL_TAG, cbBuffer, TRUE); 

  00003	6a 01		 push	 1
  00005	8b 45 08	 mov	 eax, DWORD PTR _cbBuffer$[ebp]
  00008	50		 push	 eax
  00009	68 44 53 6f 62	 push	 1651462980		; 626f5344H
  0000e	8b 4d 14	 mov	 ecx, DWORD PTR _pszClass$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 10	 mov	 edx, DWORD PTR _nLine$[ebp]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc

; 234  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??2@YAPAXIPBDK0@Z ENDP					; operator new
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
_TEXT	ENDS
;	COMDAT ?OnNewBank@CMainWindow@@UAEXH@Z
_TEXT	SEGMENT
_fAddEntries$ = 8
_this$ = -8
_hr$ = -4
?OnNewBank@CMainWindow@@UAEXH@Z PROC NEAR		; CMainWindow::OnNewBank, COMDAT
; _this$ = ecx

; 1490 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1491 :     HRESULT                 hr;
; 1492 :     
; 1493 :     if(!m_pProject)

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  00010	75 02		 jne	 SHORT $L51726

; 1494 :     {
; 1495 :         return;

  00012	eb 43		 jmp	 SHORT $L51724
$L51726:

; 1496 :     }
; 1497 : 
; 1498 :     hr = m_pProject->AddBank();

  00014	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0001a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00020	8b 12		 mov	 edx, DWORD PTR [edx]
  00022	ff 52 24	 call	 DWORD PTR [edx+36]
  00025	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1499 : 
; 1500 :     if(SUCCEEDED(hr))

  00028	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0002c	7c 12		 jl	 SHORT $L51728

; 1501 :     {
; 1502 :         MakeDirty();

  0002e	6a 00		 push	 0
  00030	6a 01		 push	 1
  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 10		 mov	 edx, DWORD PTR [eax]
  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L51728:

; 1503 :     }
; 1504 : 
; 1505 :     if(SUCCEEDED(hr) && fAddEntries)

  00040	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00044	7c 11		 jl	 SHORT $L51730
  00046	83 7d 08 00	 cmp	 DWORD PTR _fAddEntries$[ebp], 0
  0004a	74 0b		 je	 SHORT $L51730

; 1506 :     {
; 1507 :         OnNewEntry();

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 10		 mov	 edx, DWORD PTR [eax]
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	ff 52 6c	 call	 DWORD PTR [edx+108]
$L51730:
$L51724:

; 1508 :     }
; 1509 : }

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?OnNewBank@CMainWindow@@UAEXH@Z ENDP			; CMainWindow::OnNewBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnRemoveBank@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -16
_hwnd$ = -4
_nItemCount$ = -8
_i$ = -12
?OnRemoveBank@CMainWindow@@UAEXXZ PROC NEAR		; CMainWindow::OnRemoveBank, COMDAT
; _this$ = ecx

; 1535 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1536 :     static const LPCSTR     pszSingle   = "Are you sure you want to remove the bank from the project?";
; 1537 :     static const LPCSTR     pszMultiple = "Are you sure you want to remove the selected banks from the project?";
; 1538 :     HWND                    hwnd        = m_ahwndControls[IDC_MAIN_BANKLIST];

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0000f	89 4d fc	 mov	 DWORD PTR _hwnd$[ebp], ecx

; 1539 :     int                     nItemCount;
; 1540 :     int                     i;
; 1541 :     
; 1542 :     if(!m_pProject)

  00012	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00015	83 7a 58 00	 cmp	 DWORD PTR [edx+88], 0
  00019	75 05		 jne	 SHORT $L51744

; 1543 :     {
; 1544 :         return;

  0001b	e9 a2 00 00 00	 jmp	 $L51734
$L51744:

; 1545 :     }
; 1546 : 
; 1547 :     if((nItemCount = ListView_GetSelectedCount(hwnd)) > 0)

  00020	6a 00		 push	 0
  00022	6a 00		 push	 0
  00024	68 32 10 00 00	 push	 4146			; 00001032H
  00029	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00033	89 45 f8	 mov	 DWORD PTR _nItemCount$[ebp], eax
  00036	83 7d f8 00	 cmp	 DWORD PTR _nItemCount$[ebp], 0
  0003a	0f 8e 82 00 00
	00		 jle	 $L51746

; 1548 :     {
; 1549 :         if(IDYES == MessageBox(nItemCount > 1 ? pszMultiple : pszSingle, MB_ICONQUESTION | MB_YESNO))

  00040	83 7d f8 01	 cmp	 DWORD PTR _nItemCount$[ebp], 1
  00044	7e 0b		 jle	 SHORT $L52551
  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszMultiple@?1??OnRemoveBank@CMainWindow@@UAEXXZ@4QBDB
  0004c	89 4d ec	 mov	 DWORD PTR -20+[ebp], ecx
  0004f	eb 09		 jmp	 SHORT $L52552
$L52551:
  00051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszSingle@?1??OnRemoveBank@CMainWindow@@UAEXXZ@4QBDB
  00057	89 55 ec	 mov	 DWORD PTR -20+[ebp], edx
$L52552:
  0005a	6a 24		 push	 36			; 00000024H
  0005c	8b 45 ec	 mov	 eax, DWORD PTR -20+[ebp]
  0005f	50		 push	 eax
  00060	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 11		 mov	 edx, DWORD PTR [ecx]
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	ff 52 18	 call	 DWORD PTR [edx+24]
  0006b	83 f8 06	 cmp	 eax, 6
  0006e	75 52		 jne	 SHORT $L51747
$L51749:

; 1550 :         {
; 1551 :             while(TRUE)

  00070	b8 01 00 00 00	 mov	 eax, 1
  00075	85 c0		 test	 eax, eax
  00077	74 37		 je	 SHORT $L51750

; 1552 :             {
; 1553 :                 if(-1 == (i = ListView_GetNextItem(hwnd, -1, LVNI_SELECTED)))

  00079	6a 02		 push	 2
  0007b	6a ff		 push	 -1
  0007d	68 0c 10 00 00	 push	 4108			; 0000100cH
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00085	51		 push	 ecx
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0008c	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
  0008f	83 7d f4 ff	 cmp	 DWORD PTR _i$[ebp], -1
  00093	75 02		 jne	 SHORT $L51762

; 1554 :                 {
; 1555 :                     break;

  00095	eb 19		 jmp	 SHORT $L51750
$L51762:

; 1556 :                 }
; 1557 : 
; 1558 :                 m_pProject->RemoveBank(i);

  00097	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  0009a	52		 push	 edx
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  000a1	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	8b c8		 mov	 ecx, eax
  000ab	ff 52 28	 call	 DWORD PTR [edx+40]

; 1559 :             }

  000ae	eb c0		 jmp	 SHORT $L51749
$L51750:

; 1560 : 
; 1561 :             MakeDirty();

  000b0	6a 00		 push	 0
  000b2	6a 01		 push	 1
  000b4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 10		 mov	 edx, DWORD PTR [eax]
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L51747:
$L51746:
$L51734:

; 1562 :         }
; 1563 :     }
; 1564 : }

  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?OnRemoveBank@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnRemoveBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNewEntry@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnNewEntry@CMainWindow@@UAEXXZ PROC NEAR		; CMainWindow::OnNewEntry, COMDAT
; _this$ = ecx

; 1590 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1591 :     if(!m_pProject)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  0000e	75 02		 jne	 SHORT $L51767

; 1592 :     {
; 1593 :         return;

  00010	eb 27		 jmp	 SHORT $L51766
$L51767:

; 1594 :     }
; 1595 : 
; 1596 :     if(SUCCEEDED(m_pProject->AddEntry()))

  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0001e	8b 12		 mov	 edx, DWORD PTR [edx]
  00020	ff 52 2c	 call	 DWORD PTR [edx+44]
  00023	85 c0		 test	 eax, eax
  00025	7c 12		 jl	 SHORT $L51769

; 1597 :     {
; 1598 :         MakeDirty();

  00027	6a 00		 push	 0
  00029	6a 01		 push	 1
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L51769:
$L51766:

; 1599 :     }
; 1600 : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?OnNewEntry@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnNewEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnRemoveEntry@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -16
_hwnd$ = -4
_nItemCount$ = -8
_i$ = -12
?OnRemoveEntry@CMainWindow@@UAEXXZ PROC NEAR		; CMainWindow::OnRemoveEntry, COMDAT
; _this$ = ecx

; 1626 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1627 :     static const LPCSTR     pszSingle   = "Are you sure you want to remove the entry from the bank?";
; 1628 :     static const LPCSTR     pszMultiple = "Are you sure you want to remove the selected entries from the bank?";
; 1629 :     HWND                    hwnd        = m_ahwndControls[IDC_MAIN_ENTRYLIST];

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0000f	89 4d fc	 mov	 DWORD PTR _hwnd$[ebp], ecx

; 1630 :     int                     nItemCount;
; 1631 :     int                     i;
; 1632 :     
; 1633 :     if(!m_pProject)

  00012	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00015	83 7a 58 00	 cmp	 DWORD PTR [edx+88], 0
  00019	75 05		 jne	 SHORT $L51783

; 1634 :     {
; 1635 :         return;

  0001b	e9 a2 00 00 00	 jmp	 $L51773
$L51783:

; 1636 :     }
; 1637 : 
; 1638 :     if((nItemCount = ListView_GetSelectedCount(hwnd)) > 0)

  00020	6a 00		 push	 0
  00022	6a 00		 push	 0
  00024	68 32 10 00 00	 push	 4146			; 00001032H
  00029	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00033	89 45 f8	 mov	 DWORD PTR _nItemCount$[ebp], eax
  00036	83 7d f8 00	 cmp	 DWORD PTR _nItemCount$[ebp], 0
  0003a	0f 8e 82 00 00
	00		 jle	 $L51785

; 1639 :     {
; 1640 :         if(IDYES == MessageBox(nItemCount > 1 ? pszMultiple : pszSingle, MB_ICONQUESTION | MB_YESNO))

  00040	83 7d f8 01	 cmp	 DWORD PTR _nItemCount$[ebp], 1
  00044	7e 0b		 jle	 SHORT $L52559
  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszMultiple@?1??OnRemoveEntry@CMainWindow@@UAEXXZ@4QBDB
  0004c	89 4d ec	 mov	 DWORD PTR -20+[ebp], ecx
  0004f	eb 09		 jmp	 SHORT $L52560
$L52559:
  00051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszSingle@?1??OnRemoveEntry@CMainWindow@@UAEXXZ@4QBDB
  00057	89 55 ec	 mov	 DWORD PTR -20+[ebp], edx
$L52560:
  0005a	6a 24		 push	 36			; 00000024H
  0005c	8b 45 ec	 mov	 eax, DWORD PTR -20+[ebp]
  0005f	50		 push	 eax
  00060	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 11		 mov	 edx, DWORD PTR [ecx]
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	ff 52 18	 call	 DWORD PTR [edx+24]
  0006b	83 f8 06	 cmp	 eax, 6
  0006e	75 52		 jne	 SHORT $L51786
$L51788:

; 1641 :         {
; 1642 :             while(TRUE)

  00070	b8 01 00 00 00	 mov	 eax, 1
  00075	85 c0		 test	 eax, eax
  00077	74 37		 je	 SHORT $L51789

; 1643 :             {
; 1644 :                 if(-1 == (i = ListView_GetNextItem(hwnd, -1, LVNI_SELECTED)))

  00079	6a 02		 push	 2
  0007b	6a ff		 push	 -1
  0007d	68 0c 10 00 00	 push	 4108			; 0000100cH
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00085	51		 push	 ecx
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0008c	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
  0008f	83 7d f4 ff	 cmp	 DWORD PTR _i$[ebp], -1
  00093	75 02		 jne	 SHORT $L51801

; 1645 :                 {
; 1646 :                     break;

  00095	eb 19		 jmp	 SHORT $L51789
$L51801:

; 1647 :                 }
; 1648 : 
; 1649 :                 m_pProject->RemoveEntry(i);

  00097	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  0009a	52		 push	 edx
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  000a1	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	8b c8		 mov	 ecx, eax
  000ab	ff 52 30	 call	 DWORD PTR [edx+48]

; 1650 :             }

  000ae	eb c0		 jmp	 SHORT $L51788
$L51789:

; 1651 : 
; 1652 :             MakeDirty();

  000b0	6a 00		 push	 0
  000b2	6a 01		 push	 1
  000b4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 10		 mov	 edx, DWORD PTR [eax]
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L51786:
$L51785:
$L51773:

; 1653 :         }
; 1654 :     }
; 1655 : }

  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?OnRemoveEntry@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnRemoveEntry
_TEXT	ENDS
PUBLIC	??_C@_06JCGL@pEntry?$AA@			; `string'
;	COMDAT ??_C@_06JCGL@pEntry?$AA@
CONST	SEGMENT
??_C@_06JCGL@pEntry?$AA@ DB 'pEntry', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnConvert@CMainWindow@@UAEXK@Z
_TEXT	SEGMENT
_dwMask$ = 8
_this$ = -28
_hwnd$ = -4
_dwFlags$ = -24
_nChanged$ = -8
_nItemCount$ = -12
_pEntry$ = -16
_i$ = -20
?OnConvert@CMainWindow@@UAEXK@Z PROC NEAR		; CMainWindow::OnConvert, COMDAT
; _this$ = ecx

; 1681 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 1682 :     static const LPCSTR     pszConfusion    = "Not all of the selected entries are able to be converted";
; 1683 :     HWND                    hwnd            = m_ahwndControls[IDC_MAIN_ENTRYLIST];

  00009	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0000f	89 4d fc	 mov	 DWORD PTR _hwnd$[ebp], ecx

; 1684 :     DWORD                   dwFlags         = 0;

  00012	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _dwFlags$[ebp], 0

; 1685 :     int                     nChanged        = 0;

  00019	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nChanged$[ebp], 0

; 1686 :     int                     nItemCount;
; 1687 :     CGuiWaveBankEntry *     pEntry;
; 1688 :     int                     i;
; 1689 :     
; 1690 :     if(!m_pProject)

  00020	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  00023	83 7a 58 00	 cmp	 DWORD PTR [edx+88], 0
  00027	75 05		 jne	 SHORT $L51815

; 1691 :     {
; 1692 :         return;

  00029	e9 6f 01 00 00	 jmp	 $L51805
$L51815:

; 1693 :     }
; 1694 : 
; 1695 :     //
; 1696 :     // If any selected items are compressed, we'll uncompress and vice-versa
; 1697 :     //
; 1698 : 
; 1699 :     if((nItemCount = ListView_GetSelectedCount(hwnd)) > 0)

  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	68 32 10 00 00	 push	 4146			; 00001032H
  00037	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0003a	50		 push	 eax
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00041	89 45 f4	 mov	 DWORD PTR _nItemCount$[ebp], eax
  00044	83 7d f4 00	 cmp	 DWORD PTR _nItemCount$[ebp], 0
  00048	0f 8e 4f 01 00
	00		 jle	 $L51817

; 1700 :     {
; 1701 :         i = -1;

  0004e	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _i$[ebp], -1
$L51819:

; 1702 :         
; 1703 :         while(TRUE)

  00055	b9 01 00 00 00	 mov	 ecx, 1
  0005a	85 c9		 test	 ecx, ecx
  0005c	74 62		 je	 SHORT $L51820

; 1704 :         {
; 1705 :             if(-1 == (i = ListView_GetNextItem(hwnd, i, LVNI_SELECTED)))

  0005e	6a 02		 push	 2
  00060	8b 55 ec	 mov	 edx, DWORD PTR _i$[ebp]
  00063	52		 push	 edx
  00064	68 0c 10 00 00	 push	 4108			; 0000100cH
  00069	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0006c	50		 push	 eax
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00073	89 45 ec	 mov	 DWORD PTR _i$[ebp], eax
  00076	83 7d ec ff	 cmp	 DWORD PTR _i$[ebp], -1
  0007a	75 02		 jne	 SHORT $L51832

; 1706 :             {
; 1707 :                 break;

  0007c	eb 42		 jmp	 SHORT $L51820
$L51832:

; 1708 :             }
; 1709 : 
; 1710 :             pEntry = (CGuiWaveBankEntry *)ListView_GetItemParam(hwnd, i);

  0007e	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  00081	51		 push	 ecx
  00082	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 _ListView_GetItemParam@8
  0008b	89 45 f0	 mov	 DWORD PTR _pEntry$[ebp], eax

; 1711 :             ASSERT(pEntry);

  0008e	68 af 06 00 00	 push	 1711			; 000006afH
  00093	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00098	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_06JCGL@pEntry?$AA@ ; `string'
  0009d	33 c0		 xor	 eax, eax
  0009f	83 7d f0 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000a3	0f 94 c0	 sete	 al
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000ac	83 c4 10	 add	 esp, 16			; 00000010H

; 1712 : 
; 1713 :             dwFlags |= pEntry->m_dwFlags;

  000af	8b 4d f0	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  000b2	8b 55 e8	 mov	 edx, DWORD PTR _dwFlags$[ebp]
  000b5	0b 91 28 03 00
	00		 or	 edx, DWORD PTR [ecx+808]
  000bb	89 55 e8	 mov	 DWORD PTR _dwFlags$[ebp], edx

; 1714 :         }

  000be	eb 95		 jmp	 SHORT $L51819
$L51820:

; 1715 : 
; 1716 :         dwFlags = ~dwFlags & dwMask;

  000c0	8b 45 e8	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  000c3	f7 d0		 not	 eax
  000c5	23 45 08	 and	 eax, DWORD PTR _dwMask$[ebp]
  000c8	89 45 e8	 mov	 DWORD PTR _dwFlags$[ebp], eax

; 1717 : 
; 1718 :         i = -1;

  000cb	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _i$[ebp], -1
$L51836:

; 1719 :         
; 1720 :         while(TRUE)

  000d2	b9 01 00 00 00	 mov	 ecx, 1
  000d7	85 c9		 test	 ecx, ecx
  000d9	0f 84 82 00 00
	00		 je	 $L51837

; 1721 :         {
; 1722 :             if(-1 == (i = ListView_GetNextItem(hwnd, i, LVNI_SELECTED)))

  000df	6a 02		 push	 2
  000e1	8b 55 ec	 mov	 edx, DWORD PTR _i$[ebp]
  000e4	52		 push	 edx
  000e5	68 0c 10 00 00	 push	 4108			; 0000100cH
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000ed	50		 push	 eax
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000f4	89 45 ec	 mov	 DWORD PTR _i$[ebp], eax
  000f7	83 7d ec ff	 cmp	 DWORD PTR _i$[ebp], -1
  000fb	75 02		 jne	 SHORT $L51849

; 1723 :             {
; 1724 :                 break;

  000fd	eb 62		 jmp	 SHORT $L51837
$L51849:

; 1725 :             }
; 1726 : 
; 1727 :             pEntry = (CGuiWaveBankEntry *)ListView_GetItemParam(hwnd, i);

  000ff	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  00102	51		 push	 ecx
  00103	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00106	52		 push	 edx
  00107	e8 00 00 00 00	 call	 _ListView_GetItemParam@8
  0010c	89 45 f0	 mov	 DWORD PTR _pEntry$[ebp], eax

; 1728 :             ASSERT(pEntry);

  0010f	68 c0 06 00 00	 push	 1728			; 000006c0H
  00114	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00119	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_06JCGL@pEntry?$AA@ ; `string'
  0011e	33 c0		 xor	 eax, eax
  00120	83 7d f0 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  00124	0f 94 c0	 sete	 al
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0012d	83 c4 10	 add	 esp, 16			; 00000010H

; 1729 : 
; 1730 :             if(dwFlags == pEntry->SetFlags(WBFILTER_MASK, dwFlags))

  00130	8b 4d e8	 mov	 ecx, DWORD PTR _dwFlags$[ebp]
  00133	51		 push	 ecx
  00134	6a 03		 push	 3
  00136	8b 55 f0	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00139	8b 02		 mov	 eax, DWORD PTR [edx]
  0013b	8b 4d f0	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0013e	ff 50 10	 call	 DWORD PTR [eax+16]
  00141	39 45 e8	 cmp	 DWORD PTR _dwFlags$[ebp], eax
  00144	75 09		 jne	 SHORT $L51851

; 1731 :             {
; 1732 :                 nChanged++;

  00146	8b 4d f8	 mov	 ecx, DWORD PTR _nChanged$[ebp]
  00149	83 c1 01	 add	 ecx, 1
  0014c	89 4d f8	 mov	 DWORD PTR _nChanged$[ebp], ecx
$L51851:

; 1733 :             }
; 1734 : 
; 1735 :             pEntry->UpdateListView();

  0014f	6a ff		 push	 -1
  00151	8b 55 f0	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00154	8b 02		 mov	 eax, DWORD PTR [edx]
  00156	8b 4d f0	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00159	ff 50 30	 call	 DWORD PTR [eax+48]

; 1736 :         }

  0015c	e9 71 ff ff ff	 jmp	 $L51836
$L51837:

; 1737 : 
; 1738 :         MakeDirty();

  00161	6a 00		 push	 0
  00163	6a 01		 push	 1
  00165	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00168	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 1739 : 
; 1740 :         OnEntryListItemStateChange();

  00173	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00176	8b 10		 mov	 edx, DWORD PTR [eax]
  00178	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0017b	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]

; 1741 : 
; 1742 :         if(nChanged < nItemCount)

  00181	8b 45 f8	 mov	 eax, DWORD PTR _nChanged$[ebp]
  00184	3b 45 f4	 cmp	 eax, DWORD PTR _nItemCount$[ebp]
  00187	7d 14		 jge	 SHORT $L51852

; 1743 :         {
; 1744 :             MessageBox(pszConfusion, MB_OK | MB_ICONINFORMATION);

  00189	6a 40		 push	 64			; 00000040H
  0018b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszConfusion@?1??OnConvert@CMainWindow@@UAEXK@Z@4QBDB
  00191	51		 push	 ecx
  00192	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  00195	8b 02		 mov	 eax, DWORD PTR [edx]
  00197	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0019a	ff 50 18	 call	 DWORD PTR [eax+24]
$L51852:
$L51817:
$L51805:

; 1745 :         }
; 1746 :     }
; 1747 : }

  0019d	8b e5		 mov	 esp, ebp
  0019f	5d		 pop	 ebp
  001a0	c2 04 00	 ret	 4
?OnConvert@CMainWindow@@UAEXK@Z ENDP			; CMainWindow::OnConvert
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnGenerate@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnGenerate@CMainWindow@@UAEXXZ PROC NEAR		; CMainWindow::OnGenerate, COMDAT
; _this$ = ecx

; 1773 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1774 : 
; 1775 : #if 0
; 1776 : 
; 1777 :     static const LPCSTR     pszMessage  = "All entries were successfully written";
; 1778 :     HRESULT                 hr;
; 1779 :     
; 1780 :     if(!m_pProject)
; 1781 :     {
; 1782 :         return;
; 1783 :     }
; 1784 : 
; 1785 :     SetCursor(LoadCursor(NULL, IDC_WAIT));
; 1786 :     
; 1787 :     hr = m_pProject->Generate(this);
; 1788 : 
; 1789 :     SendMessage(m_ahwndControls[IDC_MAIN_STATUSBAR], SB_SETTEXT, 0, NULL);
; 1790 : 
; 1791 :     SetCursor(LoadCursor(NULL, IDC_ARROW));
; 1792 :     
; 1793 :     if(SUCCEEDED(hr))
; 1794 :     {
; 1795 :         MessageBox(pszMessage, MB_OK | MB_ICONINFORMATION);
; 1796 :     }
; 1797 : 
; 1798 : #else
; 1799 : 
; 1800 :     m_pProject->Generate();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0000d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00010	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b c8		 mov	 ecx, eax
  00017	ff 52 3c	 call	 DWORD PTR [edx+60]

; 1801 : 
; 1802 : #endif
; 1803 :     
; 1804 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?OnGenerate@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnGenerate
_TEXT	ENDS
PUBLIC	??_C@_0M@ICAK@Processing?5?$AA@			; `string'
EXTRN	_strcpy:NEAR
;	COMDAT ??_C@_0M@ICAK@Processing?5?$AA@
CONST	SEGMENT
??_C@_0M@ICAK@Processing?5?$AA@ DB 'Processing ', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?BeginEntry@CMainWindow@@UAEHPBDK@Z
_TEXT	SEGMENT
_pszFile$ = 8
_this$ = -524
_szText$ = -520
?BeginEntry@CMainWindow@@UAEHPBDK@Z PROC NEAR		; CMainWindow::BeginEntry, COMDAT
; _this$ = ecx

; 1834 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 02 00
	00		 sub	 esp, 524		; 0000020cH
  00009	89 8d f4 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1835 :     CHAR                    szText[MAX_PATH + 0x100];
; 1836 : 
; 1837 :     strcpy(szText, "Processing ");

  0000f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@ICAK@Processing?5?$AA@ ; `string'
  00014	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 _strcpy
  00020	83 c4 08	 add	 esp, 8

; 1838 : 
; 1839 :     strcat(szText, pszFile);

  00023	8b 4d 08	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  00026	51		 push	 ecx
  00027	8d 95 f8 fd ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 _strcat
  00033	83 c4 08	 add	 esp, 8

; 1840 :     // _splitpath(pszFile, NULL, NULL, &szText[strlen(szText)], NULL);
; 1841 : 
; 1842 :     SendMessage(m_ahwndControls[IDC_MAIN_STATUSBAR], SB_SETTEXT, 0, (LPARAM)szText);

  00036	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0003c	50		 push	 eax
  0003d	6a 00		 push	 0
  0003f	68 01 04 00 00	 push	 1025			; 00000401H
  00044	8b 8d f4 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0004d	52		 push	 edx
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 1843 : 
; 1844 :     return TRUE;

  00054	b8 01 00 00 00	 mov	 eax, 1

; 1845 : }

  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
?BeginEntry@CMainWindow@@UAEHPBDK@Z ENDP		; CMainWindow::BeginEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSaveProject@CMainWindow@@UAEXH@Z
_TEXT	SEGMENT
_fPrompt$ = 8
_this$ = -4
?OnSaveProject@CMainWindow@@UAEXH@Z PROC NEAR		; CMainWindow::OnSaveProject, COMDAT
; _this$ = ecx

; 1871 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1872 :     if(!m_pProject)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  0000e	75 02		 jne	 SHORT $L51869

; 1873 :     {
; 1874 :         return;

  00010	eb 44		 jmp	 SHORT $L51868
$L51869:

; 1875 :     }
; 1876 : 
; 1877 :     if(SUCCEEDED(m_pProject->Save(fPrompt)))

  00012	8b 4d 08	 mov	 ecx, DWORD PTR _fPrompt$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	8b 49 58	 mov	 ecx, DWORD PTR [ecx+88]
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	ff 52 20	 call	 DWORD PTR [edx+32]
  00027	85 c0		 test	 eax, eax
  00029	7c 2b		 jl	 SHORT $L51871

; 1878 :     {
; 1879 :         m_MRU.AddItem(m_pProject->m_szProjectFile);

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00031	83 c1 28	 add	 ecx, 40			; 00000028H
  00034	51		 push	 ecx
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 5c	 add	 ecx, 92			; 0000005cH
  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00041	ff 50 10	 call	 DWORD PTR [eax+16]

; 1880 : 
; 1881 :         MakeDirty(FALSE, TRUE);

  00044	6a 01		 push	 1
  00046	6a 00		 push	 0
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L51871:
$L51868:

; 1882 :     }
; 1883 : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?OnSaveProject@CMainWindow@@UAEXH@Z ENDP		; CMainWindow::OnSaveProject
_TEXT	ENDS
EXTRN	__strcmpi:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnOpenProject@CMainWindow@@UAEXPBD@Z
_TEXT	SEGMENT
_pszProjectFile$ = 8
_this$ = -288
_szPath$ = -264
_psz$ = -268
_hr$ = -272
$T52576 = -276
$T52577 = -280
$T52580 = -284
?OnOpenProject@CMainWindow@@UAEXPBD@Z PROC NEAR		; CMainWindow::OnOpenProject, COMDAT
; _this$ = ecx

; 1909 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	89 8d e0 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1910 :     CHAR                    szPath[MAX_PATH];
; 1911 :     LPSTR                   psz;
; 1912 :     HRESULT                 hr;
; 1913 : 
; 1914 :     //
; 1915 :     // Strip any quotes from the path
; 1916 :     //
; 1917 : 
; 1918 :     if(pszProjectFile)

  0000f	83 7d 08 00	 cmp	 DWORD PTR _pszProjectFile$[ebp], 0
  00013	74 6a		 je	 SHORT $L51879

; 1919 :     {
; 1920 :         psz = szPath;

  00015	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  0001b	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _psz$[ebp], eax
$L51881:

; 1921 :         
; 1922 :         while(TRUE)

  00021	b9 01 00 00 00	 mov	 ecx, 1
  00026	85 c9		 test	 ecx, ecx
  00028	74 4c		 je	 SHORT $L51882

; 1923 :         {
; 1924 :             if('\"' == *pszProjectFile)

  0002a	8b 55 08	 mov	 edx, DWORD PTR _pszProjectFile$[ebp]
  0002d	0f be 02	 movsx	 eax, BYTE PTR [edx]
  00030	83 f8 22	 cmp	 eax, 34			; 00000022H
  00033	75 0b		 jne	 SHORT $L51883

; 1925 :             {
; 1926 :                 pszProjectFile++;

  00035	8b 4d 08	 mov	 ecx, DWORD PTR _pszProjectFile$[ebp]
  00038	83 c1 01	 add	 ecx, 1
  0003b	89 4d 08	 mov	 DWORD PTR _pszProjectFile$[ebp], ecx

; 1927 :                 continue;

  0003e	eb e1		 jmp	 SHORT $L51881
$L51883:

; 1928 :             }
; 1929 : 
; 1930 :             if(!(*psz++ = *pszProjectFile++))

  00040	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _psz$[ebp]
  00046	8b 45 08	 mov	 eax, DWORD PTR _pszProjectFile$[ebp]
  00049	8a 08		 mov	 cl, BYTE PTR [eax]
  0004b	88 0a		 mov	 BYTE PTR [edx], cl
  0004d	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _psz$[ebp]
  00053	0f be 02	 movsx	 eax, BYTE PTR [edx]
  00056	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _psz$[ebp]
  0005c	83 c1 01	 add	 ecx, 1
  0005f	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _psz$[ebp], ecx
  00065	8b 55 08	 mov	 edx, DWORD PTR _pszProjectFile$[ebp]
  00068	83 c2 01	 add	 edx, 1
  0006b	89 55 08	 mov	 DWORD PTR _pszProjectFile$[ebp], edx
  0006e	85 c0		 test	 eax, eax
  00070	75 02		 jne	 SHORT $L51884

; 1931 :             {
; 1932 :                 break;

  00072	eb 02		 jmp	 SHORT $L51882
$L51884:

; 1933 :             }
; 1934 :         }

  00074	eb ab		 jmp	 SHORT $L51881
$L51882:

; 1935 : 
; 1936 :         pszProjectFile = szPath;

  00076	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  0007c	89 45 08	 mov	 DWORD PTR _pszProjectFile$[ebp], eax
$L51879:

; 1937 :     }
; 1938 : 
; 1939 :     //
; 1940 :     // Open the project
; 1941 :     //
; 1942 : 
; 1943 :     if(pszProjectFile && m_pProject)

  0007f	83 7d 08 00	 cmp	 DWORD PTR _pszProjectFile$[ebp], 0
  00083	74 2e		 je	 SHORT $L51885
  00085	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	83 79 58 00	 cmp	 DWORD PTR [ecx+88], 0
  0008f	74 22		 je	 SHORT $L51885

; 1944 :     {
; 1945 :         if(!_strcmpi(pszProjectFile, m_pProject->m_szProjectFile))

  00091	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00097	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  0009a	83 c0 28	 add	 eax, 40			; 00000028H
  0009d	50		 push	 eax
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _pszProjectFile$[ebp]
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 __strcmpi
  000a7	83 c4 08	 add	 esp, 8
  000aa	85 c0		 test	 eax, eax
  000ac	75 05		 jne	 SHORT $L51886

; 1946 :         {
; 1947 :             return;

  000ae	e9 d4 01 00 00	 jmp	 $L51875
$L51886:
$L51885:

; 1948 :         }
; 1949 :     }
; 1950 : 
; 1951 :     if(!CheckDirty())

  000b3	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000b9	8b 02		 mov	 eax, DWORD PTR [edx]
  000bb	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]
  000c7	85 c0		 test	 eax, eax
  000c9	75 05		 jne	 SHORT $L51887

; 1952 :     {
; 1953 :         return;

  000cb	e9 b7 01 00 00	 jmp	 $L51875
$L51887:

; 1954 :     }
; 1955 : 
; 1956 :     MakeDirty(FALSE);

  000d0	6a 00		 push	 0
  000d2	6a 00		 push	 0
  000d4	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 1957 : 
; 1958 :     DELETE(m_pProject);

  000e8	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000ee	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  000f2	74 55		 je	 SHORT $L51888
  000f4	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  000fd	89 95 e8 fe ff
	ff		 mov	 DWORD PTR $T52577[ebp], edx
  00103	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR $T52577[ebp]
  00109	89 85 ec fe ff
	ff		 mov	 DWORD PTR $T52576[ebp], eax
  0010f	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR $T52576[ebp], 0
  00116	74 1a		 je	 SHORT $L52578
  00118	6a 01		 push	 1
  0011a	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR $T52576[ebp]
  00120	8b 11		 mov	 edx, DWORD PTR [ecx]
  00122	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR $T52576[ebp]
  00128	ff 12		 call	 DWORD PTR [edx]
  0012a	89 85 dc fe ff
	ff		 mov	 DWORD PTR -292+[ebp], eax
  00130	eb 0a		 jmp	 SHORT $L52579
$L52578:
  00132	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -292+[ebp], 0
$L52579:
  0013c	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00142	c7 40 58 00 00
	00 00		 mov	 DWORD PTR [eax+88], 0
$L51888:

; 1959 : 
; 1960 :     hr = HRFROMP(m_pProject = NEW(CGuiWaveBankProject(this)));

  00149	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@MDEA@CGuiWaveBankProject?$CIthis?$CJ?$AA@ ; `string'
  0014e	68 a8 07 00 00	 push	 1960			; 000007a8H
  00153	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00158	68 74 03 00 00	 push	 884			; 00000374H
  0015d	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00162	83 c4 10	 add	 esp, 16			; 00000010H
  00165	89 85 e4 fe ff
	ff		 mov	 DWORD PTR $T52580[ebp], eax
  0016b	83 bd e4 fe ff
	ff 00		 cmp	 DWORD PTR $T52580[ebp], 0
  00172	74 1a		 je	 SHORT $L52581
  00174	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	51		 push	 ecx
  0017b	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR $T52580[ebp]
  00181	e8 00 00 00 00	 call	 ??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z ; CGuiWaveBankProject::CGuiWaveBankProject
  00186	89 85 d8 fe ff
	ff		 mov	 DWORD PTR -296+[ebp], eax
  0018c	eb 0a		 jmp	 SHORT $L52582
$L52581:
  0018e	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -296+[ebp], 0
$L52582:
  00198	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0019e	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR -296+[ebp]
  001a4	89 42 58	 mov	 DWORD PTR [edx+88], eax
  001a7	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR -296+[ebp]
  001ad	f7 d9		 neg	 ecx
  001af	1b c9		 sbb	 ecx, ecx
  001b1	81 e1 f2 ff f8
	7f		 and	 ecx, 2147024882		; 7ff8fff2H
  001b7	81 c1 0e 00 07
	80		 add	 ecx, -2147024882	; 8007000eH
  001bd	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], ecx

; 1961 : 
; 1962 :     if(SUCCEEDED(hr))

  001c3	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001ca	7c 2d		 jl	 SHORT $L51896

; 1963 :     {
; 1964 :         m_pProject->Attach(m_ahwndControls[IDC_MAIN_BANKLIST], m_ahwndControls[IDC_MAIN_ENTRYLIST]);

  001cc	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  001d2	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  001d5	50		 push	 eax
  001d6	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001dc	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  001df	52		 push	 edx
  001e0	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001e6	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  001e9	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  001ef	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  001f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f4	8b c8		 mov	 ecx, eax
  001f6	ff 52 40	 call	 DWORD PTR [edx+64]
$L51896:

; 1965 :     }
; 1966 : 
; 1967 :     if(SUCCEEDED(hr))

  001f9	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00200	7c 21		 jl	 SHORT $L51898

; 1968 :     {
; 1969 :         hr = m_pProject->Open(pszProjectFile);

  00202	8b 45 08	 mov	 eax, DWORD PTR _pszProjectFile$[ebp]
  00205	50		 push	 eax
  00206	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0020c	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0020f	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00215	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00218	8b 12		 mov	 edx, DWORD PTR [edx]
  0021a	ff 52 1c	 call	 DWORD PTR [edx+28]
  0021d	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L51898:

; 1970 :     }
; 1971 : 
; 1972 :     if(SUCCEEDED(hr))

  00223	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0022a	7c 22		 jl	 SHORT $L51900

; 1973 :     {
; 1974 :         m_MRU.AddItem(m_pProject->m_szProjectFile);

  0022c	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00232	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00235	83 c1 28	 add	 ecx, 40			; 00000028H
  00238	51		 push	 ecx
  00239	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0023f	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00242	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00248	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0024b	ff 50 10	 call	 DWORD PTR [eax+16]
$L51900:

; 1975 :     }
; 1976 : 
; 1977 :     if(SUCCEEDED(hr))

  0024e	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00255	7c 14		 jl	 SHORT $L51902

; 1978 :     {
; 1979 :         UpdateAppTitle();

  00257	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0025d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0025f	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00265	ff 92 cc 00 00
	00		 call	 DWORD PTR [edx+204]
$L51902:

; 1980 :     }
; 1981 : 
; 1982 :     //
; 1983 :     // If we failed to open the project, create an empty one
; 1984 :     //
; 1985 : 
; 1986 :     if(FAILED(hr))

  0026b	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00272	7d 13		 jge	 SHORT $L51904

; 1987 :     {
; 1988 :         OnNewProject(FALSE);

  00274	6a 00		 push	 0
  00276	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0027c	8b 10		 mov	 edx, DWORD PTR [eax]
  0027e	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00284	ff 52 58	 call	 DWORD PTR [edx+88]
$L51904:
$L51875:

; 1989 :     }
; 1990 : }

  00287	8b e5		 mov	 esp, ebp
  00289	5d		 pop	 ebp
  0028a	c2 04 00	 ret	 4
?OnOpenProject@CMainWindow@@UAEXPBD@Z ENDP		; CMainWindow::OnOpenProject
_TEXT	ENDS
EXTRN	__imp__GetFocus@0:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnDelete@CMainWindow@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_hwnd$ = 8
_this$ = -4
?OnDelete@CMainWindow@@UAEXPAUHWND__@@@Z PROC NEAR	; CMainWindow::OnDelete, COMDAT
; _this$ = ecx

; 2016 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2017 :     if(!hwnd)

  00007	83 7d 08 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0000b	75 09		 jne	 SHORT $L51909

; 2018 :     {
; 2019 :         hwnd = GetFocus();

  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00013	89 45 08	 mov	 DWORD PTR _hwnd$[ebp], eax
$L51909:

; 2020 :     }
; 2021 : 
; 2022 :     if(hwnd == m_ahwndControls[IDC_MAIN_BANKLIST])

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0001c	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  0001f	75 0d		 jne	 SHORT $L51910

; 2023 :     {
; 2024 :         OnRemoveBank();

  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 02		 mov	 eax, DWORD PTR [edx]
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	ff 50 68	 call	 DWORD PTR [eax+104]

; 2025 :     }
; 2026 :     else if(hwnd == m_ahwndControls[IDC_MAIN_ENTRYLIST])

  0002c	eb 16		 jmp	 SHORT $L51911
$L51910:
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00034	3b 51 44	 cmp	 edx, DWORD PTR [ecx+68]
  00037	75 0b		 jne	 SHORT $L51912

; 2027 :     {
; 2028 :         OnRemoveEntry();

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	ff 52 70	 call	 DWORD PTR [edx+112]
$L51912:
$L51911:

; 2029 :     }
; 2030 : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?OnDelete@CMainWindow@@UAEXPAUHWND__@@@Z ENDP		; CMainWindow::OnDelete
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnRename@CMainWindow@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_hwnd$ = 8
_this$ = -8
_i$ = -4
?OnRename@CMainWindow@@UAEXPAUHWND__@@@Z PROC NEAR	; CMainWindow::OnRename, COMDAT
; _this$ = ecx

; 2056 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2057 :     int                     i;
; 2058 : 
; 2059 :     if(!hwnd)

  00009	83 7d 08 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0000d	75 09		 jne	 SHORT $L51918

; 2060 :     {
; 2061 :         hwnd = GetFocus();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00015	89 45 08	 mov	 DWORD PTR _hwnd$[ebp], eax
$L51918:

; 2062 :     }
; 2063 : 
; 2064 :     if((hwnd == m_ahwndControls[IDC_MAIN_BANKLIST]) || (hwnd == m_ahwndControls[IDC_MAIN_ENTRYLIST]))

  00018	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0001e	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  00021	74 0b		 je	 SHORT $L51920
  00023	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00029	3b 42 44	 cmp	 eax, DWORD PTR [edx+68]
  0002c	75 49		 jne	 SHORT $L51919
$L51920:

; 2065 :     {
; 2066 :         if(1 == ListView_GetSelectedCount(hwnd))

  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	68 32 10 00 00	 push	 4146			; 00001032H
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0003a	51		 push	 ecx
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00041	83 f8 01	 cmp	 eax, 1
  00044	75 31		 jne	 SHORT $L51922

; 2067 :         {
; 2068 :             if(-1 != (i = ListView_GetNextItem(hwnd, -1, LVNI_SELECTED)))

  00046	6a 02		 push	 2
  00048	6a ff		 push	 -1
  0004a	68 0c 10 00 00	 push	 4108			; 0000100cH
  0004f	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00052	52		 push	 edx
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00059	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
  0005c	83 7d fc ff	 cmp	 DWORD PTR _i$[ebp], -1
  00060	74 15		 je	 SHORT $L51934

; 2069 :             {
; 2070 :                 ListView_EditLabel(hwnd, i);

  00062	6a 00		 push	 0
  00064	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00067	50		 push	 eax
  00068	68 17 10 00 00	 push	 4119			; 00001017H
  0006d	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00070	51		 push	 ecx
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L51934:
$L51922:
$L51919:

; 2071 :             }
; 2072 :         }
; 2073 :     }
; 2074 : }

  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?OnRename@CMainWindow@@UAEXPAUHWND__@@@Z ENDP		; CMainWindow::OnRename
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSelectAll@CMainWindow@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_hwnd$ = 8
_this$ = -52
_nItemCount$ = -4
_i$ = -8
__ms_lvi$51951 = -48
?OnSelectAll@CMainWindow@@UAEXPAUHWND__@@@Z PROC NEAR	; CMainWindow::OnSelectAll, COMDAT
; _this$ = ecx

; 2100 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 2101 :     int                     nItemCount;
; 2102 :     int                     i;
; 2103 : 
; 2104 :     if(!hwnd)

  00009	83 7d 08 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0000d	75 09		 jne	 SHORT $L51944

; 2105 :     {
; 2106 :         hwnd = GetFocus();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00015	89 45 08	 mov	 DWORD PTR _hwnd$[ebp], eax
$L51944:

; 2107 :     }
; 2108 :     
; 2109 :     if((hwnd == m_ahwndControls[IDC_MAIN_BANKLIST]) || (hwnd == m_ahwndControls[IDC_MAIN_ENTRYLIST]))

  00018	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0001e	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  00021	74 0b		 je	 SHORT $L51946
  00023	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00029	3b 42 44	 cmp	 eax, DWORD PTR [edx+68]
  0002c	75 57		 jne	 SHORT $L51945
$L51946:

; 2110 :     {
; 2111 :         nItemCount = ListView_GetItemCount(hwnd);

  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	68 04 10 00 00	 push	 4100			; 00001004H
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0003a	51		 push	 ecx
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00041	89 45 fc	 mov	 DWORD PTR _nItemCount$[ebp], eax

; 2112 : 
; 2113 :         for(i = 0; i < nItemCount; i++)

  00044	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0004b	eb 09		 jmp	 SHORT $L51948
$L51949:
  0004d	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  00050	83 c2 01	 add	 edx, 1
  00053	89 55 f8	 mov	 DWORD PTR _i$[ebp], edx
$L51948:
  00056	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00059	3b 45 fc	 cmp	 eax, DWORD PTR _nItemCount$[ebp]
  0005c	7d 27		 jge	 SHORT $L51950

; 2114 :         {
; 2115 :             ListView_SetItemState(hwnd, i, LVIS_SELECTED, LVIS_SELECTED);

  0005e	c7 45 e0 02 00
	00 00		 mov	 DWORD PTR __ms_lvi$51951[ebp+16], 2
  00065	c7 45 dc 02 00
	00 00		 mov	 DWORD PTR __ms_lvi$51951[ebp+12], 2
  0006c	8d 4d d0	 lea	 ecx, DWORD PTR __ms_lvi$51951[ebp]
  0006f	51		 push	 ecx
  00070	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  00073	52		 push	 edx
  00074	68 2b 10 00 00	 push	 4139			; 0000102bH
  00079	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0007c	50		 push	 eax
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 2116 :         }

  00083	eb c8		 jmp	 SHORT $L51949
$L51950:
$L51945:

; 2117 :     }
; 2118 : }

  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
?OnSelectAll@CMainWindow@@UAEXPAUHWND__@@@Z ENDP	; CMainWindow::OnSelectAll
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnClose@CMainWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CMainWindow@@UAEHPAJ@Z PROC NEAR		; CMainWindow::OnClose, COMDAT
; _this$ = ecx

; 2144 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2145 :     OnExit();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 92 88 00 00
	00		 call	 DWORD PTR [edx+136]

; 2146 :     return FALSE;

  00015	33 c0		 xor	 eax, eax

; 2147 : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?OnClose@CMainWindow@@UAEHPAJ@Z ENDP			; CMainWindow::OnClose
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?CheckDirty@CMainWindow@@MAEHXZ
_TEXT	SEGMENT
_this$ = -528
_szMessage$ = -520
_nResult$ = -524
?CheckDirty@CMainWindow@@MAEHXZ PROC NEAR		; CMainWindow::CheckDirty, COMDAT
; _this$ = ecx

; 2173 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 02 00
	00		 sub	 esp, 532		; 00000214H
  00009	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2174 :     static const LPCSTR     pszMessage                  = "Save changes to %s?";
; 2175 :     static const LPCSTR     pszNoName                   = "New Project";
; 2176 :     CHAR                    szMessage[MAX_PATH + 0x100];
; 2177 :     UINT                    nResult;
; 2178 :     
; 2179 :     if(!m_pProject || !m_fDirty)

  0000f	8b 85 f0 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  00019	74 0f		 je	 SHORT $L51972
  0001b	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 b9 7c 04 00
	00 00		 cmp	 DWORD PTR [ecx+1148], 0
  00028	75 0a		 jne	 SHORT $L51971
$L51972:

; 2180 :     {
; 2181 :         return TRUE;

  0002a	b8 01 00 00 00	 mov	 eax, 1
  0002f	e9 b1 00 00 00	 jmp	 $L51962
$L51971:

; 2182 :     }
; 2183 : 
; 2184 :     sprintf(szMessage, pszMessage, m_pProject->m_szProjectFile[0] ? m_pProject->m_szProjectFile : pszNoName);

  00034	8b 95 f0 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0003a	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  0003d	0f be 48 28	 movsx	 ecx, BYTE PTR [eax+40]
  00041	85 c9		 test	 ecx, ecx
  00043	74 14		 je	 SHORT $L52598
  00045	8b 95 f0 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  0004e	83 c0 28	 add	 eax, 40			; 00000028H
  00051	89 85 ec fd ff
	ff		 mov	 DWORD PTR -532+[ebp], eax
  00057	eb 0c		 jmp	 SHORT $L52599
$L52598:
  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszNoName@?1??CheckDirty@CMainWindow@@MAEHXZ@4QBDB
  0005f	89 8d ec fd ff
	ff		 mov	 DWORD PTR -532+[ebp], ecx
$L52599:
  00065	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR -532+[ebp]
  0006b	52		 push	 edx
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszMessage@?1??CheckDirty@CMainWindow@@MAEHXZ@4QBDB
  00071	50		 push	 eax
  00072	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szMessage$[ebp]
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 _sprintf
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2185 : 
; 2186 :     nResult = MessageBox(szMessage, MB_ICONQUESTION | MB_YESNOCANCEL);

  00081	6a 23		 push	 35			; 00000023H
  00083	8d 95 f8 fd ff
	ff		 lea	 edx, DWORD PTR _szMessage$[ebp]
  00089	52		 push	 edx
  0008a	8b 85 f0 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 10		 mov	 edx, DWORD PTR [eax]
  00092	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00098	ff 52 18	 call	 DWORD PTR [edx+24]
  0009b	89 85 f4 fd ff
	ff		 mov	 DWORD PTR _nResult$[ebp], eax

; 2187 : 
; 2188 :     if(IDYES == nResult)

  000a1	83 bd f4 fd ff
	ff 06		 cmp	 DWORD PTR _nResult$[ebp], 6
  000a8	75 29		 jne	 SHORT $L51973

; 2189 :     {
; 2190 :         OnSaveProject(FALSE);

  000aa	6a 00		 push	 0
  000ac	8b 85 f0 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 10		 mov	 edx, DWORD PTR [eax]
  000b4	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	ff 52 60	 call	 DWORD PTR [edx+96]

; 2191 : 
; 2192 :         return !m_fDirty;

  000bd	8b 85 f0 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000c3	33 c9		 xor	 ecx, ecx
  000c5	83 b8 7c 04 00
	00 00		 cmp	 DWORD PTR [eax+1148], 0
  000cc	0f 94 c1	 sete	 cl
  000cf	8b c1		 mov	 eax, ecx
  000d1	eb 12		 jmp	 SHORT $L51962
$L51973:

; 2193 :     }
; 2194 :     else if(IDNO == nResult)

  000d3	83 bd f4 fd ff
	ff 07		 cmp	 DWORD PTR _nResult$[ebp], 7
  000da	75 07		 jne	 SHORT $L51975

; 2195 :     {
; 2196 :         return TRUE;

  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	eb 02		 jmp	 SHORT $L51962
$L51975:

; 2197 :     }
; 2198 : 
; 2199 :     return FALSE;

  000e3	33 c0		 xor	 eax, eax
$L51962:

; 2200 : }

  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
?CheckDirty@CMainWindow@@MAEHXZ ENDP			; CMainWindow::CheckDirty
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MakeDirty@CMainWindow@@MAEXHH@Z
_TEXT	SEGMENT
_fDirty$ = 8
_fForce$ = 12
_this$ = -4
?MakeDirty@CMainWindow@@MAEXHH@Z PROC NEAR		; CMainWindow::MakeDirty, COMDAT
; _this$ = ecx

; 2228 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2229 :     if((fDirty != m_fDirty) || fForce)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _fDirty$[ebp]
  0000d	3b 88 7c 04 00
	00		 cmp	 ecx, DWORD PTR [eax+1148]
  00013	75 06		 jne	 SHORT $L51982
  00015	83 7d 0c 00	 cmp	 DWORD PTR _fForce$[ebp], 0
  00019	74 1a		 je	 SHORT $L51981
$L51982:

; 2230 :     {
; 2231 :         m_fDirty = fDirty;

  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 45 08	 mov	 eax, DWORD PTR _fDirty$[ebp]
  00021	89 82 7c 04 00
	00		 mov	 DWORD PTR [edx+1148], eax

; 2232 : 
; 2233 :         UpdateAppTitle();

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	ff 92 cc 00 00
	00		 call	 DWORD PTR [edx+204]
$L51981:

; 2234 :     }
; 2235 : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?MakeDirty@CMainWindow@@MAEXHH@Z ENDP			; CMainWindow::MakeDirty
_TEXT	ENDS
PUBLIC	??_C@_02IGCE@?5?$CK?$AA@			; `string'
PUBLIC	??_C@_03DMDD@?5?9?5?$AA@			; `string'
EXTRN	__splitpath:NEAR
;	COMDAT ??_C@_02IGCE@?5?$CK?$AA@
CONST	SEGMENT
??_C@_02IGCE@?5?$CK?$AA@ DB ' *', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
CONST	SEGMENT
??_C@_03DMDD@?5?9?5?$AA@ DB ' - ', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?UpdateAppTitle@CMainWindow@@MAEXXZ
_TEXT	SEGMENT
_this$ = -524
_szText$ = -520
?UpdateAppTitle@CMainWindow@@MAEXXZ PROC NEAR		; CMainWindow::UpdateAppTitle, COMDAT
; _this$ = ecx

; 2261 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 02 00
	00		 sub	 esp, 524		; 0000020cH
  00009	89 8d f4 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2262 :     CHAR                    szText[MAX_PATH + 0x100];
; 2263 : 
; 2264 :     if(m_pProject)

  0000f	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  00019	0f 84 af 00 00
	00		 je	 $L51988

; 2265 :     {
; 2266 :         if(m_pProject->m_szProjectFile[0])

  0001f	8b 8d f4 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  00028	0f be 42 28	 movsx	 eax, BYTE PTR [edx+40]
  0002c	85 c0		 test	 eax, eax
  0002e	74 24		 je	 SHORT $L51989

; 2267 :         {
; 2268 :             _splitpath(m_pProject->m_szProjectFile, NULL, NULL, szText, NULL);

  00030	6a 00		 push	 0
  00032	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00038	51		 push	 ecx
  00039	6a 00		 push	 0
  0003b	6a 00		 push	 0
  0003d	8b 95 f4 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00046	83 c0 28	 add	 eax, 40			; 00000028H
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 __splitpath
  0004f	83 c4 14	 add	 esp, 20			; 00000014H

; 2269 :         }
; 2270 :         else

  00052	eb 14		 jmp	 SHORT $L51990
$L51989:

; 2271 :         {
; 2272 :             strcpy(szText, "New Project");

  00054	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@PLIP@New?5Project?$AA@ ; `string'
  00059	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 _strcpy
  00065	83 c4 08	 add	 esp, 8
$L51990:

; 2273 :         }
; 2274 :         
; 2275 :         if(m_fDirty)

  00068	8b 95 f4 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0006e	83 ba 7c 04 00
	00 00		 cmp	 DWORD PTR [edx+1148], 0
  00075	74 14		 je	 SHORT $L51991

; 2276 :         {
; 2277 :             strcat(szText, " *");

  00077	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02IGCE@?5?$CK?$AA@ ; `string'
  0007c	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 _strcat
  00088	83 c4 08	 add	 esp, 8
$L51991:

; 2278 :         }
; 2279 :         
; 2280 :         strcat(szText, " - ");

  0008b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03DMDD@?5?9?5?$AA@ ; `string'
  00090	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 _strcat
  0009c	83 c4 08	 add	 esp, 8

; 2281 :         strcat(szText, g_pszAppTitle);

  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_pszAppTitle
  000a5	52		 push	 edx
  000a6	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 _strcat
  000b2	83 c4 08	 add	 esp, 8

; 2282 : 
; 2283 :         SetWindowText(m_hwnd, szText);

  000b5	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  000bb	51		 push	 ecx
  000bc	8b 95 f4 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000c2	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000c5	50		 push	 eax
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 2284 :     }
; 2285 :     else

  000cc	eb 17		 jmp	 SHORT $L51994
$L51988:

; 2286 :     {
; 2287 :         SetWindowText(m_hwnd, g_pszAppTitle);

  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_pszAppTitle
  000d4	51		 push	 ecx
  000d5	8b 95 f4 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000db	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000de	50		 push	 eax
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8
$L51994:

; 2288 :     }
; 2289 : }

  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
?UpdateAppTitle@CMainWindow@@MAEXXZ ENDP		; CMainWindow::UpdateAppTitle
_TEXT	ENDS
EXTRN	__imp__CheckMenuItem@12:NEAR
EXTRN	__imp__EnableMenuItem@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetCommandState@CMainWindow@@MAEXIHH@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_fEnable$ = 12
_fCheck$ = 16
_this$ = -8
_i$ = -4
?SetCommandState@CMainWindow@@MAEXIHH@Z PROC NEAR	; CMainWindow::SetCommandState, COMDAT
; _this$ = ecx

; 2320 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2321 :     static const DWORD      adwMenuSelected[] = 
; 2322 :     { 
; 2323 :         MF_BYCOMMAND | MF_GRAYED,
; 2324 :         MF_BYCOMMAND | MF_ENABLED 
; 2325 :     };
; 2326 : 
; 2327 :     static const DWORD      adwCheckState[] =
; 2328 :     {
; 2329 :         MF_BYCOMMAND | MF_UNCHECKED,
; 2330 :         MF_BYCOMMAND | MF_CHECKED
; 2331 :     };
; 2332 : 
; 2333 :     UINT                    i;
; 2334 : 
; 2335 :     if((TRUE == fEnable) || (FALSE == fEnable))

  00009	83 7d 0c 01	 cmp	 DWORD PTR _fEnable$[ebp], 1
  0000d	74 06		 je	 SHORT $L52007
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _fEnable$[ebp], 0
  00013	75 7a		 jne	 SHORT $L52006
$L52007:

; 2336 :     {
; 2337 :         EnableMenuItem(m_hmenu, nCommandId, adwMenuSelected[fEnable]);

  00015	8b 45 0c	 mov	 eax, DWORD PTR _fEnable$[ebp]
  00018	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?adwMenuSelected@?1??SetCommandState@CMainWindow@@MAEXIHH@Z@4QBKB[eax*4]
  0001f	51		 push	 ecx
  00020	8b 55 08	 mov	 edx, DWORD PTR _nCommandId$[ebp]
  00023	52		 push	 edx
  00024	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0002a	51		 push	 ecx
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableMenuItem@12

; 2338 : 
; 2339 :         for(i = 0; i < NUMELMS(m_ahmenuPopup); i++)

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00038	eb 09		 jmp	 SHORT $L52008
$L52009:
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  0003d	83 c2 01	 add	 edx, 1
  00040	89 55 fc	 mov	 DWORD PTR _i$[ebp], edx
$L52008:
  00043	83 7d fc 02	 cmp	 DWORD PTR _i$[ebp], 2
  00047	73 22		 jae	 SHORT $L52010

; 2340 :         {
; 2341 :             EnableMenuItem(m_ahmenuPopup[i], nCommandId, adwMenuSelected[fEnable]);

  00049	8b 45 0c	 mov	 eax, DWORD PTR _fEnable$[ebp]
  0004c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?adwMenuSelected@?1??SetCommandState@CMainWindow@@MAEXIHH@Z@4QBKB[eax*4]
  00053	51		 push	 ecx
  00054	8b 55 08	 mov	 edx, DWORD PTR _nCommandId$[ebp]
  00057	52		 push	 edx
  00058	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 54 81 50	 mov	 edx, DWORD PTR [ecx+eax*4+80]
  00062	52		 push	 edx
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableMenuItem@12

; 2342 :         }

  00069	eb cf		 jmp	 SHORT $L52009
$L52010:

; 2343 : 
; 2344 :         SendMessage(m_ahwndControls[IDC_MAIN_TOOLBAR], TB_ENABLEBUTTON, nCommandId, MAKELONG(fEnable, 0));

  0006b	8b 45 0c	 mov	 eax, DWORD PTR _fEnable$[ebp]
  0006e	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00073	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00078	50		 push	 eax
  00079	8b 4d 08	 mov	 ecx, DWORD PTR _nCommandId$[ebp]
  0007c	51		 push	 ecx
  0007d	68 01 04 00 00	 push	 1025			; 00000401H
  00082	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00085	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00088	50		 push	 eax
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L52006:

; 2345 :     }
; 2346 : 
; 2347 :     if((TRUE == fCheck) || (FALSE == fCheck))

  0008f	83 7d 10 01	 cmp	 DWORD PTR _fCheck$[ebp], 1
  00093	74 06		 je	 SHORT $L52018
  00095	83 7d 10 00	 cmp	 DWORD PTR _fCheck$[ebp], 0
  00099	75 7c		 jne	 SHORT $L52017
$L52018:

; 2348 :     {
; 2349 :         CheckMenuItem(m_hmenu, nCommandId, adwCheckState[fCheck]);

  0009b	8b 4d 10	 mov	 ecx, DWORD PTR _fCheck$[ebp]
  0009e	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?adwCheckState@?1??SetCommandState@CMainWindow@@MAEXIHH@Z@4QBKB[ecx*4]
  000a5	52		 push	 edx
  000a6	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  000b0	52		 push	 edx
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckMenuItem@12

; 2350 : 
; 2351 :         for(i = 0; i < NUMELMS(m_ahmenuPopup); i++)

  000b7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  000be	eb 09		 jmp	 SHORT $L52019
$L52020:
  000c0	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000c3	83 c0 01	 add	 eax, 1
  000c6	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L52019:
  000c9	83 7d fc 02	 cmp	 DWORD PTR _i$[ebp], 2
  000cd	73 22		 jae	 SHORT $L52021

; 2352 :         {
; 2353 :             CheckMenuItem(m_ahmenuPopup[i], nCommandId, adwCheckState[fCheck]);

  000cf	8b 4d 10	 mov	 ecx, DWORD PTR _fCheck$[ebp]
  000d2	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?adwCheckState@?1??SetCommandState@CMainWindow@@MAEXIHH@Z@4QBKB[ecx*4]
  000d9	52		 push	 edx
  000da	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  000dd	50		 push	 eax
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  000e1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	8b 44 8a 50	 mov	 eax, DWORD PTR [edx+ecx*4+80]
  000e8	50		 push	 eax
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CheckMenuItem@12

; 2354 :         }

  000ef	eb cf		 jmp	 SHORT $L52020
$L52021:

; 2355 : 
; 2356 :         SendMessage(m_ahwndControls[IDC_MAIN_TOOLBAR], TB_CHECKBUTTON, nCommandId, MAKELONG(fCheck, 0));

  000f1	8b 4d 10	 mov	 ecx, DWORD PTR _fCheck$[ebp]
  000f4	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000fa	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00100	51		 push	 ecx
  00101	8b 55 08	 mov	 edx, DWORD PTR _nCommandId$[ebp]
  00104	52		 push	 edx
  00105	68 02 04 00 00	 push	 1026			; 00000402H
  0010a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00110	51		 push	 ecx
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L52017:

; 2357 :     }
; 2358 : }

  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c2 0c 00	 ret	 12			; 0000000cH
?SetCommandState@CMainWindow@@MAEXIHH@Z ENDP		; CMainWindow::SetCommandState
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetBankCommandStates@CMainWindow@@MAEXXZ
_TEXT	SEGMENT
_this$ = -12
_hwnd$ = -4
_nSelCount$ = -8
?SetBankCommandStates@CMainWindow@@MAEXXZ PROC NEAR	; CMainWindow::SetBankCommandStates, COMDAT
; _this$ = ecx

; 2385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 2386 :     HWND                    hwnd        = m_ahwndControls[IDC_MAIN_BANKLIST];

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0000f	89 4d fc	 mov	 DWORD PTR _hwnd$[ebp], ecx

; 2387 :     int                     nSelCount;
; 2388 : 
; 2389 :     //
; 2390 :     // Update command state based on the number of items currently selected
; 2391 :     // in the bank list
; 2392 :     //
; 2393 :     
; 2394 :     nSelCount = ListView_GetSelectedCount(hwnd);

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	68 32 10 00 00	 push	 4146			; 00001032H
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  0001e	52		 push	 edx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00025	89 45 f8	 mov	 DWORD PTR _nSelCount$[ebp], eax

; 2395 : 
; 2396 :     SetCommandState(ID_BANK_RENAME, (1 == nSelCount), -1);

  00028	6a ff		 push	 -1
  0002a	33 c0		 xor	 eax, eax
  0002c	83 7d f8 01	 cmp	 DWORD PTR _nSelCount$[ebp], 1
  00030	0f 94 c0	 sete	 al
  00033	50		 push	 eax
  00034	68 50 9c 00 00	 push	 40016			; 00009c50H
  00039	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 2397 :     SetCommandState(ID_BANK_REMOVE, (nSelCount > 0), -1);

  00047	6a ff		 push	 -1
  00049	33 c0		 xor	 eax, eax
  0004b	83 7d f8 00	 cmp	 DWORD PTR _nSelCount$[ebp], 0
  0004f	0f 9f c0	 setg	 al
  00052	50		 push	 eax
  00053	68 48 9c 00 00	 push	 40008			; 00009c48H
  00058	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 2398 :     SetCommandState(ID_ENTRY_ADD, (1 == nSelCount), -1);

  00066	6a ff		 push	 -1
  00068	33 c0		 xor	 eax, eax
  0006a	83 7d f8 01	 cmp	 DWORD PTR _nSelCount$[ebp], 1
  0006e	0f 94 c0	 sete	 al
  00071	50		 push	 eax
  00072	68 49 9c 00 00	 push	 40009			; 00009c49H
  00077	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 2399 : }

  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
?SetBankCommandStates@CMainWindow@@MAEXXZ ENDP		; CMainWindow::SetBankCommandStates
_TEXT	ENDS
PUBLIC	??_C@_0CG@IKME@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_A@ ; `string'
PUBLIC	??_C@_0CF@MPPP@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_8@ ; `string'
;	COMDAT ??_C@_0CG@IKME@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_A@
CONST	SEGMENT
??_C@_0CG@IKME@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_A@ DB '!(pEn'
	DB	'try->m_dwFlags & WBFILTER_ADPCM)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MPPP@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_8@
CONST	SEGMENT
??_C@_0CF@MPPP@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_8@ DB '!(pEn'
	DB	'try->m_dwFlags & WBFILTER_8BIT)', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?SetEntryCommandStates@CMainWindow@@MAEXXZ
_TEXT	SEGMENT
_this$ = -40
_hwnd$ = -8
_nAdpcmValid$ = -4
_nAdpcm$ = -28
_n8BitValid$ = -16
_n8Bit$ = -12
_nSelCount$ = -20
_i$ = -32
_dwValid$ = -36
_pEntry$ = -24
?SetEntryCommandStates@CMainWindow@@MAEXXZ PROC NEAR	; CMainWindow::SetEntryCommandStates, COMDAT
; _this$ = ecx

; 2426 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 2427 :     HWND                    hwnd        = m_ahwndControls[IDC_MAIN_ENTRYLIST];

  00009	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0000f	89 4d f8	 mov	 DWORD PTR _hwnd$[ebp], ecx

; 2428 :     int                     nAdpcmValid = 0;

  00012	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nAdpcmValid$[ebp], 0

; 2429 :     int                     nAdpcm      = 0;

  00019	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _nAdpcm$[ebp], 0

; 2430 :     int                     n8BitValid  = 0;

  00020	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _n8BitValid$[ebp], 0

; 2431 :     int                     n8Bit       = 0;

  00027	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _n8Bit$[ebp], 0

; 2432 :     int                     nSelCount   = 0;

  0002e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nSelCount$[ebp], 0

; 2433 :     int                     i           = -1;

  00035	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR _i$[ebp], -1
$L52049:

; 2434 :     DWORD                   dwValid;
; 2435 :     CGuiWaveBankEntry *    pEntry;
; 2436 : 
; 2437 :     //
; 2438 :     // Determine the number of selected items and the availability of 
; 2439 :     // conversion for each item.
; 2440 :     //
; 2441 : 
; 2442 :     while(TRUE)

  0003c	ba 01 00 00 00	 mov	 edx, 1
  00041	85 d2		 test	 edx, edx
  00043	0f 84 20 01 00
	00		 je	 $L52050

; 2443 :     {
; 2444 :         if(-1 == (i = ListView_GetNextItem(hwnd, i, LVNI_SELECTED)))

  00049	6a 02		 push	 2
  0004b	8b 45 e0	 mov	 eax, DWORD PTR _i$[ebp]
  0004e	50		 push	 eax
  0004f	68 0c 10 00 00	 push	 4108			; 0000100cH
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00057	51		 push	 ecx
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0005e	89 45 e0	 mov	 DWORD PTR _i$[ebp], eax
  00061	83 7d e0 ff	 cmp	 DWORD PTR _i$[ebp], -1
  00065	75 05		 jne	 SHORT $L52062

; 2445 :         {
; 2446 :             break;

  00067	e9 fd 00 00 00	 jmp	 $L52050
$L52062:

; 2447 :         }
; 2448 : 
; 2449 :         nSelCount++;    

  0006c	8b 55 ec	 mov	 edx, DWORD PTR _nSelCount$[ebp]
  0006f	83 c2 01	 add	 edx, 1
  00072	89 55 ec	 mov	 DWORD PTR _nSelCount$[ebp], edx

; 2450 : 
; 2451 :         pEntry = (CGuiWaveBankEntry *)ListView_GetItemParam(hwnd, i);

  00075	8b 45 e0	 mov	 eax, DWORD PTR _i$[ebp]
  00078	50		 push	 eax
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 _ListView_GetItemParam@8
  00082	89 45 e8	 mov	 DWORD PTR _pEntry$[ebp], eax

; 2452 :         ASSERT(pEntry);

  00085	68 94 09 00 00	 push	 2452			; 00000994H
  0008a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0008f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_06JCGL@pEntry?$AA@ ; `string'
  00094	33 d2		 xor	 edx, edx
  00096	83 7d e8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  0009a	0f 94 c2	 sete	 dl
  0009d	52		 push	 edx
  0009e	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000a3	83 c4 10	 add	 esp, 16			; 00000010H

; 2453 : 
; 2454 :         dwValid = pEntry->GetValidFlags();

  000a6	8b 45 e8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  000a9	8b 10		 mov	 edx, DWORD PTR [eax]
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  000ae	ff 52 0c	 call	 DWORD PTR [edx+12]
  000b1	89 45 dc	 mov	 DWORD PTR _dwValid$[ebp], eax

; 2455 : 
; 2456 :         if(dwValid & WBFILTER_ADPCM)

  000b4	8b 45 dc	 mov	 eax, DWORD PTR _dwValid$[ebp]
  000b7	83 e0 01	 and	 eax, 1
  000ba	85 c0		 test	 eax, eax
  000bc	74 24		 je	 SHORT $L52064

; 2457 :         {
; 2458 :             nAdpcmValid++;

  000be	8b 4d fc	 mov	 ecx, DWORD PTR _nAdpcmValid$[ebp]
  000c1	83 c1 01	 add	 ecx, 1
  000c4	89 4d fc	 mov	 DWORD PTR _nAdpcmValid$[ebp], ecx

; 2459 :             
; 2460 :             if(pEntry->m_dwFlags & WBFILTER_ADPCM)

  000c7	8b 55 e8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  000ca	8b 82 28 03 00
	00		 mov	 eax, DWORD PTR [edx+808]
  000d0	83 e0 01	 and	 eax, 1
  000d3	85 c0		 test	 eax, eax
  000d5	74 09		 je	 SHORT $L52065

; 2461 :             {
; 2462 :                 nAdpcm++;

  000d7	8b 4d e4	 mov	 ecx, DWORD PTR _nAdpcm$[ebp]
  000da	83 c1 01	 add	 ecx, 1
  000dd	89 4d e4	 mov	 DWORD PTR _nAdpcm$[ebp], ecx
$L52065:

; 2463 :             }
; 2464 :         }
; 2465 :         else

  000e0	eb 2a		 jmp	 SHORT $L52066
$L52064:

; 2466 :         {
; 2467 :             ASSERT(!(pEntry->m_dwFlags & WBFILTER_ADPCM));

  000e2	68 a3 09 00 00	 push	 2467			; 000009a3H
  000e7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000ec	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@IKME@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_A@ ; `string'
  000f1	8b 55 e8	 mov	 edx, DWORD PTR _pEntry$[ebp]
  000f4	8b 82 28 03 00
	00		 mov	 eax, DWORD PTR [edx+808]
  000fa	83 e0 01	 and	 eax, 1
  000fd	f7 d8		 neg	 eax
  000ff	1b c0		 sbb	 eax, eax
  00101	f7 d8		 neg	 eax
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00109	83 c4 10	 add	 esp, 16			; 00000010H
$L52066:

; 2468 :         }
; 2469 :         
; 2470 :         if(dwValid & WBFILTER_8BIT)

  0010c	8b 4d dc	 mov	 ecx, DWORD PTR _dwValid$[ebp]
  0010f	83 e1 02	 and	 ecx, 2
  00112	85 c9		 test	 ecx, ecx
  00114	74 24		 je	 SHORT $L52068

; 2471 :         {
; 2472 :             n8BitValid++;

  00116	8b 55 f0	 mov	 edx, DWORD PTR _n8BitValid$[ebp]
  00119	83 c2 01	 add	 edx, 1
  0011c	89 55 f0	 mov	 DWORD PTR _n8BitValid$[ebp], edx

; 2473 :             
; 2474 :             if(pEntry->m_dwFlags & WBFILTER_8BIT)

  0011f	8b 45 e8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00122	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  00128	83 e1 02	 and	 ecx, 2
  0012b	85 c9		 test	 ecx, ecx
  0012d	74 09		 je	 SHORT $L52069

; 2475 :             {
; 2476 :                 n8Bit++;

  0012f	8b 55 f4	 mov	 edx, DWORD PTR _n8Bit$[ebp]
  00132	83 c2 01	 add	 edx, 1
  00135	89 55 f4	 mov	 DWORD PTR _n8Bit$[ebp], edx
$L52069:

; 2477 :             }
; 2478 :         }
; 2479 :         else

  00138	eb 2a		 jmp	 SHORT $L52070
$L52068:

; 2480 :         {
; 2481 :             ASSERT(!(pEntry->m_dwFlags & WBFILTER_8BIT));

  0013a	68 b1 09 00 00	 push	 2481			; 000009b1H
  0013f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00144	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@MPPP@?$CB?$CIpEntry?9?$DOm_dwFlags?5?$CG?5WBFILTER_8@ ; `string'
  00149	8b 45 e8	 mov	 eax, DWORD PTR _pEntry$[ebp]
  0014c	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  00152	83 e1 02	 and	 ecx, 2
  00155	f7 d9		 neg	 ecx
  00157	1b c9		 sbb	 ecx, ecx
  00159	f7 d9		 neg	 ecx
  0015b	51		 push	 ecx
  0015c	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00161	83 c4 10	 add	 esp, 16			; 00000010H
$L52070:

; 2482 :         }
; 2483 :     }

  00164	e9 d3 fe ff ff	 jmp	 $L52049
$L52050:

; 2484 : 
; 2485 :     //
; 2486 :     // Update command state based on the number of items currently selected
; 2487 :     // in the entry list
; 2488 :     //
; 2489 :     
; 2490 :     SetCommandState(ID_ENTRY_RENAME, (1 == nSelCount), -1);

  00169	6a ff		 push	 -1
  0016b	33 d2		 xor	 edx, edx
  0016d	83 7d ec 01	 cmp	 DWORD PTR _nSelCount$[ebp], 1
  00171	0f 94 c2	 sete	 dl
  00174	52		 push	 edx
  00175	68 53 9c 00 00	 push	 40019			; 00009c53H
  0017a	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  0017d	8b 10		 mov	 edx, DWORD PTR [eax]
  0017f	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 2491 :     SetCommandState(ID_ENTRY_REMOVE, (nSelCount > 0), -1);

  00188	6a ff		 push	 -1
  0018a	33 c0		 xor	 eax, eax
  0018c	83 7d ec 00	 cmp	 DWORD PTR _nSelCount$[ebp], 0
  00190	0f 9f c0	 setg	 al
  00193	50		 push	 eax
  00194	68 4a 9c 00 00	 push	 40010			; 00009c4aH
  00199	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0019c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 2492 :     SetCommandState(ID_CONVERT_ADPCM, (nAdpcmValid > 0), (nAdpcm > 0));

  001a7	33 c0		 xor	 eax, eax
  001a9	83 7d e4 00	 cmp	 DWORD PTR _nAdpcm$[ebp], 0
  001ad	0f 9f c0	 setg	 al
  001b0	50		 push	 eax
  001b1	33 c9		 xor	 ecx, ecx
  001b3	83 7d fc 00	 cmp	 DWORD PTR _nAdpcmValid$[ebp], 0
  001b7	0f 9f c1	 setg	 cl
  001ba	51		 push	 ecx
  001bb	68 5b 9c 00 00	 push	 40027			; 00009c5bH
  001c0	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  001c3	8b 02		 mov	 eax, DWORD PTR [edx]
  001c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	ff 90 d0 00 00
	00		 call	 DWORD PTR [eax+208]

; 2493 :     SetCommandState(ID_CONVERT_8BIT, (n8BitValid > 0), (n8Bit > 0));

  001ce	33 c9		 xor	 ecx, ecx
  001d0	83 7d f4 00	 cmp	 DWORD PTR _n8Bit$[ebp], 0
  001d4	0f 9f c1	 setg	 cl
  001d7	51		 push	 ecx
  001d8	33 d2		 xor	 edx, edx
  001da	83 7d f0 00	 cmp	 DWORD PTR _n8BitValid$[ebp], 0
  001de	0f 9f c2	 setg	 dl
  001e1	52		 push	 edx
  001e2	68 5a 9c 00 00	 push	 40026			; 00009c5aH
  001e7	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  001ea	8b 10		 mov	 edx, DWORD PTR [eax]
  001ec	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ef	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 2494 :     SetCommandState(ID_ENTRY_AUDITION, (nSelCount > 0), -1);

  001f5	6a ff		 push	 -1
  001f7	33 c0		 xor	 eax, eax
  001f9	83 7d ec 00	 cmp	 DWORD PTR _nSelCount$[ebp], 0
  001fd	0f 9f c0	 setg	 al
  00200	50		 push	 eax
  00201	68 5e 9c 00 00	 push	 40030			; 00009c5eH
  00206	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00209	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0020e	ff 92 d0 00 00
	00		 call	 DWORD PTR [edx+208]

; 2495 : }

  00214	8b e5		 mov	 esp, ebp
  00216	5d		 pop	 ebp
  00217	c3		 ret	 0
?SetEntryCommandStates@CMainWindow@@MAEXXZ ENDP		; CMainWindow::SetEntryCommandStates
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SetCommandStates@CMainWindow@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4
?SetCommandStates@CMainWindow@@MAEXXZ PROC NEAR		; CMainWindow::SetCommandStates, COMDAT
; _this$ = ecx

; 2522 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2523 :     SetBankCommandStates();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 92 d4 00 00
	00		 call	 DWORD PTR [edx+212]

; 2524 :     SetEntryCommandStates();

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	ff 92 d8 00 00
	00		 call	 DWORD PTR [edx+216]

; 2525 : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?SetCommandStates@CMainWindow@@MAEXXZ ENDP		; CMainWindow::SetCommandStates
_TEXT	ENDS
EXTRN	__imp__SetCursor@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnRefresh@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnRefresh@CMainWindow@@UAEXXZ PROC NEAR		; CMainWindow::OnRefresh, COMDAT
; _this$ = ecx

; 2551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2552 :     if(!m_pProject)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 58 00	 cmp	 DWORD PTR [eax+88], 0
  0000e	75 02		 jne	 SHORT $L52080

; 2553 :     {
; 2554 :         return;

  00010	eb 39		 jmp	 SHORT $L52079
$L52080:

; 2555 :     }
; 2556 : 
; 2557 :     SetCursor(LoadCursor(NULL, IDC_WAIT));

  00012	68 02 7f 00 00	 push	 32514			; 00007f02H
  00017	6a 00		 push	 0
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  0001f	50		 push	 eax
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 2558 :     
; 2559 :     m_pProject->Refresh();

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 51 58	 mov	 edx, DWORD PTR [ecx+88]
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00032	8b 12		 mov	 edx, DWORD PTR [edx]
  00034	ff 52 54	 call	 DWORD PTR [edx+84]

; 2560 : 
; 2561 :     SetCursor(LoadCursor(NULL, IDC_ARROW));

  00037	68 00 7f 00 00	 push	 32512			; 00007f00H
  0003c	6a 00		 push	 0
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00044	50		 push	 eax
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$L52079:

; 2562 : }

  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?OnRefresh@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnRefresh
_TEXT	ENDS
PUBLIC	?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBankEntry::GetEntry
PUBLIC	??_C@_08IMGB@WAVBNDLR?$AA@			; `string'
PUBLIC	??_C@_0BI@NBKI@CMainWindow?3?3OnAudition?$AA@	; `string'
PUBLIC	??_C@_0BP@BJC@Can?8t?5connect?5to?5audio?5console?$AA@ ; `string'
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT
??_C@_08IMGB@WAVBNDLR?$AA@ DB 'WAVBNDLR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NBKI@CMainWindow?3?3OnAudition?$AA@
CONST	SEGMENT
??_C@_0BI@NBKI@CMainWindow?3?3OnAudition?$AA@ DB 'CMainWindow::OnAudition'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BJC@Can?8t?5connect?5to?5audio?5console?$AA@
CONST	SEGMENT
??_C@_0BP@BJC@Can?8t?5connect?5to?5audio?5console?$AA@ DB 'Can''t connect'
	DB	' to audio console', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnAudition@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -20
_hwnd$ = -4
_i$ = -16
_pEntry$ = -12
_nItemCount$ = -8
?OnAudition@CMainWindow@@UAEXXZ PROC NEAR		; CMainWindow::OnAudition, COMDAT
; _this$ = ecx

; 2588 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 2589 :     HWND                    hwnd        = m_ahwndControls[IDC_MAIN_ENTRYLIST];

  00009	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0000f	89 4d fc	 mov	 DWORD PTR _hwnd$[ebp], ecx

; 2590 :     int                     i           = -1;

  00012	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR _i$[ebp], -1

; 2591 :     CGuiWaveBankEntry *    pEntry;
; 2592 :     int                     nItemCount;
; 2593 :     
; 2594 :     if(!m_pProject)

  00019	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	83 7a 58 00	 cmp	 DWORD PTR [edx+88], 0
  00020	75 05		 jne	 SHORT $L52095

; 2595 :     {
; 2596 :         return;

  00022	e9 fd 00 00 00	 jmp	 $L52090
$L52095:

; 2597 :     }
; 2598 : 
; 2599 :     if(!ConnectRemote())

  00027	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]
  00035	85 c0		 test	 eax, eax
  00037	75 32		 jne	 SHORT $L52096

; 2600 :     {
; 2601 :         DPF_ERROR("Can't connect to audio console");

  00039	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  0003e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@NBKI@CMainWindow?3?3OnAudition?$AA@ ; `string'
  00043	68 29 0a 00 00	 push	 2601			; 00000a29H
  00048	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0004d	6a 01		 push	 1
  0004f	6a 09		 push	 9
  00051	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00056	83 c4 18	 add	 esp, 24			; 00000018H
  00059	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@BJC@Can?8t?5connect?5to?5audio?5console?$AA@ ; `string'
  0005e	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00063	83 c4 04	 add	 esp, 4

; 2602 :         return;

  00066	e9 b9 00 00 00	 jmp	 $L52090
$L52096:

; 2603 :     }
; 2604 : 
; 2605 :     if((nItemCount = ListView_GetSelectedCount(hwnd)) > 0)

  0006b	6a 00		 push	 0
  0006d	6a 00		 push	 0
  0006f	68 32 10 00 00	 push	 4146			; 00001032H
  00074	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0007e	89 45 f8	 mov	 DWORD PTR _nItemCount$[ebp], eax
  00081	83 7d f8 00	 cmp	 DWORD PTR _nItemCount$[ebp], 0
  00085	0f 8e 99 00 00
	00		 jle	 $L52101

; 2606 :     {
; 2607 :         SetCursor(LoadCursor(NULL, IDC_WAIT));

  0008b	68 02 7f 00 00	 push	 32514			; 00007f02H
  00090	6a 00		 push	 0
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00098	50		 push	 eax
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$L52106:

; 2608 :     
; 2609 :         while(TRUE)

  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	85 c9		 test	 ecx, ecx
  000a6	74 68		 je	 SHORT $L52107

; 2610 :         {
; 2611 :             if(-1 == (i = ListView_GetNextItem(hwnd, i, LVNI_SELECTED)))

  000a8	6a 02		 push	 2
  000aa	8b 55 f0	 mov	 edx, DWORD PTR _i$[ebp]
  000ad	52		 push	 edx
  000ae	68 0c 10 00 00	 push	 4108			; 0000100cH
  000b3	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000b6	50		 push	 eax
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000bd	89 45 f0	 mov	 DWORD PTR _i$[ebp], eax
  000c0	83 7d f0 ff	 cmp	 DWORD PTR _i$[ebp], -1
  000c4	75 02		 jne	 SHORT $L52119

; 2612 :             {
; 2613 :                 break;

  000c6	eb 48		 jmp	 SHORT $L52107
$L52119:

; 2614 :             }
; 2615 : 
; 2616 :             pEntry = CGuiWaveBankEntry::GetEntry(hwnd, i);

  000c8	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  000cb	51		 push	 ecx
  000cc	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBankEntry::GetEntry
  000d5	89 45 f4	 mov	 DWORD PTR _pEntry$[ebp], eax

; 2617 :             ASSERT(pEntry);

  000d8	68 39 0a 00 00	 push	 2617			; 00000a39H
  000dd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000e2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_06JCGL@pEntry?$AA@ ; `string'
  000e7	33 c0		 xor	 eax, eax
  000e9	83 7d f4 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000ed	0f 94 c0	 sete	 al
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000f6	83 c4 10	 add	 esp, 16			; 00000010H

; 2618 : 
; 2619 :             pEntry->Audition(m_pxbdm);

  000f9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	8b 91 80 04 00
	00		 mov	 edx, DWORD PTR [ecx+1152]
  00102	52		 push	 edx
  00103	8b 45 f4	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00106	8b 10		 mov	 edx, DWORD PTR [eax]
  00108	8b 4d f4	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0010b	ff 52 38	 call	 DWORD PTR [edx+56]

; 2620 :         }

  0010e	eb 8f		 jmp	 SHORT $L52106
$L52107:

; 2621 : 
; 2622 :         SetCursor(LoadCursor(NULL, IDC_ARROW));

  00110	68 00 7f 00 00	 push	 32512			; 00007f00H
  00115	6a 00		 push	 0
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  0011d	50		 push	 eax
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$L52101:
$L52090:

; 2623 :     }
; 2624 : }

  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c3		 ret	 0
?OnAudition@CMainWindow@@UAEXXZ ENDP			; CMainWindow::OnAudition
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.h
_TEXT	ENDS
;	COMDAT ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z
_TEXT	SEGMENT
_hwnd$ = 8
_nItem$ = 12
?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z PROC NEAR ; CGuiWaveBankEntry::GetEntry, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   :     return (CGuiWaveBankEntry *)ListView_GetItemParam(hwnd, nItem);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _nItem$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 _ListView_GetItemParam@8

; 83   : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ENDP	; CGuiWaveBankEntry::GetEntry
_TEXT	ENDS
PUBLIC	??_C@_0BO@NFFB@CMainWindow?3?3OnCancelAudition?$AA@ ; `string'
PUBLIC	??_C@_0BG@OPDH@XAUD?$CBWaveBank?4StopAll?$AA@	; `string'
;	COMDAT ??_C@_0BO@NFFB@CMainWindow?3?3OnCancelAudition?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
CONST	SEGMENT
??_C@_0BO@NFFB@CMainWindow?3?3OnCancelAudition?$AA@ DB 'CMainWindow::OnCa'
	DB	'ncelAudition', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OPDH@XAUD?$CBWaveBank?4StopAll?$AA@
CONST	SEGMENT
??_C@_0BG@OPDH@XAUD?$CBWaveBank?4StopAll?$AA@ DB 'XAUD!WaveBank.StopAll', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?OnCancelAudition@CMainWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8
?OnCancelAudition@CMainWindow@@UAEXXZ PROC NEAR		; CMainWindow::OnCancelAudition, COMDAT
; _this$ = ecx

; 2650 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2651 :     HWND                    hwnd;
; 2652 :     
; 2653 :     if(!ConnectRemote())

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 10		 mov	 edx, DWORD PTR [eax]
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]
  00017	85 c0		 test	 eax, eax
  00019	75 2f		 jne	 SHORT $L52128

; 2654 :     {
; 2655 :         DPF_ERROR("Can't connect to audio console");

  0001b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00020	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@NFFB@CMainWindow?3?3OnCancelAudition?$AA@ ; `string'
  00025	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  0002a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@OAKO@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0002f	6a 01		 push	 1
  00031	6a 09		 push	 9
  00033	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00038	83 c4 18	 add	 esp, 24			; 00000018H
  0003b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@BJC@Can?8t?5connect?5to?5audio?5console?$AA@ ; `string'
  00040	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00045	83 c4 04	 add	 esp, 4

; 2656 :         return;

  00048	eb 19		 jmp	 SHORT $L52126
$L52128:

; 2657 :     }
; 2658 : 
; 2659 :     DmSendCommand(m_pxbdm, "XAUD!WaveBank.StopAll", NULL, NULL);

  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@OPDH@XAUD?$CBWaveBank?4StopAll?$AA@ ; `string'
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 88 80 04 00
	00		 mov	 ecx, DWORD PTR [eax+1152]
  0005c	51		 push	 ecx
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmSendCommand@16
$L52126:

; 2660 : }

  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?OnCancelAudition@CMainWindow@@UAEXXZ ENDP		; CMainWindow::OnCancelAudition
_TEXT	ENDS
PUBLIC	??_C@_0BA@LPKH@XAUD?$CBconnect?5?$CFs?$AA@	; `string'
EXTRN	__imp__DmOpenConnection@4:NEAR
;	COMDAT ??_C@_0BA@LPKH@XAUD?$CBconnect?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BA@LPKH@XAUD?$CBconnect?5?$CFs?$AA@ DB 'XAUD!connect %s', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?ConnectRemote@CMainWindow@@MAEHXZ
_TEXT	SEGMENT
_this$ = -264
_hr$ = -260
_szCommand$ = -256
?ConnectRemote@CMainWindow@@MAEHXZ PROC NEAR		; CMainWindow::ConnectRemote, COMDAT
; _this$ = ecx

; 2686 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2687 :     HRESULT                 hr                  = S_OK;

  0000f	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 2688 :     CHAR                    szCommand[0x100];
; 2689 :     
; 2690 :     if(!m_pxbdm)

  00019	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 b8 80 04 00
	00 00		 cmp	 DWORD PTR [eax+1152], 0
  00026	0f 85 c8 00 00
	00		 jne	 $L52138

; 2691 :     {
; 2692 :         if(XBDM_NOERR == (hr = DmOpenConnection(&m_pxbdm)))

  0002c	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 80 04 00
	00		 add	 ecx, 1152		; 00000480H
  00038	51		 push	 ecx
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmOpenConnection@4
  0003f	89 85 fc fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00045	81 bd fc fe ff
	ff 00 00 db 02	 cmp	 DWORD PTR _hr$[ebp], 47906816 ; 02db0000H
  0004f	75 0a		 jne	 SHORT $L52143

; 2693 :         {
; 2694 :             hr = S_OK;

  00051	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0
$L52143:

; 2695 :         }
; 2696 : 
; 2697 :         if(SUCCEEDED(hr))

  0005b	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00062	7c 55		 jl	 SHORT $L52146

; 2698 :         {
; 2699 :             sprintf(szCommand, "XAUD!connect %s", g_pszAppTitle);

  00064	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_pszAppTitle
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@LPKH@XAUD?$CBconnect?5?$CFs?$AA@ ; `string'
  00070	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szCommand$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 _sprintf
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2700 : 
; 2701 :             if(XBDM_NOERR == (hr = DmSendCommand(m_pxbdm, szCommand, NULL, NULL)))

  0007f	6a 00		 push	 0
  00081	6a 00		 push	 0
  00083	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szCommand$[ebp]
  00089	51		 push	 ecx
  0008a	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00090	8b 82 80 04 00
	00		 mov	 eax, DWORD PTR [edx+1152]
  00096	50		 push	 eax
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmSendCommand@16
  0009d	89 85 fc fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  000a3	81 bd fc fe ff
	ff 00 00 db 02	 cmp	 DWORD PTR _hr$[ebp], 47906816 ; 02db0000H
  000ad	75 0a		 jne	 SHORT $L52152

; 2702 :             {
; 2703 :                 hr = S_OK;

  000af	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0
$L52152:
$L52146:

; 2704 :             }
; 2705 :         }
; 2706 : 
; 2707 :         if(FAILED(hr) && m_pxbdm)

  000b9	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000c0	7d 32		 jge	 SHORT $L52155
  000c2	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	83 b9 80 04 00
	00 00		 cmp	 DWORD PTR [ecx+1152], 0
  000cf	74 23		 je	 SHORT $L52155

; 2708 :         {
; 2709 :             DmCloseConnection(m_pxbdm);

  000d1	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000d7	8b 82 80 04 00
	00		 mov	 eax, DWORD PTR [edx+1152]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmCloseConnection@4

; 2710 :             m_pxbdm = NULL;

  000e4	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	c7 81 80 04 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+1152], 0
$L52155:
$L52138:

; 2711 :         }
; 2712 :     }
; 2713 : 
; 2714 :     return SUCCEEDED(hr);

  000f4	33 c0		 xor	 eax, eax
  000f6	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000fd	0f 9d c0	 setge	 al

; 2715 : }

  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c3		 ret	 0
?ConnectRemote@CMainWindow@@MAEHXZ ENDP			; CMainWindow::ConnectRemote
_TEXT	ENDS
PUBLIC	??0CAboutDialog@@QAE@XZ				; CAboutDialog::CAboutDialog
PUBLIC	?Create@CAboutDialog@@UAEHPAVCWindow@@@Z	; CAboutDialog::Create
PUBLIC	?OnInitDialog@CAboutDialog@@UAEHPAXPAJ@Z	; CAboutDialog::OnInitDialog
PUBLIC	??_7CAboutDialog@@6B@				; CAboutDialog::`vftable'
PUBLIC	??_GCAboutDialog@@UAEPAXI@Z			; CAboutDialog::`scalar deleting destructor'
PUBLIC	??_ECAboutDialog@@UAEPAXI@Z			; CAboutDialog::`vector deleting destructor'
PUBLIC	?OnClose@CDialog@@UAEHPAJ@Z			; CDialog::OnClose
PUBLIC	?OnOk@CDialog@@UAEXXZ				; CDialog::OnOk
PUBLIC	?OnCancel@CDialog@@UAEXXZ			; CDialog::OnCancel
EXTRN	?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CDialog::OnCommand
EXTRN	?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z:NEAR ; CDialog::DispatchMessageA
EXTRN	?HandleMessage@CDialog@@MAEHIIJPAJ@Z:NEAR	; CDialog::HandleMessage
EXTRN	??0CModalDialog@@QAE@XZ:NEAR			; CModalDialog::CModalDialog
EXTRN	?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z:NEAR ; CModalDialog::Create
;	COMDAT ??_7CAboutDialog@@6B@
CONST	SEGMENT
??_7CAboutDialog@@6B@ DD FLAT:??_ECAboutDialog@@UAEPAXI@Z ; CAboutDialog::`vftable'
	DD	FLAT:?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
	DD	FLAT:?SetParent@CWindow@@UAEXPAV1@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHII@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHPBDI@Z
	DD	FLAT:?PumpMessages@CWindow@@UAEXXZ
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHKHHPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?EnableAccelerators@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?HandleMessage@CDialog@@MAEHIIJPAJ@Z
	DD	FLAT:?OnInitDialog@CAboutDialog@@UAEHPAXPAJ@Z
	DD	FLAT:?OnOk@CDialog@@UAEXXZ
	DD	FLAT:?OnCancel@CDialog@@UAEXXZ
	DD	FLAT:?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z
	DD	FLAT:?Create@CAboutDialog@@UAEHPAVCWindow@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CAboutDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CAboutDialog@@QAE@XZ PROC NEAR			; CAboutDialog::CAboutDialog, COMDAT
; _this$ = ecx

; 2740 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CModalDialog@@QAE@XZ	; CModalDialog::CModalDialog
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAboutDialog@@6B@ ; CAboutDialog::`vftable'

; 2741 : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CAboutDialog@@QAE@XZ ENDP				; CAboutDialog::CAboutDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CDialog@@UAEHPAJ@Z PROC NEAR			; CDialog::OnClose, COMDAT
; _this$ = ecx

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  :     OnCancel();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 52 5c	 call	 DWORD PTR [edx+92]

; 265  :     return FALSE;

  00012	33 c0		 xor	 eax, eax

; 266  : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?OnClose@CDialog@@UAEHPAJ@Z ENDP			; CDialog::OnClose
_TEXT	ENDS
EXTRN	__imp__EndDialog@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnOk@CDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnOk@CDialog@@UAEXXZ PROC NEAR				; CDialog::OnOk, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 270  :     EndDialog(m_hwnd, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 271  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnOk@CDialog@@UAEXXZ ENDP				; CDialog::OnOk
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCancel@CDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCancel@CDialog@@UAEXXZ PROC NEAR			; CDialog::OnCancel, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 275  :     EndDialog(m_hwnd, FALSE);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 276  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnCancel@CDialog@@UAEXXZ ENDP				; CDialog::OnCancel
_TEXT	ENDS
PUBLIC	??1CAboutDialog@@UAE@XZ				; CAboutDialog::~CAboutDialog
; Function compile flags: /Odt
;	COMDAT ??_GCAboutDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAboutDialog@@UAEPAXI@Z PROC NEAR			; CAboutDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAboutDialog@@UAE@XZ	; CAboutDialog::~CAboutDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L52164
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L52164:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCAboutDialog@@UAEPAXI@Z ENDP			; CAboutDialog::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CModalDialog@@UAE@XZ:NEAR			; CModalDialog::~CModalDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\winmain.cpp
;	COMDAT ??1CAboutDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAboutDialog@@UAE@XZ PROC NEAR			; CAboutDialog::~CAboutDialog, COMDAT
; _this$ = ecx

; 2766 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAboutDialog@@6B@ ; CAboutDialog::`vftable'

; 2767 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CModalDialog@@UAE@XZ	; CModalDialog::~CModalDialog
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CAboutDialog@@UAE@XZ ENDP				; CAboutDialog::~CAboutDialog
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Create@CAboutDialog@@UAEHPAVCWindow@@@Z
_TEXT	SEGMENT
_pParent$ = 8
_this$ = -4
?Create@CAboutDialog@@UAEHPAVCWindow@@@Z PROC NEAR	; CAboutDialog::Create, COMDAT
; _this$ = ecx

; 2793 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2794 :     return CModalDialog::Create(IDD, NULL, pParent);

  00007	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 81 00 00 00	 push	 129			; 00000081H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z ; CModalDialog::Create

; 2795 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?Create@CAboutDialog@@UAEHPAVCWindow@@@Z ENDP		; CAboutDialog::Create
_TEXT	ENDS
PUBLIC	?OnInitDialog@CDialog@@UAEHPAXPAJ@Z		; CDialog::OnInitDialog
EXTRN	__imp__GetLocalTime@4:NEAR
EXTRN	__imp__SetDlgItemTextA@12:NEAR
EXTRN	__imp__GetDlgItemTextA@16:NEAR
EXTRN	__imp__GetWindowTextA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnInitDialog@CAboutDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -792
_szTemplate$ = -784
_szVersion$ = -528
_szText$ = -272
_time$ = -16
_fHandled$ = -788
?OnInitDialog@CAboutDialog@@UAEHPAXPAJ@Z PROC NEAR	; CAboutDialog::OnInitDialog, COMDAT
; _this$ = ecx

; 2823 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 03 00
	00		 sub	 esp, 796		; 0000031cH
  00009	89 8d e8 fc ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2824 :     CHAR                    szTemplate[0x100];
; 2825 :     CHAR                    szVersion[0x100];
; 2826 :     CHAR                    szText[0x100];
; 2827 :     SYSTEMTIME              time;
; 2828 :     BOOL                    fHandled;
; 2829 :     
; 2830 :     fHandled = CModalDialog::OnInitDialog(pvContext, plResult);

  0000f	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00016	51		 push	 ecx
  00017	8b 8d e8 fc ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z ; CDialog::OnInitDialog
  00022	89 85 ec fc ff
	ff		 mov	 DWORD PTR _fHandled$[ebp], eax

; 2831 :     
; 2832 :     //
; 2833 :     // Set text items and window title
; 2834 :     //
; 2835 : 
; 2836 :     GetWindowText(m_hwnd, szTemplate, NUMELMS(szTemplate));

  00028	68 00 01 00 00	 push	 256			; 00000100H
  0002d	8d 95 f0 fc ff
	ff		 lea	 edx, DWORD PTR _szTemplate$[ebp]
  00033	52		 push	 edx
  00034	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0003d	51		 push	 ecx
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowTextA@12

; 2837 :     sprintf(szText, szTemplate, g_pszAppTitle);

  00044	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_pszAppTitle
  0004a	52		 push	 edx
  0004b	8d 85 f0 fc ff
	ff		 lea	 eax, DWORD PTR _szTemplate$[ebp]
  00051	50		 push	 eax
  00052	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 _sprintf
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2838 :     SetWindowText(m_hwnd, szText);

  00061	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00067	52		 push	 edx
  00068	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00071	51		 push	 ecx
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 2839 : 
; 2840 :     GetDlgItemText(m_hwnd, IDC_APPNAME, szTemplate, NUMELMS(szTemplate));

  00078	68 00 01 00 00	 push	 256			; 00000100H
  0007d	8d 95 f0 fc ff
	ff		 lea	 edx, DWORD PTR _szTemplate$[ebp]
  00083	52		 push	 edx
  00084	68 fb 03 00 00	 push	 1019			; 000003fbH
  00089	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0008f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00092	51		 push	 ecx
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 2841 :     sprintf(szText, szTemplate, g_pszAppTitle);

  00099	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_pszAppTitle
  0009f	52		 push	 edx
  000a0	8d 85 f0 fc ff
	ff		 lea	 eax, DWORD PTR _szTemplate$[ebp]
  000a6	50		 push	 eax
  000a7	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 _sprintf
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2842 :     SetDlgItemText(m_hwnd, IDC_APPNAME, szText);

  000b6	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  000bc	52		 push	 edx
  000bd	68 fb 03 00 00	 push	 1019			; 000003fbH
  000c2	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000cb	51		 push	 ecx
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2843 : 
; 2844 :     GetDlgItemText(m_hwnd, IDC_VERSION, szTemplate, NUMELMS(szTemplate));

  000d2	68 00 01 00 00	 push	 256			; 00000100H
  000d7	8d 95 f0 fc ff
	ff		 lea	 edx, DWORD PTR _szTemplate$[ebp]
  000dd	52		 push	 edx
  000de	68 fc 03 00 00	 push	 1020			; 000003fcH
  000e3	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000ec	51		 push	 ecx
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 2845 :     GetWaveBundlerVersion(szVersion);

  000f3	8d 95 f0 fd ff
	ff		 lea	 edx, DWORD PTR _szVersion$[ebp]
  000f9	52		 push	 edx
  000fa	e8 00 00 00 00	 call	 ?GetWaveBundlerVersion@@YGXPAD@Z ; GetWaveBundlerVersion

; 2846 :     sprintf(szText, szTemplate, szVersion);

  000ff	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _szVersion$[ebp]
  00105	50		 push	 eax
  00106	8d 8d f0 fc ff
	ff		 lea	 ecx, DWORD PTR _szTemplate$[ebp]
  0010c	51		 push	 ecx
  0010d	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00113	52		 push	 edx
  00114	e8 00 00 00 00	 call	 _sprintf
  00119	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2847 :     SetDlgItemText(m_hwnd, IDC_VERSION, szText);

  0011c	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00122	50		 push	 eax
  00123	68 fc 03 00 00	 push	 1020			; 000003fcH
  00128	8b 8d e8 fc ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00131	52		 push	 edx
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2848 : 
; 2849 :     GetDlgItemText(m_hwnd, IDC_COPYRIGHT, szTemplate, NUMELMS(szTemplate));

  00138	68 00 01 00 00	 push	 256			; 00000100H
  0013d	8d 85 f0 fc ff
	ff		 lea	 eax, DWORD PTR _szTemplate$[ebp]
  00143	50		 push	 eax
  00144	68 fd 03 00 00	 push	 1021			; 000003fdH
  00149	8b 8d e8 fc ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0014f	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00152	52		 push	 edx
  00153	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 2850 :     GetLocalTime(&time);

  00159	8d 45 f0	 lea	 eax, DWORD PTR _time$[ebp]
  0015c	50		 push	 eax
  0015d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 2851 :     sprintf(szText, szTemplate, time.wYear);

  00163	8b 4d f0	 mov	 ecx, DWORD PTR _time$[ebp]
  00166	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0016c	51		 push	 ecx
  0016d	8d 95 f0 fc ff
	ff		 lea	 edx, DWORD PTR _szTemplate$[ebp]
  00173	52		 push	 edx
  00174	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 _sprintf
  00180	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2852 :     SetDlgItemText(m_hwnd, IDC_COPYRIGHT, szText);

  00183	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00189	51		 push	 ecx
  0018a	68 fd 03 00 00	 push	 1021			; 000003fdH
  0018f	8b 95 e8 fc ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00195	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00198	50		 push	 eax
  00199	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2853 : 
; 2854 :     //
; 2855 :     // Center the window
; 2856 :     //
; 2857 : 
; 2858 :     CenterWindow(m_hwnd, m_pParent ? m_pParent->m_hwnd : NULL);

  0019f	8b 8d e8 fc ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001a5	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  001a9	74 14		 je	 SHORT $L52657
  001ab	8b 95 e8 fc ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  001b1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001b4	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  001b7	89 8d e4 fc ff
	ff		 mov	 DWORD PTR -796+[ebp], ecx
  001bd	eb 0a		 jmp	 SHORT $L52658
$L52657:
  001bf	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR -796+[ebp], 0
$L52658:
  001c9	8b 95 e4 fc ff
	ff		 mov	 edx, DWORD PTR -796+[ebp]
  001cf	52		 push	 edx
  001d0	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001d6	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  001d9	51		 push	 ecx
  001da	e8 00 00 00 00	 call	 _CenterWindow@8

; 2859 : 
; 2860 :     return fHandled;

  001df	8b 85 ec fc ff
	ff		 mov	 eax, DWORD PTR _fHandled$[ebp]

; 2861 : }

  001e5	8b e5		 mov	 esp, ebp
  001e7	5d		 pop	 ebp
  001e8	c2 08 00	 ret	 8
?OnInitDialog@CAboutDialog@@UAEHPAXPAJ@Z ENDP		; CAboutDialog::OnInitDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnInitDialog@CDialog@@UAEHPAXPAJ@Z PROC NEAR		; CDialog::OnInitDialog, COMDAT
; _this$ = ecx

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 259  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 260  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?OnInitDialog@CDialog@@UAEHPAXPAJ@Z ENDP		; CDialog::OnInitDialog
_TEXT	ENDS
END
