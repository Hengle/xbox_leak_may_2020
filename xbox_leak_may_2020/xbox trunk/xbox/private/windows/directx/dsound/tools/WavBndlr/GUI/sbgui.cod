; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@ELIP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@JEPD@Entry?5Name?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06EIHC@Format?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04GGHG@Rate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04PFOA@Bits?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LCGJ@Channels?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04BBDK@Size?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@GGA@Conversion?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DDIP@Source?5File?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08DMOP@?$CBm_hIcon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@PEHD@this?5?$DN?$DN?5GetEntry?$CIhwnd?0?5nItem?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03MECJ@PCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03JGAL@?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01FBMM@4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_00A@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@JNDA@XAUD?$CBWaveBank?4PlayEntry?5?$CC?$CFs?$CC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05FAFH@T?3?2?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03JDFL@WBN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04EHOP@BYTE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01PCFE@?2?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@FOPJ@DmSendFile?5failed?5with?5error?5?$CFx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CE@FLKI@Unable?5to?5transfer?5data?5to?5the?5X@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@JEHN@DmSendCommand?5failed?5with?5error?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CD@OEFD@Unable?5to?5send?5command?5to?5the?5Xb@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DKFA@Bank?5Name?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@FNAK@Entry?5Count?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09GOLC@Bank?5Size?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JGNP@Bank?5File?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@NLLI@Header?5File?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EJ@LBPN@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@LII@Add?5Wave?5Bank?5Entries?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04MLPN@CHAR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03KAKF@xwb?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@KHON@CGuiWaveBank?3?3AddEntry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@OGBP@this?5?$DN?$DN?5GetBank?$CIhwnd?0?5nItem?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DE@DBBA@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBankEn@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06JCGL@pEntry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CM@CPCO@Header?5Files?5?$CI?$CK?4h?$CJ?$AA?$CK?4h?$AAAll?5Files@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@FFCP@Create?5Wave?5Bank?5File?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@CLFI@Create?5Header?5File?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DC@BJHH@That?5wave?5bank?5file?5already?5exis@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02LEGB@?4h?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01KDJI@h?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CP@OMHO@That?5header?5file?5already?5exists?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DB@MAFN@Project?5Files?5?$CI?$CK?4xwp?$CJ?$AA?$CK?4xwp?$AAAll?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@BFJP@Open?5Project?5File?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03FMPL@xwp?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JEHP@Save?5Project?5File?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CP@GLPM@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBank?3?3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GFJO@pBank?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@HJPN@Cancelling?4?4?4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@MJLE@All?5entries?5were?5successfully?5wr@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@MFOM@The?5operation?5was?5cancelled?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CC@FLOO@Errors?5occurred?5during?5processin@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05JIMF@Close?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetName@CXboxAdpcmFilter@@SGPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetName@C8BitFilter@@SGPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBankCallback@@UAEHII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBankCallback@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseBank@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBankCallback@@UAEXPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@@UAEHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@@UAEHII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableAccelerators@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOk@CDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CGuiWaveBankEntry@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SortEntryList@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatNumber@@YGXHHHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGuiWaveBankEntry@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGuiWaveBankEntry@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemIndex@CGuiWaveBankEntry@@UAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateListView@CGuiWaveBankEntry@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetName@CGuiWaveBankEntry@@UAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGuiWaveBank@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGuiWaveBank@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Initialize@CGuiWaveBank@@UAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CGuiWaveBank@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetName@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemIndex@CGuiWaveBank@@UAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddEntry@CGuiWaveBank@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateListView@CGuiWaveBank@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SortEntryList@CGuiWaveBank@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGuiWaveBankProject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGuiWaveBankProject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddBank@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveBank@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveEntry@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectBank@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearEntryList@CGuiWaveBankProject@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FillEntryList@CGuiWaveBankProject@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CGuiWaveBankProject@@UAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Save@CGuiWaveBankProject@@UAEJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CGuiWaveBankProject@@UAEXPAUHWND__@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CGuiWaveBankProject@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SortBankList@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddEntry@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Generate@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateThreadProc@CGuiWaveBankProject@@CGKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateThread@CGuiWaveBankProject@@MAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGenerateDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGenerateDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWaveBankCallback@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGenerateDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CGenerateDialog@@UAEPAUHWND__@@PAVCGuiWaveBankProject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CGenerateDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCancel@CGenerateDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginProject@CGenerateDialog@@UAEHII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndProject@CGenerateDialog@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OpenBank@CGenerateDialog@@UAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginEntry@CGenerateDialog@@UAEHPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndEntry@CGenerateDialog@@UAEXPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CWaveBankCallback@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGenerateDialog@@6BCWaveBankCallback@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGuiWaveBank@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGuiWaveBankProject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGenerateDialog@@6BCModelessDialog@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CGuiWaveBankEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@JEHP@Save?5Project?5File?$AA@		; `string'
PUBLIC	?m_aColumnData@CGuiWaveBankEntry@@2PAULVCOLUMNDATA@@A ; CGuiWaveBankEntry::m_aColumnData
PUBLIC	?m_aColumnData@CGuiWaveBank@@2PAULVCOLUMNDATA@@A ; CGuiWaveBank::m_aColumnData
PUBLIC	??_C@_0O@HJPN@Cancelling?4?4?4?$AA@		; `string'
PUBLIC	??_C@_0CG@MJLE@All?5entries?5were?5successfully?5wr@ ; `string'
PUBLIC	??_C@_0BM@MFOM@The?5operation?5was?5cancelled?$AA@ ; `string'
PUBLIC	??_C@_0CC@FLOO@Errors?5occurred?5during?5processin@ ; `string'
PUBLIC	??_C@_05JIMF@Close?$AA@				; `string'
PUBLIC	??_C@_0L@JEPD@Entry?5Name?$AA@			; `string'
PUBLIC	??_C@_06EIHC@Format?$AA@			; `string'
PUBLIC	??_C@_04GGHG@Rate?$AA@				; `string'
PUBLIC	??_C@_04PFOA@Bits?$AA@				; `string'
PUBLIC	??_C@_08LCGJ@Channels?$AA@			; `string'
PUBLIC	??_C@_04BBDK@Size?$AA@				; `string'
PUBLIC	??_C@_0L@GGA@Conversion?$AA@			; `string'
PUBLIC	??_C@_0M@DDIP@Source?5File?$AA@			; `string'
PUBLIC	??_C@_0BN@JNDA@XAUD?$CBWaveBank?4PlayEntry?5?$CC?$CFs?$CC?$AA@ ; `string'
PUBLIC	??_C@_05FAFH@T?3?2?$CFs?$AA@			; `string'
PUBLIC	??_C@_09DKFA@Bank?5Name?$AA@			; `string'
PUBLIC	??_C@_0M@FNAK@Entry?5Count?$AA@			; `string'
PUBLIC	??_C@_09GOLC@Bank?5Size?$AA@			; `string'
PUBLIC	??_C@_09JGNP@Bank?5File?$AA@			; `string'
PUBLIC	??_C@_0M@NLLI@Header?5File?$AA@			; `string'
PUBLIC	??_C@_0EJ@LBPN@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@ ; `string'
PUBLIC	??_C@_0BG@LII@Add?5Wave?5Bank?5Entries?$AA@	; `string'
PUBLIC	??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@ ; `string'
PUBLIC	??_C@_0CM@CPCO@Header?5Files?5?$CI?$CK?4h?$CJ?$AA?$CK?4h?$AAAll?5Files@ ; `string'
PUBLIC	??_C@_0BG@FFCP@Create?5Wave?5Bank?5File?$AA@	; `string'
PUBLIC	??_C@_0BD@CLFI@Create?5Header?5File?$AA@	; `string'
PUBLIC	??_C@_0DB@MAFN@Project?5Files?5?$CI?$CK?4xwp?$CJ?$AA?$CK?4xwp?$AAAll?5@ ; `string'
PUBLIC	??_C@_0BC@BFJP@Open?5Project?5File?$AA@		; `string'
CONST	SEGMENT
?dwMajor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01H	; `GetWaveBundlerVersion'::`2'::dwMajor
?dwMinor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 00H	; `GetWaveBundlerVersion'::`2'::dwMinor
?dwBuild@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01130H ; `GetWaveBundlerVersion'::`2'::dwBuild
CONST	ENDS
;	COMDAT ??_C@_0L@JEPD@Entry?5Name?$AA@
CONST	SEGMENT
??_C@_0L@JEPD@Entry?5Name?$AA@ DB 'Entry Name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EIHC@Format?$AA@
CONST	SEGMENT
??_C@_06EIHC@Format?$AA@ DB 'Format', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGHG@Rate?$AA@
CONST	SEGMENT
??_C@_04GGHG@Rate?$AA@ DB 'Rate', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFOA@Bits?$AA@
CONST	SEGMENT
??_C@_04PFOA@Bits?$AA@ DB 'Bits', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCGJ@Channels?$AA@
CONST	SEGMENT
??_C@_08LCGJ@Channels?$AA@ DB 'Channels', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BBDK@Size?$AA@
CONST	SEGMENT
??_C@_04BBDK@Size?$AA@ DB 'Size', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GGA@Conversion?$AA@
CONST	SEGMENT
??_C@_0L@GGA@Conversion?$AA@ DB 'Conversion', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DDIP@Source?5File?$AA@
CONST	SEGMENT
??_C@_0M@DDIP@Source?5File?$AA@ DB 'Source File', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?m_aColumnData@CGuiWaveBankEntry@@2PAULVCOLUMNDATA@@A DD FLAT:??_C@_0L@JEPD@Entry?5Name?$AA@ ; CGuiWaveBankEntry::m_aColumnData
	DD	01H
	DD	01H
	DD	FLAT:??_C@_06EIHC@Format?$AA@
	DD	01H
	DD	01H
	DD	FLAT:??_C@_04GGHG@Rate?$AA@
	DD	00H
	DD	01H
	DD	FLAT:??_C@_04PFOA@Bits?$AA@
	DD	00H
	DD	01H
	DD	FLAT:??_C@_08LCGJ@Channels?$AA@
	DD	00H
	DD	01H
	DD	FLAT:??_C@_04BBDK@Size?$AA@
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0L@GGA@Conversion?$AA@
	DD	01H
	DD	01H
	DD	FLAT:??_C@_0M@DDIP@Source?5File?$AA@
	DD	01H
	DD	01H
_DATA	ENDS
;	COMDAT ??_C@_0BN@JNDA@XAUD?$CBWaveBank?4PlayEntry?5?$CC?$CFs?$CC?$AA@
CONST	SEGMENT
??_C@_0BN@JNDA@XAUD?$CBWaveBank?4PlayEntry?5?$CC?$CFs?$CC?$AA@ DB 'XAUD!W'
	DB	'aveBank.PlayEntry "%s"', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?pszCommandTemplate@?1??Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z@4QBDB DD FLAT:??_C@_0BN@JNDA@XAUD?$CBWaveBank?4PlayEntry?5?$CC?$CFs?$CC?$AA@ ; `CGuiWaveBankEntry::Audition'::`2'::pszCommandTemplate
CONST	ENDS
;	COMDAT ??_C@_05FAFH@T?3?2?$CFs?$AA@
CONST	SEGMENT
??_C@_05FAFH@T?3?2?$CFs?$AA@ DB 'T:\%s', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?pszDstPathTemplate@?1??Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z@4QBDB DD FLAT:??_C@_05FAFH@T?3?2?$CFs?$AA@ ; `CGuiWaveBankEntry::Audition'::`2'::pszDstPathTemplate
?dwCopyBufferSize@?1??Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z@4KB DD 040000H ; `CGuiWaveBankEntry::Audition'::`2'::dwCopyBufferSize
CONST	ENDS
;	COMDAT ??_C@_09DKFA@Bank?5Name?$AA@
CONST	SEGMENT
??_C@_09DKFA@Bank?5Name?$AA@ DB 'Bank Name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNAK@Entry?5Count?$AA@
CONST	SEGMENT
??_C@_0M@FNAK@Entry?5Count?$AA@ DB 'Entry Count', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GOLC@Bank?5Size?$AA@
CONST	SEGMENT
??_C@_09GOLC@Bank?5Size?$AA@ DB 'Bank Size', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JGNP@Bank?5File?$AA@
CONST	SEGMENT
??_C@_09JGNP@Bank?5File?$AA@ DB 'Bank File', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NLLI@Header?5File?$AA@
CONST	SEGMENT
??_C@_0M@NLLI@Header?5File?$AA@ DB 'Header File', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?m_aColumnData@CGuiWaveBank@@2PAULVCOLUMNDATA@@A DD FLAT:??_C@_09DKFA@Bank?5Name?$AA@ ; CGuiWaveBank::m_aColumnData
	DD	01H
	DD	01H
	DD	FLAT:??_C@_0M@FNAK@Entry?5Count?$AA@
	DD	00H
	DD	01H
	DD	FLAT:??_C@_09GOLC@Bank?5Size?$AA@
	DD	00H
	DD	01H
	DD	FLAT:??_C@_09JGNP@Bank?5File?$AA@
	DD	01H
	DD	01H
	DD	FLAT:??_C@_0M@NLLI@Header?5File?$AA@
	DD	01H
	DD	01H
_DATA	ENDS
;	COMDAT ??_C@_0EJ@LBPN@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@
CONST	SEGMENT
??_C@_0EJ@LBPN@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@ DB 'S'
	DB	'ound Files (*.wav;*.aif;*.aiff)', 00H, '*.wav;*.aif;*.aiff', 00H
	DB	'All Files (*.*)', 00H, '*.*', 00H, 00H	; `string'
CONST	ENDS
CONST	SEGMENT
?pszFilter@?1??AddEntry@CGuiWaveBank@@UAEJXZ@4QBDB DD FLAT:??_C@_0EJ@LBPN@Sound?5Files?5?$CI?$CK?4wav?$DL?$CK?4aif?$DL?$CK?4aiff?$CJ@ ; `CGuiWaveBank::AddEntry'::`2'::pszFilter
CONST	ENDS
;	COMDAT ??_C@_0BG@LII@Add?5Wave?5Bank?5Entries?$AA@
CONST	SEGMENT
??_C@_0BG@LII@Add?5Wave?5Bank?5Entries?$AA@ DB 'Add Wave Bank Entries', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszTitle@?1??AddEntry@CGuiWaveBank@@UAEJXZ@4QBDB DD FLAT:??_C@_0BG@LII@Add?5Wave?5Bank?5Entries?$AA@ ; `CGuiWaveBank::AddEntry'::`2'::pszTitle
?dwOfnFlags@?1??AddEntry@CGuiWaveBank@@UAEJXZ@4KB DD 0881a04H ; `CGuiWaveBank::AddEntry'::`2'::dwOfnFlags
?nMaxFiles@?1??AddEntry@CGuiWaveBank@@UAEJXZ@4IB DD 0800H ; `CGuiWaveBank::AddEntry'::`2'::nMaxFiles
CONST	ENDS
;	COMDAT ??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@
CONST	SEGMENT
??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@ DB 'W'
	DB	'ave Bank Files (*.xwb)', 00H, '*.xwb', 00H, 'All Files (*.*)', 00H
	DB	'*.*', 00H, 00H				; `string'
CONST	ENDS
CONST	SEGMENT
?pszSbkFilter@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB DD FLAT:??_C@_0DD@PBCB@Wave?5Bank?5Files?5?$CI?$CK?4xwb?$CJ?$AA?$CK?4xwb?$AAAl@ ; `CGuiWaveBankProject::AddBank'::`2'::pszSbkFilter
CONST	ENDS
;	COMDAT ??_C@_0CM@CPCO@Header?5Files?5?$CI?$CK?4h?$CJ?$AA?$CK?4h?$AAAll?5Files@
CONST	SEGMENT
??_C@_0CM@CPCO@Header?5Files?5?$CI?$CK?4h?$CJ?$AA?$CK?4h?$AAAll?5Files@ DB 'H'
	DB	'eader Files (*.h)', 00H, '*.h', 00H, 'All Files (*.*)', 00H, '*'
	DB	'.*', 00H, 00H				; `string'
CONST	ENDS
CONST	SEGMENT
?pszHdrFilter@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB DD FLAT:??_C@_0CM@CPCO@Header?5Files?5?$CI?$CK?4h?$CJ?$AA?$CK?4h?$AAAll?5Files@ ; `CGuiWaveBankProject::AddBank'::`2'::pszHdrFilter
CONST	ENDS
;	COMDAT ??_C@_0BG@FFCP@Create?5Wave?5Bank?5File?$AA@
CONST	SEGMENT
??_C@_0BG@FFCP@Create?5Wave?5Bank?5File?$AA@ DB 'Create Wave Bank File', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszSbkTitle@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB DD FLAT:??_C@_0BG@FFCP@Create?5Wave?5Bank?5File?$AA@ ; `CGuiWaveBankProject::AddBank'::`2'::pszSbkTitle
CONST	ENDS
;	COMDAT ??_C@_0BD@CLFI@Create?5Header?5File?$AA@
CONST	SEGMENT
??_C@_0BD@CLFI@Create?5Header?5File?$AA@ DB 'Create Header File', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszHdrTitle@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB DD FLAT:??_C@_0BD@CLFI@Create?5Header?5File?$AA@ ; `CGuiWaveBankProject::AddBank'::`2'::pszHdrTitle
?dwOfnFlags@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4KB DD 0880804H ; `CGuiWaveBankProject::AddBank'::`2'::dwOfnFlags
CONST	ENDS
;	COMDAT ??_C@_0DB@MAFN@Project?5Files?5?$CI?$CK?4xwp?$CJ?$AA?$CK?4xwp?$AAAll?5@
CONST	SEGMENT
??_C@_0DB@MAFN@Project?5Files?5?$CI?$CK?4xwp?$CJ?$AA?$CK?4xwp?$AAAll?5@ DB 'P'
	DB	'roject Files (*.xwp)', 00H, '*.xwp', 00H, 'All Files (*.*)', 00H
	DB	'*.*', 00H, 00H				; `string'
CONST	ENDS
CONST	SEGMENT
?pszFilter@?1??Open@CGuiWaveBankProject@@UAEJPBD@Z@4QBDB DD FLAT:??_C@_0DB@MAFN@Project?5Files?5?$CI?$CK?4xwp?$CJ?$AA?$CK?4xwp?$AAAll?5@ ; `CGuiWaveBankProject::Open'::`2'::pszFilter
CONST	ENDS
;	COMDAT ??_C@_0BC@BFJP@Open?5Project?5File?$AA@
CONST	SEGMENT
??_C@_0BC@BFJP@Open?5Project?5File?$AA@ DB 'Open Project File', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszTitle@?1??Open@CGuiWaveBankProject@@UAEJPBD@Z@4QBDB DD FLAT:??_C@_0BC@BFJP@Open?5Project?5File?$AA@ ; `CGuiWaveBankProject::Open'::`2'::pszTitle
?dwOfnFlags@?1??Open@CGuiWaveBankProject@@UAEJPBD@Z@4KB DD 0881a04H ; `CGuiWaveBankProject::Open'::`2'::dwOfnFlags
?pszFilter@?1??Save@CGuiWaveBankProject@@UAEJH@Z@4QBDB DD FLAT:??_C@_0DB@MAFN@Project?5Files?5?$CI?$CK?4xwp?$CJ?$AA?$CK?4xwp?$AAAll?5@ ; `CGuiWaveBankProject::Save'::`2'::pszFilter
CONST	ENDS
;	COMDAT ??_C@_0BC@JEHP@Save?5Project?5File?$AA@
CONST	SEGMENT
??_C@_0BC@JEHP@Save?5Project?5File?$AA@ DB 'Save Project File', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszTitle@?1??Save@CGuiWaveBankProject@@UAEJH@Z@4QBDB DD FLAT:??_C@_0BC@JEHP@Save?5Project?5File?$AA@ ; `CGuiWaveBankProject::Save'::`2'::pszTitle
?dwOfnFlags@?1??Save@CGuiWaveBankProject@@UAEJH@Z@4KB DD 0880806H ; `CGuiWaveBankProject::Save'::`2'::dwOfnFlags
CONST	ENDS
;	COMDAT ??_C@_0O@HJPN@Cancelling?4?4?4?$AA@
CONST	SEGMENT
??_C@_0O@HJPN@Cancelling?4?4?4?$AA@ DB 'Cancelling...', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?pszCancelling@?1??OnCancel@CGenerateDialog@@UAEXXZ@4QBDB DD FLAT:??_C@_0O@HJPN@Cancelling?4?4?4?$AA@ ; `CGenerateDialog::OnCancel'::`2'::pszCancelling
CONST	ENDS
;	COMDAT ??_C@_0CG@MJLE@All?5entries?5were?5successfully?5wr@
CONST	SEGMENT
??_C@_0CG@MJLE@All?5entries?5were?5successfully?5wr@ DB 'All entries were'
	DB	' successfully written', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?pszSuccess@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB DD FLAT:??_C@_0CG@MJLE@All?5entries?5were?5successfully?5wr@ ; `CGenerateDialog::EndProject'::`2'::pszSuccess
CONST	ENDS
;	COMDAT ??_C@_0BM@MFOM@The?5operation?5was?5cancelled?$AA@
CONST	SEGMENT
??_C@_0BM@MFOM@The?5operation?5was?5cancelled?$AA@ DB 'The operation was '
	DB	'cancelled', 00H				; `string'
CONST	ENDS
CONST	SEGMENT
?pszAbort@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB DD FLAT:??_C@_0BM@MFOM@The?5operation?5was?5cancelled?$AA@ ; `CGenerateDialog::EndProject'::`2'::pszAbort
CONST	ENDS
;	COMDAT ??_C@_0CC@FLOO@Errors?5occurred?5during?5processin@
CONST	SEGMENT
??_C@_0CC@FLOO@Errors?5occurred?5during?5processin@ DB 'Errors occurred d'
	DB	'uring processing', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?pszError@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB DD FLAT:??_C@_0CC@FLOO@Errors?5occurred?5during?5processin@ ; `CGenerateDialog::EndProject'::`2'::pszError
CONST	ENDS
;	COMDAT ??_C@_05JIMF@Close?$AA@
CONST	SEGMENT
??_C@_05JIMF@Close?$AA@ DB 'Close', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?pszClose@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB DD FLAT:??_C@_05JIMF@Close?$AA@ ; `CGenerateDialog::EndProject'::`2'::pszClose
CONST	ENDS
PUBLIC	?FormatNumber@@YGXHHHPAD@Z			; FormatNumber
EXTRN	_abs:NEAR
EXTRN	__strrev:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
;	COMDAT ?FormatNumber@@YGXHHHPAD@Z
_TEXT	SEGMENT
_nValue$ = 8
_fSigned$ = 12
_fThousands$ = 16
_pszString$ = 20
_psz$ = -12
_nDigits$ = -8
_uValue$ = -4
?FormatNumber@@YGXHHHPAD@Z PROC NEAR			; FormatNumber, COMDAT

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 52   :     LPSTR                   psz     = pszString;

  00006	8b 45 14	 mov	 eax, DWORD PTR _pszString$[ebp]
  00009	89 45 f4	 mov	 DWORD PTR _psz$[ebp], eax

; 53   :     UINT                    nDigits = 0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nDigits$[ebp], 0

; 54   :     UINT                    uValue;
; 55   :     
; 56   :     if(nValue)

  00013	83 7d 08 00	 cmp	 DWORD PTR _nValue$[ebp], 0
  00017	0f 84 09 01 00
	00		 je	 $L51313

; 57   :     {
; 58   :         if(!fSigned || (nValue > 0))

  0001d	83 7d 0c 00	 cmp	 DWORD PTR _fSigned$[ebp], 0
  00021	74 06		 je	 SHORT $L51315
  00023	83 7d 08 00	 cmp	 DWORD PTR _nValue$[ebp], 0
  00027	7e 74		 jle	 SHORT $L51314
$L51315:

; 59   :         {
; 60   :             uValue = (UINT)nValue;

  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nValue$[ebp]
  0002c	89 4d fc	 mov	 DWORD PTR _uValue$[ebp], ecx
$L51318:

; 61   :             
; 62   :             while(uValue)

  0002f	83 7d fc 00	 cmp	 DWORD PTR _uValue$[ebp], 0
  00033	74 63		 je	 SHORT $L51319

; 63   :             {
; 64   :                 *psz++ = '0' + (uValue % 10);

  00035	8b 45 fc	 mov	 eax, DWORD PTR _uValue$[ebp]
  00038	33 d2		 xor	 edx, edx
  0003a	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0003f	f7 f1		 div	 ecx
  00041	83 c2 30	 add	 edx, 48			; 00000030H
  00044	8b 45 f4	 mov	 eax, DWORD PTR _psz$[ebp]
  00047	88 10		 mov	 BYTE PTR [eax], dl
  00049	8b 4d f4	 mov	 ecx, DWORD PTR _psz$[ebp]
  0004c	83 c1 01	 add	 ecx, 1
  0004f	89 4d f4	 mov	 DWORD PTR _psz$[ebp], ecx

; 65   : 
; 66   :                 uValue /= 10;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _uValue$[ebp]
  00055	33 d2		 xor	 edx, edx
  00057	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0005c	f7 f1		 div	 ecx
  0005e	89 45 fc	 mov	 DWORD PTR _uValue$[ebp], eax

; 67   : 
; 68   :                 if(uValue && fThousands)

  00061	83 7d fc 00	 cmp	 DWORD PTR _uValue$[ebp], 0
  00065	74 26		 je	 SHORT $L51320
  00067	83 7d 10 00	 cmp	 DWORD PTR _fThousands$[ebp], 0
  0006b	74 20		 je	 SHORT $L51320

; 69   :                 {
; 70   :                     if(2 == (nDigits % 3))

  0006d	8b 45 f8	 mov	 eax, DWORD PTR _nDigits$[ebp]
  00070	33 d2		 xor	 edx, edx
  00072	b9 03 00 00 00	 mov	 ecx, 3
  00077	f7 f1		 div	 ecx
  00079	83 fa 02	 cmp	 edx, 2
  0007c	75 0f		 jne	 SHORT $L51321

; 71   :                     {
; 72   :                         *psz++ = ',';

  0007e	8b 55 f4	 mov	 edx, DWORD PTR _psz$[ebp]
  00081	c6 02 2c	 mov	 BYTE PTR [edx], 44	; 0000002cH
  00084	8b 45 f4	 mov	 eax, DWORD PTR _psz$[ebp]
  00087	83 c0 01	 add	 eax, 1
  0008a	89 45 f4	 mov	 DWORD PTR _psz$[ebp], eax
$L51321:
$L51320:

; 73   :                     }
; 74   :                 }
; 75   : 
; 76   :                 nDigits++;

  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _nDigits$[ebp]
  00090	83 c1 01	 add	 ecx, 1
  00093	89 4d f8	 mov	 DWORD PTR _nDigits$[ebp], ecx

; 77   :             }

  00096	eb 97		 jmp	 SHORT $L51318
$L51319:

; 78   :         }
; 79   :         else

  00098	e9 87 00 00 00	 jmp	 $L51322
$L51314:

; 80   :         {
; 81   :             uValue = abs(nValue);

  0009d	8b 55 08	 mov	 edx, DWORD PTR _nValue$[ebp]
  000a0	52		 push	 edx
  000a1	e8 00 00 00 00	 call	 _abs
  000a6	83 c4 04	 add	 esp, 4
  000a9	89 45 fc	 mov	 DWORD PTR _uValue$[ebp], eax
$L51324:

; 82   :             
; 83   :             while(uValue)

  000ac	83 7d fc 00	 cmp	 DWORD PTR _uValue$[ebp], 0
  000b0	74 63		 je	 SHORT $L51325

; 84   :             {
; 85   :                 *psz++ = '0' + (uValue % 10);

  000b2	8b 45 fc	 mov	 eax, DWORD PTR _uValue$[ebp]
  000b5	33 d2		 xor	 edx, edx
  000b7	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  000bc	f7 f1		 div	 ecx
  000be	83 c2 30	 add	 edx, 48			; 00000030H
  000c1	8b 45 f4	 mov	 eax, DWORD PTR _psz$[ebp]
  000c4	88 10		 mov	 BYTE PTR [eax], dl
  000c6	8b 4d f4	 mov	 ecx, DWORD PTR _psz$[ebp]
  000c9	83 c1 01	 add	 ecx, 1
  000cc	89 4d f4	 mov	 DWORD PTR _psz$[ebp], ecx

; 86   : 
; 87   :                 uValue /= 10;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _uValue$[ebp]
  000d2	33 d2		 xor	 edx, edx
  000d4	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  000d9	f7 f1		 div	 ecx
  000db	89 45 fc	 mov	 DWORD PTR _uValue$[ebp], eax

; 88   : 
; 89   :                 if(uValue && fThousands)

  000de	83 7d fc 00	 cmp	 DWORD PTR _uValue$[ebp], 0
  000e2	74 26		 je	 SHORT $L51326
  000e4	83 7d 10 00	 cmp	 DWORD PTR _fThousands$[ebp], 0
  000e8	74 20		 je	 SHORT $L51326

; 90   :                 {
; 91   :                     if(2 == (nDigits % 3))

  000ea	8b 45 f8	 mov	 eax, DWORD PTR _nDigits$[ebp]
  000ed	33 d2		 xor	 edx, edx
  000ef	b9 03 00 00 00	 mov	 ecx, 3
  000f4	f7 f1		 div	 ecx
  000f6	83 fa 02	 cmp	 edx, 2
  000f9	75 0f		 jne	 SHORT $L51327

; 92   :                     {
; 93   :                         *psz++ = ',';

  000fb	8b 55 f4	 mov	 edx, DWORD PTR _psz$[ebp]
  000fe	c6 02 2c	 mov	 BYTE PTR [edx], 44	; 0000002cH
  00101	8b 45 f4	 mov	 eax, DWORD PTR _psz$[ebp]
  00104	83 c0 01	 add	 eax, 1
  00107	89 45 f4	 mov	 DWORD PTR _psz$[ebp], eax
$L51327:
$L51326:

; 94   :                     }
; 95   :                 }
; 96   : 
; 97   :                 nDigits++;

  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _nDigits$[ebp]
  0010d	83 c1 01	 add	 ecx, 1
  00110	89 4d f8	 mov	 DWORD PTR _nDigits$[ebp], ecx

; 98   :             }

  00113	eb 97		 jmp	 SHORT $L51324
$L51325:

; 99   : 
; 100  :             *psz++ = '-';

  00115	8b 55 f4	 mov	 edx, DWORD PTR _psz$[ebp]
  00118	c6 02 2d	 mov	 BYTE PTR [edx], 45	; 0000002dH
  0011b	8b 45 f4	 mov	 eax, DWORD PTR _psz$[ebp]
  0011e	83 c0 01	 add	 eax, 1
  00121	89 45 f4	 mov	 DWORD PTR _psz$[ebp], eax
$L51322:

; 101  :         }
; 102  :     }
; 103  :     else

  00124	eb 0f		 jmp	 SHORT $L51328
$L51313:

; 104  :     {
; 105  :         *psz++ = '0';

  00126	8b 4d f4	 mov	 ecx, DWORD PTR _psz$[ebp]
  00129	c6 01 30	 mov	 BYTE PTR [ecx], 48	; 00000030H
  0012c	8b 55 f4	 mov	 edx, DWORD PTR _psz$[ebp]
  0012f	83 c2 01	 add	 edx, 1
  00132	89 55 f4	 mov	 DWORD PTR _psz$[ebp], edx
$L51328:

; 106  :     }
; 107  : 
; 108  :     *psz = 0;

  00135	8b 45 f4	 mov	 eax, DWORD PTR _psz$[ebp]
  00138	c6 00 00	 mov	 BYTE PTR [eax], 0

; 109  : 
; 110  :     _strrev(pszString);

  0013b	8b 4d 14	 mov	 ecx, DWORD PTR _pszString$[ebp]
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 __strrev
  00144	83 c4 04	 add	 esp, 4

; 111  : }

  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 10 00	 ret	 16			; 00000010H
?FormatNumber@@YGXHHHPAD@Z ENDP				; FormatNumber
_TEXT	ENDS
PUBLIC	??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z	; CGuiWaveBankEntry::CGuiWaveBankEntry
PUBLIC	?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z	; CGuiWaveBankEntry::Initialize
PUBLIC	?Refresh@CGuiWaveBankEntry@@UAEJXZ		; CGuiWaveBankEntry::Refresh
PUBLIC	?SetName@CGuiWaveBankEntry@@UAEJPBD@Z		; CGuiWaveBankEntry::SetName
PUBLIC	?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z		; CGuiWaveBankEntry::SetFlags
PUBLIC	?UpdateListView@CGuiWaveBankEntry@@UAEXI@Z	; CGuiWaveBankEntry::UpdateListView
PUBLIC	?GetItemIndex@CGuiWaveBankEntry@@UAEIXZ		; CGuiWaveBankEntry::GetItemIndex
PUBLIC	?Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z ; CGuiWaveBankEntry::Audition
PUBLIC	??_7CGuiWaveBankEntry@@6B@			; CGuiWaveBankEntry::`vftable'
PUBLIC	??_GCGuiWaveBankEntry@@UAEPAXI@Z		; CGuiWaveBankEntry::`scalar deleting destructor'
PUBLIC	??_ECGuiWaveBankEntry@@UAEPAXI@Z		; CGuiWaveBankEntry::`vector deleting destructor'
EXTRN	??0CWaveBankEntry@@QAE@PAVCWaveBank@@@Z:NEAR	; CWaveBankEntry::CWaveBankEntry
EXTRN	?GetValidFlags@CWaveBankEntry@@UAEKXZ:NEAR	; CWaveBankEntry::GetValidFlags
EXTRN	?GetMetaData@CWaveBankEntry@@UAEJPAU_WAVEBANKENTRY@@PAK@Z:NEAR ; CWaveBankEntry::GetMetaData
EXTRN	?CommitWaveData@CWaveBankEntry@@UAEJPAVCStdFileStream@WaveLoader@@KPBU_WAVEBANKENTRY@@PAXK@Z:NEAR ; CWaveBankEntry::CommitWaveData
EXTRN	?ReadProjectData@CWaveBankEntry@@UAEJPBD0K@Z:NEAR ; CWaveBankEntry::ReadProjectData
EXTRN	?WriteProjectData@CWaveBankEntry@@UAEJPBD0K@Z:NEAR ; CWaveBankEntry::WriteProjectData
EXTRN	?LoadWaveFile@CWaveBankEntry@@MAEJXZ:NEAR	; CWaveBankEntry::LoadWaveFile
EXTRN	?FindDuplicateEntry@CWaveBankEntry@@MAEJPBDPAI01@Z:NEAR ; CWaveBankEntry::FindDuplicateEntry
;	COMDAT ??_7CGuiWaveBankEntry@@6B@
CONST	SEGMENT
??_7CGuiWaveBankEntry@@6B@ DD FLAT:??_ECGuiWaveBankEntry@@UAEPAXI@Z ; CGuiWaveBankEntry::`vftable'
	DD	FLAT:?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z
	DD	FLAT:?SetName@CGuiWaveBankEntry@@UAEJPBD@Z
	DD	FLAT:?GetValidFlags@CWaveBankEntry@@UAEKXZ
	DD	FLAT:?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z
	DD	FLAT:?GetMetaData@CWaveBankEntry@@UAEJPAU_WAVEBANKENTRY@@PAK@Z
	DD	FLAT:?CommitWaveData@CWaveBankEntry@@UAEJPAVCStdFileStream@WaveLoader@@KPBU_WAVEBANKENTRY@@PAXK@Z
	DD	FLAT:?ReadProjectData@CWaveBankEntry@@UAEJPBD0K@Z
	DD	FLAT:?WriteProjectData@CWaveBankEntry@@UAEJPBD0K@Z
	DD	FLAT:?LoadWaveFile@CWaveBankEntry@@MAEJXZ
	DD	FLAT:?FindDuplicateEntry@CWaveBankEntry@@MAEJPBDPAI01@Z
	DD	FLAT:?Refresh@CGuiWaveBankEntry@@UAEJXZ
	DD	FLAT:?UpdateListView@CGuiWaveBankEntry@@UAEXI@Z
	DD	FLAT:?GetItemIndex@CGuiWaveBankEntry@@UAEIXZ
	DD	FLAT:?Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z
_TEXT	SEGMENT
_pParent$ = 8
_this$ = -4
??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z PROC NEAR	; CGuiWaveBankEntry::CGuiWaveBankEntry, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CWaveBankEntry@@QAE@PAVCWaveBank@@@Z ; CWaveBankEntry::CWaveBankEntry
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGuiWaveBankEntry@@6B@ ; CGuiWaveBankEntry::`vftable'

; 150  :     m_pParent = pParent;

  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  00022	89 82 30 03 00
	00		 mov	 DWORD PTR [edx+816], eax

; 151  :     m_hIcon = NULL;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	c7 81 34 03 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+820], 0

; 152  : }

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z ENDP	; CGuiWaveBankEntry::CGuiWaveBankEntry
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.h
_TEXT	ENDS
;	COMDAT ?Refresh@CGuiWaveBankEntry@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4
?Refresh@CGuiWaveBankEntry@@UAEJXZ PROC NEAR		; CGuiWaveBankEntry::Refresh, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 77   :     return LoadWaveFile();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 52 24	 call	 DWORD PTR [edx+36]

; 78   : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?Refresh@CGuiWaveBankEntry@@UAEJXZ ENDP			; CGuiWaveBankEntry::Refresh
_TEXT	ENDS
PUBLIC	??1CGuiWaveBankEntry@@UAE@XZ			; CGuiWaveBankEntry::~CGuiWaveBankEntry
; Function compile flags: /Odt
;	COMDAT ??_GCGuiWaveBankEntry@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGuiWaveBankEntry@@UAEPAXI@Z PROC NEAR		; CGuiWaveBankEntry::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGuiWaveBankEntry@@UAE@XZ ; CGuiWaveBankEntry::~CGuiWaveBankEntry
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51344
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51344:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGuiWaveBankEntry@@UAEPAXI@Z ENDP			; CGuiWaveBankEntry::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
EXTRN	??1CWaveBankEntry@@UAE@XZ:NEAR			; CWaveBankEntry::~CWaveBankEntry
EXTRN	__imp__DestroyIcon@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
;	COMDAT ??1CGuiWaveBankEntry@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGuiWaveBankEntry@@UAE@XZ PROC NEAR			; CGuiWaveBankEntry::~CGuiWaveBankEntry, COMDAT
; _this$ = ecx

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBankEntry@@6B@ ; CGuiWaveBankEntry::`vftable'

; 178  :     if(m_hIcon)

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 b9 34 03 00
	00 00		 cmp	 DWORD PTR [ecx+820], 0
  0001a	74 10		 je	 SHORT $L51349

; 179  :     {
; 180  :         DestroyIcon(m_hIcon);

  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 82 34 03 00
	00		 mov	 eax, DWORD PTR [edx+820]
  00025	50		 push	 eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyIcon@4
$L51349:

; 181  :     }
; 182  : }

  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1CWaveBankEntry@@UAE@XZ ; CWaveBankEntry::~CWaveBankEntry
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
??1CGuiWaveBankEntry@@UAE@XZ ENDP			; CGuiWaveBankEntry::~CGuiWaveBankEntry
_TEXT	ENDS
PUBLIC	??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_08DMOP@?$CBm_hIcon?$AA@			; `string'
EXTRN	__imp__SHGetFileInfoA@20:NEAR
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
EXTRN	?Initialize@CWaveBankEntry@@UAEJPBD0K@Z:NEAR	; CWaveBankEntry::Initialize
;	COMDAT ??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DMOP@?$CBm_hIcon?$AA@
CONST	SEGMENT
??_C@_08DMOP@?$CBm_hIcon?$AA@ DB '!m_hIcon', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z
_TEXT	SEGMENT
_pszEntryName$ = 8
_pszFileName$ = 12
_dwFlags$ = 16
_this$ = -360
_shfi$ = -352
_hr$ = -356
?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z PROC NEAR	; CGuiWaveBankEntry::Initialize, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 68 01 00
	00		 sub	 esp, 360		; 00000168H
  00009	89 8d 98 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 213  :     SHFILEINFO              shfi;
; 214  :     HRESULT                 hr;
; 215  :     
; 216  :     //
; 217  :     // Initialize the base class
; 218  :     //
; 219  :     
; 220  :     hr = CWaveBankEntry::Initialize(pszEntryName, pszFileName, dwFlags);

  0000f	8b 45 10	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _pszEntryName$[ebp]
  0001a	52		 push	 edx
  0001b	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?Initialize@CWaveBankEntry@@UAEJPBD0K@Z ; CWaveBankEntry::Initialize
  00026	89 85 9c fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 221  : 
; 222  :     //
; 223  :     // Get the icon information for display
; 224  :     //
; 225  : 
; 226  :     if(SUCCEEDED(hr))

  0002c	83 bd 9c fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00033	7c 5d		 jl	 SHORT $L51359

; 227  :     {
; 228  :         ASSERT(!m_hIcon);

  00035	68 e4 00 00 00	 push	 228			; 000000e4H
  0003a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0003f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08DMOP@?$CBm_hIcon?$AA@ ; `string'
  00044	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0004a	33 c9		 xor	 ecx, ecx
  0004c	83 b8 34 03 00
	00 00		 cmp	 DWORD PTR [eax+820], 0
  00053	0f 95 c1	 setne	 cl
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0005c	83 c4 10	 add	 esp, 16			; 00000010H

; 229  : 
; 230  :         if(SHGetFileInfo(pszFileName, 0, &shfi, sizeof(shfi), SHGFI_ICON))

  0005f	68 00 01 00 00	 push	 256			; 00000100H
  00064	68 60 01 00 00	 push	 352			; 00000160H
  00069	8d 95 a0 fe ff
	ff		 lea	 edx, DWORD PTR _shfi$[ebp]
  0006f	52		 push	 edx
  00070	6a 00		 push	 0
  00072	8b 45 0c	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  00075	50		 push	 eax
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SHGetFileInfoA@20
  0007c	85 c0		 test	 eax, eax
  0007e	74 12		 je	 SHORT $L51362

; 231  :         {
; 232  :             m_hIcon = shfi.hIcon;

  00080	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00086	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR _shfi$[ebp]
  0008c	89 91 34 03 00
	00		 mov	 DWORD PTR [ecx+820], edx
$L51362:
$L51359:

; 233  :         }
; 234  :     }
; 235  : 
; 236  :     //
; 237  :     // Update display data
; 238  :     //
; 239  : 
; 240  :     if(SUCCEEDED(hr))

  00092	83 bd 9c fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00099	7c 13		 jl	 SHORT $L51364

; 241  :     {
; 242  :         UpdateListView();

  0009b	6a ff		 push	 -1
  0009d	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 10		 mov	 edx, DWORD PTR [eax]
  000a5	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	ff 52 30	 call	 DWORD PTR [edx+48]
$L51364:

; 243  :     }
; 244  :     
; 245  :     //
; 246  :     // Update the entry count in the bank list
; 247  :     //
; 248  : 
; 249  :     if(SUCCEEDED(hr))

  000ae	83 bd 9c fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000b5	7c 21		 jl	 SHORT $L51366

; 250  :     {
; 251  :         m_pParent->UpdateListView();

  000b7	6a ff		 push	 -1
  000b9	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 88 30 03 00
	00		 mov	 ecx, DWORD PTR [eax+816]
  000c5	8b 95 98 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000cb	8b 82 30 03 00
	00		 mov	 eax, DWORD PTR [edx+816]
  000d1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d3	8b c8		 mov	 ecx, eax
  000d5	ff 52 40	 call	 DWORD PTR [edx+64]
$L51366:

; 252  :     }
; 253  : 
; 254  :     return hr;

  000d8	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]

; 255  : }

  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 0c 00	 ret	 12			; 0000000cH
?Initialize@CGuiWaveBankEntry@@UAEJPBD0K@Z ENDP		; CGuiWaveBankEntry::Initialize
_TEXT	ENDS
EXTRN	?SetFlags@CWaveBankEntry@@UAEKKK@Z:NEAR		; CWaveBankEntry::SetFlags
; Function compile flags: /Odt
;	COMDAT ?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z
_TEXT	SEGMENT
_dwMask$ = 8
_dwFlags$ = 12
_this$ = -4
?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z PROC NEAR		; CGuiWaveBankEntry::SetFlags, COMDAT
; _this$ = ecx

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 285  :     //
; 286  :     // Hand off to the base class
; 287  :     //
; 288  : 
; 289  :     dwFlags = CWaveBankEntry::SetFlags(dwMask, dwFlags);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _dwFlags$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _dwMask$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?SetFlags@CWaveBankEntry@@UAEKKK@Z ; CWaveBankEntry::SetFlags
  00017	89 45 0c	 mov	 DWORD PTR _dwFlags$[ebp], eax

; 290  : 
; 291  :     //
; 292  :     // Update the parent bank's list-view data since our size may have
; 293  :     // changed
; 294  :     //
; 295  : 
; 296  :     m_pParent->UpdateListView();

  0001a	6a ff		 push	 -1
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 82 30 03 00
	00		 mov	 eax, DWORD PTR [edx+816]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 89 30 03 00
	00		 mov	 ecx, DWORD PTR [ecx+816]
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	ff 52 40	 call	 DWORD PTR [edx+64]

; 297  : 
; 298  :     return dwFlags;

  00033	8b 45 0c	 mov	 eax, DWORD PTR _dwFlags$[ebp]

; 299  : }

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?SetFlags@CGuiWaveBankEntry@@UAEKKK@Z ENDP		; CGuiWaveBankEntry::SetFlags
_TEXT	ENDS
PUBLIC	?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBankEntry::GetEntry
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?GetItemIndex@CGuiWaveBankEntry@@UAEIXZ
_TEXT	SEGMENT
_this$ = -16
_hwnd$ = -4
_nItemCount$ = -8
_nItem$ = -12
?GetItemIndex@CGuiWaveBankEntry@@UAEIXZ PROC NEAR	; CGuiWaveBankEntry::GetItemIndex, COMDAT
; _this$ = ecx

; 325  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 326  :     HWND                    hwnd        = m_pParent->m_pParent->m_hwndEntryList;

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 88 30 03 00
	00		 mov	 ecx, DWORD PTR [eax+816]
  00012	8b 91 48 02 00
	00		 mov	 edx, DWORD PTR [ecx+584]
  00018	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0001b	89 45 fc	 mov	 DWORD PTR _hwnd$[ebp], eax

; 327  :     int                     nItemCount;
; 328  :     int                     nItem;
; 329  : 
; 330  :     if(!hwnd)

  0001e	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  00022	75 05		 jne	 SHORT $L51379

; 331  :     {
; 332  :         return -1;

  00024	83 c8 ff	 or	 eax, -1
  00027	eb 60		 jmp	 SHORT $L51375
$L51379:

; 333  :     }
; 334  :     
; 335  :     nItemCount = ListView_GetItemCount(hwnd);

  00029	6a 00		 push	 0
  0002b	6a 00		 push	 0
  0002d	68 04 10 00 00	 push	 4100			; 00001004H
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0003c	89 45 f8	 mov	 DWORD PTR _nItemCount$[ebp], eax

; 336  : 
; 337  :     for(nItem = 0; nItem < nItemCount; nItem++)

  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nItem$[ebp], 0
  00046	eb 09		 jmp	 SHORT $L51381
$L51382:
  00048	8b 55 f4	 mov	 edx, DWORD PTR _nItem$[ebp]
  0004b	83 c2 01	 add	 edx, 1
  0004e	89 55 f4	 mov	 DWORD PTR _nItem$[ebp], edx
$L51381:
  00051	8b 45 f4	 mov	 eax, DWORD PTR _nItem$[ebp]
  00054	3b 45 f8	 cmp	 eax, DWORD PTR _nItemCount$[ebp]
  00057	7d 16		 jge	 SHORT $L51383

; 338  :     {
; 339  :         if(this == GetEntry(hwnd, nItem))

  00059	8b 4d f4	 mov	 ecx, DWORD PTR _nItem$[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00060	52		 push	 edx
  00061	e8 00 00 00 00	 call	 ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBankEntry::GetEntry
  00066	39 45 f0	 cmp	 DWORD PTR _this$[ebp], eax
  00069	75 02		 jne	 SHORT $L51384

; 340  :         {
; 341  :             break;

  0006b	eb 02		 jmp	 SHORT $L51383
$L51384:

; 342  :         }
; 343  :     }

  0006d	eb d9		 jmp	 SHORT $L51382
$L51383:

; 344  : 
; 345  :     return (nItem < nItemCount) ? nItem : -1;

  0006f	8b 45 f4	 mov	 eax, DWORD PTR _nItem$[ebp]
  00072	3b 45 f8	 cmp	 eax, DWORD PTR _nItemCount$[ebp]
  00075	7d 08		 jge	 SHORT $L52283
  00077	8b 4d f4	 mov	 ecx, DWORD PTR _nItem$[ebp]
  0007a	89 4d ec	 mov	 DWORD PTR -20+[ebp], ecx
  0007d	eb 07		 jmp	 SHORT $L52284
$L52283:
  0007f	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR -20+[ebp], -1
$L52284:
  00086	8b 45 ec	 mov	 eax, DWORD PTR -20+[ebp]
$L51375:

; 346  : }

  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?GetItemIndex@CGuiWaveBankEntry@@UAEIXZ ENDP		; CGuiWaveBankEntry::GetItemIndex
_TEXT	ENDS
EXTRN	_ListView_GetItemParam@8:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.h
;	COMDAT ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z
_TEXT	SEGMENT
_hwnd$ = 8
_nItem$ = 12
?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z PROC NEAR ; CGuiWaveBankEntry::GetEntry, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   :     return (CGuiWaveBankEntry *)ListView_GetItemParam(hwnd, nItem);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _nItem$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 _ListView_GetItemParam@8

; 83   : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ENDP	; CGuiWaveBankEntry::GetEntry
_TEXT	ENDS
PUBLIC	??_C@_0BO@PEHD@this?5?$DN?$DN?5GetEntry?$CIhwnd?0?5nItem?$CJ?$AA@ ; `string'
PUBLIC	??_C@_03MECJ@PCM?$AA@				; `string'
PUBLIC	??_C@_03JGAL@?$CFlu?$AA@			; `string'
PUBLIC	??_C@_01FBMM@4?$AA@				; `string'
PUBLIC	??_C@_00A@?$AA@					; `string'
PUBLIC	?GetName@CXboxAdpcmFilter@@SGPBDXZ		; CXboxAdpcmFilter::GetName
PUBLIC	??_C@_05KMJF@ADPCM?$AA@				; `string'
PUBLIC	?GetName@C8BitFilter@@SGPBDXZ			; C8BitFilter::GetName
EXTRN	_ListView_SetItemText:NEAR
EXTRN	__imp__ImageList_ReplaceIcon@12:NEAR
EXTRN	_strcpy:NEAR
;	COMDAT ??_C@_0BO@PEHD@this?5?$DN?$DN?5GetEntry?$CIhwnd?0?5nItem?$CJ?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
CONST	SEGMENT
??_C@_0BO@PEHD@this?5?$DN?$DN?5GetEntry?$CIhwnd?0?5nItem?$CJ?$AA@ DB 'thi'
	DB	's == GetEntry(hwnd, nItem)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT
??_C@_05KMJF@ADPCM?$AA@ DB 'ADPCM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MECJ@PCM?$AA@
CONST	SEGMENT
??_C@_03MECJ@PCM?$AA@ DB 'PCM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JGAL@?$CFlu?$AA@
CONST	SEGMENT
??_C@_03JGAL@?$CFlu?$AA@ DB '%lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FBMM@4?$AA@
CONST	SEGMENT
??_C@_01FBMM@4?$AA@ DB '4', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00A@?$AA@
CONST	SEGMENT
??_C@_00A@?$AA@ DB 00H					; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?UpdateListView@CGuiWaveBankEntry@@UAEXI@Z
_TEXT	SEGMENT
_nItem$ = 8
_this$ = -344
_hwnd$ = -4
_himl$ = -336
_nSubItem$ = -340
_dwOffset$ = -292
_MetaData$ = -284
_szText$ = -264
_lvi$ = -332
_hr$ = -288
?UpdateListView@CGuiWaveBankEntry@@UAEXI@Z PROC NEAR	; CGuiWaveBankEntry::UpdateListView, COMDAT
; _this$ = ecx

; 372  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 01 00
	00		 sub	 esp, 384		; 00000180H
  00009	89 8d a8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 373  :     HWND                    hwnd            = m_pParent->m_pParent->m_hwndEntryList;

  0000f	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 88 30 03 00
	00		 mov	 ecx, DWORD PTR [eax+816]
  0001b	8b 91 48 02 00
	00		 mov	 edx, DWORD PTR [ecx+584]
  00021	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00024	89 45 fc	 mov	 DWORD PTR _hwnd$[ebp], eax

; 374  :     HIMAGELIST              himl            = m_pParent->m_pParent->m_himlEntryList;

  00027	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 91 30 03 00
	00		 mov	 edx, DWORD PTR [ecx+816]
  00033	8b 82 48 02 00
	00		 mov	 eax, DWORD PTR [edx+584]
  00039	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0003c	89 8d b0 fe ff
	ff		 mov	 DWORD PTR _himl$[ebp], ecx

; 375  :     UINT                    nSubItem        = 0;

  00042	c7 85 ac fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _nSubItem$[ebp], 0

; 376  :     DWORD                   dwOffset        = 0;

  0004c	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwOffset$[ebp], 0

; 377  :     WAVEBANKENTRY           MetaData;
; 378  :     CHAR                    szText[0x100];
; 379  :     LVITEM                  lvi;
; 380  :     HRESULT                 hr;
; 381  : 
; 382  :     if(!hwnd)

  00056	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0005a	75 05		 jne	 SHORT $L51397

; 383  :     {
; 384  :         return;

  0005c	e9 4a 04 00 00	 jmp	 $L51388
$L51397:

; 385  :     }
; 386  : 
; 387  :     if(m_pParent != m_pParent->m_pParent->m_pActiveBank)

  00061	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 82 30 03 00
	00		 mov	 eax, DWORD PTR [edx+816]
  0006d	8b 88 48 02 00
	00		 mov	 ecx, DWORD PTR [eax+584]
  00073	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00079	8b 82 30 03 00
	00		 mov	 eax, DWORD PTR [edx+816]
  0007f	3b 41 24	 cmp	 eax, DWORD PTR [ecx+36]
  00082	74 05		 je	 SHORT $L51398

; 388  :     {
; 389  :         return;

  00084	e9 22 04 00 00	 jmp	 $L51388
$L51398:

; 390  :     }
; 391  : 
; 392  :     if(-1 == nItem)

  00089	83 7d 08 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  0008d	75 14		 jne	 SHORT $L51399

; 393  :     {
; 394  :         nItem = GetItemIndex();

  0008f	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 11		 mov	 edx, DWORD PTR [ecx]
  00097	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	ff 52 34	 call	 DWORD PTR [edx+52]
  000a0	89 45 08	 mov	 DWORD PTR _nItem$[ebp], eax
$L51399:

; 395  :     }
; 396  : 
; 397  :     if(-1 == nItem)

  000a3	83 7d 08 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  000a7	75 78		 jne	 SHORT $L51400

; 398  :     {
; 399  :         lvi.mask = LVIF_IMAGE | LVIF_PARAM;

  000a9	c7 85 b4 fe ff
	ff 06 00 00 00	 mov	 DWORD PTR _lvi$[ebp], 6

; 400  :         lvi.iItem = ListView_GetItemCount(hwnd);

  000b3	6a 00		 push	 0
  000b5	6a 00		 push	 0
  000b7	68 04 10 00 00	 push	 4100			; 00001004H
  000bc	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000bf	50		 push	 eax
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000c6	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+4], eax

; 401  :         lvi.iSubItem = 0;

  000cc	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _lvi$[ebp+8], 0

; 402  :         lvi.iImage = ImageList_AddIcon(himl, m_hIcon);

  000d6	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	8b 91 34 03 00
	00		 mov	 edx, DWORD PTR [ecx+820]
  000e2	52		 push	 edx
  000e3	6a ff		 push	 -1
  000e5	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _himl$[ebp]
  000eb	50		 push	 eax
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_ReplaceIcon@12
  000f2	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+28], eax

; 403  :         lvi.lParam = (LPARAM)this;

  000f8	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	89 8d d4 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+32], ecx

; 404  : 
; 405  :         nItem = ListView_InsertItem(hwnd, &lvi);

  00104	8d 95 b4 fe ff
	ff		 lea	 edx, DWORD PTR _lvi$[ebp]
  0010a	52		 push	 edx
  0010b	6a 00		 push	 0
  0010d	68 07 10 00 00	 push	 4103			; 00001007H
  00112	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00115	50		 push	 eax
  00116	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0011c	89 45 08	 mov	 DWORD PTR _nItem$[ebp], eax

; 406  :     }
; 407  :     else

  0011f	eb 30		 jmp	 SHORT $L51406
$L51400:

; 408  :     {
; 409  :         ASSERT(this == GetEntry(hwnd, nItem));

  00121	68 99 01 00 00	 push	 409			; 00000199H
  00126	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0012b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@PEHD@this?5?$DN?$DN?5GetEntry?$CIhwnd?0?5nItem?$CJ?$AA@ ; `string'
  00130	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00133	51		 push	 ecx
  00134	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00137	52		 push	 edx
  00138	e8 00 00 00 00	 call	 ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBankEntry::GetEntry
  0013d	33 c9		 xor	 ecx, ecx
  0013f	39 85 a8 fe ff
	ff		 cmp	 DWORD PTR _this$[ebp], eax
  00145	0f 95 c1	 setne	 cl
  00148	51		 push	 ecx
  00149	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0014e	83 c4 10	 add	 esp, 16			; 00000010H
$L51406:

; 410  :     }
; 411  : 
; 412  :     hr = GetMetaData(&MetaData, &dwOffset);

  00151	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _dwOffset$[ebp]
  00157	52		 push	 edx
  00158	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _MetaData$[ebp]
  0015e	50		 push	 eax
  0015f	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00165	8b 11		 mov	 edx, DWORD PTR [ecx]
  00167	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	ff 52 14	 call	 DWORD PTR [edx+20]
  00170	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 413  : 
; 414  :     if(FAILED(hr))

  00176	83 bd e0 fe ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0017d	7d 05		 jge	 SHORT $L51409

; 415  :     {
; 416  :         return;

  0017f	e9 27 03 00 00	 jmp	 $L51388
$L51409:

; 417  :     }
; 418  : 
; 419  :     ListView_SetItemText(hwnd, nItem, nSubItem++, m_szEntryName);

  00184	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0018a	83 c0 10	 add	 eax, 16			; 00000010H
  0018d	50		 push	 eax
  0018e	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _nSubItem$[ebp]
  00194	89 8d a4 fe ff
	ff		 mov	 DWORD PTR -348+[ebp], ecx
  0019a	8b 95 a4 fe ff
	ff		 mov	 edx, DWORD PTR -348+[ebp]
  001a0	52		 push	 edx
  001a1	8b 45 08	 mov	 eax, DWORD PTR _nItem$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  001a8	51		 push	 ecx
  001a9	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  001af	83 c2 01	 add	 edx, 1
  001b2	89 95 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], edx
  001b8	e8 00 00 00 00	 call	 _ListView_SetItemText
  001bd	83 c4 10	 add	 esp, 16			; 00000010H

; 420  : 
; 421  :     if(WAVEBANKMINIFORMAT_TAG_ADPCM == m_Format.wFormatTag)

  001c0	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001c6	8b 88 14 03 00
	00		 mov	 ecx, DWORD PTR [eax+788]
  001cc	83 e1 01	 and	 ecx, 1
  001cf	83 f9 01	 cmp	 ecx, 1
  001d2	75 39		 jne	 SHORT $L51410

; 422  :     {
; 423  :         ListView_SetItemText(hwnd, nItem, nSubItem++, "ADPCM");

  001d4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05KMJF@ADPCM?$AA@ ; `string'
  001d9	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  001df	89 95 a0 fe ff
	ff		 mov	 DWORD PTR -352+[ebp], edx
  001e5	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR -352+[ebp]
  001eb	50		 push	 eax
  001ec	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  001ef	51		 push	 ecx
  001f0	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  001f3	52		 push	 edx
  001f4	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  001fa	83 c0 01	 add	 eax, 1
  001fd	89 85 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  00203	e8 00 00 00 00	 call	 _ListView_SetItemText
  00208	83 c4 10	 add	 esp, 16			; 00000010H

; 424  :     }
; 425  :     else

  0020b	eb 37		 jmp	 SHORT $L51411
$L51410:

; 426  :     {
; 427  :         ListView_SetItemText(hwnd, nItem, nSubItem++, "PCM");

  0020d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03MECJ@PCM?$AA@ ; `string'
  00212	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _nSubItem$[ebp]
  00218	89 8d 9c fe ff
	ff		 mov	 DWORD PTR -356+[ebp], ecx
  0021e	8b 95 9c fe ff
	ff		 mov	 edx, DWORD PTR -356+[ebp]
  00224	52		 push	 edx
  00225	8b 45 08	 mov	 eax, DWORD PTR _nItem$[ebp]
  00228	50		 push	 eax
  00229	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0022c	51		 push	 ecx
  0022d	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  00233	83 c2 01	 add	 edx, 1
  00236	89 95 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], edx
  0023c	e8 00 00 00 00	 call	 _ListView_SetItemText
  00241	83 c4 10	 add	 esp, 16			; 00000010H
$L51411:

; 428  :     }
; 429  : 
; 430  :     ListView_SetItemText(hwnd, nItem, nSubItem++, "%lu", m_Format.nSamplesPerSec);

  00244	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0024a	8b 88 14 03 00
	00		 mov	 ecx, DWORD PTR [eax+788]
  00250	c1 e9 04	 shr	 ecx, 4
  00253	81 e1 ff ff ff
	07		 and	 ecx, 134217727		; 07ffffffH
  00259	51		 push	 ecx
  0025a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03JGAL@?$CFlu?$AA@ ; `string'
  0025f	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  00265	89 95 98 fe ff
	ff		 mov	 DWORD PTR -360+[ebp], edx
  0026b	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR -360+[ebp]
  00271	50		 push	 eax
  00272	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00275	51		 push	 ecx
  00276	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00279	52		 push	 edx
  0027a	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  00280	83 c0 01	 add	 eax, 1
  00283	89 85 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  00289	e8 00 00 00 00	 call	 _ListView_SetItemText
  0028e	83 c4 14	 add	 esp, 20			; 00000014H

; 431  : 
; 432  :     if(WAVEBANKMINIFORMAT_TAG_ADPCM == m_Format.wFormatTag)

  00291	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00297	8b 91 14 03 00
	00		 mov	 edx, DWORD PTR [ecx+788]
  0029d	83 e2 01	 and	 edx, 1
  002a0	83 fa 01	 cmp	 edx, 1
  002a3	75 39		 jne	 SHORT $L51414

; 433  :     {
; 434  :         ListView_SetItemText(hwnd, nItem, nSubItem++, "4");

  002a5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01FBMM@4?$AA@ ; `string'
  002aa	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  002b0	89 85 94 fe ff
	ff		 mov	 DWORD PTR -364+[ebp], eax
  002b6	8b 8d 94 fe ff
	ff		 mov	 ecx, DWORD PTR -364+[ebp]
  002bc	51		 push	 ecx
  002bd	8b 55 08	 mov	 edx, DWORD PTR _nItem$[ebp]
  002c0	52		 push	 edx
  002c1	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  002c4	50		 push	 eax
  002c5	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _nSubItem$[ebp]
  002cb	83 c1 01	 add	 ecx, 1
  002ce	89 8d ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], ecx
  002d4	e8 00 00 00 00	 call	 _ListView_SetItemText
  002d9	83 c4 10	 add	 esp, 16			; 00000010H

; 435  :     }
; 436  :     else

  002dc	eb 54		 jmp	 SHORT $L51416
$L51414:

; 437  :     {
; 438  :         ListView_SetItemText(hwnd, nItem, nSubItem++, "%lu", (WAVEBANKMINIFORMAT_BITDEPTH_8 == m_Format.wBitsPerSample) ? 8 : 16);

  002de	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  002e4	8b 82 14 03 00
	00		 mov	 eax, DWORD PTR [edx+788]
  002ea	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002ed	83 e0 01	 and	 eax, 1
  002f0	f7 d8		 neg	 eax
  002f2	1b c0		 sbb	 eax, eax
  002f4	83 e0 08	 and	 eax, 8
  002f7	83 c0 08	 add	 eax, 8
  002fa	50		 push	 eax
  002fb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03JGAL@?$CFlu?$AA@ ; `string'
  00300	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _nSubItem$[ebp]
  00306	89 8d 90 fe ff
	ff		 mov	 DWORD PTR -368+[ebp], ecx
  0030c	8b 95 90 fe ff
	ff		 mov	 edx, DWORD PTR -368+[ebp]
  00312	52		 push	 edx
  00313	8b 45 08	 mov	 eax, DWORD PTR _nItem$[ebp]
  00316	50		 push	 eax
  00317	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0031a	51		 push	 ecx
  0031b	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  00321	83 c2 01	 add	 edx, 1
  00324	89 95 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], edx
  0032a	e8 00 00 00 00	 call	 _ListView_SetItemText
  0032f	83 c4 14	 add	 esp, 20			; 00000014H
$L51416:

; 439  :     }
; 440  : 
; 441  :     ListView_SetItemText(hwnd, nItem, nSubItem++, "%lu", m_Format.nChannels);

  00332	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00338	8b 88 14 03 00
	00		 mov	 ecx, DWORD PTR [eax+788]
  0033e	d1 e9		 shr	 ecx, 1
  00340	83 e1 07	 and	 ecx, 7
  00343	51		 push	 ecx
  00344	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03JGAL@?$CFlu?$AA@ ; `string'
  00349	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  0034f	89 95 8c fe ff
	ff		 mov	 DWORD PTR -372+[ebp], edx
  00355	8b 85 8c fe ff
	ff		 mov	 eax, DWORD PTR -372+[ebp]
  0035b	50		 push	 eax
  0035c	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  0035f	51		 push	 ecx
  00360	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00363	52		 push	 edx
  00364	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  0036a	83 c0 01	 add	 eax, 1
  0036d	89 85 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  00373	e8 00 00 00 00	 call	 _ListView_SetItemText
  00378	83 c4 14	 add	 esp, 20			; 00000014H

; 442  :     
; 443  :     FormatNumber(MetaData.PlayRegion.dwLength, FALSE, TRUE, szText);

  0037b	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00381	51		 push	 ecx
  00382	6a 01		 push	 1
  00384	6a 00		 push	 0
  00386	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _MetaData$[ebp+8]
  0038c	52		 push	 edx
  0038d	e8 00 00 00 00	 call	 ?FormatNumber@@YGXHHHPAD@Z ; FormatNumber

; 444  :     ListView_SetItemText(hwnd, nItem, nSubItem++, szText);

  00392	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  00398	50		 push	 eax
  00399	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _nSubItem$[ebp]
  0039f	89 8d 88 fe ff
	ff		 mov	 DWORD PTR -376+[ebp], ecx
  003a5	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR -376+[ebp]
  003ab	52		 push	 edx
  003ac	8b 45 08	 mov	 eax, DWORD PTR _nItem$[ebp]
  003af	50		 push	 eax
  003b0	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  003b3	51		 push	 ecx
  003b4	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  003ba	83 c2 01	 add	 edx, 1
  003bd	89 95 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], edx
  003c3	e8 00 00 00 00	 call	 _ListView_SetItemText
  003c8	83 c4 10	 add	 esp, 16			; 00000010H

; 445  :     
; 446  :     if(m_dwFlags & WBFILTER_ADPCM)

  003cb	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  003d1	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  003d7	83 e1 01	 and	 ecx, 1
  003da	85 c9		 test	 ecx, ecx
  003dc	74 17		 je	 SHORT $L51417

; 447  :     {
; 448  :         strcpy(szText, CXboxAdpcmFilter::GetName());

  003de	e8 00 00 00 00	 call	 ?GetName@CXboxAdpcmFilter@@SGPBDXZ ; CXboxAdpcmFilter::GetName
  003e3	50		 push	 eax
  003e4	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  003ea	52		 push	 edx
  003eb	e8 00 00 00 00	 call	 _strcpy
  003f0	83 c4 08	 add	 esp, 8

; 449  :     }
; 450  :     else if(m_dwFlags & WBFILTER_8BIT)

  003f3	eb 3e		 jmp	 SHORT $L51418
$L51417:
  003f5	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  003fb	8b 88 28 03 00
	00		 mov	 ecx, DWORD PTR [eax+808]
  00401	83 e1 02	 and	 ecx, 2
  00404	85 c9		 test	 ecx, ecx
  00406	74 17		 je	 SHORT $L51419

; 451  :     {
; 452  :         strcpy(szText, C8BitFilter::GetName());

  00408	e8 00 00 00 00	 call	 ?GetName@C8BitFilter@@SGPBDXZ ; C8BitFilter::GetName
  0040d	50		 push	 eax
  0040e	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00414	52		 push	 edx
  00415	e8 00 00 00 00	 call	 _strcpy
  0041a	83 c4 08	 add	 esp, 8

; 453  :     }
; 454  :     else

  0041d	eb 14		 jmp	 SHORT $L51420
$L51419:

; 455  :     {
; 456  :         strcpy(szText, "");

  0041f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
  00424	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0042a	50		 push	 eax
  0042b	e8 00 00 00 00	 call	 _strcpy
  00430	83 c4 08	 add	 esp, 8
$L51420:
$L51418:

; 457  :     }
; 458  :     
; 459  :     ListView_SetItemText(hwnd, nItem, nSubItem++, szText);

  00433	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00439	51		 push	 ecx
  0043a	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  00440	89 95 84 fe ff
	ff		 mov	 DWORD PTR -380+[ebp], edx
  00446	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR -380+[ebp]
  0044c	50		 push	 eax
  0044d	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00450	51		 push	 ecx
  00451	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00454	52		 push	 edx
  00455	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  0045b	83 c0 01	 add	 eax, 1
  0045e	89 85 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  00464	e8 00 00 00 00	 call	 _ListView_SetItemText
  00469	83 c4 10	 add	 esp, 16			; 00000010H

; 460  :     ListView_SetItemText(hwnd, nItem, nSubItem++, m_szFileName);

  0046c	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00472	81 c1 10 02 00
	00		 add	 ecx, 528		; 00000210H
  00478	51		 push	 ecx
  00479	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  0047f	89 95 80 fe ff
	ff		 mov	 DWORD PTR -384+[ebp], edx
  00485	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR -384+[ebp]
  0048b	50		 push	 eax
  0048c	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  0048f	51		 push	 ecx
  00490	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00493	52		 push	 edx
  00494	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  0049a	83 c0 01	 add	 eax, 1
  0049d	89 85 ac fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  004a3	e8 00 00 00 00	 call	 _ListView_SetItemText
  004a8	83 c4 10	 add	 esp, 16			; 00000010H
$L51388:

; 461  : }

  004ab	8b e5		 mov	 esp, ebp
  004ad	5d		 pop	 ebp
  004ae	c2 04 00	 ret	 4
?UpdateListView@CGuiWaveBankEntry@@UAEXI@Z ENDP		; CGuiWaveBankEntry::UpdateListView
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\filter.h
_TEXT	ENDS
;	COMDAT ?GetName@CXboxAdpcmFilter@@SGPBDXZ
_TEXT	SEGMENT
?GetName@CXboxAdpcmFilter@@SGPBDXZ PROC NEAR		; CXboxAdpcmFilter::GetName, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   :     return "ADPCM";

  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:??_C@_05KMJF@ADPCM?$AA@ ; `string'

; 64   : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetName@CXboxAdpcmFilter@@SGPBDXZ ENDP			; CXboxAdpcmFilter::GetName
_TEXT	ENDS
PUBLIC	??_C@_05HMEK@8?9bit?$AA@			; `string'
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT
??_C@_05HMEK@8?9bit?$AA@ DB '8-bit', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?GetName@C8BitFilter@@SGPBDXZ
_TEXT	SEGMENT
?GetName@C8BitFilter@@SGPBDXZ PROC NEAR			; C8BitFilter::GetName, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  :     return "8-bit";

  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:??_C@_05HMEK@8?9bit?$AA@ ; `string'

; 146  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetName@C8BitFilter@@SGPBDXZ ENDP			; C8BitFilter::GetName
_TEXT	ENDS
EXTRN	?SetName@CWaveBankEntry@@UAEJPBD@Z:NEAR		; CWaveBankEntry::SetName
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
;	COMDAT ?SetName@CGuiWaveBankEntry@@UAEJPBD@Z
_TEXT	SEGMENT
_pszName$ = 8
_this$ = -8
_hr$ = -4
?SetName@CGuiWaveBankEntry@@UAEJPBD@Z PROC NEAR		; CGuiWaveBankEntry::SetName, COMDAT
; _this$ = ecx

; 487  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 488  :     HRESULT                 hr;
; 489  : 
; 490  :     if(!pszName)

  00009	83 7d 08 00	 cmp	 DWORD PTR _pszName$[ebp], 0
  0000d	75 07		 jne	 SHORT $L51427

; 491  :     {
; 492  :         pszName = "";

  0000f	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pszName$[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L51427:

; 493  :     }
; 494  :     
; 495  :     hr = CWaveBankEntry::SetName(pszName);

  00016	8b 45 08	 mov	 eax, DWORD PTR _pszName$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?SetName@CWaveBankEntry@@UAEJPBD@Z ; CWaveBankEntry::SetName
  00022	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 496  : 
; 497  :     if(SUCCEEDED(hr))

  00025	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00029	7c 0d		 jl	 SHORT $L51429

; 498  :     {
; 499  :         UpdateListView();

  0002b	6a ff		 push	 -1
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 11		 mov	 edx, DWORD PTR [ecx]
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	ff 52 30	 call	 DWORD PTR [edx+48]
$L51429:

; 500  :     }
; 501  : 
; 502  :     return hr;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 503  : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?SetName@CGuiWaveBankEntry@@UAEJPBD@Z ENDP		; CGuiWaveBankEntry::SetName
_TEXT	ENDS
PUBLIC	??_C@_03JDFL@WBN?$AA@				; `string'
PUBLIC	??_C@_04EHOP@BYTE?$AA@				; `string'
PUBLIC	??_C@_01PCFE@?2?$AA@				; `string'
PUBLIC	??_C@_08IMGB@WAVBNDLR?$AA@			; `string'
PUBLIC	??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@ ; `string'
PUBLIC	??_C@_0CA@FOPJ@DmSendFile?5failed?5with?5error?5?$CFx?$AA@ ; `string'
PUBLIC	??_C@_0CE@FLKI@Unable?5to?5transfer?5data?5to?5the?5X@ ; `string'
PUBLIC	??_C@_0CD@JEHN@DmSendCommand?5failed?5with?5error?5@ ; `string'
PUBLIC	??_C@_0CD@OEFD@Unable?5to?5send?5command?5to?5the?5Xb@ ; `string'
EXTRN	__imp__DeleteFileA@4:NEAR
EXTRN	??0CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::CStdFileStream
EXTRN	??1CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::~CStdFileStream
EXTRN	?Open@CStdFileStream@WaveLoader@@QAEJPBDKKKK@Z:NEAR ; WaveLoader::CStdFileStream::Open
EXTRN	?Close@CStdFileStream@WaveLoader@@QAEXXZ:NEAR	; WaveLoader::CStdFileStream::Close
EXTRN	?Write@CStdFileStream@WaveLoader@@QAEJPBXKPAK@Z:NEAR ; WaveLoader::CStdFileStream::Write
EXTRN	_sprintf:NEAR
EXTRN	__imp__DmSendCommand@16:NEAR
EXTRN	__imp__DmSendFileA@8:NEAR
EXTRN	__imp__DmMkdir@4:NEAR
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
EXTRN	_strcat:NEAR
EXTRN	?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolAlloc
EXTRN	__imp__GetTempFileNameA@16:NEAR
EXTRN	__imp__GetCurrentDirectoryA@8:NEAR
EXTRN	__splitpath:NEAR
;	COMDAT ??_C@_03JDFL@WBN?$AA@
CONST	SEGMENT
??_C@_03JDFL@WBN?$AA@ DB 'WBN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EHOP@BYTE?$AA@
CONST	SEGMENT
??_C@_04EHOP@BYTE?$AA@ DB 'BYTE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01PCFE@?2?$AA@
CONST	SEGMENT
??_C@_01PCFE@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT
??_C@_08IMGB@WAVBNDLR?$AA@ DB 'WAVBNDLR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@
CONST	SEGMENT
??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@ DB 'CGuiWaveBankEntry::'
	DB	'Audition', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FOPJ@DmSendFile?5failed?5with?5error?5?$CFx?$AA@
CONST	SEGMENT
??_C@_0CA@FOPJ@DmSendFile?5failed?5with?5error?5?$CFx?$AA@ DB 'DmSendFile'
	DB	' failed with error %x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FLKI@Unable?5to?5transfer?5data?5to?5the?5X@
CONST	SEGMENT
??_C@_0CE@FLKI@Unable?5to?5transfer?5data?5to?5the?5X@ DB 'Unable to tran'
	DB	'sfer data to the Xbox', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JEHN@DmSendCommand?5failed?5with?5error?5@
CONST	SEGMENT
??_C@_0CD@JEHN@DmSendCommand?5failed?5with?5error?5@ DB 'DmSendCommand fa'
	DB	'iled with error %x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OEFD@Unable?5to?5send?5command?5to?5the?5Xb@
CONST	SEGMENT
??_C@_0CD@OEFD@Unable?5to?5send?5command?5to?5the?5Xb@ DB 'Unable to send'
	DB	' command to the Xbox', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z
_TEXT	SEGMENT
$T52303 = -2128
_pxbdm$ = 8
_this$ = -2132
_dwOffset$ = -1836
_pvCopyBuffer$ = -1832
_hr$ = -1828
_szCurDir$ = -2104
_szSrcFile$ = -1824
_szDstFile$ = -1560
_szFileTitle$ = -1296
_szCommand$ = -1024
_DataFile$ = -1032
_Entry$ = -2124
?Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z PROC NEAR ; CGuiWaveBankEntry::Audition, COMDAT
; _this$ = ecx

; 529  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 08 00
	00		 sub	 esp, 2132		; 00000854H
  00009	89 8d ac f7 ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 530  :     static const LPCSTR     pszCommandTemplate      = "XAUD!WaveBank.PlayEntry \"%s\"";
; 531  :     static const LPCSTR     pszDstPathTemplate      = "T:\\%s";
; 532  :     static const DWORD      dwCopyBufferSize        = 256 * 1024;
; 533  :     DWORD                   dwOffset                = 0;

  0000f	c7 85 d4 f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwOffset$[ebp], 0

; 534  :     LPVOID                  pvCopyBuffer            = NULL;

  00019	c7 85 d8 f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _pvCopyBuffer$[ebp], 0

; 535  :     HRESULT                 hr                      = S_OK;

  00023	c7 85 dc f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 536  :     CHAR                    szCurDir[MAX_PATH];
; 537  :     CHAR                    szSrcFile[MAX_PATH];
; 538  :     CHAR                    szDstFile[MAX_PATH];
; 539  :     CHAR                    szFileTitle[MAX_PATH];
; 540  :     CHAR                    szCommand[0x400];
; 541  :     CStdFileStream          DataFile;

  0002d	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _DataFile$[ebp]
  00033	e8 00 00 00 00	 call	 ??0CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::CStdFileStream

; 542  :     WAVEBANKENTRY           Entry;
; 543  : 
; 544  :     //
; 545  :     // Open a temporary file
; 546  :     //
; 547  : 
; 548  :     GetCurrentDirectory(NUMELMS(szCurDir), szCurDir);

  00038	8d 85 c8 f7 ff
	ff		 lea	 eax, DWORD PTR _szCurDir$[ebp]
  0003e	50		 push	 eax
  0003f	68 04 01 00 00	 push	 260			; 00000104H
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentDirectoryA@8

; 549  :     GetTempFileName(szCurDir, "WBN", 0, szSrcFile);

  0004a	8d 8d e0 f8 ff
	ff		 lea	 ecx, DWORD PTR _szSrcFile$[ebp]
  00050	51		 push	 ecx
  00051	6a 00		 push	 0
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03JDFL@WBN?$AA@ ; `string'
  00058	8d 95 c8 f7 ff
	ff		 lea	 edx, DWORD PTR _szCurDir$[ebp]
  0005e	52		 push	 edx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTempFileNameA@16

; 550  : 
; 551  :     hr = DataFile.Open(szSrcFile, GENERIC_READ | GENERIC_WRITE, 0, CREATE_ALWAYS, FILE_ATTRIBUTE_TEMPORARY | FILE_FLAG_SEQUENTIAL_SCAN);

  00065	68 00 01 00 08	 push	 134217984		; 08000100H
  0006a	6a 02		 push	 2
  0006c	6a 00		 push	 0
  0006e	68 00 00 00 c0	 push	 -1073741824		; c0000000H
  00073	8d 85 e0 f8 ff
	ff		 lea	 eax, DWORD PTR _szSrcFile$[ebp]
  00079	50		 push	 eax
  0007a	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _DataFile$[ebp]
  00080	e8 00 00 00 00	 call	 ?Open@CStdFileStream@WaveLoader@@QAEJPBDKKKK@Z ; WaveLoader::CStdFileStream::Open
  00085	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 552  : 
; 553  :     //
; 554  :     // Get entry meta-data and write it to the file
; 555  :     //
; 556  : 
; 557  :     if(SUCCEEDED(hr))

  0008b	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00092	7c 25		 jl	 SHORT $L51455

; 558  :     {
; 559  :         hr = GetMetaData(&Entry, &dwOffset);

  00094	8d 8d d4 f8 ff
	ff		 lea	 ecx, DWORD PTR _dwOffset$[ebp]
  0009a	51		 push	 ecx
  0009b	8d 95 b4 f7 ff
	ff		 lea	 edx, DWORD PTR _Entry$[ebp]
  000a1	52		 push	 edx
  000a2	8b 85 ac f7 ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000a8	8b 10		 mov	 edx, DWORD PTR [eax]
  000aa	8b 8d ac f7 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	ff 52 14	 call	 DWORD PTR [edx+20]
  000b3	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L51455:

; 560  :     }
; 561  : 
; 562  :     if(SUCCEEDED(hr))

  000b9	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000c0	7c 1c		 jl	 SHORT $L51457

; 563  :     {
; 564  :         hr = DataFile.Write(&Entry, sizeof(Entry));

  000c2	6a 00		 push	 0
  000c4	6a 14		 push	 20			; 00000014H
  000c6	8d 85 b4 f7 ff
	ff		 lea	 eax, DWORD PTR _Entry$[ebp]
  000cc	50		 push	 eax
  000cd	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _DataFile$[ebp]
  000d3	e8 00 00 00 00	 call	 ?Write@CStdFileStream@WaveLoader@@QAEJPBXKPAK@Z ; WaveLoader::CStdFileStream::Write
  000d8	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L51457:

; 565  :     }
; 566  :     
; 567  :     //
; 568  :     // Allocate the copy buffer
; 569  :     //
; 570  : 
; 571  :     if(SUCCEEDED(hr))

  000de	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000e5	7c 42		 jl	 SHORT $L51459

; 572  :     {
; 573  :         hr = HRFROMP(pvCopyBuffer = MEMALLOC(BYTE, dwCopyBufferSize));

  000e7	6a 01		 push	 1
  000e9	68 00 00 04 00	 push	 262144			; 00040000H
  000ee	68 44 53 64 61	 push	 1633964868		; 61645344H
  000f3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04EHOP@BYTE?$AA@ ; `string'
  000f8	68 3d 02 00 00	 push	 573			; 0000023dH
  000fd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00102	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc
  00107	89 85 d8 f8 ff
	ff		 mov	 DWORD PTR _pvCopyBuffer$[ebp], eax
  0010d	8b 8d d8 f8 ff
	ff		 mov	 ecx, DWORD PTR _pvCopyBuffer$[ebp]
  00113	f7 d9		 neg	 ecx
  00115	1b c9		 sbb	 ecx, ecx
  00117	81 e1 f2 ff f8
	7f		 and	 ecx, 2147024882		; 7ff8fff2H
  0011d	81 c1 0e 00 07
	80		 add	 ecx, -2147024882	; 8007000eH
  00123	89 8d dc f8 ff
	ff		 mov	 DWORD PTR _hr$[ebp], ecx
$L51459:

; 574  :     }
; 575  : 
; 576  :     //
; 577  :     // Get wave data
; 578  :     //
; 579  : 
; 580  :     if(SUCCEEDED(hr))

  00129	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00130	7c 33		 jl	 SHORT $L51466

; 581  :     {
; 582  :         hr = CommitWaveData(&DataFile, sizeof(Entry), &Entry, pvCopyBuffer, dwCopyBufferSize);

  00132	68 00 00 04 00	 push	 262144			; 00040000H
  00137	8b 95 d8 f8 ff
	ff		 mov	 edx, DWORD PTR _pvCopyBuffer$[ebp]
  0013d	52		 push	 edx
  0013e	8d 85 b4 f7 ff
	ff		 lea	 eax, DWORD PTR _Entry$[ebp]
  00144	50		 push	 eax
  00145	6a 14		 push	 20			; 00000014H
  00147	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _DataFile$[ebp]
  0014d	51		 push	 ecx
  0014e	8b 95 ac f7 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00154	8b 02		 mov	 eax, DWORD PTR [edx]
  00156	8b 8d ac f7 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	ff 50 18	 call	 DWORD PTR [eax+24]
  0015f	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L51466:

; 583  :     }
; 584  : 
; 585  :     //
; 586  :     // Close the file so XBDM can read it
; 587  :     //
; 588  : 
; 589  :     if(SUCCEEDED(hr))

  00165	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0016c	7c 0b		 jl	 SHORT $L51468

; 590  :     {
; 591  :         DataFile.Close();

  0016e	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _DataFile$[ebp]
  00174	e8 00 00 00 00	 call	 ?Close@CStdFileStream@WaveLoader@@QAEXXZ ; WaveLoader::CStdFileStream::Close
$L51468:

; 592  :     }
; 593  : 
; 594  :     //
; 595  :     // Send the file to the Xbox
; 596  :     //
; 597  : 
; 598  :     if(SUCCEEDED(hr))

  00179	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00180	7c 32		 jl	 SHORT $L51470

; 599  :     {
; 600  :         sprintf(szDstFile, pszDstPathTemplate, m_pParent->m_szBankName);

  00182	8b 8d ac f7 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00188	8b 91 30 03 00
	00		 mov	 edx, DWORD PTR [ecx+816]
  0018e	83 c2 10	 add	 edx, 16			; 00000010H
  00191	52		 push	 edx
  00192	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszDstPathTemplate@?1??Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z@4QBDB
  00197	50		 push	 eax
  00198	8d 8d e8 f9 ff
	ff		 lea	 ecx, DWORD PTR _szDstFile$[ebp]
  0019e	51		 push	 ecx
  0019f	e8 00 00 00 00	 call	 _sprintf
  001a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 601  : 
; 602  :         DmMkdir(szDstFile);

  001a7	8d 95 e8 f9 ff
	ff		 lea	 edx, DWORD PTR _szDstFile$[ebp]
  001ad	52		 push	 edx
  001ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmMkdir@4
$L51470:

; 603  :     }
; 604  :     
; 605  :     if(SUCCEEDED(hr))

  001b4	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001bb	0f 8c df 00 00
	00		 jl	 $L51472

; 606  :     {
; 607  :         _splitpath(m_szFileName, NULL, NULL, szFileTitle, NULL);

  001c1	6a 00		 push	 0
  001c3	8d 85 f0 fa ff
	ff		 lea	 eax, DWORD PTR _szFileTitle$[ebp]
  001c9	50		 push	 eax
  001ca	6a 00		 push	 0
  001cc	6a 00		 push	 0
  001ce	8b 8d ac f7 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001d4	81 c1 10 02 00
	00		 add	 ecx, 528		; 00000210H
  001da	51		 push	 ecx
  001db	e8 00 00 00 00	 call	 __splitpath
  001e0	83 c4 14	 add	 esp, 20			; 00000014H

; 608  :         
; 609  :         strcat(szDstFile, "\\");

  001e3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01PCFE@?2?$AA@ ; `string'
  001e8	8d 95 e8 f9 ff
	ff		 lea	 edx, DWORD PTR _szDstFile$[ebp]
  001ee	52		 push	 edx
  001ef	e8 00 00 00 00	 call	 _strcat
  001f4	83 c4 08	 add	 esp, 8

; 610  :         strcat(szDstFile, szFileTitle);

  001f7	8d 85 f0 fa ff
	ff		 lea	 eax, DWORD PTR _szFileTitle$[ebp]
  001fd	50		 push	 eax
  001fe	8d 8d e8 f9 ff
	ff		 lea	 ecx, DWORD PTR _szDstFile$[ebp]
  00204	51		 push	 ecx
  00205	e8 00 00 00 00	 call	 _strcat
  0020a	83 c4 08	 add	 esp, 8

; 611  :         
; 612  :         if(XBDM_NOERR == (hr = DmSendFile(szSrcFile, szDstFile)))

  0020d	8d 95 e8 f9 ff
	ff		 lea	 edx, DWORD PTR _szDstFile$[ebp]
  00213	52		 push	 edx
  00214	8d 85 e0 f8 ff
	ff		 lea	 eax, DWORD PTR _szSrcFile$[ebp]
  0021a	50		 push	 eax
  0021b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmSendFileA@8
  00221	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  00227	81 bd dc f8 ff
	ff 00 00 db 02	 cmp	 DWORD PTR _hr$[ebp], 47906816 ; 02db0000H
  00231	75 0c		 jne	 SHORT $L51478

; 613  :         {
; 614  :             hr = S_OK;

  00233	c7 85 dc f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 615  :         }
; 616  :         else

  0023d	eb 61		 jmp	 SHORT $L51480
$L51478:

; 617  :         {
; 618  :             DPF_INFO("DmSendFile failed with error %x", hr);

  0023f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00244	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@ ; `string'
  00249	68 6a 02 00 00	 push	 618			; 0000026aH
  0024e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00253	6a 04		 push	 4
  00255	6a 09		 push	 9
  00257	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0025c	83 c4 18	 add	 esp, 24			; 00000018H
  0025f	8b 8d dc f8 ff
	ff		 mov	 ecx, DWORD PTR _hr$[ebp]
  00265	51		 push	 ecx
  00266	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@FOPJ@DmSendFile?5failed?5with?5error?5?$CFx?$AA@ ; `string'
  0026b	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00270	83 c4 08	 add	 esp, 8

; 619  :             DPF_ERROR("Unable to transfer data to the Xbox");

  00273	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00278	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@ ; `string'
  0027d	68 6b 02 00 00	 push	 619			; 0000026bH
  00282	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00287	6a 01		 push	 1
  00289	6a 09		 push	 9
  0028b	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00290	83 c4 18	 add	 esp, 24			; 00000018H
  00293	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@FLKI@Unable?5to?5transfer?5data?5to?5the?5X@ ; `string'
  00298	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0029d	83 c4 04	 add	 esp, 4
$L51480:
$L51472:

; 620  :         }
; 621  :     }
; 622  : 
; 623  :     //
; 624  :     // Tell the Xbox to play the file
; 625  :     //
; 626  : 
; 627  :     if(SUCCEEDED(hr))

  002a0	83 bd dc f8 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  002a7	0f 8c b0 00 00
	00		 jl	 $L51486

; 628  :     {
; 629  :         sprintf(szCommand, pszCommandTemplate, szDstFile);

  002ad	8d 95 e8 f9 ff
	ff		 lea	 edx, DWORD PTR _szDstFile$[ebp]
  002b3	52		 push	 edx
  002b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszCommandTemplate@?1??Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z@4QBDB
  002b9	50		 push	 eax
  002ba	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR _szCommand$[ebp]
  002c0	51		 push	 ecx
  002c1	e8 00 00 00 00	 call	 _sprintf
  002c6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 630  :         
; 631  :         if(XBDM_NOERR == (hr = DmSendCommand(pxbdm, szCommand, NULL, NULL)))

  002c9	6a 00		 push	 0
  002cb	6a 00		 push	 0
  002cd	8d 95 00 fc ff
	ff		 lea	 edx, DWORD PTR _szCommand$[ebp]
  002d3	52		 push	 edx
  002d4	8b 45 08	 mov	 eax, DWORD PTR _pxbdm$[ebp]
  002d7	50		 push	 eax
  002d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DmSendCommand@16
  002de	89 85 dc f8 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
  002e4	81 bd dc f8 ff
	ff 00 00 db 02	 cmp	 DWORD PTR _hr$[ebp], 47906816 ; 02db0000H
  002ee	75 0c		 jne	 SHORT $L51491

; 632  :         {
; 633  :             hr = S_OK;

  002f0	c7 85 dc f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 634  :         }
; 635  :         else

  002fa	eb 61		 jmp	 SHORT $L51493
$L51491:

; 636  :         {
; 637  :             DPF_INFO("DmSendCommand failed with error %x", hr);

  002fc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00301	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@ ; `string'
  00306	68 7d 02 00 00	 push	 637			; 0000027dH
  0030b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00310	6a 04		 push	 4
  00312	6a 09		 push	 9
  00314	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00319	83 c4 18	 add	 esp, 24			; 00000018H
  0031c	8b 8d dc f8 ff
	ff		 mov	 ecx, DWORD PTR _hr$[ebp]
  00322	51		 push	 ecx
  00323	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@JEHN@DmSendCommand?5failed?5with?5error?5@ ; `string'
  00328	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0032d	83 c4 08	 add	 esp, 8

; 638  :             DPF_ERROR("Unable to send command to the Xbox");

  00330	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00335	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@HHEA@CGuiWaveBankEntry?3?3Audition?$AA@ ; `string'
  0033a	68 7e 02 00 00	 push	 638			; 0000027eH
  0033f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00344	6a 01		 push	 1
  00346	6a 09		 push	 9
  00348	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0034d	83 c4 18	 add	 esp, 24			; 00000018H
  00350	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@OEFD@Unable?5to?5send?5command?5to?5the?5Xb@ ; `string'
  00355	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0035a	83 c4 04	 add	 esp, 4
$L51493:
$L51486:

; 639  :         }
; 640  :     }
; 641  : 
; 642  :     //
; 643  :     // Clean up
; 644  :     //
; 645  : 
; 646  :     DeleteFile(szSrcFile);

  0035d	8d 95 e0 f8 ff
	ff		 lea	 edx, DWORD PTR _szSrcFile$[ebp]
  00363	52		 push	 edx
  00364	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteFileA@4

; 647  :     
; 648  :     MEMFREE(pvCopyBuffer);

  0036a	83 bd d8 f8 ff
	ff 00		 cmp	 DWORD PTR _pvCopyBuffer$[ebp], 0
  00371	74 16		 je	 SHORT $L51496
  00373	8b 85 d8 f8 ff
	ff		 mov	 eax, DWORD PTR _pvCopyBuffer$[ebp]
  00379	50		 push	 eax
  0037a	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree
  0037f	c7 85 d8 f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _pvCopyBuffer$[ebp], 0
$L51496:

; 649  : 
; 650  :     return hr;

  00389	8b 8d dc f8 ff
	ff		 mov	 ecx, DWORD PTR _hr$[ebp]
  0038f	89 8d b0 f7 ff
	ff		 mov	 DWORD PTR $T52303[ebp], ecx
  00395	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _DataFile$[ebp]
  0039b	e8 00 00 00 00	 call	 ??1CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::~CStdFileStream
  003a0	8b 85 b0 f7 ff
	ff		 mov	 eax, DWORD PTR $T52303[ebp]

; 651  : }

  003a6	8b e5		 mov	 esp, ebp
  003a8	5d		 pop	 ebp
  003a9	c2 04 00	 ret	 4
?Audition@CGuiWaveBankEntry@@UAEJPAU_DM_CONNECTION@@@Z ENDP ; CGuiWaveBankEntry::Audition
_TEXT	ENDS
PUBLIC	??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z	; CGuiWaveBank::CGuiWaveBank
PUBLIC	?Initialize@CGuiWaveBank@@UAEJPBD00@Z		; CGuiWaveBank::Initialize
PUBLIC	?Refresh@CGuiWaveBank@@UAEJXZ			; CGuiWaveBank::Refresh
PUBLIC	?SetName@CGuiWaveBank@@UAEJPBD@Z		; CGuiWaveBank::SetName
PUBLIC	?AddEntry@CGuiWaveBank@@UAEJXZ			; CGuiWaveBank::AddEntry
PUBLIC	?SortEntryList@CGuiWaveBank@@UAEXI@Z		; CGuiWaveBank::SortEntryList
PUBLIC	?GetItemIndex@CGuiWaveBank@@UAEIXZ		; CGuiWaveBank::GetItemIndex
PUBLIC	?UpdateListView@CGuiWaveBank@@UAEXI@Z		; CGuiWaveBank::UpdateListView
PUBLIC	?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ ; CGuiWaveBank::CreateEntry
PUBLIC	??_7CGuiWaveBank@@6B@				; CGuiWaveBank::`vftable'
PUBLIC	??_GCGuiWaveBank@@UAEPAXI@Z			; CGuiWaveBank::`scalar deleting destructor'
PUBLIC	??_ECGuiWaveBank@@UAEPAXI@Z			; CGuiWaveBank::`vector deleting destructor'
PUBLIC	?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z ; CWaveBank::RemoveEntry
EXTRN	??0CWaveBank@@QAE@PAVCWaveBankProject@@@Z:NEAR	; CWaveBank::CWaveBank
EXTRN	?GetBankDataSize@CWaveBank@@UAEKXZ:NEAR		; CWaveBank::GetBankDataSize
EXTRN	?AddEntry@CWaveBank@@UAEJPBD0KPAPAVCWaveBankEntry@@@Z:NEAR ; CWaveBank::AddEntry
EXTRN	?GenerateBank@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z:NEAR ; CWaveBank::GenerateBank
EXTRN	?GenerateHeader@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z:NEAR ; CWaveBank::GenerateHeader
EXTRN	?ReadProjectData@CWaveBank@@UAEJPBDK@Z:NEAR	; CWaveBank::ReadProjectData
EXTRN	?WriteProjectData@CWaveBank@@UAEJPBDK@Z:NEAR	; CWaveBank::WriteProjectData
EXTRN	?FindDuplicateBank@CWaveBank@@MAEJPBDPAI0101@Z:NEAR ; CWaveBank::FindDuplicateBank
;	COMDAT ??_7CGuiWaveBank@@6B@
CONST	SEGMENT
??_7CGuiWaveBank@@6B@ DD FLAT:??_ECGuiWaveBank@@UAEPAXI@Z ; CGuiWaveBank::`vftable'
	DD	FLAT:?Initialize@CGuiWaveBank@@UAEJPBD00@Z
	DD	FLAT:?SetName@CGuiWaveBank@@UAEJPBD@Z
	DD	FLAT:?GetBankDataSize@CWaveBank@@UAEKXZ
	DD	FLAT:?AddEntry@CWaveBank@@UAEJPBD0KPAPAVCWaveBankEntry@@@Z
	DD	FLAT:?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z
	DD	FLAT:?GenerateBank@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z
	DD	FLAT:?GenerateHeader@CWaveBank@@UAEJPAVCWaveBankCallback@@H@Z
	DD	FLAT:?ReadProjectData@CWaveBank@@UAEJPBDK@Z
	DD	FLAT:?WriteProjectData@CWaveBank@@UAEJPBDK@Z
	DD	FLAT:?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ
	DD	FLAT:?FindDuplicateBank@CWaveBank@@MAEJPBDPAI0101@Z
	DD	FLAT:?Refresh@CGuiWaveBank@@UAEJXZ
	DD	FLAT:?AddEntry@CGuiWaveBank@@UAEJXZ
	DD	FLAT:?SortEntryList@CGuiWaveBank@@UAEXI@Z
	DD	FLAT:?GetItemIndex@CGuiWaveBank@@UAEIXZ
	DD	FLAT:?UpdateListView@CGuiWaveBank@@UAEXI@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z
_TEXT	SEGMENT
_pParent$ = 8
_this$ = -4
??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z PROC NEAR ; CGuiWaveBank::CGuiWaveBank, COMDAT
; _this$ = ecx

; 686  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CWaveBank@@QAE@PAVCWaveBankProject@@@Z ; CWaveBank::CWaveBank
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CGuiWaveBank@@6B@ ; CGuiWaveBank::`vftable'

; 687  :     m_pParent = pParent;

  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  00022	89 82 48 02 00
	00		 mov	 DWORD PTR [edx+584], eax

; 688  : }

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z ENDP	; CGuiWaveBank::CGuiWaveBank
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\writer.h
_TEXT	ENDS
;	COMDAT ?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z
_TEXT	SEGMENT
$T52310 = -4
$T52311 = -8
_pEntry$ = 8
_this$ = -12
?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z PROC NEAR ; CWaveBank::RemoveEntry, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 169  :     DELETE(pEntry);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  0000d	74 31		 je	 SHORT $L48694
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR $T52311[ebp], eax
  00015	8b 4d f8	 mov	 ecx, DWORD PTR $T52311[ebp]
  00018	89 4d fc	 mov	 DWORD PTR $T52310[ebp], ecx
  0001b	83 7d fc 00	 cmp	 DWORD PTR $T52310[ebp], 0
  0001f	74 11		 je	 SHORT $L52312
  00021	6a 01		 push	 1
  00023	8b 55 fc	 mov	 edx, DWORD PTR $T52310[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR $T52310[ebp]
  0002b	ff 10		 call	 DWORD PTR [eax]
  0002d	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  00030	eb 07		 jmp	 SHORT $L52313
$L52312:
  00032	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L52313:
  00039	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pEntry$[ebp], 0
$L48694:

; 170  : }

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?RemoveEntry@CWaveBank@@UAEXPAVCWaveBankEntry@@@Z ENDP	; CWaveBank::RemoveEntry
_TEXT	ENDS
PUBLIC	??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.h
CONST	SEGMENT
??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@ DB 'CGuiWaveBankEntry(t'
	DB	'his)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\tools\wavbndlr\gui\sbgui.h', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ
_TEXT	SEGMENT
_this$ = -8
$T52317 = -4
?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ PROC NEAR ; CGuiWaveBank::CreateEntry, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  :     return NEW(CGuiWaveBankEntry(this));

  00009	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@ ; `string'
  0000e	68 80 00 00 00	 push	 128			; 00000080H
  00013	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00018	68 38 03 00 00	 push	 824			; 00000338H
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR $T52317[ebp], eax
  00028	83 7d fc 00	 cmp	 DWORD PTR $T52317[ebp], 0
  0002c	74 11		 je	 SHORT $L52318
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	50		 push	 eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR $T52317[ebp]
  00035	e8 00 00 00 00	 call	 ??0CGuiWaveBankEntry@@QAE@PAVCGuiWaveBank@@@Z ; CGuiWaveBankEntry::CGuiWaveBankEntry
  0003a	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0003d	eb 07		 jmp	 SHORT $L52319
$L52318:
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L52319:
  00046	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 129  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?CreateEntry@CGuiWaveBank@@MAEPAVCWaveBankEntry@@XZ ENDP ; CGuiWaveBank::CreateEntry
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT
_cbBuffer$ = 8
_pszFile$ = 12
_nLine$ = 16
_pszClass$ = 20
??2@YAPAXIPBDK0@Z PROC NEAR				; operator new, COMDAT

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 233  :     return DirectSound::CMemoryManager::TrackingMemAlloc(pszFile, nLine, pszClass, DSOUND_OBJECT_POOL_TAG, cbBuffer, TRUE); 

  00003	6a 01		 push	 1
  00005	8b 45 08	 mov	 eax, DWORD PTR _cbBuffer$[ebp]
  00008	50		 push	 eax
  00009	68 44 53 6f 62	 push	 1651462980		; 626f5344H
  0000e	8b 4d 14	 mov	 ecx, DWORD PTR _pszClass$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 10	 mov	 edx, DWORD PTR _nLine$[ebp]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc

; 234  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??2@YAPAXIPBDK0@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??1CGuiWaveBank@@UAE@XZ				; CGuiWaveBank::~CGuiWaveBank
; Function compile flags: /Odt
;	COMDAT ??_GCGuiWaveBank@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGuiWaveBank@@UAEPAXI@Z PROC NEAR			; CGuiWaveBank::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGuiWaveBank@@UAE@XZ	; CGuiWaveBank::~CGuiWaveBank
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51510
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51510:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGuiWaveBank@@UAEPAXI@Z ENDP			; CGuiWaveBank::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CWaveBank@@UAE@XZ:NEAR			; CWaveBank::~CWaveBank
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
;	COMDAT ??1CGuiWaveBank@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGuiWaveBank@@UAE@XZ PROC NEAR			; CGuiWaveBank::~CGuiWaveBank, COMDAT
; _this$ = ecx

; 713  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBank@@6B@ ; CGuiWaveBank::`vftable'

; 714  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CWaveBank@@UAE@XZ	; CWaveBank::~CWaveBank
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CGuiWaveBank@@UAE@XZ ENDP				; CGuiWaveBank::~CGuiWaveBank
_TEXT	ENDS
EXTRN	?Initialize@CWaveBank@@UAEJPBD00@Z:NEAR		; CWaveBank::Initialize
; Function compile flags: /Odt
;	COMDAT ?Initialize@CGuiWaveBank@@UAEJPBD00@Z
_TEXT	SEGMENT
_pszBankName$ = 8
_pszBankFile$ = 12
_pszHeaderFile$ = 16
_this$ = -8
_hr$ = -4
?Initialize@CGuiWaveBank@@UAEJPBD00@Z PROC NEAR		; CGuiWaveBank::Initialize, COMDAT
; _this$ = ecx

; 744  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 745  :     HRESULT                 hr;
; 746  : 
; 747  :     //
; 748  :     // Initialize the base class
; 749  :     //
; 750  : 
; 751  :     hr = CWaveBank::Initialize(pszBankName, pszBankFile, pszHeaderFile);

  00009	8b 45 10	 mov	 eax, DWORD PTR _pszHeaderFile$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _pszBankFile$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR _pszBankName$[ebp]
  00014	52		 push	 edx
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Initialize@CWaveBank@@UAEJPBD00@Z ; CWaveBank::Initialize
  0001d	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 752  : 
; 753  :     //
; 754  :     // Update display data
; 755  :     //
; 756  : 
; 757  :     if(SUCCEEDED(hr))

  00020	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00024	7c 0d		 jl	 SHORT $L51523

; 758  :     {
; 759  :         UpdateListView();

  00026	6a ff		 push	 -1
  00028	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 10		 mov	 edx, DWORD PTR [eax]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	ff 52 40	 call	 DWORD PTR [edx+64]
$L51523:

; 760  :     }
; 761  : 
; 762  :     return hr;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 763  : }

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
?Initialize@CGuiWaveBank@@UAEJPBD00@Z ENDP		; CGuiWaveBank::Initialize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Refresh@CGuiWaveBank@@UAEJXZ
_TEXT	SEGMENT
_this$ = -16
_hr$ = -8
_pleEntry$ = -12
_pEntry$ = -4
?Refresh@CGuiWaveBank@@UAEJXZ PROC NEAR			; CGuiWaveBank::Refresh, COMDAT
; _this$ = ecx

; 789  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 790  :     HRESULT                 hr          = S_OK;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 791  :     PLIST_ENTRY             pleEntry;
; 792  :     CGuiWaveBankEntry *     pEntry;
; 793  : 
; 794  :     //
; 795  :     // Refresh entries
; 796  :     //
; 797  : 
; 798  :     for(pleEntry = m_lstEntries.Flink; (pleEntry != &m_lstEntries) && SUCCEEDED(hr); pleEntry = pleEntry->Flink)

  00010	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 88 38 02 00
	00		 mov	 ecx, DWORD PTR [eax+568]
  00019	89 4d f4	 mov	 DWORD PTR _pleEntry$[ebp], ecx
  0001c	eb 08		 jmp	 SHORT $L51533
$L51534:
  0001e	8b 55 f4	 mov	 edx, DWORD PTR _pleEntry$[ebp]
  00021	8b 02		 mov	 eax, DWORD PTR [edx]
  00023	89 45 f4	 mov	 DWORD PTR _pleEntry$[ebp], eax
$L51533:
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	81 c1 38 02 00
	00		 add	 ecx, 568		; 00000238H
  0002f	39 4d f4	 cmp	 DWORD PTR _pleEntry$[ebp], ecx
  00032	74 1f		 je	 SHORT $L51535
  00034	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00038	7c 19		 jl	 SHORT $L51535

; 799  :     {
; 800  :         pEntry = CONTAINING_RECORD(pleEntry, CGuiWaveBankEntry, m_leEntry);

  0003a	8b 55 f4	 mov	 edx, DWORD PTR _pleEntry$[ebp]
  0003d	83 ea 08	 sub	 edx, 8
  00040	89 55 fc	 mov	 DWORD PTR _pEntry$[ebp], edx

; 801  : 
; 802  :         hr = pEntry->Refresh();

  00043	8b 45 fc	 mov	 eax, DWORD PTR _pEntry$[ebp]
  00046	8b 10		 mov	 edx, DWORD PTR [eax]
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0004b	ff 52 2c	 call	 DWORD PTR [edx+44]
  0004e	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 803  :     }

  00051	eb cb		 jmp	 SHORT $L51534
$L51535:

; 804  : 
; 805  :     return hr;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 806  : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?Refresh@CGuiWaveBank@@UAEJXZ ENDP			; CGuiWaveBank::Refresh
_TEXT	ENDS
EXTRN	?SetName@CWaveBank@@UAEJPBD@Z:NEAR		; CWaveBank::SetName
; Function compile flags: /Odt
;	COMDAT ?SetName@CGuiWaveBank@@UAEJPBD@Z
_TEXT	SEGMENT
_pszName$ = 8
_this$ = -8
_hr$ = -4
?SetName@CGuiWaveBank@@UAEJPBD@Z PROC NEAR		; CGuiWaveBank::SetName, COMDAT
; _this$ = ecx

; 832  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 833  :     HRESULT                 hr;
; 834  : 
; 835  :     if(!pszName)

  00009	83 7d 08 00	 cmp	 DWORD PTR _pszName$[ebp], 0
  0000d	75 07		 jne	 SHORT $L51545

; 836  :     {
; 837  :         pszName = "";

  0000f	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pszName$[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L51545:

; 838  :     }
; 839  :     
; 840  :     hr = CWaveBank::SetName(pszName);

  00016	8b 45 08	 mov	 eax, DWORD PTR _pszName$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?SetName@CWaveBank@@UAEJPBD@Z ; CWaveBank::SetName
  00022	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 841  : 
; 842  :     if(SUCCEEDED(hr))

  00025	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00029	7c 0d		 jl	 SHORT $L51547

; 843  :     {
; 844  :         UpdateListView();

  0002b	6a ff		 push	 -1
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 11		 mov	 edx, DWORD PTR [ecx]
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	ff 52 40	 call	 DWORD PTR [edx+64]
$L51547:

; 845  :     }
; 846  : 
; 847  :     return hr;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 848  : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?SetName@CGuiWaveBank@@UAEJPBD@Z ENDP			; CGuiWaveBank::SetName
_TEXT	ENDS
PUBLIC	?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z	; CGuiWaveBank::GetBank
; Function compile flags: /Odt
;	COMDAT ?GetItemIndex@CGuiWaveBank@@UAEIXZ
_TEXT	SEGMENT
_this$ = -16
_hwnd$ = -4
_nItemCount$ = -8
_nItem$ = -12
?GetItemIndex@CGuiWaveBank@@UAEIXZ PROC NEAR		; CGuiWaveBank::GetItemIndex, COMDAT
; _this$ = ecx

; 874  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 875  :     HWND                    hwnd        = m_pParent->m_hwndBankList;

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 88 48 02 00
	00		 mov	 ecx, DWORD PTR [eax+584]
  00012	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00015	89 55 fc	 mov	 DWORD PTR _hwnd$[ebp], edx

; 876  :     int                     nItemCount;
; 877  :     int                     nItem;
; 878  : 
; 879  :     if(!hwnd)

  00018	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0001c	75 05		 jne	 SHORT $L51555

; 880  :     {
; 881  :         return -1;

  0001e	83 c8 ff	 or	 eax, -1
  00021	eb 60		 jmp	 SHORT $L51551
$L51555:

; 882  :     }
; 883  :     
; 884  :     nItemCount = ListView_GetItemCount(hwnd);

  00023	6a 00		 push	 0
  00025	6a 00		 push	 0
  00027	68 04 10 00 00	 push	 4100			; 00001004H
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0002f	50		 push	 eax
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00036	89 45 f8	 mov	 DWORD PTR _nItemCount$[ebp], eax

; 885  : 
; 886  :     for(nItem = 0; nItem < nItemCount; nItem++)

  00039	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nItem$[ebp], 0
  00040	eb 09		 jmp	 SHORT $L51557
$L51558:
  00042	8b 4d f4	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00045	83 c1 01	 add	 ecx, 1
  00048	89 4d f4	 mov	 DWORD PTR _nItem$[ebp], ecx
$L51557:
  0004b	8b 55 f4	 mov	 edx, DWORD PTR _nItem$[ebp]
  0004e	3b 55 f8	 cmp	 edx, DWORD PTR _nItemCount$[ebp]
  00051	7d 16		 jge	 SHORT $L51559

; 887  :     {
; 888  :         if(this == GetBank(hwnd, nItem))

  00053	8b 45 f4	 mov	 eax, DWORD PTR _nItem$[ebp]
  00056	50		 push	 eax
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBank::GetBank
  00060	39 45 f0	 cmp	 DWORD PTR _this$[ebp], eax
  00063	75 02		 jne	 SHORT $L51560

; 889  :         {
; 890  :             break;

  00065	eb 02		 jmp	 SHORT $L51559
$L51560:

; 891  :         }
; 892  :     }

  00067	eb d9		 jmp	 SHORT $L51558
$L51559:

; 893  : 
; 894  :     return (nItem < nItemCount) ? nItem : -1;

  00069	8b 55 f4	 mov	 edx, DWORD PTR _nItem$[ebp]
  0006c	3b 55 f8	 cmp	 edx, DWORD PTR _nItemCount$[ebp]
  0006f	7d 08		 jge	 SHORT $L52341
  00071	8b 45 f4	 mov	 eax, DWORD PTR _nItem$[ebp]
  00074	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00077	eb 07		 jmp	 SHORT $L52342
$L52341:
  00079	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR -20+[ebp], -1
$L52342:
  00080	8b 45 ec	 mov	 eax, DWORD PTR -20+[ebp]
$L51551:

; 895  : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetItemIndex@CGuiWaveBank@@UAEIXZ ENDP			; CGuiWaveBank::GetItemIndex
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.h
_TEXT	ENDS
;	COMDAT ?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z
_TEXT	SEGMENT
_hwnd$ = 8
_nItem$ = 12
?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z PROC NEAR	; CGuiWaveBank::GetBank, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 133  :     return (CGuiWaveBank *)ListView_GetItemParam(hwnd, nItem);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _nItem$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 _ListView_GetItemParam@8

; 134  : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z ENDP	; CGuiWaveBank::GetBank
_TEXT	ENDS
PUBLIC	??_C@_04MLPN@CHAR?$AA@				; `string'
PUBLIC	??_C@_03KAKF@xwb?$AA@				; `string'
PUBLIC	??_C@_0BH@KHON@CGuiWaveBank?3?3AddEntry?$AA@	; `string'
PUBLIC	??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@ ; `string'
EXTRN	_GetOpenFileNameA@4:NEAR
EXTRN	_memset:NEAR
EXTRN	_strlen:NEAR
EXTRN	__makepath:NEAR
;	COMDAT ??_C@_04MLPN@CHAR?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
CONST	SEGMENT
??_C@_04MLPN@CHAR?$AA@ DB 'CHAR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KAKF@xwb?$AA@
CONST	SEGMENT
??_C@_03KAKF@xwb?$AA@ DB 'xwb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KHON@CGuiWaveBank?3?3AddEntry?$AA@
CONST	SEGMENT
??_C@_0BH@KHON@CGuiWaveBank?3?3AddEntry?$AA@ DB 'CGuiWaveBank::AddEntry', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@
CONST	SEGMENT
??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@ DB 'Not all entrie'
	DB	's were added to the wave bank', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?AddEntry@CGuiWaveBank@@UAEJXZ
_TEXT	SEGMENT
_this$ = -372
_pszPath$ = -96
_pszFile$ = -92
_szFile$ = -368
_hr$ = -100
_ofn$ = -88
?AddEntry@CGuiWaveBank@@UAEJXZ PROC NEAR		; CGuiWaveBank::AddEntry, COMDAT
; _this$ = ecx

; 921  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 01 00
	00		 sub	 esp, 372		; 00000174H
  00009	89 8d 8c fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 922  :     static const LPCSTR     pszFilter           = MAKE_COMMDLG_FILTER("Sound", "*.wav;*.aif;*.aiff") MAKE_COMMDLG_FILTER("All", "*.*");
; 923  :     static const LPCSTR     pszTitle            = "Add Wave Bank Entries";
; 924  :     static const DWORD      dwOfnFlags          = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_FILEMUSTEXIST | OFN_PATHMUSTEXIST | OFN_ALLOWMULTISELECT;
; 925  :     static const UINT       nMaxFiles           = 2048;
; 926  :     LPSTR                   pszPath;
; 927  :     LPSTR                   pszFile;
; 928  :     CHAR                    szFile[MAX_PATH];
; 929  :     HRESULT                 hr;
; 930  :     OPENFILENAME            ofn;
; 931  : 
; 932  :     //
; 933  :     // Allocate enough space for more than one file
; 934  :     //
; 935  : 
; 936  :     hr = HRFROMP(pszPath = MEMALLOC(CHAR, nMaxFiles * MAX_PATH));

  0000f	6a 01		 push	 1
  00011	68 00 20 08 00	 push	 532480			; 00082000H
  00016	68 44 53 64 61	 push	 1633964868		; 61645344H
  0001b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04MLPN@CHAR?$AA@ ; `string'
  00020	68 a8 03 00 00	 push	 936			; 000003a8H
  00025	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0002a	e8 00 00 00 00	 call	 ?TrackingPoolAlloc@CMemoryManager@DirectSound@@SGPAXPBDK0W4DSOUND_POOL_TAG@@KH@Z ; DirectSound::CMemoryManager::TrackingPoolAlloc
  0002f	89 45 a0	 mov	 DWORD PTR _pszPath$[ebp], eax
  00032	8b 45 a0	 mov	 eax, DWORD PTR _pszPath$[ebp]
  00035	f7 d8		 neg	 eax
  00037	1b c0		 sbb	 eax, eax
  00039	25 f2 ff f8 7f	 and	 eax, 2147024882		; 7ff8fff2H
  0003e	05 0e 00 07 80	 add	 eax, -2147024882	; 8007000eH
  00043	89 45 9c	 mov	 DWORD PTR _hr$[ebp], eax

; 937  : 
; 938  :     //
; 939  :     // Get the file name(s)
; 940  :     //
; 941  : 
; 942  :     if(SUCCEEDED(hr))

  00046	83 7d 9c 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004a	7c 6c		 jl	 SHORT $L51586

; 943  :     {
; 944  :         ZeroMemory(&ofn, sizeof(ofn));

  0004c	6a 58		 push	 88			; 00000058H
  0004e	6a 00		 push	 0
  00050	8d 4d a8	 lea	 ecx, DWORD PTR _ofn$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 _memset
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 945  : 
; 946  :         ofn.lStructSize = sizeof(ofn);

  0005c	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 947  :         ofn.hwndOwner = m_pParent->m_pParent->m_hwnd;

  00063	8b 95 8c fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 82 48 02 00
	00		 mov	 eax, DWORD PTR [edx+584]
  0006f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00072	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00075	89 55 ac	 mov	 DWORD PTR _ofn$[ebp+4], edx

; 948  :         ofn.lpstrFilter = pszFilter;

  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszFilter@?1??AddEntry@CGuiWaveBank@@UAEJXZ@4QBDB
  0007d	89 45 b4	 mov	 DWORD PTR _ofn$[ebp+12], eax

; 949  :         ofn.lpstrFile = pszPath;

  00080	8b 4d a0	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  00083	89 4d c4	 mov	 DWORD PTR _ofn$[ebp+28], ecx

; 950  :         ofn.nMaxFile = nMaxFiles * MAX_PATH;

  00086	c7 45 c8 00 20
	08 00		 mov	 DWORD PTR _ofn$[ebp+32], 532480 ; 00082000H

; 951  :         ofn.lpstrTitle = pszTitle;

  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszTitle@?1??AddEntry@CGuiWaveBank@@UAEJXZ@4QBDB
  00093	89 55 d8	 mov	 DWORD PTR _ofn$[ebp+48], edx

; 952  :         ofn.Flags = dwOfnFlags;

  00096	c7 45 dc 04 1a
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8919556 ; 00881a04H

; 953  :         ofn.lpstrDefExt = WBWRITER_FILEEXTENSION_BANK;

  0009d	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+60], OFFSET FLAT:??_C@_03KAKF@xwb?$AA@ ; `string'

; 954  : 
; 955  :         if(!GetOpenFileName(&ofn))

  000a4	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 _GetOpenFileNameA@4
  000ad	85 c0		 test	 eax, eax
  000af	75 07		 jne	 SHORT $L51588

; 956  :         {
; 957  :             hr = E_ABORT;

  000b1	c7 45 9c 04 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
$L51588:
$L51586:

; 958  :         }
; 959  :     }
; 960  : 
; 961  :     //
; 962  :     // If more than one file was specified, the path will be first, followed
; 963  :     // by each file name in a null-terminated list
; 964  :     //
; 965  : 
; 966  :     if(SUCCEEDED(hr))

  000b8	83 7d 9c 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000bc	0f 8c 9a 00 00
	00		 jl	 $L51591

; 967  :     {
; 968  :         pszFile = pszPath + strlen(pszPath) + 1;

  000c2	8b 4d a0	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 _strlen
  000cb	83 c4 04	 add	 esp, 4
  000ce	8b 55 a0	 mov	 edx, DWORD PTR _pszPath$[ebp]
  000d1	8d 44 02 01	 lea	 eax, DWORD PTR [edx+eax+1]
  000d5	89 45 a4	 mov	 DWORD PTR _pszFile$[ebp], eax

; 969  : 
; 970  :         if(*pszFile)

  000d8	8b 4d a4	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  000db	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  000de	85 d2		 test	 edx, edx
  000e0	74 62		 je	 SHORT $L51592
$L51594:

; 971  :         {
; 972  :             while(*pszFile)

  000e2	8b 45 a4	 mov	 eax, DWORD PTR _pszFile$[ebp]
  000e5	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000e8	85 c9		 test	 ecx, ecx
  000ea	74 56		 je	 SHORT $L51595

; 973  :             {
; 974  :                 _makepath(szFile, NULL, pszPath, pszFile, NULL);

  000ec	6a 00		 push	 0
  000ee	8b 55 a4	 mov	 edx, DWORD PTR _pszFile$[ebp]
  000f1	52		 push	 edx
  000f2	8b 45 a0	 mov	 eax, DWORD PTR _pszPath$[ebp]
  000f5	50		 push	 eax
  000f6	6a 00		 push	 0
  000f8	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR _szFile$[ebp]
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 __makepath
  00104	83 c4 14	 add	 esp, 20			; 00000014H

; 975  : 
; 976  :                 if(FAILED(CWaveBank::AddEntry(NULL, szFile, 0)))

  00107	6a 00		 push	 0
  00109	6a 00		 push	 0
  0010b	8d 95 90 fe ff
	ff		 lea	 edx, DWORD PTR _szFile$[ebp]
  00111	52		 push	 edx
  00112	6a 00		 push	 0
  00114	8b 8d 8c fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	e8 00 00 00 00	 call	 ?AddEntry@CWaveBank@@UAEJPBD0KPAPAVCWaveBankEntry@@@Z ; CWaveBank::AddEntry
  0011f	85 c0		 test	 eax, eax
  00121	7d 07		 jge	 SHORT $L51597

; 977  :                 {
; 978  :                     hr = S_FALSE;

  00123	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 1
$L51597:

; 979  :                 }
; 980  : 
; 981  :                 pszFile += strlen(pszFile) + 1;

  0012a	8b 45 a4	 mov	 eax, DWORD PTR _pszFile$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 _strlen
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d a4	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  00139	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  0013d	89 55 a4	 mov	 DWORD PTR _pszFile$[ebp], edx

; 982  :             }

  00140	eb a0		 jmp	 SHORT $L51594
$L51595:

; 983  :         }
; 984  :         else

  00142	eb 18		 jmp	 SHORT $L51599
$L51592:

; 985  :         {
; 986  :             hr = CWaveBank::AddEntry(NULL, pszPath, 0);

  00144	6a 00		 push	 0
  00146	6a 00		 push	 0
  00148	8b 45 a0	 mov	 eax, DWORD PTR _pszPath$[ebp]
  0014b	50		 push	 eax
  0014c	6a 00		 push	 0
  0014e	8b 8d 8c fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00154	e8 00 00 00 00	 call	 ?AddEntry@CWaveBank@@UAEJPBD0KPAPAVCWaveBankEntry@@@Z ; CWaveBank::AddEntry
  00159	89 45 9c	 mov	 DWORD PTR _hr$[ebp], eax
$L51599:
$L51591:

; 987  :         }
; 988  :     }
; 989  : 
; 990  :     //
; 991  :     // Display a warning if not all of the entries were added
; 992  :     //
; 993  : 
; 994  :     if(S_FALSE == hr)

  0015c	83 7d 9c 01	 cmp	 DWORD PTR _hr$[ebp], 1
  00160	75 2d		 jne	 SHORT $L51601

; 995  :     {
; 996  :         DPF_WARNING("Not all entries were added to the wave bank");

  00162	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00167	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@KHON@CGuiWaveBank?3?3AddEntry?$AA@ ; `string'
  0016c	68 e4 03 00 00	 push	 996			; 000003e4H
  00171	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00176	6a 03		 push	 3
  00178	6a 09		 push	 9
  0017a	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0017f	83 c4 18	 add	 esp, 24			; 00000018H
  00182	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CM@DFHI@Not?5all?5entries?5were?5added?5to?5th@ ; `string'
  00187	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0018c	83 c4 04	 add	 esp, 4
$L51601:

; 997  :     }
; 998  : 
; 999  :     //
; 1000 :     // Clean up
; 1001 :     //
; 1002 : 
; 1003 :     MEMFREE(pszPath);

  0018f	83 7d a0 00	 cmp	 DWORD PTR _pszPath$[ebp], 0
  00193	74 10		 je	 SHORT $L51604
  00195	8b 4d a0	 mov	 ecx, DWORD PTR _pszPath$[ebp]
  00198	51		 push	 ecx
  00199	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree
  0019e	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _pszPath$[ebp], 0
$L51604:

; 1004 : 
; 1005 :     return hr;

  001a5	8b 45 9c	 mov	 eax, DWORD PTR _hr$[ebp]

; 1006 : }

  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c3		 ret	 0
?AddEntry@CGuiWaveBank@@UAEJXZ ENDP			; CGuiWaveBank::AddEntry
_TEXT	ENDS
PUBLIC	??_C@_0BN@OGBP@this?5?$DN?$DN?5GetBank?$CIhwnd?0?5nItem?$CJ?$AA@ ; `string'
;	COMDAT ??_C@_0BN@OGBP@this?5?$DN?$DN?5GetBank?$CIhwnd?0?5nItem?$CJ?$AA@
CONST	SEGMENT
??_C@_0BN@OGBP@this?5?$DN?$DN?5GetBank?$CIhwnd?0?5nItem?$CJ?$AA@ DB 'this'
	DB	' == GetBank(hwnd, nItem)', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?UpdateListView@CGuiWaveBank@@UAEXI@Z
_TEXT	SEGMENT
_nItem$ = 8
_this$ = -316
_hwnd$ = -4
_nSubItem$ = -312
_szText$ = -264
_dwSize$ = -268
_lvi$ = -308
?UpdateListView@CGuiWaveBank@@UAEXI@Z PROC NEAR		; CGuiWaveBank::UpdateListView, COMDAT
; _this$ = ecx

; 1032 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00009	89 8d c4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1033 :     HWND                    hwnd            = m_pParent->m_hwndBankList;

  0000f	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 88 48 02 00
	00		 mov	 ecx, DWORD PTR [eax+584]
  0001b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0001e	89 55 fc	 mov	 DWORD PTR _hwnd$[ebp], edx

; 1034 :     UINT                    nSubItem        = 0;

  00021	c7 85 c8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _nSubItem$[ebp], 0

; 1035 :     CHAR                    szText[0x100];
; 1036 :     DWORD                   dwSize;
; 1037 :     LVITEM                  lvi;
; 1038 : 
; 1039 :     if(!hwnd)

  0002b	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0002f	75 05		 jne	 SHORT $L51614

; 1040 :     {
; 1041 :         return;

  00031	e9 20 02 00 00	 jmp	 $L51608
$L51614:

; 1042 :     }
; 1043 : 
; 1044 :     if(-1 == nItem)

  00036	83 7d 08 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  0003a	75 14		 jne	 SHORT $L51615

; 1045 :     {
; 1046 :         nItem = GetItemIndex();

  0003c	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	ff 52 3c	 call	 DWORD PTR [edx+60]
  0004d	89 45 08	 mov	 DWORD PTR _nItem$[ebp], eax
$L51615:

; 1047 :     }
; 1048 : 
; 1049 :     if(-1 == nItem)

  00050	83 7d 08 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  00054	75 6e		 jne	 SHORT $L51616

; 1050 :     {
; 1051 :         lvi.mask = LVIF_IMAGE | LVIF_PARAM;

  00056	c7 85 cc fe ff
	ff 06 00 00 00	 mov	 DWORD PTR _lvi$[ebp], 6

; 1052 :         lvi.iItem = ListView_GetItemCount(hwnd);

  00060	6a 00		 push	 0
  00062	6a 00		 push	 0
  00064	68 04 10 00 00	 push	 4100			; 00001004H
  00069	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0006c	50		 push	 eax
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00073	89 85 d0 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+4], eax

; 1053 :         lvi.iSubItem = 0;

  00079	c7 85 d4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _lvi$[ebp+8], 0

; 1054 :         lvi.iImage = m_pParent->m_nBankIcon;

  00083	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00089	8b 91 48 02 00
	00		 mov	 edx, DWORD PTR [ecx+584]
  0008f	8b 82 30 01 00
	00		 mov	 eax, DWORD PTR [edx+304]
  00095	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+28], eax

; 1055 :         lvi.lParam = (LPARAM)this;

  0009b	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	89 8d ec fe ff
	ff		 mov	 DWORD PTR _lvi$[ebp+32], ecx

; 1056 : 
; 1057 :         nItem = ListView_InsertItem(hwnd, &lvi);

  000a7	8d 95 cc fe ff
	ff		 lea	 edx, DWORD PTR _lvi$[ebp]
  000ad	52		 push	 edx
  000ae	6a 00		 push	 0
  000b0	68 07 10 00 00	 push	 4103			; 00001007H
  000b5	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000b8	50		 push	 eax
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000bf	89 45 08	 mov	 DWORD PTR _nItem$[ebp], eax

; 1058 :     }
; 1059 :     else

  000c2	eb 30		 jmp	 SHORT $L51622
$L51616:

; 1060 :     {
; 1061 :         ASSERT(this == GetBank(hwnd, nItem));

  000c4	68 25 04 00 00	 push	 1061			; 00000425H
  000c9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000ce	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@OGBP@this?5?$DN?$DN?5GetBank?$CIhwnd?0?5nItem?$CJ?$AA@ ; `string'
  000d3	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  000d6	51		 push	 ecx
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  000da	52		 push	 edx
  000db	e8 00 00 00 00	 call	 ?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBank::GetBank
  000e0	33 c9		 xor	 ecx, ecx
  000e2	39 85 c4 fe ff
	ff		 cmp	 DWORD PTR _this$[ebp], eax
  000e8	0f 95 c1	 setne	 cl
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000f1	83 c4 10	 add	 esp, 16			; 00000010H
$L51622:

; 1062 :     }
; 1063 : 
; 1064 :     dwSize = GetBankDataSize();

  000f4	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000fa	8b 02		 mov	 eax, DWORD PTR [edx]
  000fc	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00102	ff 50 0c	 call	 DWORD PTR [eax+12]
  00105	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _dwSize$[ebp], eax

; 1065 : 
; 1066 :     ListView_SetItemText(hwnd, nItem, nSubItem++, m_szBankName);

  0010b	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00111	83 c1 10	 add	 ecx, 16			; 00000010H
  00114	51		 push	 ecx
  00115	8b 95 c8 fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  0011b	89 95 c0 fe ff
	ff		 mov	 DWORD PTR -320+[ebp], edx
  00121	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR -320+[ebp]
  00127	50		 push	 eax
  00128	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  0012b	51		 push	 ecx
  0012c	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  0012f	52		 push	 edx
  00130	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  00136	83 c0 01	 add	 eax, 1
  00139	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  0013f	e8 00 00 00 00	 call	 _ListView_SetItemText
  00144	83 c4 10	 add	 esp, 16			; 00000010H

; 1067 :     ListView_SetItemText(hwnd, nItem, nSubItem++, "%lu", m_dwEntryCount);

  00147	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	8b 91 40 02 00
	00		 mov	 edx, DWORD PTR [ecx+576]
  00153	52		 push	 edx
  00154	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03JGAL@?$CFlu?$AA@ ; `string'
  00159	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  0015f	89 85 bc fe ff
	ff		 mov	 DWORD PTR -324+[ebp], eax
  00165	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR -324+[ebp]
  0016b	51		 push	 ecx
  0016c	8b 55 08	 mov	 edx, DWORD PTR _nItem$[ebp]
  0016f	52		 push	 edx
  00170	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00173	50		 push	 eax
  00174	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR _nSubItem$[ebp]
  0017a	83 c1 01	 add	 ecx, 1
  0017d	89 8d c8 fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], ecx
  00183	e8 00 00 00 00	 call	 _ListView_SetItemText
  00188	83 c4 14	 add	 esp, 20			; 00000014H

; 1068 : 
; 1069 :     FormatNumber(dwSize, FALSE, TRUE, szText);

  0018b	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  00191	52		 push	 edx
  00192	6a 01		 push	 1
  00194	6a 00		 push	 0
  00196	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _dwSize$[ebp]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?FormatNumber@@YGXHHHPAD@Z ; FormatNumber

; 1070 :     ListView_SetItemText(hwnd, nItem, nSubItem++, szText);

  001a2	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  001a8	51		 push	 ecx
  001a9	8b 95 c8 fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  001af	89 95 b8 fe ff
	ff		 mov	 DWORD PTR -328+[ebp], edx
  001b5	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR -328+[ebp]
  001bb	50		 push	 eax
  001bc	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  001bf	51		 push	 ecx
  001c0	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  001c3	52		 push	 edx
  001c4	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  001ca	83 c0 01	 add	 eax, 1
  001cd	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  001d3	e8 00 00 00 00	 call	 _ListView_SetItemText
  001d8	83 c4 10	 add	 esp, 16			; 00000010H

; 1071 : 
; 1072 :     ListView_SetItemText(hwnd, nItem, nSubItem++, m_szBankFile);

  001db	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001e1	83 c1 30	 add	 ecx, 48			; 00000030H
  001e4	51		 push	 ecx
  001e5	8b 95 c8 fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  001eb	89 95 b4 fe ff
	ff		 mov	 DWORD PTR -332+[ebp], edx
  001f1	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR -332+[ebp]
  001f7	50		 push	 eax
  001f8	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  001fb	51		 push	 ecx
  001fc	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  001ff	52		 push	 edx
  00200	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  00206	83 c0 01	 add	 eax, 1
  00209	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  0020f	e8 00 00 00 00	 call	 _ListView_SetItemText
  00214	83 c4 10	 add	 esp, 16			; 00000010H

; 1073 :     ListView_SetItemText(hwnd, nItem, nSubItem++, m_szHeaderFile);

  00217	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0021d	81 c1 34 01 00
	00		 add	 ecx, 308		; 00000134H
  00223	51		 push	 ecx
  00224	8b 95 c8 fe ff
	ff		 mov	 edx, DWORD PTR _nSubItem$[ebp]
  0022a	89 95 b0 fe ff
	ff		 mov	 DWORD PTR -336+[ebp], edx
  00230	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR -336+[ebp]
  00236	50		 push	 eax
  00237	8b 4d 08	 mov	 ecx, DWORD PTR _nItem$[ebp]
  0023a	51		 push	 ecx
  0023b	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  0023e	52		 push	 edx
  0023f	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _nSubItem$[ebp]
  00245	83 c0 01	 add	 eax, 1
  00248	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _nSubItem$[ebp], eax
  0024e	e8 00 00 00 00	 call	 _ListView_SetItemText
  00253	83 c4 10	 add	 esp, 16			; 00000010H
$L51608:

; 1074 : }

  00256	8b e5		 mov	 esp, ebp
  00258	5d		 pop	 ebp
  00259	c2 04 00	 ret	 4
?UpdateListView@CGuiWaveBank@@UAEXI@Z ENDP		; CGuiWaveBank::UpdateListView
_TEXT	ENDS
PUBLIC	?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z		; InsertTailList
PUBLIC	?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z	; RemoveEntryList
PUBLIC	??_C@_0DE@DBBA@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBankEn@ ; `string'
PUBLIC	??_C@_06JCGL@pEntry?$AA@			; `string'
EXTRN	_ListView_SortItems@24:NEAR
;	COMDAT ??_C@_0DE@DBBA@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBankEn@
CONST	SEGMENT
??_C@_0DE@DBBA@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBankEn@ DB 'nColumn < NU'
	DB	'MELMS(CGuiWaveBankEntry::m_aColumnData)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JCGL@pEntry?$AA@
CONST	SEGMENT
??_C@_06JCGL@pEntry?$AA@ DB 'pEntry', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?SortEntryList@CGuiWaveBank@@UAEXI@Z
_TEXT	SEGMENT
_nColumn$ = 8
_this$ = -24
_pColumn$ = -20
_pEntry$ = -8
_nItemCount$ = -4
_nItem$ = -12
?SortEntryList@CGuiWaveBank@@UAEXI@Z PROC NEAR		; CGuiWaveBank::SortEntryList, COMDAT
; _this$ = ecx

; 1100 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1101 :     const LPLVCOLUMNDATA    pColumn     = &CGuiWaveBankEntry::m_aColumnData[nColumn];

  0000a	8b 45 08	 mov	 eax, DWORD PTR _nColumn$[ebp]
  0000d	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00010	05 00 00 00 00	 add	 eax, OFFSET FLAT:?m_aColumnData@CGuiWaveBankEntry@@2PAULVCOLUMNDATA@@A ; CGuiWaveBankEntry::m_aColumnData
  00015	89 45 ec	 mov	 DWORD PTR _pColumn$[ebp], eax

; 1102 :     PLIST_ENTRY             pleEntry;
; 1103 :     CGuiWaveBankEntry *     pEntry;
; 1104 :     int                     nItemCount;
; 1105 :     int                     nItem;
; 1106 : 
; 1107 :     ASSERT(nColumn < NUMELMS(CGuiWaveBankEntry::m_aColumnData));

  00018	68 53 04 00 00	 push	 1107			; 00000453H
  0001d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DE@DBBA@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBankEn@ ; `string'
  00027	83 7d 08 08	 cmp	 DWORD PTR _nColumn$[ebp], 8
  0002b	1b c9		 sbb	 ecx, ecx
  0002d	41		 inc	 ecx
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 1108 : 
; 1109 :     //
; 1110 :     // Let the list-view sort the list
; 1111 :     //
; 1112 : 
; 1113 :     ListView_SortItems(m_pParent->m_hwndEntryList, nColumn, pColumn->fString, pColumn->fAscending, NULL, NULL);

  00037	6a 00		 push	 0
  00039	6a 00		 push	 0
  0003b	8b 55 ec	 mov	 edx, DWORD PTR _pColumn$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	50		 push	 eax
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _pColumn$[ebp]
  00045	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00048	52		 push	 edx
  00049	8b 45 08	 mov	 eax, DWORD PTR _nColumn$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 91 48 02 00
	00		 mov	 edx, DWORD PTR [ecx+584]
  00056	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 _ListView_SortItems@24
$L51635:

; 1114 : 
; 1115 :     //
; 1116 :     // Rebuild the list based on the list-view data
; 1117 :     //
; 1118 : 
; 1119 :     while(&m_lstEntries != RemoveHeadList(&m_lstEntries));

  0005f	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]
  00062	81 c6 38 02 00
	00		 add	 esi, 568		; 00000238H
  00068	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 91 38 02 00
	00		 mov	 edx, DWORD PTR [ecx+568]
  00071	52		 push	 edx
  00072	e8 00 00 00 00	 call	 ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ; RemoveEntryList
  00077	3b f0		 cmp	 esi, eax
  00079	74 02		 je	 SHORT $L51636
  0007b	eb e2		 jmp	 SHORT $L51635
$L51636:

; 1120 : 
; 1121 :     nItemCount = ListView_GetItemCount(m_pParent->m_hwndEntryList);

  0007d	6a 00		 push	 0
  0007f	6a 00		 push	 0
  00081	68 04 10 00 00	 push	 4100			; 00001004H
  00086	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 88 48 02 00
	00		 mov	 ecx, DWORD PTR [eax+584]
  0008f	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00092	52		 push	 edx
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00099	89 45 fc	 mov	 DWORD PTR _nItemCount$[ebp], eax

; 1122 :     
; 1123 :     for(nItem = 0; nItem < nItemCount; nItem++)

  0009c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nItem$[ebp], 0
  000a3	eb 09		 jmp	 SHORT $L51638
$L51639:
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nItem$[ebp]
  000a8	83 c0 01	 add	 eax, 1
  000ab	89 45 f4	 mov	 DWORD PTR _nItem$[ebp], eax
$L51638:
  000ae	8b 4d f4	 mov	 ecx, DWORD PTR _nItem$[ebp]
  000b1	3b 4d fc	 cmp	 ecx, DWORD PTR _nItemCount$[ebp]
  000b4	7d 52		 jge	 SHORT $L51640

; 1124 :     {
; 1125 :         pEntry = CGuiWaveBankEntry::GetEntry(m_pParent->m_hwndEntryList, nItem);

  000b6	8b 55 f4	 mov	 edx, DWORD PTR _nItem$[ebp]
  000b9	52		 push	 edx
  000ba	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 88 48 02 00
	00		 mov	 ecx, DWORD PTR [eax+584]
  000c3	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBankEntry::GetEntry
  000cc	89 45 f8	 mov	 DWORD PTR _pEntry$[ebp], eax

; 1126 :         ASSERT(pEntry);

  000cf	68 66 04 00 00	 push	 1126			; 00000466H
  000d4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000d9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_06JCGL@pEntry?$AA@ ; `string'
  000de	33 c0		 xor	 eax, eax
  000e0	83 7d f8 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  000e4	0f 94 c0	 sete	 al
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000ed	83 c4 10	 add	 esp, 16			; 00000010H

; 1127 : 
; 1128 :         InsertTailList(&m_lstEntries, &pEntry->m_leEntry);

  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  000f3	83 c1 08	 add	 ecx, 8
  000f6	51		 push	 ecx
  000f7	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000fa	81 c2 38 02 00
	00		 add	 edx, 568		; 00000238H
  00100	52		 push	 edx
  00101	e8 00 00 00 00	 call	 ?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z ; InsertTailList

; 1129 :     }

  00106	eb 9d		 jmp	 SHORT $L51639
$L51640:

; 1130 : 
; 1131 :     //
; 1132 :     // Swap the ascending flag
; 1133 :     //
; 1134 : 
; 1135 :     pColumn->fAscending = !pColumn->fAscending;

  00108	8b 45 ec	 mov	 eax, DWORD PTR _pColumn$[ebp]
  0010b	33 c9		 xor	 ecx, ecx
  0010d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00111	0f 94 c1	 sete	 cl
  00114	8b 55 ec	 mov	 edx, DWORD PTR _pColumn$[ebp]
  00117	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1136 : }

  0011a	5e		 pop	 esi
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 04 00	 ret	 4
?SortEntryList@CGuiWaveBank@@UAEXI@Z ENDP		; CGuiWaveBank::SortEntryList
_TEXT	ENDS
PUBLIC	?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList
PUBLIC	??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
; File c:\xbox\private\windows\directx\dsound\common\ntlist.h
CONST	SEGMENT
??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\common\ntlist.h', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z
_TEXT	SEGMENT
_ListHead$ = 8
_Entry$ = 12
?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z PROC NEAR	; InsertTailList, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  :     AssertValidEntryList(ListHead, ASSERT_VALID_ONLY);

  00003	6a 75		 push	 117			; 00000075H
  00005	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000a	6a 00		 push	 0
  0000c	8b 45 08	 mov	 eax, DWORD PTR _ListHead$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 118  :     AssertValidEntryList(Entry, ASSERT_NOT_IN_LIST);

  00015	6a 76		 push	 118			; 00000076H
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001c	6a 02		 push	 2
  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 119  : 
; 120  :     Entry->Flink = ListHead;

  00027	8b 55 0c	 mov	 edx, DWORD PTR _Entry$[ebp]
  0002a	8b 45 08	 mov	 eax, DWORD PTR _ListHead$[ebp]
  0002d	89 02		 mov	 DWORD PTR [edx], eax

; 121  :     Entry->Blink = ListHead->Blink;

  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00032	8b 55 08	 mov	 edx, DWORD PTR _ListHead$[ebp]
  00035	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00038	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 122  :     
; 123  :     Entry->Blink->Flink = Entry;

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  00044	89 02		 mov	 DWORD PTR [edx], eax

; 124  :     Entry->Flink->Blink = Entry;

  00046	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 125  : 
; 126  :     AssertValidEntryList(Entry, ASSERT_IN_LIST);

  00051	6a 7e		 push	 126			; 0000007eH
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00058	6a 01		 push	 1
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 127  : }    

  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z ENDP		; InsertTailList
_TEXT	ENDS
PUBLIC	??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@	; `string'
PUBLIC	??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ ; `string'
PUBLIC	??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ ; `string'
PUBLIC	??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@	; `string'
PUBLIC	??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@	; `string'
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT
??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@ DB 'NULL list entry pointe'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT
??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ DB 'List entry conta'
	DB	'ins NULL pointer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT
??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ DB 'List entry part'
	DB	'ially points to itself', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT
??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@ DB 'List entry not in list'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT
??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@ DB 'List entry in list', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT
_Entry$ = 8
_nFlags$ = 12
_pszFile$ = 16
_nLine$ = 20
?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z PROC NEAR ; __AssertValidEntryList, COMDAT

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   :     if(!Entry)

  00003	83 7d 08 00	 cmp	 DWORD PTR _Entry$[ebp], 0
  00007	75 1c		 jne	 SHORT $L47476

; 57   :     {
; 58   :         DirectSound::CDebug::Assert(TRUE, "NULL list entry pointer", pszFile, nLine);

  00009	8b 45 14	 mov	 eax, DWORD PTR _nLine$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  00010	51		 push	 ecx
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@ ; `string'
  00016	6a 01		 push	 1
  00018	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0001d	83 c4 10	 add	 esp, 16			; 00000010H

; 59   :     }
; 60   :     else if(!Entry->Flink || !Entry->Blink)

  00020	e9 c0 00 00 00	 jmp	 $L47478
$L47476:
  00025	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  00028	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0002b	74 09		 je	 SHORT $L47480
  0002d	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 1c		 jne	 SHORT $L47479
$L47480:

; 61   :     {
; 62   :         DirectSound::CDebug::Assert(TRUE, "List entry contains NULL pointer", pszFile, nLine);

  00036	8b 4d 14	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00039	51		 push	 ecx
  0003a	8b 55 10	 mov	 edx, DWORD PTR _pszFile$[ebp]
  0003d	52		 push	 edx
  0003e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ ; `string'
  00043	6a 01		 push	 1
  00045	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0004a	83 c4 10	 add	 esp, 16			; 00000010H

; 63   :     }
; 64   :     else if((Entry == Entry->Flink) || (Entry == Entry->Blink))

  0004d	e9 93 00 00 00	 jmp	 $L47482
$L47479:
  00052	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00058	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0005a	74 0b		 je	 SHORT $L47484
  0005c	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0005f	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00062	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00065	75 2e		 jne	 SHORT $L47483
$L47484:

; 65   :     {
; 66   :         if((Entry != Entry->Flink) || (Entry != Entry->Blink))

  00067	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0006a	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0006d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0006f	75 0b		 jne	 SHORT $L47486
  00071	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00077	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0007a	74 17		 je	 SHORT $L47485
$L47486:

; 67   :         {
; 68   :             DirectSound::CDebug::Assert(TRUE, "List entry partially points to itself", pszFile, nLine);

  0007c	8b 55 14	 mov	 edx, DWORD PTR _nLine$[ebp]
  0007f	52		 push	 edx
  00080	8b 45 10	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ ; `string'
  00089	6a 01		 push	 1
  0008b	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00090	83 c4 10	 add	 esp, 16			; 00000010H
$L47485:

; 69   :         }
; 70   :     }
; 71   :     else if(ASSERT_IN_LIST == nFlags)

  00093	eb 50		 jmp	 SHORT $L47488
$L47483:
  00095	83 7d 0c 01	 cmp	 DWORD PTR _nFlags$[ebp], 1
  00099	75 23		 jne	 SHORT $L47489

; 72   :     {
; 73   :         if(!IsEntryInList(Entry))

  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0009e	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  000a1	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a3	75 17		 jne	 SHORT $L47490

; 74   :         {
; 75   :             DirectSound::CDebug::Assert(TRUE, "List entry not in list", pszFile, nLine);

  000a5	8b 45 14	 mov	 eax, DWORD PTR _nLine$[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d 10	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  000ac	51		 push	 ecx
  000ad	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@ ; `string'
  000b2	6a 01		 push	 1
  000b4	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000b9	83 c4 10	 add	 esp, 16			; 00000010H
$L47490:

; 76   :         }
; 77   :     }
; 78   :     else if(ASSERT_NOT_IN_LIST == nFlags)

  000bc	eb 27		 jmp	 SHORT $L47492
$L47489:
  000be	83 7d 0c 02	 cmp	 DWORD PTR _nFlags$[ebp], 2
  000c2	75 21		 jne	 SHORT $L47493

; 79   :     {
; 80   :         if(IsEntryInList(Entry))

  000c4	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  000c7	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  000ca	3b 02		 cmp	 eax, DWORD PTR [edx]
  000cc	74 17		 je	 SHORT $L47494

; 81   :         {
; 82   :             DirectSound::CDebug::Assert(TRUE, "List entry in list", pszFile, nLine);

  000ce	8b 4d 14	 mov	 ecx, DWORD PTR _nLine$[ebp]
  000d1	51		 push	 ecx
  000d2	8b 55 10	 mov	 edx, DWORD PTR _pszFile$[ebp]
  000d5	52		 push	 edx
  000d6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@ ; `string'
  000db	6a 01		 push	 1
  000dd	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000e2	83 c4 10	 add	 esp, 16			; 00000010H
$L47494:
$L47493:
$L47492:
$L47488:
$L47482:
$L47478:

; 83   :         }
; 84   :     }
; 85   : }

  000e5	5d		 pop	 ebp
  000e6	c2 10 00	 ret	 16			; 00000010H
?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ENDP ; __AssertValidEntryList
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z
_TEXT	SEGMENT
_Entry$ = 8
?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z PROC NEAR	; RemoveEntryList, COMDAT

; 215  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  :     AssertValidEntryList(Entry, ASSERT_VALID_ONLY);

  00003	68 d8 00 00 00	 push	 216			; 000000d8H
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000d	6a 00		 push	 0
  0000f	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 217  : 
; 218  :     if(IsEntryInList(Entry))

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0001e	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00020	74 2c		 je	 SHORT $L47516

; 219  :     {
; 220  :         Entry->Flink->Blink = Entry->Blink;

  00022	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0002a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 221  :         Entry->Blink->Flink = Entry->Flink;

  00030	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 0a		 mov	 DWORD PTR [edx], ecx

; 222  : 
; 223  :         Entry->Flink = Entry->Blink = Entry;

  0003d	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  00040	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00043	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00049	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0004c	89 11		 mov	 DWORD PTR [ecx], edx
$L47516:

; 224  :     }
; 225  : 
; 226  :     return Entry;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]

; 227  : }

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ENDP	; RemoveEntryList
_TEXT	ENDS
PUBLIC	??0CGenerateDialog@@QAE@XZ			; CGenerateDialog::CGenerateDialog
PUBLIC	??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z	; CGuiWaveBankProject::CGuiWaveBankProject
PUBLIC	?Open@CGuiWaveBankProject@@UAEJPBD@Z		; CGuiWaveBankProject::Open
PUBLIC	?Save@CGuiWaveBankProject@@UAEJH@Z		; CGuiWaveBankProject::Save
PUBLIC	?AddBank@CGuiWaveBankProject@@UAEJXZ		; CGuiWaveBankProject::AddBank
PUBLIC	?RemoveBank@CGuiWaveBankProject@@UAEXI@Z	; CGuiWaveBankProject::RemoveBank
PUBLIC	?AddEntry@CGuiWaveBankProject@@UAEJXZ		; CGuiWaveBankProject::AddEntry
PUBLIC	?RemoveEntry@CGuiWaveBankProject@@UAEXI@Z	; CGuiWaveBankProject::RemoveEntry
PUBLIC	?SortBankList@CGuiWaveBankProject@@UAEXI@Z	; CGuiWaveBankProject::SortBankList
PUBLIC	?SortEntryList@CGuiWaveBankProject@@UAEXI@Z	; CGuiWaveBankProject::SortEntryList
PUBLIC	?Generate@CGuiWaveBankProject@@UAEJXZ		; CGuiWaveBankProject::Generate
PUBLIC	?Attach@CGuiWaveBankProject@@UAEXPAUHWND__@@0@Z	; CGuiWaveBankProject::Attach
PUBLIC	?Detach@CGuiWaveBankProject@@UAEXH@Z		; CGuiWaveBankProject::Detach
PUBLIC	?SelectBank@CGuiWaveBankProject@@UAEXI@Z	; CGuiWaveBankProject::SelectBank
PUBLIC	?ClearEntryList@CGuiWaveBankProject@@UAEXXZ	; CGuiWaveBankProject::ClearEntryList
PUBLIC	?FillEntryList@CGuiWaveBankProject@@UAEXXZ	; CGuiWaveBankProject::FillEntryList
PUBLIC	?Refresh@CGuiWaveBankProject@@UAEJXZ		; CGuiWaveBankProject::Refresh
PUBLIC	?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ ; CGuiWaveBankProject::CreateBank
PUBLIC	?GenerateThread@CGuiWaveBankProject@@MAEJXZ	; CGuiWaveBankProject::GenerateThread
PUBLIC	??_7CGuiWaveBankProject@@6B@			; CGuiWaveBankProject::`vftable'
PUBLIC	??_GCGuiWaveBankProject@@UAEPAXI@Z		; CGuiWaveBankProject::`scalar deleting destructor'
PUBLIC	??_ECGuiWaveBankProject@@UAEPAXI@Z		; CGuiWaveBankProject::`vector deleting destructor'
PUBLIC	?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z ; CWaveBankProject::RemoveBank
EXTRN	??0CWaveBankProject@@QAE@XZ:NEAR		; CWaveBankProject::CWaveBankProject
EXTRN	?AddBank@CWaveBankProject@@UAEJPBD00PAPAVCWaveBank@@@Z:NEAR ; CWaveBankProject::AddBank
EXTRN	?Generate@CWaveBankProject@@UAEJPAVCWaveBankCallback@@H@Z:NEAR ; CWaveBankProject::Generate
EXTRN	?ReadProjectData@CWaveBankProject@@UAEJPBD@Z:NEAR ; CWaveBankProject::ReadProjectData
EXTRN	?WriteProjectData@CWaveBankProject@@UAEJPBD@Z:NEAR ; CWaveBankProject::WriteProjectData
;	COMDAT ??_7CGuiWaveBankProject@@6B@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
CONST	SEGMENT
??_7CGuiWaveBankProject@@6B@ DD FLAT:??_ECGuiWaveBankProject@@UAEPAXI@Z ; CGuiWaveBankProject::`vftable'
	DD	FLAT:?AddBank@CWaveBankProject@@UAEJPBD00PAPAVCWaveBank@@@Z
	DD	FLAT:?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z
	DD	FLAT:?Generate@CWaveBankProject@@UAEJPAVCWaveBankCallback@@H@Z
	DD	FLAT:?ReadProjectData@CWaveBankProject@@UAEJPBD@Z
	DD	FLAT:?WriteProjectData@CWaveBankProject@@UAEJPBD@Z
	DD	FLAT:?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ
	DD	FLAT:?Open@CGuiWaveBankProject@@UAEJPBD@Z
	DD	FLAT:?Save@CGuiWaveBankProject@@UAEJH@Z
	DD	FLAT:?AddBank@CGuiWaveBankProject@@UAEJXZ
	DD	FLAT:?RemoveBank@CGuiWaveBankProject@@UAEXI@Z
	DD	FLAT:?AddEntry@CGuiWaveBankProject@@UAEJXZ
	DD	FLAT:?RemoveEntry@CGuiWaveBankProject@@UAEXI@Z
	DD	FLAT:?SortBankList@CGuiWaveBankProject@@UAEXI@Z
	DD	FLAT:?SortEntryList@CGuiWaveBankProject@@UAEXI@Z
	DD	FLAT:?Generate@CGuiWaveBankProject@@UAEJXZ
	DD	FLAT:?Attach@CGuiWaveBankProject@@UAEXPAUHWND__@@0@Z
	DD	FLAT:?Detach@CGuiWaveBankProject@@UAEXH@Z
	DD	FLAT:?SelectBank@CGuiWaveBankProject@@UAEXI@Z
	DD	FLAT:?ClearEntryList@CGuiWaveBankProject@@UAEXXZ
	DD	FLAT:?FillEntryList@CGuiWaveBankProject@@UAEXXZ
	DD	FLAT:?Refresh@CGuiWaveBankProject@@UAEJXZ
	DD	FLAT:?GenerateThread@CGuiWaveBankProject@@MAEJXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z
_TEXT	SEGMENT
_pParent$ = 8
_this$ = -4
??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z PROC NEAR	; CGuiWaveBankProject::CGuiWaveBankProject, COMDAT
; _this$ = ecx

; 1161 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CWaveBankProject@@QAE@XZ ; CWaveBankProject::CWaveBankProject
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	81 c1 34 01 00
	00		 add	 ecx, 308		; 00000134H
  00018	e8 00 00 00 00	 call	 ??0CGenerateDialog@@QAE@XZ ; CGenerateDialog::CGenerateDialog
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBankProject@@6B@ ; CGuiWaveBankProject::`vftable'

; 1162 :     m_pParent = pParent;

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 55 08	 mov	 edx, DWORD PTR _pParent$[ebp]
  0002c	89 51 10	 mov	 DWORD PTR [ecx+16], edx

; 1163 :     m_hwndBankList = NULL;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1164 :     m_hwndEntryList = NULL;

  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 1165 :     m_pActiveBank = NULL;

  00043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00046	c7 42 24 00 00
	00 00		 mov	 DWORD PTR [edx+36], 0

; 1166 :     m_hBankIcon = NULL;

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	c7 80 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+300], 0

; 1167 :     m_nBankIcon = -1;

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	c7 81 30 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+304], -1

; 1168 : 
; 1169 :     m_szProjectFile[0] = 0;

  00067	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	c6 42 28 00	 mov	 BYTE PTR [edx+40], 0

; 1170 : }

  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
??0CGuiWaveBankProject@@QAE@PAVCWindow@@@Z ENDP		; CGuiWaveBankProject::CGuiWaveBankProject
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\writer.h
_TEXT	ENDS
;	COMDAT ?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z
_TEXT	SEGMENT
$T52370 = -4
$T52371 = -8
_pBank$ = 8
_this$ = -12
?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z PROC NEAR ; CWaveBankProject::RemoveBank, COMDAT
; _this$ = ecx

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 210  :     DELETE(pBank);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  0000d	74 31		 je	 SHORT $L48744
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pBank$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR $T52371[ebp], eax
  00015	8b 4d f8	 mov	 ecx, DWORD PTR $T52371[ebp]
  00018	89 4d fc	 mov	 DWORD PTR $T52370[ebp], ecx
  0001b	83 7d fc 00	 cmp	 DWORD PTR $T52370[ebp], 0
  0001f	74 11		 je	 SHORT $L52372
  00021	6a 01		 push	 1
  00023	8b 55 fc	 mov	 edx, DWORD PTR $T52370[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR $T52370[ebp]
  0002b	ff 10		 call	 DWORD PTR [eax]
  0002d	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  00030	eb 07		 jmp	 SHORT $L52373
$L52372:
  00032	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L52373:
  00039	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pBank$[ebp], 0
$L48744:

; 211  : }

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z ENDP	; CWaveBankProject::RemoveBank
_TEXT	ENDS
PUBLIC	??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@	; `string'
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.h
CONST	SEGMENT
??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@ DB 'CGuiWaveBank(this)', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ
_TEXT	SEGMENT
_this$ = -8
$T52377 = -4
?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ PROC NEAR ; CGuiWaveBankProject::CreateBank, COMDAT
; _this$ = ecx

; 238  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 239  :     return NEW(CGuiWaveBank(this));

  00009	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@ ; `string'
  0000e	68 ef 00 00 00	 push	 239			; 000000efH
  00013	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00018	68 4c 02 00 00	 push	 588			; 0000024cH
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR $T52377[ebp], eax
  00028	83 7d fc 00	 cmp	 DWORD PTR $T52377[ebp], 0
  0002c	74 11		 je	 SHORT $L52378
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	50		 push	 eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR $T52377[ebp]
  00035	e8 00 00 00 00	 call	 ??0CGuiWaveBank@@QAE@PAVCGuiWaveBankProject@@@Z ; CGuiWaveBank::CGuiWaveBank
  0003a	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0003d	eb 07		 jmp	 SHORT $L52379
$L52378:
  0003f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L52379:
  00046	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 240  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?CreateBank@CGuiWaveBankProject@@MAEPAVCWaveBank@@XZ ENDP ; CGuiWaveBankProject::CreateBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SortEntryList@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT
_nColumnIndex$ = 8
_this$ = -4
?SortEntryList@CGuiWaveBankProject@@UAEXI@Z PROC NEAR	; CGuiWaveBankProject::SortEntryList, COMDAT
; _this$ = ecx

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 244  :     if(m_pActiveBank)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  0000e	74 15		 je	 SHORT $L51115

; 245  :     {
; 246  :         m_pActiveBank->SortEntryList(nColumnIndex);

  00010	8b 4d 08	 mov	 ecx, DWORD PTR _nColumnIndex$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 49 24	 mov	 ecx, DWORD PTR [ecx+36]
  00020	8b 10		 mov	 edx, DWORD PTR [eax]
  00022	ff 52 38	 call	 DWORD PTR [edx+56]
$L51115:

; 247  :     }
; 248  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SortEntryList@CGuiWaveBankProject@@UAEXI@Z ENDP	; CGuiWaveBankProject::SortEntryList
_TEXT	ENDS
PUBLIC	??1CGuiWaveBankProject@@UAE@XZ			; CGuiWaveBankProject::~CGuiWaveBankProject
; Function compile flags: /Odt
;	COMDAT ??_GCGuiWaveBankProject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGuiWaveBankProject@@UAEPAXI@Z PROC NEAR		; CGuiWaveBankProject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGuiWaveBankProject@@UAE@XZ ; CGuiWaveBankProject::~CGuiWaveBankProject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51649
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51649:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGuiWaveBankProject@@UAEPAXI@Z ENDP			; CGuiWaveBankProject::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CGenerateDialog@@UAE@XZ			; CGenerateDialog::~CGenerateDialog
EXTRN	??1CWaveBankProject@@UAE@XZ:NEAR		; CWaveBankProject::~CWaveBankProject
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
;	COMDAT ??1CGuiWaveBankProject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGuiWaveBankProject@@UAE@XZ PROC NEAR		; CGuiWaveBankProject::~CGuiWaveBankProject, COMDAT
; _this$ = ecx

; 1195 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGuiWaveBankProject@@6B@ ; CGuiWaveBankProject::`vftable'

; 1196 :     //
; 1197 :     // Clear all items from the lists
; 1198 :     //
; 1199 : 
; 1200 :     Detach();

  00010	6a 01		 push	 1
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?Detach@CGuiWaveBankProject@@UAEXH@Z ; CGuiWaveBankProject::Detach

; 1201 : 
; 1202 :     //
; 1203 :     // Free resources
; 1204 :     //
; 1205 :     
; 1206 :     if(m_hBankIcon)

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 b9 2c 01 00
	00 00		 cmp	 DWORD PTR [ecx+300], 0
  00024	74 10		 je	 SHORT $L51654

; 1207 :     {
; 1208 :         DestroyIcon(m_hBankIcon);

  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  0002f	50		 push	 eax
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyIcon@4
$L51654:

; 1209 :     }
; 1210 : }

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	81 c1 34 01 00
	00		 add	 ecx, 308		; 00000134H
  0003f	e8 00 00 00 00	 call	 ??1CGenerateDialog@@UAE@XZ ; CGenerateDialog::~CGenerateDialog
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??1CWaveBankProject@@UAE@XZ ; CWaveBankProject::~CWaveBankProject
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??1CGuiWaveBankProject@@UAE@XZ ENDP			; CGuiWaveBankProject::~CGuiWaveBankProject
_TEXT	ENDS
PUBLIC	??_C@_0DC@BJHH@That?5wave?5bank?5file?5already?5exis@ ; `string'
PUBLIC	??_C@_02LEGB@?4h?$AA@				; `string'
PUBLIC	??_C@_01KDJI@h?$AA@				; `string'
PUBLIC	??_C@_0CP@OMHO@That?5header?5file?5already?5exists?5@ ; `string'
EXTRN	_ListView_SelectItem@16:NEAR
EXTRN	_ListView_AutoSizeColumns@4:NEAR
EXTRN	__imp__SetFocus@4:NEAR
EXTRN	_GetSaveFileNameA@4:NEAR
EXTRN	__stricmp:NEAR
;	COMDAT ??_C@_0DC@BJHH@That?5wave?5bank?5file?5already?5exis@
CONST	SEGMENT
??_C@_0DC@BJHH@That?5wave?5bank?5file?5already?5exis@ DB 'That wave bank '
	DB	'file already exists in the project', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02LEGB@?4h?$AA@
CONST	SEGMENT
??_C@_02LEGB@?4h?$AA@ DB '.h', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDJI@h?$AA@
CONST	SEGMENT
??_C@_01KDJI@h?$AA@ DB 'h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OMHO@That?5header?5file?5already?5exists?5@
CONST	SEGMENT
??_C@_0CP@OMHO@That?5header?5file?5already?5exists?5@ DB 'That header fil'
	DB	'e already exists in the project', 00H	; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?AddBank@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT
$T52392 = -1692
$T52393 = -1696
_this$ = -1700
_pBank$ = -884
_hr$ = -888
_szSbkPath$ = -1688
_szHdrPath$ = -1160
_szDrive$ = -880
_szDir$ = -616
_szFile$ = -1424
_szExt$ = -352
_pleBank$ = -892
_ofn$ = -88
?AddBank@CGuiWaveBankProject@@UAEJXZ PROC NEAR		; CGuiWaveBankProject::AddBank, COMDAT
; _this$ = ecx

; 1236 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 06 00
	00		 sub	 esp, 1704		; 000006a8H
  00009	89 8d 5c f9 ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1237 :     static const LPCSTR     pszSbkFilter        = MAKE_COMMDLG_FILTER("Wave Bank", "*." WBWRITER_FILEEXTENSION_BANK) MAKE_COMMDLG_FILTER("All", "*.*");
; 1238 :     static const LPCSTR     pszHdrFilter        = MAKE_COMMDLG_FILTER("Header", "*." WBWRITER_FILEEXTENSION_HEADER) MAKE_COMMDLG_FILTER("All", "*.*");
; 1239 :     static const LPCSTR     pszSbkTitle         = "Create Wave Bank File";
; 1240 :     static const LPCSTR     pszHdrTitle         = "Create Header File";
; 1241 :     static const DWORD      dwOfnFlags          = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_PATHMUSTEXIST;
; 1242 :     CGuiWaveBank *          pBank               = NULL;

  0000f	c7 85 8c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _pBank$[ebp], 0

; 1243 :     HRESULT                 hr                  = S_OK;

  00019	c7 85 88 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 1244 :     CHAR                    szSbkPath[MAX_PATH];
; 1245 :     CHAR                    szHdrPath[MAX_PATH];
; 1246 :     CHAR                    szDrive[MAX_PATH];
; 1247 :     CHAR                    szDir[MAX_PATH];
; 1248 :     CHAR                    szFile[MAX_PATH];
; 1249 :     CHAR                    szExt[MAX_PATH];
; 1250 :     PLIST_ENTRY             pleBank;
; 1251 :     OPENFILENAME            ofn;
; 1252 : 
; 1253 :     szSbkPath[0] = 0;

  00023	c6 85 68 f9 ff
	ff 00		 mov	 BYTE PTR _szSbkPath$[ebp], 0

; 1254 :     szHdrPath[0] = 0;

  0002a	c6 85 78 fb ff
	ff 00		 mov	 BYTE PTR _szHdrPath$[ebp], 0
$L51685:

; 1255 :     
; 1256 :     //
; 1257 :     // Get the wave bank file path
; 1258 :     //
; 1259 : 
; 1260 :     while(SUCCEEDED(hr))

  00031	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00038	0f 8c 19 01 00
	00		 jl	 $L51686

; 1261 :     {
; 1262 :         ZeroMemory(&ofn, sizeof(ofn));

  0003e	6a 58		 push	 88			; 00000058H
  00040	6a 00		 push	 0
  00042	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _memset
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1263 : 
; 1264 :         ofn.lStructSize = sizeof(ofn);

  0004e	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 1265 :         ofn.hwndOwner = m_pParent->m_hwnd;

  00055	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0005e	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00061	89 45 ac	 mov	 DWORD PTR _ofn$[ebp+4], eax

; 1266 :         ofn.lpstrFilter = pszSbkFilter;

  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszSbkFilter@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB
  0006a	89 4d b4	 mov	 DWORD PTR _ofn$[ebp+12], ecx

; 1267 :         ofn.lpstrFile = szSbkPath;

  0006d	8d 95 68 f9 ff
	ff		 lea	 edx, DWORD PTR _szSbkPath$[ebp]
  00073	89 55 c4	 mov	 DWORD PTR _ofn$[ebp+28], edx

; 1268 :         ofn.nMaxFile = NUMELMS(szSbkPath);

  00076	c7 45 c8 04 01
	00 00		 mov	 DWORD PTR _ofn$[ebp+32], 260 ; 00000104H

; 1269 :         ofn.lpstrTitle = pszSbkTitle;

  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszSbkTitle@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB
  00082	89 45 d8	 mov	 DWORD PTR _ofn$[ebp+48], eax

; 1270 :         ofn.Flags = dwOfnFlags;

  00085	c7 45 dc 04 08
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8914948 ; 00880804H

; 1271 :         ofn.lpstrDefExt = WBWRITER_FILEEXTENSION_BANK;

  0008c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+60], OFFSET FLAT:??_C@_03KAKF@xwb?$AA@ ; `string'

; 1272 : 
; 1273 :         if(!GetSaveFileName(&ofn))

  00093	8d 4d a8	 lea	 ecx, DWORD PTR _ofn$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 _GetSaveFileNameA@4
  0009c	85 c0		 test	 eax, eax
  0009e	75 0a		 jne	 SHORT $L51688

; 1274 :         {
; 1275 :             hr = E_ABORT;

  000a0	c7 85 88 fc ff
	ff 04 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
$L51688:

; 1276 :         }
; 1277 : 
; 1278 :         if(SUCCEEDED(hr))

  000aa	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000b1	0f 8c 9b 00 00
	00		 jl	 $L51691

; 1279 :         {
; 1280 :             for(pleBank = m_lstBanks.Flink; pleBank != &m_lstBanks; pleBank = pleBank->Flink)

  000b7	8b 95 5c f9 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	89 85 84 fc ff
	ff		 mov	 DWORD PTR _pleBank$[ebp], eax
  000c6	eb 0e		 jmp	 SHORT $L51692
$L51693:
  000c8	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _pleBank$[ebp]
  000ce	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d0	89 95 84 fc ff
	ff		 mov	 DWORD PTR _pleBank$[ebp], edx
$L51692:
  000d6	8b 85 5c f9 ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000dc	83 c0 04	 add	 eax, 4
  000df	39 85 84 fc ff
	ff		 cmp	 DWORD PTR _pleBank$[ebp], eax
  000e5	74 30		 je	 SHORT $L51694

; 1281 :             {
; 1282 :                 pBank = CONTAINING_RECORD(pleBank, CGuiWaveBank, m_leBank);

  000e7	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _pleBank$[ebp]
  000ed	83 e9 08	 sub	 ecx, 8
  000f0	89 8d 8c fc ff
	ff		 mov	 DWORD PTR _pBank$[ebp], ecx

; 1283 : 
; 1284 :                 if(!_stricmp(szSbkPath, pBank->m_szBankFile))

  000f6	8b 95 8c fc ff
	ff		 mov	 edx, DWORD PTR _pBank$[ebp]
  000fc	83 c2 30	 add	 edx, 48			; 00000030H
  000ff	52		 push	 edx
  00100	8d 85 68 f9 ff
	ff		 lea	 eax, DWORD PTR _szSbkPath$[ebp]
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 __stricmp
  0010c	83 c4 08	 add	 esp, 8
  0010f	85 c0		 test	 eax, eax
  00111	75 02		 jne	 SHORT $L51699

; 1285 :                 {
; 1286 :                     break;

  00113	eb 02		 jmp	 SHORT $L51694
$L51699:

; 1287 :                 }
; 1288 :             }

  00115	eb b1		 jmp	 SHORT $L51693
$L51694:

; 1289 : 
; 1290 :             if(pleBank == &m_lstBanks)

  00117	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	83 c1 04	 add	 ecx, 4
  00120	39 8d 84 fc ff
	ff		 cmp	 DWORD PTR _pleBank$[ebp], ecx
  00126	75 0c		 jne	 SHORT $L51700

; 1291 :             {
; 1292 :                 pBank = NULL;

  00128	c7 85 8c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _pBank$[ebp], 0

; 1293 :                 break;

  00132	eb 23		 jmp	 SHORT $L51686
$L51700:

; 1294 :             }
; 1295 :             else
; 1296 :             {
; 1297 :                 m_pParent->MessageBox("That wave bank file already exists in the project", MB_OK | MB_ICONSTOP);

  00134	6a 10		 push	 16			; 00000010H
  00136	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DC@BJHH@That?5wave?5bank?5file?5already?5exis@ ; `string'
  0013b	8b 95 5c f9 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00141	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00144	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0014d	8b 10		 mov	 edx, DWORD PTR [eax]
  0014f	ff 52 18	 call	 DWORD PTR [edx+24]
$L51691:

; 1298 :             }
; 1299 :         }
; 1300 :     }

  00152	e9 da fe ff ff	 jmp	 $L51685
$L51686:
$L51704:

; 1301 :     
; 1302 :     //
; 1303 :     // Get the header file path
; 1304 :     //
; 1305 :     
; 1306 :     while(SUCCEEDED(hr))

  00157	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0015e	0f 8c 70 01 00
	00		 jl	 $L51705

; 1307 :     {
; 1308 :         _splitpath(szSbkPath, szDrive, szDir, szFile, szExt);

  00164	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR _szExt$[ebp]
  0016a	50		 push	 eax
  0016b	8d 8d 70 fa ff
	ff		 lea	 ecx, DWORD PTR _szFile$[ebp]
  00171	51		 push	 ecx
  00172	8d 95 98 fd ff
	ff		 lea	 edx, DWORD PTR _szDir$[ebp]
  00178	52		 push	 edx
  00179	8d 85 90 fc ff
	ff		 lea	 eax, DWORD PTR _szDrive$[ebp]
  0017f	50		 push	 eax
  00180	8d 8d 68 f9 ff
	ff		 lea	 ecx, DWORD PTR _szSbkPath$[ebp]
  00186	51		 push	 ecx
  00187	e8 00 00 00 00	 call	 __splitpath
  0018c	83 c4 14	 add	 esp, 20			; 00000014H

; 1309 :         _makepath(szHdrPath, szDrive, szDir, szFile, "." WBWRITER_FILEEXTENSION_HEADER);

  0018f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02LEGB@?4h?$AA@ ; `string'
  00194	8d 95 70 fa ff
	ff		 lea	 edx, DWORD PTR _szFile$[ebp]
  0019a	52		 push	 edx
  0019b	8d 85 98 fd ff
	ff		 lea	 eax, DWORD PTR _szDir$[ebp]
  001a1	50		 push	 eax
  001a2	8d 8d 90 fc ff
	ff		 lea	 ecx, DWORD PTR _szDrive$[ebp]
  001a8	51		 push	 ecx
  001a9	8d 95 78 fb ff
	ff		 lea	 edx, DWORD PTR _szHdrPath$[ebp]
  001af	52		 push	 edx
  001b0	e8 00 00 00 00	 call	 __makepath
  001b5	83 c4 14	 add	 esp, 20			; 00000014H

; 1310 : 
; 1311 :         ZeroMemory(&ofn, sizeof(ofn));

  001b8	6a 58		 push	 88			; 00000058H
  001ba	6a 00		 push	 0
  001bc	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 _memset
  001c5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1312 : 
; 1313 :         ofn.lStructSize = sizeof(ofn);

  001c8	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 1314 :         ofn.hwndOwner = m_pParent->m_hwnd;

  001cf	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001d5	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  001d8	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  001db	89 45 ac	 mov	 DWORD PTR _ofn$[ebp+4], eax

; 1315 :         ofn.lpstrFilter = pszHdrFilter;

  001de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszHdrFilter@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB
  001e4	89 4d b4	 mov	 DWORD PTR _ofn$[ebp+12], ecx

; 1316 :         ofn.lpstrFile = szHdrPath;

  001e7	8d 95 78 fb ff
	ff		 lea	 edx, DWORD PTR _szHdrPath$[ebp]
  001ed	89 55 c4	 mov	 DWORD PTR _ofn$[ebp+28], edx

; 1317 :         ofn.nMaxFile = NUMELMS(szHdrPath);

  001f0	c7 45 c8 04 01
	00 00		 mov	 DWORD PTR _ofn$[ebp+32], 260 ; 00000104H

; 1318 :         ofn.lpstrTitle = pszHdrTitle;

  001f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszHdrTitle@?1??AddBank@CGuiWaveBankProject@@UAEJXZ@4QBDB
  001fc	89 45 d8	 mov	 DWORD PTR _ofn$[ebp+48], eax

; 1319 :         ofn.Flags = dwOfnFlags;

  001ff	c7 45 dc 04 08
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8914948 ; 00880804H

; 1320 :         ofn.lpstrDefExt = WBWRITER_FILEEXTENSION_HEADER;

  00206	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+60], OFFSET FLAT:??_C@_01KDJI@h?$AA@ ; `string'

; 1321 : 
; 1322 :         if(!GetSaveFileName(&ofn))

  0020d	8d 4d a8	 lea	 ecx, DWORD PTR _ofn$[ebp]
  00210	51		 push	 ecx
  00211	e8 00 00 00 00	 call	 _GetSaveFileNameA@4
  00216	85 c0		 test	 eax, eax
  00218	75 0a		 jne	 SHORT $L51709

; 1323 :         {
; 1324 :             hr = E_ABORT;

  0021a	c7 85 88 fc ff
	ff 04 40 00 80	 mov	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
$L51709:

; 1325 :         }
; 1326 : 
; 1327 :         if(SUCCEEDED(hr))

  00224	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0022b	0f 8c 9e 00 00
	00		 jl	 $L51712

; 1328 :         {
; 1329 :             for(pleBank = m_lstBanks.Flink; pleBank != &m_lstBanks; pleBank = pleBank->Flink)

  00231	8b 95 5c f9 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00237	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0023a	89 85 84 fc ff
	ff		 mov	 DWORD PTR _pleBank$[ebp], eax
  00240	eb 0e		 jmp	 SHORT $L51713
$L51714:
  00242	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _pleBank$[ebp]
  00248	8b 11		 mov	 edx, DWORD PTR [ecx]
  0024a	89 95 84 fc ff
	ff		 mov	 DWORD PTR _pleBank$[ebp], edx
$L51713:
  00250	8b 85 5c f9 ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00256	83 c0 04	 add	 eax, 4
  00259	39 85 84 fc ff
	ff		 cmp	 DWORD PTR _pleBank$[ebp], eax
  0025f	74 33		 je	 SHORT $L51715

; 1330 :             {
; 1331 :                 pBank = CONTAINING_RECORD(pleBank, CGuiWaveBank, m_leBank);

  00261	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _pleBank$[ebp]
  00267	83 e9 08	 sub	 ecx, 8
  0026a	89 8d 8c fc ff
	ff		 mov	 DWORD PTR _pBank$[ebp], ecx

; 1332 : 
; 1333 :                 if(!_stricmp(szHdrPath, pBank->m_szHeaderFile))

  00270	8b 95 8c fc ff
	ff		 mov	 edx, DWORD PTR _pBank$[ebp]
  00276	81 c2 34 01 00
	00		 add	 edx, 308		; 00000134H
  0027c	52		 push	 edx
  0027d	8d 85 78 fb ff
	ff		 lea	 eax, DWORD PTR _szHdrPath$[ebp]
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 __stricmp
  00289	83 c4 08	 add	 esp, 8
  0028c	85 c0		 test	 eax, eax
  0028e	75 02		 jne	 SHORT $L51720

; 1334 :                 {
; 1335 :                     break;

  00290	eb 02		 jmp	 SHORT $L51715
$L51720:

; 1336 :                 }
; 1337 :             }

  00292	eb ae		 jmp	 SHORT $L51714
$L51715:

; 1338 : 
; 1339 :             if(pleBank == &m_lstBanks)

  00294	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0029a	83 c1 04	 add	 ecx, 4
  0029d	39 8d 84 fc ff
	ff		 cmp	 DWORD PTR _pleBank$[ebp], ecx
  002a3	75 0c		 jne	 SHORT $L51721

; 1340 :             {
; 1341 :                 pBank = NULL;

  002a5	c7 85 8c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _pBank$[ebp], 0

; 1342 :                 break;

  002af	eb 23		 jmp	 SHORT $L51705
$L51721:

; 1343 :             }
; 1344 :             else
; 1345 :             {
; 1346 :                 m_pParent->MessageBox("That header file already exists in the project", MB_OK | MB_ICONSTOP);

  002b1	6a 10		 push	 16			; 00000010H
  002b3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CP@OMHO@That?5header?5file?5already?5exists?5@ ; `string'
  002b8	8b 95 5c f9 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  002be	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  002c1	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  002c7	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  002ca	8b 10		 mov	 edx, DWORD PTR [eax]
  002cc	ff 52 18	 call	 DWORD PTR [edx+24]
$L51712:

; 1347 :             }
; 1348 :         }
; 1349 :     }

  002cf	e9 83 fe ff ff	 jmp	 $L51704
$L51705:

; 1350 : 
; 1351 :     //
; 1352 :     // Create the wave bank object
; 1353 :     //
; 1354 : 
; 1355 :     if(SUCCEEDED(hr))

  002d4	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  002db	7c 2d		 jl	 SHORT $L51725

; 1356 :     {
; 1357 :         hr = CWaveBankProject::AddBank(szFile, szSbkPath, szHdrPath, (CWaveBank **)&pBank);

  002dd	8d 85 8c fc ff
	ff		 lea	 eax, DWORD PTR _pBank$[ebp]
  002e3	50		 push	 eax
  002e4	8d 8d 78 fb ff
	ff		 lea	 ecx, DWORD PTR _szHdrPath$[ebp]
  002ea	51		 push	 ecx
  002eb	8d 95 68 f9 ff
	ff		 lea	 edx, DWORD PTR _szSbkPath$[ebp]
  002f1	52		 push	 edx
  002f2	8d 85 70 fa ff
	ff		 lea	 eax, DWORD PTR _szFile$[ebp]
  002f8	50		 push	 eax
  002f9	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  002ff	e8 00 00 00 00	 call	 ?AddBank@CWaveBankProject@@UAEJPBD00PAPAVCWaveBank@@@Z ; CWaveBankProject::AddBank
  00304	89 85 88 fc ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax
$L51725:

; 1358 :     }
; 1359 : 
; 1360 :     //
; 1361 :     // Resize the list-view columns
; 1362 :     //
; 1363 : 
; 1364 :     if(SUCCEEDED(hr))

  0030a	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00311	7c 0f		 jl	 SHORT $L51728

; 1365 :     {
; 1366 :         ListView_AutoSizeColumns(m_hwndBankList);

  00313	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00319	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0031c	52		 push	 edx
  0031d	e8 00 00 00 00	 call	 _ListView_AutoSizeColumns@4
$L51728:

; 1367 :     }
; 1368 : 
; 1369 :     //
; 1370 :     // Activate the new bank
; 1371 :     //
; 1372 :     
; 1373 :     if(SUCCEEDED(hr))

  00322	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00329	7c 30		 jl	 SHORT $L51730

; 1374 :     {
; 1375 :         ListView_SelectItem(m_hwndBankList, ListView_GetItemCount(m_hwndBankList) - 1, TRUE, TRUE);

  0032b	6a 01		 push	 1
  0032d	6a 01		 push	 1
  0032f	6a 00		 push	 0
  00331	6a 00		 push	 0
  00333	68 04 10 00 00	 push	 4100			; 00001004H
  00338	8b 85 5c f9 ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0033e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00341	51		 push	 ecx
  00342	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00348	83 e8 01	 sub	 eax, 1
  0034b	50		 push	 eax
  0034c	8b 95 5c f9 ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00352	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00355	50		 push	 eax
  00356	e8 00 00 00 00	 call	 _ListView_SelectItem@16
$L51730:

; 1376 :     }
; 1377 : 
; 1378 :     //
; 1379 :     // Set focus to the bank list
; 1380 :     //
; 1381 : 
; 1382 :     if(SUCCEEDED(hr))

  0035b	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00362	7c 10		 jl	 SHORT $L51733

; 1383 :     {
; 1384 :         SetFocus(m_hwndBankList);

  00364	8b 8d 5c f9 ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0036a	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0036d	52		 push	 edx
  0036e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4
$L51733:

; 1385 :     }
; 1386 : 
; 1387 :     //
; 1388 :     // Clean up
; 1389 :     //
; 1390 : 
; 1391 :     if(FAILED(hr))

  00374	83 bd 88 fc ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  0037b	7d 58		 jge	 SHORT $L51735

; 1392 :     {
; 1393 :         DELETE(pBank);

  0037d	83 bd 8c fc ff
	ff 00		 cmp	 DWORD PTR _pBank$[ebp], 0
  00384	74 4f		 je	 SHORT $L51736
  00386	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR _pBank$[ebp]
  0038c	89 85 60 f9 ff
	ff		 mov	 DWORD PTR $T52393[ebp], eax
  00392	8b 8d 60 f9 ff
	ff		 mov	 ecx, DWORD PTR $T52393[ebp]
  00398	89 8d 64 f9 ff
	ff		 mov	 DWORD PTR $T52392[ebp], ecx
  0039e	83 bd 64 f9 ff
	ff 00		 cmp	 DWORD PTR $T52392[ebp], 0
  003a5	74 1a		 je	 SHORT $L52394
  003a7	6a 01		 push	 1
  003a9	8b 95 64 f9 ff
	ff		 mov	 edx, DWORD PTR $T52392[ebp]
  003af	8b 02		 mov	 eax, DWORD PTR [edx]
  003b1	8b 8d 64 f9 ff
	ff		 mov	 ecx, DWORD PTR $T52392[ebp]
  003b7	ff 10		 call	 DWORD PTR [eax]
  003b9	89 85 58 f9 ff
	ff		 mov	 DWORD PTR -1704+[ebp], eax
  003bf	eb 0a		 jmp	 SHORT $L52395
$L52394:
  003c1	c7 85 58 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR -1704+[ebp], 0
$L52395:
  003cb	c7 85 8c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _pBank$[ebp], 0
$L51736:
$L51735:

; 1394 :     }
; 1395 : 
; 1396 :     return hr;

  003d5	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]

; 1397 : }

  003db	8b e5		 mov	 esp, ebp
  003dd	5d		 pop	 ebp
  003de	c3		 ret	 0
?AddBank@CGuiWaveBankProject@@UAEJXZ ENDP		; CGuiWaveBankProject::AddBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?RemoveBank@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT
_nBankIndex$ = 8
_this$ = -8
_pBank$ = -4
?RemoveBank@CGuiWaveBankProject@@UAEXI@Z PROC NEAR	; CGuiWaveBankProject::RemoveBank, COMDAT
; _this$ = ecx

; 1423 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1424 :     CGuiWaveBank *          pBank;
; 1425 : 
; 1426 :     //
; 1427 :     // Get the bank pointer
; 1428 :     //
; 1429 : 
; 1430 :     pBank = CGuiWaveBank::GetBank(m_hwndBankList, nBankIndex);

  00009	8b 45 08	 mov	 eax, DWORD PTR _nBankIndex$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00013	52		 push	 edx
  00014	e8 00 00 00 00	 call	 ?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBank::GetBank
  00019	89 45 fc	 mov	 DWORD PTR _pBank$[ebp], eax

; 1431 :     
; 1432 :     //
; 1433 :     // Remove the item from the list view
; 1434 :     //
; 1435 : 
; 1436 :     ListView_DeleteItem(m_hwndBankList, nBankIndex);

  0001c	6a 00		 push	 0
  0001e	8b 45 08	 mov	 eax, DWORD PTR _nBankIndex$[ebp]
  00021	50		 push	 eax
  00022	68 08 10 00 00	 push	 4104			; 00001008H
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0002d	52		 push	 edx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 1437 : 
; 1438 :     // 
; 1439 :     // Reset the current bank selection and remove it from the project
; 1440 :     //
; 1441 : 
; 1442 :     if(pBank)

  00034	83 7d fc 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  00038	74 24		 je	 SHORT $L51747

; 1443 :     {
; 1444 :         if(pBank == m_pActiveBank)

  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00040	3b 48 24	 cmp	 ecx, DWORD PTR [eax+36]
  00043	75 0d		 jne	 SHORT $L51748

; 1445 :         {
; 1446 :             SelectBank(-1);

  00045	6a ff		 push	 -1
  00047	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	8b 02		 mov	 eax, DWORD PTR [edx]
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	ff 50 48	 call	 DWORD PTR [eax+72]
$L51748:

; 1447 :         }
; 1448 : 
; 1449 :         CWaveBankProject::RemoveBank(pBank);

  00052	8b 4d fc	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00055	51		 push	 ecx
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveBank@CWaveBankProject@@UAEXPAVCWaveBank@@@Z ; CWaveBankProject::RemoveBank
$L51747:

; 1450 :     }
; 1451 : }

  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?RemoveBank@CGuiWaveBankProject@@UAEXI@Z ENDP		; CGuiWaveBankProject::RemoveBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?RemoveEntry@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT
_nEntryIndex$ = 8
_this$ = -8
_pEntry$ = -4
?RemoveEntry@CGuiWaveBankProject@@UAEXI@Z PROC NEAR	; CGuiWaveBankProject::RemoveEntry, COMDAT
; _this$ = ecx

; 1477 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1478 :     CGuiWaveBankEntry *     pEntry;
; 1479 : 
; 1480 :     //
; 1481 :     // Get the entry pointer
; 1482 :     //
; 1483 : 
; 1484 :     pEntry = CGuiWaveBankEntry::GetEntry(m_hwndEntryList, nEntryIndex);

  00009	8b 45 08	 mov	 eax, DWORD PTR _nEntryIndex$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00013	52		 push	 edx
  00014	e8 00 00 00 00	 call	 ?GetEntry@CGuiWaveBankEntry@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBankEntry::GetEntry
  00019	89 45 fc	 mov	 DWORD PTR _pEntry$[ebp], eax

; 1485 :     
; 1486 :     //
; 1487 :     // Remove the item from the list view
; 1488 :     //
; 1489 : 
; 1490 :     ListView_DeleteItem(m_hwndEntryList, nEntryIndex);

  0001c	6a 00		 push	 0
  0001e	8b 45 08	 mov	 eax, DWORD PTR _nEntryIndex$[ebp]
  00021	50		 push	 eax
  00022	68 08 10 00 00	 push	 4104			; 00001008H
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0002d	52		 push	 edx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 1491 : 
; 1492 :     //
; 1493 :     // Remove the entry from the project and update the UI
; 1494 :     //
; 1495 : 
; 1496 :     if(pEntry && m_pActiveBank)

  00034	83 7d fc 00	 cmp	 DWORD PTR _pEntry$[ebp], 0
  00038	74 33		 je	 SHORT $L51757
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00041	74 2a		 je	 SHORT $L51757

; 1497 :     {
; 1498 :         m_pActiveBank->RemoveEntry(pEntry);

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  00046	51		 push	 ecx
  00047	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 49 24	 mov	 ecx, DWORD PTR [ecx+36]
  00053	8b 10		 mov	 edx, DWORD PTR [eax]
  00055	ff 52 14	 call	 DWORD PTR [edx+20]

; 1499 :         m_pActiveBank->UpdateListView();

  00058	6a ff		 push	 -1
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00060	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00063	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	8b c8		 mov	 ecx, eax
  0006a	ff 52 40	 call	 DWORD PTR [edx+64]
$L51757:

; 1500 :     }
; 1501 : }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?RemoveEntry@CGuiWaveBankProject@@UAEXI@Z ENDP		; CGuiWaveBankProject::RemoveEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?SelectBank@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT
_nItem$ = 8
_this$ = -12
_pBank$ = -4
_i$ = -8
?SelectBank@CGuiWaveBankProject@@UAEXI@Z PROC NEAR	; CGuiWaveBankProject::SelectBank, COMDAT
; _this$ = ecx

; 1527 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1528 :     CGuiWaveBank *          pBank   = CGuiWaveBank::GetBank(m_hwndBankList, nItem);

  00009	8b 45 08	 mov	 eax, DWORD PTR _nItem$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00013	52		 push	 edx
  00014	e8 00 00 00 00	 call	 ?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBank::GetBank
  00019	89 45 fc	 mov	 DWORD PTR _pBank$[ebp], eax

; 1529 :     UINT                    i;
; 1530 :     
; 1531 :     if(pBank != m_pActiveBank)

  0001c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00022	3b 48 24	 cmp	 ecx, DWORD PTR [eax+36]
  00025	74 7c		 je	 SHORT $L51764

; 1532 :     {
; 1533 :         //
; 1534 :         // Clear the entry list
; 1535 :         //
; 1536 :         
; 1537 :         ClearEntryList();

  00027	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	8b 02		 mov	 eax, DWORD PTR [edx]
  0002c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	ff 50 4c	 call	 DWORD PTR [eax+76]

; 1538 : 
; 1539 :         //
; 1540 :         // Select the bank in the bank list
; 1541 :         //
; 1542 : 
; 1543 :         if(m_pActiveBank = pBank)

  00032	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 55 fc	 mov	 edx, DWORD PTR _pBank$[ebp]
  00038	89 51 24	 mov	 DWORD PTR [ecx+36], edx
  0003b	83 7d fc 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  0003f	74 21		 je	 SHORT $L51765

; 1544 :         {
; 1545 :             ListView_SelectItem(m_hwndBankList, nItem, TRUE, TRUE);

  00041	6a 01		 push	 1
  00043	6a 01		 push	 1
  00045	8b 45 08	 mov	 eax, DWORD PTR _nItem$[ebp]
  00048	50		 push	 eax
  00049	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0004f	52		 push	 edx
  00050	e8 00 00 00 00	 call	 _ListView_SelectItem@16

; 1546 :             SetFocus(m_hwndBankList);

  00055	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0005b	51		 push	 ecx
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4
$L51765:

; 1547 :         }
; 1548 : 
; 1549 :         //
; 1550 :         // Refill the entry list
; 1551 : 
; 1552 :         FillEntryList();

  00062	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00065	8b 02		 mov	 eax, DWORD PTR [edx]
  00067	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	ff 50 50	 call	 DWORD PTR [eax+80]

; 1553 : 
; 1554 :         //
; 1555 :         // Resize the entry list columns
; 1556 :         //
; 1557 : 
; 1558 :         ListView_AutoSizeColumns(m_hwndEntryList);

  0006d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 _ListView_AutoSizeColumns@4

; 1559 : 
; 1560 :         //
; 1561 :         // Reset the entry-list sort data
; 1562 :         //
; 1563 : 
; 1564 :         for(i = 0; i < NUMELMS(CGuiWaveBankEntry::m_aColumnData); i++)

  00079	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00080	eb 09		 jmp	 SHORT $L51766
$L51767:
  00082	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$L51766:
  0008b	83 7d f8 08	 cmp	 DWORD PTR _i$[ebp], 8
  0008f	73 12		 jae	 SHORT $L51768

; 1565 :         {
; 1566 :             CGuiWaveBankEntry::m_aColumnData[i].fAscending = LVCOLUMN_ORDER_DEFAULT;

  00091	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00094	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00097	c7 81 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?m_aColumnData@CGuiWaveBankEntry@@2PAULVCOLUMNDATA@@A[ecx+8], 1

; 1567 :         }

  000a1	eb df		 jmp	 SHORT $L51767
$L51768:
$L51764:

; 1568 :     }
; 1569 : }

  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
?SelectBank@CGuiWaveBankProject@@UAEXI@Z ENDP		; CGuiWaveBankProject::SelectBank
_TEXT	ENDS
EXTRN	__imp__ImageList_Remove@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?ClearEntryList@CGuiWaveBankProject@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?ClearEntryList@CGuiWaveBankProject@@UAEXXZ PROC NEAR	; CGuiWaveBankProject::ClearEntryList, COMDAT
; _this$ = ecx

; 1595 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1596 :     ListView_DeleteAllItems(m_hwndEntryList);

  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 09 10 00 00	 push	 4105			; 00001009H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 1597 : 
; 1598 :     ImageList_RemoveAll(m_himlEntryList);

  0001d	6a ff		 push	 -1
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00025	50		 push	 eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Remove@8

; 1599 : }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?ClearEntryList@CGuiWaveBankProject@@UAEXXZ ENDP	; CGuiWaveBankProject::ClearEntryList
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?FillEntryList@CGuiWaveBankProject@@UAEXXZ
_TEXT	SEGMENT
_this$ = -12
_pleEntry$ = -8
_pEntry$ = -4
?FillEntryList@CGuiWaveBankProject@@UAEXXZ PROC NEAR	; CGuiWaveBankProject::FillEntryList, COMDAT
; _this$ = ecx

; 1625 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1626 :     PLIST_ENTRY             pleEntry;
; 1627 :     CGuiWaveBankEntry *    pEntry;
; 1628 :     
; 1629 :     if(m_pActiveBank)

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00010	74 50		 je	 SHORT $L51780

; 1630 :     {
; 1631 :         if(m_pActiveBank->m_dwEntryCount)

  00012	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00018	83 ba 40 02 00
	00 00		 cmp	 DWORD PTR [edx+576], 0
  0001f	74 41		 je	 SHORT $L51781

; 1632 :         {
; 1633 :             for(pleEntry = m_pActiveBank->m_lstEntries.Flink; pleEntry != &m_pActiveBank->m_lstEntries; pleEntry = pleEntry->Flink)

  00021	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00027	8b 91 38 02 00
	00		 mov	 edx, DWORD PTR [ecx+568]
  0002d	89 55 f8	 mov	 DWORD PTR _pleEntry$[ebp], edx
  00030	eb 08		 jmp	 SHORT $L51782
$L51783:
  00032	8b 45 f8	 mov	 eax, DWORD PTR _pleEntry$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d f8	 mov	 DWORD PTR _pleEntry$[ebp], ecx
$L51782:
  0003a	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00040	05 38 02 00 00	 add	 eax, 568		; 00000238H
  00045	39 45 f8	 cmp	 DWORD PTR _pleEntry$[ebp], eax
  00048	74 18		 je	 SHORT $L51784

; 1634 :             {
; 1635 :                 pEntry = CONTAINING_RECORD(pleEntry, CGuiWaveBankEntry, m_leEntry);

  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _pleEntry$[ebp]
  0004d	83 e9 08	 sub	 ecx, 8
  00050	89 4d fc	 mov	 DWORD PTR _pEntry$[ebp], ecx

; 1636 : 
; 1637 :                 pEntry->UpdateListView();

  00053	6a ff		 push	 -1
  00055	8b 55 fc	 mov	 edx, DWORD PTR _pEntry$[ebp]
  00058	8b 02		 mov	 eax, DWORD PTR [edx]
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _pEntry$[ebp]
  0005d	ff 50 30	 call	 DWORD PTR [eax+48]

; 1638 :             }

  00060	eb d0		 jmp	 SHORT $L51783
$L51784:
$L51781:
$L51780:

; 1639 :         }
; 1640 :     }
; 1641 : }

  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?FillEntryList@CGuiWaveBankProject@@UAEXXZ ENDP		; CGuiWaveBankProject::FillEntryList
_TEXT	ENDS
PUBLIC	??_C@_03FMPL@xwp?$AA@				; `string'
EXTRN	__imp__SetCursor@4:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
;	COMDAT ??_C@_03FMPL@xwp?$AA@
CONST	SEGMENT
??_C@_03FMPL@xwp?$AA@ DB 'xwp', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Open@CGuiWaveBankProject@@UAEJPBD@Z
_TEXT	SEGMENT
_pszProjectFile$ = 8
_this$ = -96
_hr$ = -92
_ofn$ = -88
?Open@CGuiWaveBankProject@@UAEJPBD@Z PROC NEAR		; CGuiWaveBankProject::Open, COMDAT
; _this$ = ecx

; 1667 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	89 4d a0	 mov	 DWORD PTR _this$[ebp], ecx

; 1668 :     static const LPCSTR     pszFilter   = MAKE_COMMDLG_FILTER("Project", "*." WBWRITER_FILEEXTENSION_PROJECT) MAKE_COMMDLG_FILTER("All", "*.*");
; 1669 :     static const LPCSTR     pszTitle    = "Open Project File";
; 1670 :     static const DWORD      dwOfnFlags  = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_FILEMUSTEXIST | OFN_PATHMUSTEXIST | OFN_ALLOWMULTISELECT;
; 1671 :     HRESULT                 hr          = S_OK;

  00009	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 1672 :     OPENFILENAME            ofn;
; 1673 : 
; 1674 :     //
; 1675 :     // Open the file
; 1676 :     //
; 1677 : 
; 1678 :     if(pszProjectFile)

  00010	83 7d 08 00	 cmp	 DWORD PTR _pszProjectFile$[ebp], 0
  00014	74 15		 je	 SHORT $L51804

; 1679 :     {
; 1680 :         strcpy(m_szProjectFile, pszProjectFile);

  00016	8b 45 08	 mov	 eax, DWORD PTR _pszProjectFile$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 28	 add	 ecx, 40			; 00000028H
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 _strcpy
  00026	83 c4 08	 add	 esp, 8

; 1681 :     }
; 1682 :     else

  00029	eb 66		 jmp	 SHORT $L51805
$L51804:

; 1683 :     {
; 1684 :         ZeroMemory(&ofn, sizeof(ofn));

  0002b	6a 58		 push	 88			; 00000058H
  0002d	6a 00		 push	 0
  0002f	8d 55 a8	 lea	 edx, DWORD PTR _ofn$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 _memset
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1685 : 
; 1686 :         ofn.lStructSize = sizeof(ofn);

  0003b	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 1687 :         ofn.hwndOwner = m_pParent->m_hwnd;

  00042	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00048	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0004b	89 55 ac	 mov	 DWORD PTR _ofn$[ebp+4], edx

; 1688 :         ofn.lpstrFilter = pszFilter;

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszFilter@?1??Open@CGuiWaveBankProject@@UAEJPBD@Z@4QBDB
  00053	89 45 b4	 mov	 DWORD PTR _ofn$[ebp+12], eax

; 1689 :         ofn.lpstrFile = m_szProjectFile;

  00056	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 28	 add	 ecx, 40			; 00000028H
  0005c	89 4d c4	 mov	 DWORD PTR _ofn$[ebp+28], ecx

; 1690 :         ofn.nMaxFile = NUMELMS(m_szProjectFile);

  0005f	c7 45 c8 04 01
	00 00		 mov	 DWORD PTR _ofn$[ebp+32], 260 ; 00000104H

; 1691 :         ofn.lpstrTitle = pszTitle;

  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszTitle@?1??Open@CGuiWaveBankProject@@UAEJPBD@Z@4QBDB
  0006c	89 55 d8	 mov	 DWORD PTR _ofn$[ebp+48], edx

; 1692 :         ofn.Flags = dwOfnFlags;

  0006f	c7 45 dc 04 1a
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8919556 ; 00881a04H

; 1693 :         ofn.lpstrDefExt = WBWRITER_FILEEXTENSION_PROJECT;

  00076	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+60], OFFSET FLAT:??_C@_03FMPL@xwp?$AA@ ; `string'

; 1694 : 
; 1695 :         if(!GetOpenFileName(&ofn))

  0007d	8d 45 a8	 lea	 eax, DWORD PTR _ofn$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 _GetOpenFileNameA@4
  00086	85 c0		 test	 eax, eax
  00088	75 07		 jne	 SHORT $L51807

; 1696 :         {
; 1697 :             hr = E_ABORT;

  0008a	c7 45 a4 04 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
$L51807:
$L51805:

; 1698 :         }
; 1699 :     }
; 1700 : 
; 1701 :     if(SUCCEEDED(hr))

  00091	83 7d a4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00095	7c 3d		 jl	 SHORT $L51810

; 1702 :     {
; 1703 :         SetCursor(LoadCursor(NULL, IDC_WAIT));

  00097	68 02 7f 00 00	 push	 32514			; 00007f02H
  0009c	6a 00		 push	 0
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  000a4	50		 push	 eax
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 1704 :         
; 1705 :         hr = ReadProjectData(m_szProjectFile);

  000ab	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	83 c1 28	 add	 ecx, 40			; 00000028H
  000b1	51		 push	 ecx
  000b2	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	ff 50 10	 call	 DWORD PTR [eax+16]
  000bd	89 45 a4	 mov	 DWORD PTR _hr$[ebp], eax

; 1706 : 
; 1707 :         SetCursor(LoadCursor(NULL, IDC_ARROW));

  000c0	68 00 7f 00 00	 push	 32512			; 00007f00H
  000c5	6a 00		 push	 0
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  000cd	50		 push	 eax
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$L51810:

; 1708 :     }
; 1709 : 
; 1710 :     //
; 1711 :     // Resize the list-view columns
; 1712 :     //
; 1713 : 
; 1714 :     if(SUCCEEDED(hr))

  000d4	83 7d a4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d8	7c 0c		 jl	 SHORT $L51818

; 1715 :     {
; 1716 :         ListView_AutoSizeColumns(m_hwndBankList);

  000da	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000e0	52		 push	 edx
  000e1	e8 00 00 00 00	 call	 _ListView_AutoSizeColumns@4
$L51818:

; 1717 :     }
; 1718 : 
; 1719 :     //
; 1720 :     // Select the first bank in the list
; 1721 :     //
; 1722 : 
; 1723 :     if(SUCCEEDED(hr))

  000e6	83 7d a4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ea	7c 0d		 jl	 SHORT $L51820

; 1724 :     {
; 1725 :         SelectBank(0);

  000ec	6a 00		 push	 0
  000ee	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	8b 10		 mov	 edx, DWORD PTR [eax]
  000f3	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	ff 52 48	 call	 DWORD PTR [edx+72]
$L51820:

; 1726 :     }
; 1727 : 
; 1728 :     return hr;

  000f9	8b 45 a4	 mov	 eax, DWORD PTR _hr$[ebp]

; 1729 : }

  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 04 00	 ret	 4
?Open@CGuiWaveBankProject@@UAEJPBD@Z ENDP		; CGuiWaveBankProject::Open
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Save@CGuiWaveBankProject@@UAEJH@Z
_TEXT	SEGMENT
_fPrompt$ = 8
_this$ = -96
_hr$ = -92
_ofn$ = -88
?Save@CGuiWaveBankProject@@UAEJH@Z PROC NEAR		; CGuiWaveBankProject::Save, COMDAT
; _this$ = ecx

; 1755 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	89 4d a0	 mov	 DWORD PTR _this$[ebp], ecx

; 1756 :     static const LPCSTR     pszFilter   = MAKE_COMMDLG_FILTER("Project", "*." WBWRITER_FILEEXTENSION_PROJECT) MAKE_COMMDLG_FILTER("All", "*.*");
; 1757 :     static const LPCSTR     pszTitle    = "Save Project File";
; 1758 :     static const DWORD      dwOfnFlags  = OFN_ENABLESIZING | OFN_EXPLORER | OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT | OFN_PATHMUSTEXIST;
; 1759 :     HRESULT                 hr          = S_OK;

  00009	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 1760 :     OPENFILENAME            ofn;
; 1761 : 
; 1762 :     if(!strlen(m_szProjectFile))

  00010	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 28	 add	 eax, 40			; 00000028H
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 _strlen
  0001c	83 c4 04	 add	 esp, 4
  0001f	85 c0		 test	 eax, eax
  00021	75 07		 jne	 SHORT $L51835

; 1763 :     {
; 1764 :         fPrompt = TRUE;

  00023	c7 45 08 01 00
	00 00		 mov	 DWORD PTR _fPrompt$[ebp], 1
$L51835:

; 1765 :     }
; 1766 : 
; 1767 :     if(fPrompt)

  0002a	83 7d 08 00	 cmp	 DWORD PTR _fPrompt$[ebp], 0
  0002e	74 67		 je	 SHORT $L51836

; 1768 :     {
; 1769 :         ZeroMemory(&ofn, sizeof(ofn));

  00030	6a 58		 push	 88			; 00000058H
  00032	6a 00		 push	 0
  00034	8d 4d a8	 lea	 ecx, DWORD PTR _ofn$[ebp]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 _memset
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1770 : 
; 1771 :         ofn.lStructSize = sizeof(ofn);

  00040	c7 45 a8 58 00
	00 00		 mov	 DWORD PTR _ofn$[ebp], 88 ; 00000058H

; 1772 :         ofn.hwndOwner = m_pParent->m_hwnd;

  00047	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0004d	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00050	89 4d ac	 mov	 DWORD PTR _ofn$[ebp+4], ecx

; 1773 :         ofn.lpstrFilter = pszFilter;

  00053	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pszFilter@?1??Save@CGuiWaveBankProject@@UAEJH@Z@4QBDB
  00059	89 55 b4	 mov	 DWORD PTR _ofn$[ebp+12], edx

; 1774 :         ofn.lpstrFile = m_szProjectFile;

  0005c	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	83 c0 28	 add	 eax, 40			; 00000028H
  00062	89 45 c4	 mov	 DWORD PTR _ofn$[ebp+28], eax

; 1775 :         ofn.nMaxFile = NUMELMS(m_szProjectFile);

  00065	c7 45 c8 04 01
	00 00		 mov	 DWORD PTR _ofn$[ebp+32], 260 ; 00000104H

; 1776 :         ofn.lpstrTitle = pszTitle;

  0006c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszTitle@?1??Save@CGuiWaveBankProject@@UAEJH@Z@4QBDB
  00072	89 4d d8	 mov	 DWORD PTR _ofn$[ebp+48], ecx

; 1777 :         ofn.Flags = dwOfnFlags;

  00075	c7 45 dc 06 08
	88 00		 mov	 DWORD PTR _ofn$[ebp+52], 8914950 ; 00880806H

; 1778 :         ofn.lpstrDefExt = WBWRITER_FILEEXTENSION_PROJECT;

  0007c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _ofn$[ebp+60], OFFSET FLAT:??_C@_03FMPL@xwp?$AA@ ; `string'

; 1779 : 
; 1780 :         if(!GetSaveFileName(&ofn))

  00083	8d 55 a8	 lea	 edx, DWORD PTR _ofn$[ebp]
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 _GetSaveFileNameA@4
  0008c	85 c0		 test	 eax, eax
  0008e	75 07		 jne	 SHORT $L51837

; 1781 :         {
; 1782 :             hr = E_ABORT;

  00090	c7 45 a4 04 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
$L51837:
$L51836:

; 1783 :         }
; 1784 :     }
; 1785 : 
; 1786 :     if(SUCCEEDED(hr))

  00097	83 7d a4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0009b	7c 15		 jl	 SHORT $L51840

; 1787 :     {
; 1788 :         hr = WriteProjectData(m_szProjectFile);

  0009d	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  000a0	83 c0 28	 add	 eax, 40			; 00000028H
  000a3	50		 push	 eax
  000a4	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	ff 52 14	 call	 DWORD PTR [edx+20]
  000af	89 45 a4	 mov	 DWORD PTR _hr$[ebp], eax
$L51840:

; 1789 :     }
; 1790 : 
; 1791 :     return hr;

  000b2	8b 45 a4	 mov	 eax, DWORD PTR _hr$[ebp]

; 1792 : }

  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?Save@CGuiWaveBankProject@@UAEJH@Z ENDP			; CGuiWaveBankProject::Save
_TEXT	ENDS
EXTRN	__imp__ImageList_Create@20:NEAR
EXTRN	__imp__ImageList_Destroy@4:NEAR
EXTRN	_g_hInstance:DWORD
EXTRN	__imp__LoadImageA@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?Attach@CGuiWaveBankProject@@UAEXPAUHWND__@@0@Z
_TEXT	SEGMENT
_hwndBankList$ = 8
_hwndEntryList$ = 12
_this$ = -8
_himlOld$ = -4
?Attach@CGuiWaveBankProject@@UAEXPAUHWND__@@0@Z PROC NEAR ; CGuiWaveBankProject::Attach, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 :     HIMAGELIST              himlOld;
; 1822 :     
; 1823 :     m_hwndBankList = hwndBankList;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _hwndBankList$[ebp]
  0000f	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 1824 :     m_hwndEntryList = hwndEntryList;

  00012	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00015	8b 45 0c	 mov	 eax, DWORD PTR _hwndEntryList$[ebp]
  00018	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 1825 : 
; 1826 :     //
; 1827 :     // Create image lists
; 1828 :     //
; 1829 : 
; 1830 :     if(m_himlBankList = ImageList_Create(16, 16, ILC_COLOR8 | ILC_MASK, 1, 0))

  0001b	6a 00		 push	 0
  0001d	6a 01		 push	 1
  0001f	6a 09		 push	 9
  00021	6a 10		 push	 16			; 00000010H
  00023	6a 10		 push	 16			; 00000010H
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Create@20
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00031	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00034	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  00038	74 7b		 je	 SHORT $L51847

; 1831 :     {
; 1832 :         if(m_hBankIcon = (HICON)LoadImage(g_hInstance, MAKEINTRESOURCE(IDI_BANK), IMAGE_ICON, 16, 16, 0))

  0003a	6a 00		 push	 0
  0003c	6a 10		 push	 16			; 00000010H
  0003e	6a 10		 push	 16			; 00000010H
  00040	6a 01		 push	 1
  00042	6a 6e		 push	 110			; 0000006eH
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  00049	50		 push	 eax
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageA@24
  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax
  00059	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	83 ba 2c 01 00
	00 00		 cmp	 DWORD PTR [edx+300], 0
  00063	74 22		 je	 SHORT $L51852

; 1833 :         {
; 1834 :             m_nBankIcon = ImageList_AddIcon(m_himlBankList, m_hBankIcon);

  00065	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 88 2c 01 00
	00		 mov	 ecx, DWORD PTR [eax+300]
  0006e	51		 push	 ecx
  0006f	6a ff		 push	 -1
  00071	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00077	50		 push	 eax
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_ReplaceIcon@12
  0007e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	89 81 30 01 00
	00		 mov	 DWORD PTR [ecx+304], eax
$L51852:

; 1835 :         }
; 1836 : 
; 1837 :         if(himlOld = ListView_SetImageList(m_hwndBankList, m_himlBankList, LVSIL_SMALL))

  00087	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0008d	50		 push	 eax
  0008e	6a 01		 push	 1
  00090	68 03 10 00 00	 push	 4099			; 00001003H
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0009b	52		 push	 edx
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000a2	89 45 fc	 mov	 DWORD PTR _himlOld$[ebp], eax
  000a5	83 7d fc 00	 cmp	 DWORD PTR _himlOld$[ebp], 0
  000a9	74 0a		 je	 SHORT $L51857

; 1838 :         {
; 1839 :             ImageList_Destroy(himlOld);

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _himlOld$[ebp]
  000ae	50		 push	 eax
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Destroy@4
$L51857:
$L51847:

; 1840 :         }
; 1841 :     }
; 1842 : 
; 1843 :     if(m_himlEntryList = ImageList_Create(16, 16, ILC_COLOR8 | ILC_MASK, 1, -1))

  000b5	6a ff		 push	 -1
  000b7	6a 01		 push	 1
  000b9	6a 09		 push	 9
  000bb	6a 10		 push	 16			; 00000010H
  000bd	6a 10		 push	 16			; 00000010H
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Create@20
  000c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  000cb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	83 7a 20 00	 cmp	 DWORD PTR [edx+32], 0
  000d2	74 2e		 je	 SHORT $L51858

; 1844 :     {
; 1845 :         if(himlOld = ListView_SetImageList(m_hwndEntryList, m_himlEntryList, LVSIL_SMALL))

  000d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000da	51		 push	 ecx
  000db	6a 01		 push	 1
  000dd	68 03 10 00 00	 push	 4099			; 00001003H
  000e2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000e8	50		 push	 eax
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000ef	89 45 fc	 mov	 DWORD PTR _himlOld$[ebp], eax
  000f2	83 7d fc 00	 cmp	 DWORD PTR _himlOld$[ebp], 0
  000f6	74 0a		 je	 SHORT $L51863

; 1846 :         {
; 1847 :             ImageList_Destroy(himlOld);

  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _himlOld$[ebp]
  000fb	51		 push	 ecx
  000fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Destroy@4
$L51863:
$L51858:

; 1848 :         }
; 1849 :     }
; 1850 : }

  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 08 00	 ret	 8
?Attach@CGuiWaveBankProject@@UAEXPAUHWND__@@0@Z ENDP	; CGuiWaveBankProject::Attach
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Detach@CGuiWaveBankProject@@UAEXH@Z
_TEXT	SEGMENT
_fClearList$ = 8
_this$ = -4
?Detach@CGuiWaveBankProject@@UAEXH@Z PROC NEAR		; CGuiWaveBankProject::Detach, COMDAT
; _this$ = ecx

; 1876 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1877 :     if(fClearList)

  00007	83 7d 08 00	 cmp	 DWORD PTR _fClearList$[ebp], 0
  0000b	74 2c		 je	 SHORT $L51868

; 1878 :     {
; 1879 :         ListView_DeleteAllItems(m_hwndBankList);

  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	68 09 10 00 00	 push	 4105			; 00001009H
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0001c	51		 push	 ecx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 1880 :         ListView_DeleteAllItems(m_hwndEntryList);

  00023	6a 00		 push	 0
  00025	6a 00		 push	 0
  00027	68 09 10 00 00	 push	 4105			; 00001009H
  0002c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00032	50		 push	 eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L51868:

; 1881 :     }
; 1882 : 
; 1883 :     m_hwndBankList = NULL;

  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 1884 :     m_hwndEntryList = NULL;

  00043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00046	c7 42 1c 00 00
	00 00		 mov	 DWORD PTR [edx+28], 0

; 1885 : }

  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?Detach@CGuiWaveBankProject@@UAEXH@Z ENDP		; CGuiWaveBankProject::Detach
_TEXT	ENDS
PUBLIC	??_C@_0CP@GLPM@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBank?3?3@ ; `string'
PUBLIC	??_C@_05GFJO@pBank?$AA@				; `string'
;	COMDAT ??_C@_0CP@GLPM@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBank?3?3@
CONST	SEGMENT
??_C@_0CP@GLPM@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBank?3?3@ DB 'nColumn < '
	DB	'NUMELMS(CGuiWaveBank::m_aColumnData)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFJO@pBank?$AA@
CONST	SEGMENT
??_C@_05GFJO@pBank?$AA@ DB 'pBank', 00H			; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?SortBankList@CGuiWaveBankProject@@UAEXI@Z
_TEXT	SEGMENT
_nColumn$ = 8
_this$ = -24
_pColumn$ = -20
_pBank$ = -8
_nItemCount$ = -4
_nItem$ = -12
?SortBankList@CGuiWaveBankProject@@UAEXI@Z PROC NEAR	; CGuiWaveBankProject::SortBankList, COMDAT
; _this$ = ecx

; 1911 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1912 :     const LPLVCOLUMNDATA    pColumn     = &CGuiWaveBank::m_aColumnData[nColumn];

  0000a	8b 45 08	 mov	 eax, DWORD PTR _nColumn$[ebp]
  0000d	6b c0 0c	 imul	 eax, 12			; 0000000cH
  00010	05 00 00 00 00	 add	 eax, OFFSET FLAT:?m_aColumnData@CGuiWaveBank@@2PAULVCOLUMNDATA@@A ; CGuiWaveBank::m_aColumnData
  00015	89 45 ec	 mov	 DWORD PTR _pColumn$[ebp], eax

; 1913 :     PLIST_ENTRY             pleBank;
; 1914 :     CGuiWaveBank *          pBank;
; 1915 :     int                     nItemCount;
; 1916 :     int                     nItem;
; 1917 : 
; 1918 :     ASSERT(nColumn < NUMELMS(CGuiWaveBank::m_aColumnData));

  00018	68 7e 07 00 00	 push	 1918			; 0000077eH
  0001d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CP@GLPM@nColumn?5?$DM?5NUMELMS?$CICGuiWaveBank?3?3@ ; `string'
  00027	83 7d 08 05	 cmp	 DWORD PTR _nColumn$[ebp], 5
  0002b	1b c9		 sbb	 ecx, ecx
  0002d	41		 inc	 ecx
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 1919 : 
; 1920 :     //
; 1921 :     // Let the list-view sort the list
; 1922 :     //
; 1923 : 
; 1924 :     ListView_SortItems(m_hwndBankList, nColumn, pColumn->fString, pColumn->fAscending, NULL, NULL);

  00037	6a 00		 push	 0
  00039	6a 00		 push	 0
  0003b	8b 55 ec	 mov	 edx, DWORD PTR _pColumn$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	50		 push	 eax
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _pColumn$[ebp]
  00045	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00048	52		 push	 edx
  00049	8b 45 08	 mov	 eax, DWORD PTR _nColumn$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00053	52		 push	 edx
  00054	e8 00 00 00 00	 call	 _ListView_SortItems@24
$L51882:

; 1925 : 
; 1926 :     //
; 1927 :     // Rebuild the list based on the list-view data
; 1928 :     //
; 1929 : 
; 1930 :     while(&m_lstBanks != RemoveHeadList(&m_lstBanks));

  00059	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]
  0005c	83 c6 04	 add	 esi, 4
  0005f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ; RemoveEntryList
  0006b	3b f0		 cmp	 esi, eax
  0006d	74 02		 je	 SHORT $L51883
  0006f	eb e8		 jmp	 SHORT $L51882
$L51883:

; 1931 : 
; 1932 :     nItemCount = ListView_GetItemCount(m_hwndBankList);

  00071	6a 00		 push	 0
  00073	6a 00		 push	 0
  00075	68 04 10 00 00	 push	 4100			; 00001004H
  0007a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00080	50		 push	 eax
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00087	89 45 fc	 mov	 DWORD PTR _nItemCount$[ebp], eax

; 1933 :     
; 1934 :     for(nItem = 0; nItem < nItemCount; nItem++)

  0008a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nItem$[ebp], 0
  00091	eb 09		 jmp	 SHORT $L51885
$L51886:
  00093	8b 4d f4	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00096	83 c1 01	 add	 ecx, 1
  00099	89 4d f4	 mov	 DWORD PTR _nItem$[ebp], ecx
$L51885:
  0009c	8b 55 f4	 mov	 edx, DWORD PTR _nItem$[ebp]
  0009f	3b 55 fc	 cmp	 edx, DWORD PTR _nItemCount$[ebp]
  000a2	7d 49		 jge	 SHORT $L51887

; 1935 :     {
; 1936 :         pBank = CGuiWaveBank::GetBank(m_hwndBankList, nItem);

  000a4	8b 45 f4	 mov	 eax, DWORD PTR _nItem$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000ae	52		 push	 edx
  000af	e8 00 00 00 00	 call	 ?GetBank@CGuiWaveBank@@SGPAV1@PAUHWND__@@I@Z ; CGuiWaveBank::GetBank
  000b4	89 45 f8	 mov	 DWORD PTR _pBank$[ebp], eax

; 1937 :         ASSERT(pBank);

  000b7	68 91 07 00 00	 push	 1937			; 00000791H
  000bc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@KGDJ@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  000c1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05GFJO@pBank?$AA@ ; `string'
  000c6	33 c0		 xor	 eax, eax
  000c8	83 7d f8 00	 cmp	 DWORD PTR _pBank$[ebp], 0
  000cc	0f 94 c0	 sete	 al
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000d5	83 c4 10	 add	 esp, 16			; 00000010H

; 1938 : 
; 1939 :         InsertTailList(&m_lstBanks, &pBank->m_leBank);

  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _pBank$[ebp]
  000db	83 c1 08	 add	 ecx, 8
  000de	51		 push	 ecx
  000df	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e2	83 c2 04	 add	 edx, 4
  000e5	52		 push	 edx
  000e6	e8 00 00 00 00	 call	 ?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z ; InsertTailList

; 1940 :     }

  000eb	eb a6		 jmp	 SHORT $L51886
$L51887:

; 1941 : 
; 1942 :     //
; 1943 :     // Swap the ascending flag
; 1944 :     //
; 1945 : 
; 1946 :     pColumn->fAscending = !pColumn->fAscending;

  000ed	8b 45 ec	 mov	 eax, DWORD PTR _pColumn$[ebp]
  000f0	33 c9		 xor	 ecx, ecx
  000f2	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000f6	0f 94 c1	 sete	 cl
  000f9	8b 55 ec	 mov	 edx, DWORD PTR _pColumn$[ebp]
  000fc	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1947 : }

  000ff	5e		 pop	 esi
  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c2 04 00	 ret	 4
?SortBankList@CGuiWaveBankProject@@UAEXI@Z ENDP		; CGuiWaveBankProject::SortBankList
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?AddEntry@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT
_this$ = -8
_hr$ = -4
?AddEntry@CGuiWaveBankProject@@UAEJXZ PROC NEAR		; CGuiWaveBankProject::AddEntry, COMDAT
; _this$ = ecx

; 1973 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1974 :     HRESULT                 hr;
; 1975 : 
; 1976 :     if(!m_pActiveBank)

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00010	75 07		 jne	 SHORT $L51894

; 1977 :     {
; 1978 :         return E_FAIL;

  00012	b8 05 40 00 80	 mov	 eax, -2147467259	; 80004005H
  00017	eb 29		 jmp	 SHORT $L51892
$L51894:

; 1979 :     }
; 1980 : 
; 1981 :     //
; 1982 :     // Add the entry
; 1983 :     //
; 1984 : 
; 1985 :     hr = m_pActiveBank->AddEntry();

  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0001f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00025	8b 12		 mov	 edx, DWORD PTR [edx]
  00027	ff 52 34	 call	 DWORD PTR [edx+52]
  0002a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 1986 : 
; 1987 :     //
; 1988 :     // Resize columns
; 1989 :     //
; 1990 : 
; 1991 :     if(SUCCEEDED(hr))

  0002d	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00031	7c 0c		 jl	 SHORT $L51897

; 1992 :     {
; 1993 :         ListView_AutoSizeColumns(m_hwndEntryList);

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 _ListView_AutoSizeColumns@4
$L51897:

; 1994 :     }
; 1995 : 
; 1996 :     return hr;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$L51892:

; 1997 : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?AddEntry@CGuiWaveBankProject@@UAEJXZ ENDP		; CGuiWaveBankProject::AddEntry
_TEXT	ENDS
PUBLIC	?GenerateThreadProc@CGuiWaveBankProject@@CGKPAX@Z ; CGuiWaveBankProject::GenerateThreadProc
EXTRN	__imp__EndDialog@8:NEAR
EXTRN	__imp__CreateThread@24:NEAR
EXTRN	__imp__CloseHandle@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?Generate@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT
_this$ = -20
_hThread$ = -8
_hr$ = -16
_dwThreadId$ = -12
_hwnd$ = -4
?Generate@CGuiWaveBankProject@@UAEJXZ PROC NEAR		; CGuiWaveBankProject::Generate, COMDAT
; _this$ = ecx

; 2024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 2025 :     HANDLE                  hThread     = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hThread$[ebp], 0

; 2026 :     HRESULT                 hr          = S_OK;

  00010	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 2027 :     DWORD                   dwThreadId;
; 2028 :     HWND                    hwnd;
; 2029 :     
; 2030 :     //
; 2031 :     // Create the dialog
; 2032 :     //
; 2033 : 
; 2034 :     if(!(hwnd = m_GenerateDialog.Create(this)))

  00017	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	81 c1 34 01 00
	00		 add	 ecx, 308		; 00000134H
  00024	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  0002d	ff 50 64	 call	 DWORD PTR [eax+100]
  00030	89 45 fc	 mov	 DWORD PTR _hwnd$[ebp], eax
  00033	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  00037	75 07		 jne	 SHORT $L51907

; 2035 :     {
; 2036 :         hr = E_FAIL;

  00039	c7 45 f0 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H
$L51907:

; 2037 :     }
; 2038 : 
; 2039 :     //
; 2040 :     // Spawn the generation thread
; 2041 :     //
; 2042 : 
; 2043 :     hThread = CreateThread(NULL, 0, GenerateThreadProc, (LPVOID)this, 0, &dwThreadId);

  00040	8d 4d f4	 lea	 ecx, DWORD PTR _dwThreadId$[ebp]
  00043	51		 push	 ecx
  00044	6a 00		 push	 0
  00046	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00049	52		 push	 edx
  0004a	68 00 00 00 00	 push	 OFFSET FLAT:?GenerateThreadProc@CGuiWaveBankProject@@CGKPAX@Z ; CGuiWaveBankProject::GenerateThreadProc
  0004f	6a 00		 push	 0
  00051	6a 00		 push	 0
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  00059	89 45 f8	 mov	 DWORD PTR _hThread$[ebp], eax

; 2044 :     
; 2045 :     if(!IS_VALID_HANDLE_VALUE(hThread))

  0005c	83 7d f8 00	 cmp	 DWORD PTR _hThread$[ebp], 0
  00060	74 06		 je	 SHORT $L51912
  00062	83 7d f8 ff	 cmp	 DWORD PTR _hThread$[ebp], -1
  00066	75 07		 jne	 SHORT $L51911
$L51912:

; 2046 :     {
; 2047 :         hr = E_OUTOFMEMORY;

  00068	c7 45 f0 0e 00
	07 80		 mov	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
$L51911:

; 2048 :     }
; 2049 :     
; 2050 :     //
; 2051 :     // Clean up
; 2052 :     //
; 2053 : 
; 2054 :     CLOSE_HANDLE(hThread);

  0006f	83 7d f8 00	 cmp	 DWORD PTR _hThread$[ebp], 0
  00073	74 17		 je	 SHORT $L51915
  00075	83 7d f8 ff	 cmp	 DWORD PTR _hThread$[ebp], -1
  00079	74 11		 je	 SHORT $L51915
  0007b	8b 45 f8	 mov	 eax, DWORD PTR _hThread$[ebp]
  0007e	50		 push	 eax
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00085	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hThread$[ebp], 0
$L51915:

; 2055 : 
; 2056 :     if(FAILED(hr))

  0008c	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00090	7d 0e		 jge	 SHORT $L51917

; 2057 :     {
; 2058 :         EndDialog(hwnd, hr);

  00092	8b 4d f0	 mov	 ecx, DWORD PTR _hr$[ebp]
  00095	51		 push	 ecx
  00096	8b 55 fc	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00099	52		 push	 edx
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
$L51917:

; 2059 :     }
; 2060 : 
; 2061 :     return hr;

  000a0	8b 45 f0	 mov	 eax, DWORD PTR _hr$[ebp]

; 2062 : }

  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
?Generate@CGuiWaveBankProject@@UAEJXZ ENDP		; CGuiWaveBankProject::Generate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?GenerateThreadProc@CGuiWaveBankProject@@CGKPAX@Z
_TEXT	SEGMENT
_pvContext$ = 8
?GenerateThreadProc@CGuiWaveBankProject@@CGKPAX@Z PROC NEAR ; CGuiWaveBankProject::GenerateThreadProc, COMDAT

; 2088 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2089 :     return ((CGuiWaveBankProject *)pvContext)->GenerateThread();

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvContext$[ebp]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  0000b	ff 52 58	 call	 DWORD PTR [edx+88]

; 2090 : }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?GenerateThreadProc@CGuiWaveBankProject@@CGKPAX@Z ENDP	; CGuiWaveBankProject::GenerateThreadProc
_TEXT	ENDS
EXTRN	__imp__WaitForSingleObject@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?GenerateThread@CGuiWaveBankProject@@MAEJXZ
_TEXT	SEGMENT
_this$ = -8
_hr$ = -4
?GenerateThread@CGuiWaveBankProject@@MAEJXZ PROC NEAR	; CGuiWaveBankProject::GenerateThread, COMDAT
; _this$ = ecx

; 2116 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2117 :     HRESULT                 hr;
; 2118 : 
; 2119 :     //
; 2120 :     // BUGBUG: we're not doing any thread synchronization because we're
; 2121 :     // relying on the fact that the parent window is disabled and so won't
; 2122 :     // be doing anything.  This probably isn't a good thing.
; 2123 :     //
; 2124 : 
; 2125 :     //
; 2126 :     // Start generation
; 2127 :     //
; 2128 : 
; 2129 :     hr = CWaveBankProject::Generate(&m_GenerateDialog, TRUE);

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00011	85 c0		 test	 eax, eax
  00013	74 0e		 je	 SHORT $L52438
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 60 01 00
	00		 add	 ecx, 352		; 00000160H
  0001e	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  00021	eb 07		 jmp	 SHORT $L52439
$L52438:
  00023	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L52439:
  0002a	6a 01		 push	 1
  0002c	8b 55 f4	 mov	 edx, DWORD PTR -12+[ebp]
  0002f	52		 push	 edx
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?Generate@CWaveBankProject@@UAEJPAVCWaveBankCallback@@H@Z ; CWaveBankProject::Generate
  00038	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 2130 : 
; 2131 :     //
; 2132 :     // Wait for the dialog to close
; 2133 :     //
; 2134 : 
; 2135 :     if(SUCCEEDED(hr))

  0003b	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003f	7c 12		 jl	 SHORT $L51928

; 2136 :     {
; 2137 :         WaitForSingleObject(m_GenerateDialog.m_hTerminateEvent, INFINITE);

  00041	6a ff		 push	 -1
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 88 70 03 00
	00		 mov	 ecx, DWORD PTR [eax+880]
  0004c	51		 push	 ecx
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
$L51928:

; 2138 :     }
; 2139 : 
; 2140 :     return hr;

  00053	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 2141 : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?GenerateThread@CGuiWaveBankProject@@MAEJXZ ENDP	; CGuiWaveBankProject::GenerateThread
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?Refresh@CGuiWaveBankProject@@UAEJXZ
_TEXT	SEGMENT
_this$ = -16
_hr$ = -8
_pleBank$ = -12
_pBank$ = -4
?Refresh@CGuiWaveBankProject@@UAEJXZ PROC NEAR		; CGuiWaveBankProject::Refresh, COMDAT
; _this$ = ecx

; 2167 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2168 :     HRESULT                 hr          = S_OK;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 2169 :     PLIST_ENTRY             pleBank;
; 2170 :     CGuiWaveBank *          pBank;
; 2171 : 
; 2172 :     //
; 2173 :     // Refresh all banks
; 2174 :     //
; 2175 : 
; 2176 :     for(pleBank = m_lstBanks.Flink; (pleBank != &m_lstBanks) && SUCCEEDED(hr); pleBank = pleBank->Flink)

  00010	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00016	89 4d f4	 mov	 DWORD PTR _pleBank$[ebp], ecx
  00019	eb 08		 jmp	 SHORT $L51938
$L51939:
  0001b	8b 55 f4	 mov	 edx, DWORD PTR _pleBank$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	89 45 f4	 mov	 DWORD PTR _pleBank$[ebp], eax
$L51938:
  00023	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	39 4d f4	 cmp	 DWORD PTR _pleBank$[ebp], ecx
  0002c	74 1f		 je	 SHORT $L51940
  0002e	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00032	7c 19		 jl	 SHORT $L51940

; 2177 :     {
; 2178 :         pBank = CONTAINING_RECORD(pleBank, CGuiWaveBank, m_leBank);

  00034	8b 55 f4	 mov	 edx, DWORD PTR _pleBank$[ebp]
  00037	83 ea 08	 sub	 edx, 8
  0003a	89 55 fc	 mov	 DWORD PTR _pBank$[ebp], edx

; 2179 : 
; 2180 :         hr = pBank->Refresh();

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _pBank$[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _pBank$[ebp]
  00045	ff 52 30	 call	 DWORD PTR [edx+48]
  00048	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2181 :     }

  0004b	eb ce		 jmp	 SHORT $L51939
$L51940:

; 2182 : 
; 2183 :     //
; 2184 :     // Update list-view data
; 2185 :     //
; 2186 : 
; 2187 :     if(m_pActiveBank)

  0004d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00054	74 2b		 je	 SHORT $L51945

; 2188 :     {
; 2189 :         ClearEntryList();

  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	ff 52 4c	 call	 DWORD PTR [edx+76]

; 2190 :         FillEntryList();

  00061	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	ff 52 50	 call	 DWORD PTR [edx+80]

; 2191 :         
; 2192 :         m_pActiveBank->UpdateListView();

  0006c	6a ff		 push	 -1
  0006e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00074	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00077	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	8b c8		 mov	 ecx, eax
  0007e	ff 52 40	 call	 DWORD PTR [edx+64]
$L51945:

; 2193 :     }
; 2194 : 
; 2195 :     return hr;

  00081	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 2196 : }

  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
?Refresh@CGuiWaveBankProject@@UAEJXZ ENDP		; CGuiWaveBankProject::Refresh
_TEXT	ENDS
PUBLIC	??0CWaveBankCallback@@QAE@XZ			; CWaveBankCallback::CWaveBankCallback
PUBLIC	?Create@CGenerateDialog@@UAEPAUHWND__@@PAVCGuiWaveBankProject@@@Z ; CGenerateDialog::Create
PUBLIC	?OnInitDialog@CGenerateDialog@@UAEHPAXPAJ@Z	; CGenerateDialog::OnInitDialog
PUBLIC	?OnCancel@CGenerateDialog@@UAEXXZ		; CGenerateDialog::OnCancel
PUBLIC	?BeginProject@CGenerateDialog@@UAEHII@Z		; CGenerateDialog::BeginProject
PUBLIC	?EndProject@CGenerateDialog@@UAEXJ@Z		; CGenerateDialog::EndProject
PUBLIC	?OpenBank@CGenerateDialog@@UAEHPBD@Z		; CGenerateDialog::OpenBank
PUBLIC	?BeginEntry@CGenerateDialog@@UAEHPBDK@Z		; CGenerateDialog::BeginEntry
PUBLIC	?EndEntry@CGenerateDialog@@UAEXPBDK@Z		; CGenerateDialog::EndEntry
PUBLIC	??_7CGenerateDialog@@6BCModelessDialog@@@	; CGenerateDialog::`vftable'
PUBLIC	??_7CGenerateDialog@@6BCWaveBankCallback@@@	; CGenerateDialog::`vftable'
PUBLIC	??_GCGenerateDialog@@UAEPAXI@Z			; CGenerateDialog::`scalar deleting destructor'
PUBLIC	??_ECGenerateDialog@@UAEPAXI@Z			; CGenerateDialog::`vector deleting destructor'
PUBLIC	?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z ; CWindow::MoveWindow
PUBLIC	?MessageBoxA@CWindow@@UAEHPBDI@Z		; CWindow::MessageBoxA
PUBLIC	?MessageBoxA@CWindow@@UAEHII@Z			; CWindow::MessageBoxA
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
PUBLIC	?OnSize@CWindow@@UAEHKHHPAJ@Z			; CWindow::OnSize
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
PUBLIC	?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z	; CWindow::OnMenuSelect
PUBLIC	?EnableAccelerators@CWindow@@UAEXH@Z		; CWindow::EnableAccelerators
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	?OnClose@CDialog@@UAEHPAJ@Z			; CDialog::OnClose
PUBLIC	?OnOk@CDialog@@UAEXXZ				; CDialog::OnOk
PUBLIC	?CloseBank@CWaveBankCallback@@UAEXPBD@Z		; CWaveBankCallback::CloseBank
PUBLIC	?OpenHeader@CWaveBankCallback@@UAEHPBD@Z	; CWaveBankCallback::OpenHeader
PUBLIC	?CloseHeader@CWaveBankCallback@@UAEXPBD@Z	; CWaveBankCallback::CloseHeader
EXTRN	__imp__CreateEventA@16:NEAR
EXTRN	?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z:NEAR ; CWindow::Create
EXTRN	?SetParent@CWindow@@UAEXPAV1@@Z:NEAR		; CWindow::SetParent
EXTRN	?PumpMessages@CWindow@@UAEXXZ:NEAR		; CWindow::PumpMessages
EXTRN	?OnCreate@CWindow@@UAEHPAXPAJ@Z:NEAR		; CWindow::OnCreate
EXTRN	?OnDebug@CWindow@@UAEHIIPBDPAJ@Z:NEAR		; CWindow::OnDebug
EXTRN	?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z:NEAR	; CDialog::OnCommand
EXTRN	?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z:NEAR ; CDialog::DispatchMessageA
EXTRN	?HandleMessage@CDialog@@MAEHIIJPAJ@Z:NEAR	; CDialog::HandleMessage
EXTRN	??0CModelessDialog@@QAE@XZ:NEAR			; CModelessDialog::CModelessDialog
EXTRN	?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z:NEAR ; CModelessDialog::Create
;	COMDAT ??_7CGenerateDialog@@6BCModelessDialog@@@
CONST	SEGMENT
??_7CGenerateDialog@@6BCModelessDialog@@@ DD FLAT:??_ECGenerateDialog@@UAEPAXI@Z ; CGenerateDialog::`vftable'
	DD	FLAT:?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
	DD	FLAT:?SetParent@CWindow@@UAEXPAV1@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHII@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHPBDI@Z
	DD	FLAT:?PumpMessages@CWindow@@UAEXXZ
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHKHHPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?EnableAccelerators@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?HandleMessage@CDialog@@MAEHIIJPAJ@Z
	DD	FLAT:?OnInitDialog@CGenerateDialog@@UAEHPAXPAJ@Z
	DD	FLAT:?OnOk@CDialog@@UAEXXZ
	DD	FLAT:?OnCancel@CGenerateDialog@@UAEXXZ
	DD	FLAT:?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z
	DD	FLAT:?Create@CGenerateDialog@@UAEPAUHWND__@@PAVCGuiWaveBankProject@@@Z
CONST	ENDS
;	COMDAT ??_7CGenerateDialog@@6BCWaveBankCallback@@@
CONST	SEGMENT
??_7CGenerateDialog@@6BCWaveBankCallback@@@ DD FLAT:?BeginProject@CGenerateDialog@@UAEHII@Z ; CGenerateDialog::`vftable'
	DD	FLAT:?EndProject@CGenerateDialog@@UAEXJ@Z
	DD	FLAT:?OpenBank@CGenerateDialog@@UAEHPBD@Z
	DD	FLAT:?CloseBank@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
	DD	FLAT:?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?BeginEntry@CGenerateDialog@@UAEHPBDK@Z
	DD	FLAT:?EndEntry@CGenerateDialog@@UAEXPBDK@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CGenerateDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CGenerateDialog@@QAE@XZ PROC NEAR			; CGenerateDialog::CGenerateDialog, COMDAT
; _this$ = ecx

; 2221 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CModelessDialog@@QAE@XZ ; CModelessDialog::CModelessDialog
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00015	e8 00 00 00 00	 call	 ??0CWaveBankCallback@@QAE@XZ ; CWaveBankCallback::CWaveBankCallback
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGenerateDialog@@6BCModelessDialog@@@ ; CGenerateDialog::`vftable'
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], OFFSET FLAT:??_7CGenerateDialog@@6BCWaveBankCallback@@@ ; CGenerateDialog::`vftable'

; 2222 :     m_hTerminateEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  0002d	6a 00		 push	 0
  0002f	6a 00		 push	 0
  00031	6a 00		 push	 0
  00033	6a 00		 push	 0
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateEventA@16
  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	89 82 3c 02 00
	00		 mov	 DWORD PTR [edx+572], eax

; 2223 : }

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0CGenerateDialog@@QAE@XZ ENDP				; CGenerateDialog::CGenerateDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\writer.h
_TEXT	ENDS
;	COMDAT ?CloseBank@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4
?CloseBank@CWaveBankCallback@@UAEXPBD@Z PROC NEAR	; CWaveBankCallback::CloseBank, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?CloseBank@CWaveBankCallback@@UAEXPBD@Z ENDP		; CWaveBankCallback::CloseBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4
?OpenHeader@CWaveBankCallback@@UAEHPBD@Z PROC NEAR	; CWaveBankCallback::OpenHeader, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 255  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 256  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?OpenHeader@CWaveBankCallback@@UAEHPBD@Z ENDP		; CWaveBankCallback::OpenHeader
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4
?CloseHeader@CWaveBankCallback@@UAEXPBD@Z PROC NEAR	; CWaveBankCallback::CloseHeader, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 260  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?CloseHeader@CWaveBankCallback@@UAEXPBD@Z ENDP		; CWaveBankCallback::CloseHeader
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  :     return m_hwnd;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]

; 145  : }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 159  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 160  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHKHHPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 165  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHKHHPAJ@Z ENDP			; CWindow::OnSize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 174  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 175  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 179  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 180  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z PROC NEAR ; CWindow::OnMenuSelect, COMDAT
; _this$ = ecx

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 185  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z ENDP	; CWindow::OnMenuSelect
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_rc$ = 8
_this$ = -4
?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 189  :     MoveWindow(m_hwnd, rc);

  00007	8b 45 08	 mov	 eax, DWORD PTR _rc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 10		 mov	 edx, DWORD PTR [eax]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	ff 52 0c	 call	 DWORD PTR [edx+12]

; 190  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z ENDP		; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__MoveWindow@24:NEAR
; Function compile flags: /Odt
;	COMDAT ?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
_TEXT	SEGMENT
_hwnd$ = 8
_rc$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z PROC NEAR ; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 194  :     ::MoveWindow(hwnd, rc.left, rc.top, rc.right - rc.left, rc.bottom - rc.top, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _rc$[ebp]
  0000f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00012	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _rc$[ebp]
  0001c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0001f	2b 11		 sub	 edx, DWORD PTR [ecx]
  00021	52		 push	 edx
  00022	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  00025	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00028	51		 push	 ecx
  00029	8b 55 0c	 mov	 edx, DWORD PTR _rc$[ebp]
  0002c	8b 02		 mov	 eax, DWORD PTR [edx]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00032	51		 push	 ecx
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 195  : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z ENDP	; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__MessageBoxA@16:NEAR
EXTRN	_g_pszAppTitle:DWORD
; Function compile flags: /Odt
;	COMDAT ?MessageBoxA@CWindow@@UAEHPBDI@Z
_TEXT	SEGMENT
_pszText$ = 8
_uType$ = 12
_this$ = -4
?MessageBoxA@CWindow@@UAEHPBDI@Z PROC NEAR		; CWindow::MessageBoxA, COMDAT
; _this$ = ecx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :     return ::MessageBox(m_hwnd, pszText, g_pszAppTitle, uType);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _uType$[ebp]
  0000a	50		 push	 eax
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_pszAppTitle
  00011	51		 push	 ecx
  00012	8b 55 08	 mov	 edx, DWORD PTR _pszText$[ebp]
  00015	52		 push	 edx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001c	51		 push	 ecx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 200  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?MessageBoxA@CWindow@@UAEHPBDI@Z ENDP			; CWindow::MessageBoxA
_TEXT	ENDS
EXTRN	__imp__LoadStringA@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?MessageBoxA@CWindow@@UAEHII@Z
_TEXT	SEGMENT
_nResourceId$ = 8
_uType$ = 12
_this$ = -260
_szText$ = -256
?MessageBoxA@CWindow@@UAEHII@Z PROC NEAR		; CWindow::MessageBoxA, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	89 8d fc fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 204  :     TCHAR                   szText[0x100];
; 205  : 
; 206  :     LoadString(g_hInstance, nResourceId, szText, NUMELMS(szText));

  0000f	68 00 01 00 00	 push	 256			; 00000100H
  00014	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _nResourceId$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_hInstance
  00025	52		 push	 edx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16

; 207  :     
; 208  :     return MessageBox(szText, uType);

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _uType$[ebp]
  0002f	50		 push	 eax
  00030	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00036	51		 push	 ecx
  00037	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 02		 mov	 eax, DWORD PTR [edx]
  0003f	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00045	ff 50 18	 call	 DWORD PTR [eax+24]

; 209  : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?MessageBoxA@CWindow@@UAEHII@Z ENDP			; CWindow::MessageBoxA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EnableAccelerators@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fEnable$ = 8
_this$ = -4
?EnableAccelerators@CWindow@@UAEXH@Z PROC NEAR		; CWindow::EnableAccelerators, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  :     m_fEnableAccel = fEnable;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  0000d	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 214  : }

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?EnableAccelerators@CWindow@@UAEXH@Z ENDP		; CWindow::EnableAccelerators
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CDialog@@UAEHPAJ@Z PROC NEAR			; CDialog::OnClose, COMDAT
; _this$ = ecx

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  :     OnCancel();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 52 5c	 call	 DWORD PTR [edx+92]

; 265  :     return FALSE;

  00012	33 c0		 xor	 eax, eax

; 266  : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?OnClose@CDialog@@UAEHPAJ@Z ENDP			; CDialog::OnClose
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnOk@CDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnOk@CDialog@@UAEXXZ PROC NEAR				; CDialog::OnOk, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 270  :     EndDialog(m_hwnd, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 271  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnOk@CDialog@@UAEXXZ ENDP				; CDialog::OnOk
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??_GCGenerateDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGenerateDialog@@UAEPAXI@Z PROC NEAR		; CGenerateDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGenerateDialog@@UAE@XZ ; CGenerateDialog::~CGenerateDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51953
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51953:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCGenerateDialog@@UAEPAXI@Z ENDP			; CGenerateDialog::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z	; CWaveBankCallback::BeginEntry
PUBLIC	?EndEntry@CWaveBankCallback@@UAEXPBDK@Z		; CWaveBankCallback::EndEntry
PUBLIC	??_7CWaveBankCallback@@6B@			; CWaveBankCallback::`vftable'
PUBLIC	?BeginProject@CWaveBankCallback@@UAEHII@Z	; CWaveBankCallback::BeginProject
PUBLIC	?EndProject@CWaveBankCallback@@UAEXJ@Z		; CWaveBankCallback::EndProject
PUBLIC	?OpenBank@CWaveBankCallback@@UAEHPBD@Z		; CWaveBankCallback::OpenBank
;	COMDAT ??_7CWaveBankCallback@@6B@
CONST	SEGMENT
??_7CWaveBankCallback@@6B@ DD FLAT:?BeginProject@CWaveBankCallback@@UAEHII@Z ; CWaveBankCallback::`vftable'
	DD	FLAT:?EndProject@CWaveBankCallback@@UAEXJ@Z
	DD	FLAT:?OpenBank@CWaveBankCallback@@UAEHPBD@Z
	DD	FLAT:?CloseBank@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?OpenHeader@CWaveBankCallback@@UAEHPBD@Z
	DD	FLAT:?CloseHeader@CWaveBankCallback@@UAEXPBD@Z
	DD	FLAT:?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z
	DD	FLAT:?EndEntry@CWaveBankCallback@@UAEXPBDK@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveBankCallback@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWaveBankCallback@@QAE@XZ PROC NEAR			; CWaveBankCallback::CWaveBankCallback, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveBankCallback@@6B@ ; CWaveBankCallback::`vftable'
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CWaveBankCallback@@QAE@XZ ENDP			; CWaveBankCallback::CWaveBankCallback
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\common\writer.h
_TEXT	ENDS
;	COMDAT ?BeginProject@CWaveBankCallback@@UAEHII@Z
_TEXT	SEGMENT
_this$ = -4
?BeginProject@CWaveBankCallback@@UAEHII@Z PROC NEAR	; CWaveBankCallback::BeginProject, COMDAT
; _this$ = ecx

; 236  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 237  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 238  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?BeginProject@CWaveBankCallback@@UAEHII@Z ENDP		; CWaveBankCallback::BeginProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndProject@CWaveBankCallback@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4
?EndProject@CWaveBankCallback@@UAEXJ@Z PROC NEAR	; CWaveBankCallback::EndProject, COMDAT
; _this$ = ecx

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?EndProject@CWaveBankCallback@@UAEXJ@Z ENDP		; CWaveBankCallback::EndProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenBank@CWaveBankCallback@@UAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4
?OpenBank@CWaveBankCallback@@UAEHPBD@Z PROC NEAR	; CWaveBankCallback::OpenBank, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 247  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?OpenBank@CWaveBankCallback@@UAEHPBD@Z ENDP		; CWaveBankCallback::OpenBank
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z
_TEXT	SEGMENT
_this$ = -4
?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z PROC NEAR	; CWaveBankCallback::BeginEntry, COMDAT
; _this$ = ecx

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 265  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?BeginEntry@CWaveBankCallback@@UAEHPBDK@Z ENDP		; CWaveBankCallback::BeginEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndEntry@CWaveBankCallback@@UAEXPBDK@Z
_TEXT	SEGMENT
_this$ = -4
?EndEntry@CWaveBankCallback@@UAEXPBDK@Z PROC NEAR	; CWaveBankCallback::EndEntry, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 269  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 08 00	 ret	 8
?EndEntry@CWaveBankCallback@@UAEXPBDK@Z ENDP		; CWaveBankCallback::EndEntry
_TEXT	ENDS
EXTRN	??1CModelessDialog@@UAE@XZ:NEAR			; CModelessDialog::~CModelessDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
;	COMDAT ??1CGenerateDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGenerateDialog@@UAE@XZ PROC NEAR			; CGenerateDialog::~CGenerateDialog, COMDAT
; _this$ = ecx

; 2248 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGenerateDialog@@6BCModelessDialog@@@ ; CGenerateDialog::`vftable'
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], OFFSET FLAT:??_7CGenerateDialog@@6BCWaveBankCallback@@@ ; CGenerateDialog::`vftable'

; 2249 :     CLOSE_HANDLE(m_hTerminateEvent);

  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	83 ba 3c 02 00
	00 00		 cmp	 DWORD PTR [edx+572], 0
  00024	74 29		 je	 SHORT $L51961
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 b8 3c 02 00
	00 ff		 cmp	 DWORD PTR [eax+572], -1
  00030	74 1d		 je	 SHORT $L51961
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 91 3c 02 00
	00		 mov	 edx, DWORD PTR [ecx+572]
  0003b	52		 push	 edx
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 80 3c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+572], 0
$L51961:

; 2250 : }

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??1CModelessDialog@@UAE@XZ ; CModelessDialog::~CModelessDialog
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
??1CGenerateDialog@@UAE@XZ ENDP				; CGenerateDialog::~CGenerateDialog
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?Create@CGenerateDialog@@UAEPAUHWND__@@PAVCGuiWaveBankProject@@@Z
_TEXT	SEGMENT
_pProject$ = 8
_this$ = -8
_hwnd$ = -4
?Create@CGenerateDialog@@UAEPAUHWND__@@PAVCGuiWaveBankProject@@@Z PROC NEAR ; CGenerateDialog::Create, COMDAT
; _this$ = ecx

; 2277 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2278 :     HWND                    hwnd;
; 2279 :     
; 2280 :     m_fContinue = TRUE;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 80 30 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+560], 1

; 2281 :     m_fAllowClose = FALSE;

  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	c7 81 34 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+564], 0

; 2282 :     m_nEntryIndex = 0;

  00023	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00026	c7 82 38 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+568], 0

; 2283 : 
; 2284 :     //
; 2285 :     // Create the dialog
; 2286 :     //
; 2287 :     
; 2288 :     if(!(hwnd = CModelessDialog::Create(IDD, NULL, pProject->m_pParent)))

  00030	8b 45 08	 mov	 eax, DWORD PTR _pProject$[ebp]
  00033	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00036	51		 push	 ecx
  00037	6a 00		 push	 0
  00039	6a 6c		 push	 108			; 0000006cH
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z ; CModelessDialog::Create
  00043	89 45 fc	 mov	 DWORD PTR _hwnd$[ebp], eax
  00046	83 7d fc 00	 cmp	 DWORD PTR _hwnd$[ebp], 0
  0004a	75 04		 jne	 SHORT $L51967

; 2289 :     {
; 2290 :         return NULL;

  0004c	33 c0		 xor	 eax, eax
  0004e	eb 1e		 jmp	 SHORT $L51965
$L51967:

; 2291 :     }
; 2292 : 
; 2293 :     //
; 2294 :     // Disable the parent window
; 2295 :     //
; 2296 : 
; 2297 :     if(m_pParent)

  00050	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00053	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00057	74 12		 je	 SHORT $L51968

; 2298 :     {
; 2299 :         EnableWindow(m_pParent->m_hwnd, FALSE);

  00059	6a 00		 push	 0
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00061	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00064	52		 push	 edx
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
$L51968:

; 2300 :     }
; 2301 : 
; 2302 :     return hwnd;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _hwnd$[ebp]
$L51965:

; 2303 : }

  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 04 00	 ret	 4
?Create@CGenerateDialog@@UAEPAUHWND__@@PAVCGuiWaveBankProject@@@Z ENDP ; CGenerateDialog::Create
_TEXT	ENDS
PUBLIC	?OnInitDialog@CDialog@@UAEHPAXPAJ@Z		; CDialog::OnInitDialog
EXTRN	__imp__SetDlgItemTextA@12:NEAR
EXTRN	__imp__GetDlgItemTextA@16:NEAR
EXTRN	__imp__SetWindowTextA@8:NEAR
EXTRN	__imp__GetWindowTextA@12:NEAR
EXTRN	_CenterWindow@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnInitDialog@CGenerateDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_pvContext$ = 8
_plResult$ = 12
_this$ = -520
_szTemplate$ = -512
_szText$ = -256
_fHandled$ = -516
?OnInitDialog@CGenerateDialog@@UAEHPAXPAJ@Z PROC NEAR	; CGenerateDialog::OnInitDialog, COMDAT
; _this$ = ecx

; 2331 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 02 00
	00		 sub	 esp, 524		; 0000020cH
  00009	89 8d f8 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2332 :     CHAR                    szTemplate[0x100];
; 2333 :     CHAR                    szText[0x100];
; 2334 :     BOOL                    fHandled;
; 2335 :     
; 2336 :     fHandled = CModelessDialog::OnInitDialog(pvContext, plResult);

  0000f	8b 45 0c	 mov	 eax, DWORD PTR _plResult$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00016	51		 push	 ecx
  00017	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z ; CDialog::OnInitDialog
  00022	89 85 fc fd ff
	ff		 mov	 DWORD PTR _fHandled$[ebp], eax

; 2337 :     
; 2338 :     //
; 2339 :     // Save the text format and clear the controls
; 2340 :     //
; 2341 : 
; 2342 :     GetDlgItemText(m_hwnd, IDC_BANK, m_szBankText, NUMELMS(m_szBankText));

  00028	68 00 01 00 00	 push	 256			; 00000100H
  0002d	8b 95 f8 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00033	83 c2 30	 add	 edx, 48			; 00000030H
  00036	52		 push	 edx
  00037	68 f8 03 00 00	 push	 1016			; 000003f8H
  0003c	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00045	51		 push	 ecx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 2343 :     SetDlgItemText(m_hwnd, IDC_BANK, NULL);

  0004c	6a 00		 push	 0
  0004e	68 f8 03 00 00	 push	 1016			; 000003f8H
  00053	8b 95 f8 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00059	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0005c	50		 push	 eax
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2344 : 
; 2345 :     GetDlgItemText(m_hwnd, IDC_ENTRY, m_szEntryText, NUMELMS(m_szEntryText));

  00063	68 00 01 00 00	 push	 256			; 00000100H
  00068	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00074	51		 push	 ecx
  00075	68 f6 03 00 00	 push	 1014			; 000003f6H
  0007a	8b 95 f8 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00080	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00083	50		 push	 eax
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItemTextA@16

; 2346 :     SetDlgItemText(m_hwnd, IDC_ENTRY, NULL);

  0008a	6a 00		 push	 0
  0008c	68 f6 03 00 00	 push	 1014			; 000003f6H
  00091	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00097	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0009a	52		 push	 edx
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2347 : 
; 2348 :     //
; 2349 :     // Set the dialog title
; 2350 :     //
; 2351 : 
; 2352 :     GetWindowText(m_hwnd, szTemplate, NUMELMS(szTemplate));

  000a1	68 00 01 00 00	 push	 256			; 00000100H
  000a6	8d 85 00 fe ff
	ff		 lea	 eax, DWORD PTR _szTemplate$[ebp]
  000ac	50		 push	 eax
  000ad	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000b6	52		 push	 edx
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowTextA@12

; 2353 :     sprintf(szText, szTemplate, g_pszAppTitle);

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_pszAppTitle
  000c2	50		 push	 eax
  000c3	8d 8d 00 fe ff
	ff		 lea	 ecx, DWORD PTR _szTemplate$[ebp]
  000c9	51		 push	 ecx
  000ca	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  000d0	52		 push	 edx
  000d1	e8 00 00 00 00	 call	 _sprintf
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2354 :     SetWindowText(m_hwnd, szText);

  000d9	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  000df	50		 push	 eax
  000e0	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000e9	52		 push	 edx
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 2355 : 
; 2356 :     //
; 2357 :     // Center the window
; 2358 :     //
; 2359 : 
; 2360 :     CenterWindow(m_hwnd, m_pParent ? m_pParent->m_hwnd : NULL);

  000f0	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000f6	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000fa	74 14		 je	 SHORT $L52524
  000fc	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00105	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00108	89 85 f4 fd ff
	ff		 mov	 DWORD PTR -524+[ebp], eax
  0010e	eb 0a		 jmp	 SHORT $L52525
$L52524:
  00110	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -524+[ebp], 0
$L52525:
  0011a	8b 8d f4 fd ff
	ff		 mov	 ecx, DWORD PTR -524+[ebp]
  00120	51		 push	 ecx
  00121	8b 95 f8 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00127	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 _CenterWindow@8

; 2361 : 
; 2362 :     return fHandled;

  00130	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR _fHandled$[ebp]

; 2363 : }

  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c2 08 00	 ret	 8
?OnInitDialog@CGenerateDialog@@UAEHPAXPAJ@Z ENDP	; CGenerateDialog::OnInitDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnInitDialog@CDialog@@UAEHPAXPAJ@Z PROC NEAR		; CDialog::OnInitDialog, COMDAT
; _this$ = ecx

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 259  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 260  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?OnInitDialog@CDialog@@UAEHPAXPAJ@Z ENDP		; CDialog::OnInitDialog
_TEXT	ENDS
EXTRN	__imp__ShowWindow@8:NEAR
EXTRN	__imp__GetDlgItem@8:NEAR
EXTRN	__imp__SetEvent@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\sbgui.cpp
;	COMDAT ?OnCancel@CGenerateDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCancel@CGenerateDialog@@UAEXXZ PROC NEAR		; CGenerateDialog::OnCancel, COMDAT
; _this$ = ecx

; 2389 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2390 :     static const LPCSTR     pszCancelling   = "Cancelling...";
; 2391 : 
; 2392 :     //
; 2393 :     // Toggle the continue member to FALSE
; 2394 :     //
; 2395 :     
; 2396 :     m_fContinue = FALSE;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 80 30 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+560], 0

; 2397 : 
; 2398 :     //
; 2399 :     // If we're allowed to close, do it now.  If not, let the user know that
; 2400 :     // we're working on it.
; 2401 :     //
; 2402 : 
; 2403 :     if(m_fAllowClose)

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	83 b9 34 02 00
	00 00		 cmp	 DWORD PTR [ecx+564], 0
  0001e	74 33		 je	 SHORT $L51984

; 2404 :     {
; 2405 :         SetEvent(m_hTerminateEvent);

  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 82 3c 02 00
	00		 mov	 eax, DWORD PTR [edx+572]
  00029	50		 push	 eax
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetEvent@4

; 2406 :         EnableWindow(m_pParent->m_hwnd, TRUE);

  00030	6a 01		 push	 1
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00038	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0003b	50		 push	 eax
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8

; 2407 :         EndDialog(m_hwnd, 0);

  00042	6a 00		 push	 0
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0004a	52		 push	 edx
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 2408 :     }
; 2409 :     else

  00051	eb 66		 jmp	 SHORT $L51985
$L51984:

; 2410 :     {
; 2411 :         SetDlgItemText(m_hwnd, IDC_BANK, pszCancelling);

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszCancelling@?1??OnCancel@CGenerateDialog@@UAEXXZ@4QBDB
  00058	50		 push	 eax
  00059	68 f8 03 00 00	 push	 1016			; 000003f8H
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00064	52		 push	 edx
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2412 : 
; 2413 :         ShowWindow(GetDlgItem(m_hwnd, IDC_ENTRY), SW_HIDE);

  0006b	6a 00		 push	 0
  0006d	68 f6 03 00 00	 push	 1014			; 000003f6H
  00072	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00078	51		 push	 ecx
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  0007f	50		 push	 eax
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 2414 :         ShowWindow(GetDlgItem(m_hwnd, IDC_PROGRESS), SW_HIDE);

  00086	6a 00		 push	 0
  00088	68 f7 03 00 00	 push	 1015			; 000003f7H
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00090	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00093	50		 push	 eax
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  0009a	50		 push	 eax
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 2415 : 
; 2416 :         EnableWindow(GetDlgItem(m_hwnd, IDCANCEL), FALSE);

  000a1	6a 00		 push	 0
  000a3	6a 02		 push	 2
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  000ab	52		 push	 edx
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  000b2	50		 push	 eax
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
$L51985:

; 2417 :     }
; 2418 : }

  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
?OnCancel@CGenerateDialog@@UAEXXZ ENDP			; CGenerateDialog::OnCancel
_TEXT	ENDS
EXTRN	__imp__SendDlgItemMessageA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?BeginProject@CGenerateDialog@@UAEHII@Z
_TEXT	SEGMENT
_nEntryCount$ = 12
_this$ = -4
?BeginProject@CGenerateDialog@@UAEHII@Z PROC NEAR	; CGenerateDialog::BeginProject, COMDAT
; _this$ = ecx

; 2446 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2447 :     SendDlgItemMessage(m_hwnd, IDC_PROGRESS, PBM_SETRANGE32, 0, nEntryCount);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _nEntryCount$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 06 04 00 00	 push	 1030			; 00000406H
  00012	68 f7 03 00 00	 push	 1015			; 000003f7H
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 51 f0	 mov	 edx, DWORD PTR [ecx-16]
  0001d	52		 push	 edx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 2448 : 
; 2449 :     return m_fContinue;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 80 04 02 00
	00		 mov	 eax, DWORD PTR [eax+516]

; 2450 : }

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?BeginProject@CGenerateDialog@@UAEHII@Z ENDP		; CGenerateDialog::BeginProject
_TEXT	ENDS
EXTRN	__imp__MessageBeep@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?EndProject@CGenerateDialog@@UAEXJ@Z
_TEXT	SEGMENT
_hr$ = 8
_this$ = -4
?EndProject@CGenerateDialog@@UAEXJ@Z PROC NEAR		; CGenerateDialog::EndProject, COMDAT
; _this$ = ecx

; 2476 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2477 :     static const LPCSTR     pszSuccess  = "All entries were successfully written";
; 2478 :     static const LPCSTR     pszAbort    = "The operation was cancelled";
; 2479 :     static const LPCSTR     pszError    = "Errors occurred during processing";
; 2480 :     static const LPCSTR     pszClose    = "Close";
; 2481 :     
; 2482 :     if(SUCCEEDED(hr))

  00007	83 7d 08 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0000b	7c 1a		 jl	 SHORT $L52008

; 2483 :     {
; 2484 :         SetDlgItemText(m_hwnd, IDC_BANK, pszSuccess);

  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszSuccess@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB
  00012	50		 push	 eax
  00013	68 f8 03 00 00	 push	 1016			; 000003f8H
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 51 f0	 mov	 edx, DWORD PTR [ecx-16]
  0001e	52		 push	 edx
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2485 :     }
; 2486 :     else if(E_ABORT == hr)

  00025	eb 3b		 jmp	 SHORT $L52009
$L52008:
  00027	81 7d 08 04 40
	00 80		 cmp	 DWORD PTR _hr$[ebp], -2147467260 ; 80004004H
  0002e	75 1a		 jne	 SHORT $L52011

; 2487 :     {
; 2488 :         SetDlgItemText(m_hwnd, IDC_BANK, pszAbort);

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszAbort@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB
  00035	50		 push	 eax
  00036	68 f8 03 00 00	 push	 1016			; 000003f8H
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 f0	 mov	 edx, DWORD PTR [ecx-16]
  00041	52		 push	 edx
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2489 :     }        
; 2490 :     else

  00048	eb 18		 jmp	 SHORT $L52012
$L52011:

; 2491 :     {
; 2492 :         SetDlgItemText(m_hwnd, IDC_BANK, pszError);

  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pszError@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB
  0004f	50		 push	 eax
  00050	68 f8 03 00 00	 push	 1016			; 000003f8H
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 51 f0	 mov	 edx, DWORD PTR [ecx-16]
  0005b	52		 push	 edx
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12
$L52012:
$L52009:

; 2493 :     }
; 2494 : 
; 2495 :     ShowWindow(GetDlgItem(m_hwnd, IDC_ENTRY), SW_HIDE);

  00062	6a 00		 push	 0
  00064	68 f6 03 00 00	 push	 1014			; 000003f6H
  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  0006f	51		 push	 ecx
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  00076	50		 push	 eax
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 2496 :     ShowWindow(GetDlgItem(m_hwnd, IDC_PROGRESS), SW_HIDE);

  0007d	6a 00		 push	 0
  0007f	68 f7 03 00 00	 push	 1015			; 000003f7H
  00084	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00087	8b 42 f0	 mov	 eax, DWORD PTR [edx-16]
  0008a	50		 push	 eax
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  00091	50		 push	 eax
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 2497 : 
; 2498 :     SetDlgItemText(m_hwnd, IDCANCEL, pszClose);

  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pszClose@?1??EndProject@CGenerateDialog@@UAEXJ@Z@4QBDB
  0009e	51		 push	 ecx
  0009f	6a 02		 push	 2
  000a1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	8b 42 f0	 mov	 eax, DWORD PTR [edx-16]
  000a7	50		 push	 eax
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2499 :     EnableWindow(GetDlgItem(m_hwnd, IDCANCEL), TRUE);

  000ae	6a 01		 push	 1
  000b0	6a 02		 push	 2
  000b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	8b 51 f0	 mov	 edx, DWORD PTR [ecx-16]
  000b8	52		 push	 edx
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  000bf	50		 push	 eax
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8

; 2500 : 
; 2501 :     MessageBeep(-1);

  000c6	6a ff		 push	 -1
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 2502 : 
; 2503 :     m_fAllowClose = TRUE;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	c7 80 08 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+520], 1

; 2504 : }

  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?EndProject@CGenerateDialog@@UAEXJ@Z ENDP		; CGenerateDialog::EndProject
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OpenBank@CGenerateDialog@@UAEHPBD@Z
_TEXT	SEGMENT
_pszFile$ = 8
_this$ = -788
_szText$ = -520
_szFile$ = -784
?OpenBank@CGenerateDialog@@UAEHPBD@Z PROC NEAR		; CGenerateDialog::OpenBank, COMDAT
; _this$ = ecx

; 2530 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	89 8d ec fc ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2531 :     CHAR                    szText[MAX_PATH + 0x100];
; 2532 :     CHAR                    szFile[MAX_PATH];
; 2533 : 
; 2534 :     _splitpath(pszFile, NULL, NULL, szFile, NULL);

  0000f	6a 00		 push	 0
  00011	8d 85 f0 fc ff
	ff		 lea	 eax, DWORD PTR _szFile$[ebp]
  00017	50		 push	 eax
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 __splitpath
  00025	83 c4 14	 add	 esp, 20			; 00000014H

; 2535 :     sprintf(szText, m_szBankText, szFile);

  00028	8d 95 f0 fc ff
	ff		 lea	 edx, DWORD PTR _szFile$[ebp]
  0002e	52		 push	 edx
  0002f	8b 85 ec fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00035	83 c0 04	 add	 eax, 4
  00038	50		 push	 eax
  00039	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 _sprintf
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2536 : 
; 2537 :     SetDlgItemText(m_hwnd, IDC_BANK, szText);

  00048	8d 95 f8 fd ff
	ff		 lea	 edx, DWORD PTR _szText$[ebp]
  0004e	52		 push	 edx
  0004f	68 f8 03 00 00	 push	 1016			; 000003f8H
  00054	8b 85 ec fc ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  0005d	51		 push	 ecx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2538 : 
; 2539 :     return m_fContinue;

  00064	8b 95 ec fc ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 82 04 02 00
	00		 mov	 eax, DWORD PTR [edx+516]

; 2540 : }

  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
?OpenBank@CGenerateDialog@@UAEHPBD@Z ENDP		; CGenerateDialog::OpenBank
_TEXT	ENDS
_BSS	SEGMENT
?szText@?1??BeginEntry@CGenerateDialog@@UAEHPBDK@Z@4PADA DB 0204H DUP (?) ; `CGenerateDialog::BeginEntry'::`2'::szText
; Function compile flags: /Odt
_BSS	ENDS
;	COMDAT ?BeginEntry@CGenerateDialog@@UAEHPBDK@Z
_TEXT	SEGMENT
_pszFile$ = 8
_this$ = -268
_szFile$ = -264
?BeginEntry@CGenerateDialog@@UAEHPBDK@Z PROC NEAR	; CGenerateDialog::BeginEntry, COMDAT
; _this$ = ecx

; 2568 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 2569 :     static CHAR             szText[MAX_PATH + 0x100];
; 2570 :     CHAR                    szFile[MAX_PATH];
; 2571 : 
; 2572 :     _splitpath(pszFile, NULL, NULL, szFile, NULL);

  0000f	6a 00		 push	 0
  00011	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szFile$[ebp]
  00017	50		 push	 eax
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 __splitpath
  00025	83 c4 14	 add	 esp, 20			; 00000014H

; 2573 :     sprintf(szText, m_szEntryText, szFile);

  00028	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szFile$[ebp]
  0002e	52		 push	 edx
  0002f	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00035	05 04 01 00 00	 add	 eax, 260		; 00000104H
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET FLAT:?szText@?1??BeginEntry@CGenerateDialog@@UAEHPBDK@Z@4PADA
  00040	e8 00 00 00 00	 call	 _sprintf
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2574 : 
; 2575 :     SetDlgItemText(m_hwnd, IDC_ENTRY, szText);

  00048	68 00 00 00 00	 push	 OFFSET FLAT:?szText@?1??BeginEntry@CGenerateDialog@@UAEHPBDK@Z@4PADA
  0004d	68 f6 03 00 00	 push	 1014			; 000003f6H
  00052	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 51 f0	 mov	 edx, DWORD PTR [ecx-16]
  0005b	52		 push	 edx
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetDlgItemTextA@12

; 2576 : 
; 2577 :     return m_fContinue;

  00062	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 80 04 02 00
	00		 mov	 eax, DWORD PTR [eax+516]

; 2578 : }

  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
?BeginEntry@CGenerateDialog@@UAEHPBDK@Z ENDP		; CGenerateDialog::BeginEntry
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EndEntry@CGenerateDialog@@UAEXPBDK@Z
_TEXT	SEGMENT
_this$ = -4
?EndEntry@CGenerateDialog@@UAEXPBDK@Z PROC NEAR		; CGenerateDialog::EndEntry, COMDAT
; _this$ = ecx

; 2606 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2607 :     SendDlgItemMessage(m_hwnd, IDC_PROGRESS, PBM_SETPOS, ++m_nEntryIndex, 0);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 88 0c 02 00
	00		 mov	 ecx, DWORD PTR [eax+524]
  00012	83 c1 01	 add	 ecx, 1
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	89 8a 0c 02 00
	00		 mov	 DWORD PTR [edx+524], ecx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 88 0c 02 00
	00		 mov	 ecx, DWORD PTR [eax+524]
  00027	51		 push	 ecx
  00028	68 02 04 00 00	 push	 1026			; 00000402H
  0002d	68 f7 03 00 00	 push	 1015			; 000003f7H
  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	8b 42 f0	 mov	 eax, DWORD PTR [edx-16]
  00038	50		 push	 eax
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20

; 2608 : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?EndEntry@CGenerateDialog@@UAEXPBDK@Z ENDP		; CGenerateDialog::EndEntry
_TEXT	ENDS
END
