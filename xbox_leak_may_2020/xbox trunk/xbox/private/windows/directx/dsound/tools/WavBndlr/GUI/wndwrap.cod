; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DPKL@?$CIunknown?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06NPGC@?$CInone?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MKNO@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GKFF@?$CBm_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GLPL@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BGIF@m_dwRefCount?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KMJF@ADPCM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HMEK@8?9bit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCDF@CWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@ELIP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDJN@CWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@BPPI@?$CFlu?4?$CFlu?4?$CFlu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLCC@CGuiWaveBankEntry?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EC@COGP@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCEK@CGuiWaveBank?$CIthis?$CJ?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EG@HOLF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07GECF@pCreate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@CJMF@CenterWindow?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@BPDC@Bogus?5this?5pointer?5from?5message?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@IFLG@CWindow?3?3OnDebug?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSourceAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestinationAlignment@CXboxAdpcmFilter@@SGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CXboxAdpcmFilter@@SGKKKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefaultMessageHandler@CWindow@@KGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@@UAEHPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MessageBoxA@CWindow@@UAEHII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableAccelerators@CWindow@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefaultMessageHandler@CDialog@@KGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnOk@CDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCancel@CDialog@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _FormatStringResource
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _CenterWindow@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWindow@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWindow@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WindowProc@CWindow@@KGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HandleMessage@CWindow@@MAEHIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetParent@CWindow@@UAEXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PumpMessages@CWindow@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HandleMessage@CDialog@@MAEHIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CModalDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCModalDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CModalDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CModelessDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCModelessDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CModelessDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CModalDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWindow@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CModelessDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

CONST	SEGMENT
?dwMajor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01H	; `GetWaveBundlerVersion'::`2'::dwMajor
?dwMinor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 00H	; `GetWaveBundlerVersion'::`2'::dwMinor
?dwBuild@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB DD 01130H ; `GetWaveBundlerVersion'::`2'::dwBuild
CONST	ENDS
PUBLIC	_FormatStringResource
EXTRN	_vsprintf:NEAR
EXTRN	__imp__LoadStringA@16:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp
;	COMDAT _FormatStringResource
_TEXT	SEGMENT
_pszText$ = 8
_hInstance$ = 12
_nResourceId$ = 16
_szFormat$ = -264
_va$ = -4
_FormatStringResource PROC NEAR				; COMDAT

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H

; 53   :     TCHAR                   szFormat[0x100];
; 54   :     va_list                 va;
; 55   : 
; 56   :     if(!LoadString(hInstance, nResourceId, szFormat, NUMELMS(szFormat)))

  00009	68 00 01 00 00	 push	 256			; 00000100H
  0000e	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szFormat$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nResourceId$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR _hInstance$[ebp]
  0001c	52		 push	 edx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16
  00023	85 c0		 test	 eax, eax
  00025	75 04		 jne	 SHORT $L51326

; 57   :     {
; 58   :         return FALSE;

  00027	33 c0		 xor	 eax, eax
  00029	eb 29		 jmp	 SHORT $L51323
$L51326:

; 59   :     }
; 60   : 
; 61   :     va_start(va, nResourceId);

  0002b	8d 45 14	 lea	 eax, DWORD PTR _nResourceId$[ebp+4]
  0002e	89 45 fc	 mov	 DWORD PTR _va$[ebp], eax

; 62   :     vsprintf(pszText, szFormat, va);

  00031	8b 4d fc	 mov	 ecx, DWORD PTR _va$[ebp]
  00034	51		 push	 ecx
  00035	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _szFormat$[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _pszText$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 _vsprintf
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   :     va_end(va);

  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _va$[ebp], 0

; 64   : 
; 65   :     return TRUE;

  0004f	b8 01 00 00 00	 mov	 eax, 1
$L51323:

; 66   : }

  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
_FormatStringResource ENDP
_TEXT	ENDS
PUBLIC	_CenterWindow@8
EXTRN	__imp__MoveWindow@24:NEAR
EXTRN	__imp__GetWindowRect@8:NEAR
EXTRN	__imp__MonitorFromWindow@8:NEAR
EXTRN	__imp__GetMonitorInfoA@8:NEAR
; Function compile flags: /Odt
;	COMDAT _CenterWindow@8
_TEXT	SEGMENT
_hwnd$ = 8
_hwndParent$ = 12
_rc$ = -32
_rcParent$ = -16
_hmon$ = -76
_mi$ = -72
_CenterWindow@8 PROC NEAR				; COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH

; 95   :     RECT                    rc;
; 96   :     RECT                    rcParent;
; 97   :     HMONITOR                hmon;
; 98   :     MONITORINFO             mi;
; 99   :     
; 100  :     mi.cbSize = sizeof(mi);

  00006	c7 45 b8 28 00
	00 00		 mov	 DWORD PTR _mi$[ebp], 40	; 00000028H

; 101  :     
; 102  :     GetWindowRect(hwnd, &rc);

  0000d	8d 45 e0	 lea	 eax, DWORD PTR _rc$[ebp]
  00010	50		 push	 eax
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00014	51		 push	 ecx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 103  :     
; 104  :     if(hwndParent)

  0001b	83 7d 0c 00	 cmp	 DWORD PTR _hwndParent$[ebp], 0
  0001f	74 10		 je	 SHORT $L51339

; 105  :     {
; 106  :         GetWindowRect(hwndParent, &rcParent);

  00021	8d 55 f0	 lea	 edx, DWORD PTR _rcParent$[ebp]
  00024	52		 push	 edx
  00025	8b 45 0c	 mov	 eax, DWORD PTR _hwndParent$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8

; 107  :     }
; 108  :     else

  0002f	eb 35		 jmp	 SHORT $L51340
$L51339:

; 109  :     {
; 110  :         hmon = MonitorFromWindow(hwnd, MONITOR_DEFAULTTOPRIMARY);

  00031	6a 01		 push	 1
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00036	51		 push	 ecx
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MonitorFromWindow@8
  0003d	89 45 b4	 mov	 DWORD PTR _hmon$[ebp], eax

; 111  : 
; 112  :         GetMonitorInfo(hmon, &mi);

  00040	8d 55 b8	 lea	 edx, DWORD PTR _mi$[ebp]
  00043	52		 push	 edx
  00044	8b 45 b4	 mov	 eax, DWORD PTR _hmon$[ebp]
  00047	50		 push	 eax
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMonitorInfoA@8

; 113  : 
; 114  :         rcParent = mi.rcWork;

  0004e	8b 4d cc	 mov	 ecx, DWORD PTR _mi$[ebp+20]
  00051	89 4d f0	 mov	 DWORD PTR _rcParent$[ebp], ecx
  00054	8b 55 d0	 mov	 edx, DWORD PTR _mi$[ebp+24]
  00057	89 55 f4	 mov	 DWORD PTR _rcParent$[ebp+4], edx
  0005a	8b 45 d4	 mov	 eax, DWORD PTR _mi$[ebp+28]
  0005d	89 45 f8	 mov	 DWORD PTR _rcParent$[ebp+8], eax
  00060	8b 4d d8	 mov	 ecx, DWORD PTR _mi$[ebp+32]
  00063	89 4d fc	 mov	 DWORD PTR _rcParent$[ebp+12], ecx
$L51340:

; 115  :     }
; 116  : 
; 117  :     rc.right -= rc.left;

  00066	8b 55 e8	 mov	 edx, DWORD PTR _rc$[ebp+8]
  00069	2b 55 e0	 sub	 edx, DWORD PTR _rc$[ebp]
  0006c	89 55 e8	 mov	 DWORD PTR _rc$[ebp+8], edx

; 118  :     rc.bottom -= rc.top;

  0006f	8b 45 ec	 mov	 eax, DWORD PTR _rc$[ebp+12]
  00072	2b 45 e4	 sub	 eax, DWORD PTR _rc$[ebp+4]
  00075	89 45 ec	 mov	 DWORD PTR _rc$[ebp+12], eax

; 119  :     
; 120  :     rc.left = rcParent.left + (((rcParent.right - rcParent.left) - rc.right) / 2);

  00078	8b 45 f8	 mov	 eax, DWORD PTR _rcParent$[ebp+8]
  0007b	2b 45 f0	 sub	 eax, DWORD PTR _rcParent$[ebp]
  0007e	2b 45 e8	 sub	 eax, DWORD PTR _rc$[ebp+8]
  00081	99		 cdq
  00082	2b c2		 sub	 eax, edx
  00084	d1 f8		 sar	 eax, 1
  00086	8b 4d f0	 mov	 ecx, DWORD PTR _rcParent$[ebp]
  00089	03 c8		 add	 ecx, eax
  0008b	89 4d e0	 mov	 DWORD PTR _rc$[ebp], ecx

; 121  :     rc.top = rcParent.top + (((rcParent.bottom - rcParent.top) - rc.bottom) / 2);

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _rcParent$[ebp+12]
  00091	2b 45 f4	 sub	 eax, DWORD PTR _rcParent$[ebp+4]
  00094	2b 45 ec	 sub	 eax, DWORD PTR _rc$[ebp+12]
  00097	99		 cdq
  00098	2b c2		 sub	 eax, edx
  0009a	d1 f8		 sar	 eax, 1
  0009c	8b 55 f4	 mov	 edx, DWORD PTR _rcParent$[ebp+4]
  0009f	03 d0		 add	 edx, eax
  000a1	89 55 e4	 mov	 DWORD PTR _rc$[ebp+4], edx

; 122  : 
; 123  :     MoveWindow(hwnd, rc.left, rc.top, rc.right, rc.bottom, TRUE);

  000a4	6a 01		 push	 1
  000a6	8b 45 ec	 mov	 eax, DWORD PTR _rc$[ebp+12]
  000a9	50		 push	 eax
  000aa	8b 4d e8	 mov	 ecx, DWORD PTR _rc$[ebp+8]
  000ad	51		 push	 ecx
  000ae	8b 55 e4	 mov	 edx, DWORD PTR _rc$[ebp+4]
  000b1	52		 push	 edx
  000b2	8b 45 e0	 mov	 eax, DWORD PTR _rc$[ebp]
  000b5	50		 push	 eax
  000b6	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  000b9	51		 push	 ecx
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 124  : }

  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
_CenterWindow@8 ENDP
_TEXT	ENDS
PUBLIC	??0CWindow@@QAE@XZ				; CWindow::CWindow
PUBLIC	?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z	; CWindow::Create
PUBLIC	?SetParent@CWindow@@UAEXPAV1@@Z			; CWindow::SetParent
PUBLIC	?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z		; CWindow::MoveWindow
PUBLIC	?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z ; CWindow::MoveWindow
PUBLIC	?MessageBoxA@CWindow@@UAEHPBDI@Z		; CWindow::MessageBoxA
PUBLIC	?MessageBoxA@CWindow@@UAEHII@Z			; CWindow::MessageBoxA
PUBLIC	?PumpMessages@CWindow@@UAEXXZ			; CWindow::PumpMessages
PUBLIC	?OnCreate@CWindow@@UAEHPAXPAJ@Z			; CWindow::OnCreate
PUBLIC	?OnClose@CWindow@@UAEHPAJ@Z			; CWindow::OnClose
PUBLIC	?OnDestroy@CWindow@@UAEHPAJ@Z			; CWindow::OnDestroy
PUBLIC	?OnSize@CWindow@@UAEHKHHPAJ@Z			; CWindow::OnSize
PUBLIC	?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z	; CWindow::OnCommand
PUBLIC	?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z	; CWindow::OnNotify
PUBLIC	?OnDebug@CWindow@@UAEHIIPBDPAJ@Z		; CWindow::OnDebug
PUBLIC	?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z	; CWindow::OnContextMenu
PUBLIC	?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z	; CWindow::OnMenuSelect
PUBLIC	?EnableAccelerators@CWindow@@UAEXH@Z		; CWindow::EnableAccelerators
PUBLIC	??BCWindow@@UAEPAUHWND__@@XZ			; CWindow::operator HWND__ *
PUBLIC	?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z	; CWindow::DispatchMessageA
PUBLIC	?HandleMessage@CWindow@@MAEHIIJPAJ@Z		; CWindow::HandleMessage
PUBLIC	??_7CWindow@@6B@				; CWindow::`vftable'
PUBLIC	??_GCWindow@@UAEPAXI@Z				; CWindow::`scalar deleting destructor'
PUBLIC	??_ECWindow@@UAEPAXI@Z				; CWindow::`vector deleting destructor'
;	COMDAT ??_7CWindow@@6B@
CONST	SEGMENT
??_7CWindow@@6B@ DD FLAT:??_ECWindow@@UAEPAXI@Z		; CWindow::`vftable'
	DD	FLAT:?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
	DD	FLAT:?SetParent@CWindow@@UAEXPAV1@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHII@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHPBDI@Z
	DD	FLAT:?PumpMessages@CWindow@@UAEXXZ
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHKHHPAJ@Z
	DD	FLAT:?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?EnableAccelerators@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?HandleMessage@CWindow@@MAEHIIJPAJ@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CWindow@@QAE@XZ PROC NEAR				; CWindow::CWindow, COMDAT
; _this$ = ecx

; 147  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 40 04 77 6e
	64 77		 mov	 DWORD PTR [eax+4], 2003070583 ; 77646e77H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CWindow@@6B@ ; CWindow::`vftable'

; 148  :     m_hwnd = NULL;

  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 1c 00 00
	00 00		 mov	 DWORD PTR [edx+28], 0

; 149  :     m_hmenu = NULL;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 150  :     m_haccel = NULL;

  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 151  :     m_fEnableAccel = TRUE;

  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	c7 42 28 01 00
	00 00		 mov	 DWORD PTR [edx+40], 1

; 152  :     
; 153  :     InitializeListHead(&m_lstChildren);

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 c0 0c	 add	 eax, 12			; 0000000cH
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00057	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 154  :     InitializeListHead(&m_leChild);

  0005a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	83 c2 14	 add	 edx, 20			; 00000014H
  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	89 50 14	 mov	 DWORD PTR [eax+20], edx
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0006f	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 155  : }

  00072	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
??0CWindow@@QAE@XZ ENDP					; CWindow::CWindow
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ??BCWindow@@UAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCWindow@@UAEPAUHWND__@@XZ PROC NEAR			; CWindow::operator HWND__ *, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  :     return m_hwnd;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]

; 145  : }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BCWindow@@UAEPAUHWND__@@XZ ENDP			; CWindow::operator HWND__ *
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnClose@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnClose, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 154  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 155  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnClose@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnClose
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDestroy@CWindow@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CWindow@@UAEHPAJ@Z PROC NEAR			; CWindow::OnDestroy, COMDAT
; _this$ = ecx

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 159  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 160  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?OnDestroy@CWindow@@UAEHPAJ@Z ENDP			; CWindow::OnDestroy
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnSize@CWindow@@UAEHKHHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSize@CWindow@@UAEHKHHPAJ@Z PROC NEAR			; CWindow::OnSize, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 165  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnSize@CWindow@@UAEHKHHPAJ@Z ENDP			; CWindow::OnSize
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CWindow::OnCommand, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 169  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 170  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CWindow::OnCommand
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z PROC NEAR	; CWindow::OnNotify, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 174  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 175  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 08 00	 ret	 8
?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z ENDP		; CWindow::OnNotify
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z PROC NEAR ; CWindow::OnContextMenu, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 179  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 180  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z ENDP	; CWindow::OnContextMenu
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z PROC NEAR ; CWindow::OnMenuSelect, COMDAT
; _this$ = ecx

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 184  :     return FALSE;

  00007	33 c0		 xor	 eax, eax

; 185  : }

  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c2 10 00	 ret	 16			; 00000010H
?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z ENDP	; CWindow::OnMenuSelect
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_rc$ = 8
_this$ = -4
?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z PROC NEAR	; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 189  :     MoveWindow(m_hwnd, rc);

  00007	8b 45 08	 mov	 eax, DWORD PTR _rc$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 10		 mov	 edx, DWORD PTR [eax]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	ff 52 0c	 call	 DWORD PTR [edx+12]

; 190  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z ENDP		; CWindow::MoveWindow
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
_TEXT	SEGMENT
_hwnd$ = 8
_rc$ = 12
_this$ = -4
?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z PROC NEAR ; CWindow::MoveWindow, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 194  :     ::MoveWindow(hwnd, rc.left, rc.top, rc.right - rc.left, rc.bottom - rc.top, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _rc$[ebp]
  0000f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00012	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _rc$[ebp]
  0001c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0001f	2b 11		 sub	 edx, DWORD PTR [ecx]
  00021	52		 push	 edx
  00022	8b 45 0c	 mov	 eax, DWORD PTR _rc$[ebp]
  00025	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00028	51		 push	 ecx
  00029	8b 55 0c	 mov	 edx, DWORD PTR _rc$[ebp]
  0002c	8b 02		 mov	 eax, DWORD PTR [edx]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00032	51		 push	 ecx
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MoveWindow@24

; 195  : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z ENDP	; CWindow::MoveWindow
_TEXT	ENDS
EXTRN	__imp__MessageBoxA@16:NEAR
EXTRN	_g_pszAppTitle:DWORD
; Function compile flags: /Odt
;	COMDAT ?MessageBoxA@CWindow@@UAEHPBDI@Z
_TEXT	SEGMENT
_pszText$ = 8
_uType$ = 12
_this$ = -4
?MessageBoxA@CWindow@@UAEHPBDI@Z PROC NEAR		; CWindow::MessageBoxA, COMDAT
; _this$ = ecx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  :     return ::MessageBox(m_hwnd, pszText, g_pszAppTitle, uType);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _uType$[ebp]
  0000a	50		 push	 eax
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_pszAppTitle
  00011	51		 push	 ecx
  00012	8b 55 08	 mov	 edx, DWORD PTR _pszText$[ebp]
  00015	52		 push	 edx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001c	51		 push	 ecx
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 200  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?MessageBoxA@CWindow@@UAEHPBDI@Z ENDP			; CWindow::MessageBoxA
_TEXT	ENDS
EXTRN	_g_hInstance:DWORD
; Function compile flags: /Odt
;	COMDAT ?MessageBoxA@CWindow@@UAEHII@Z
_TEXT	SEGMENT
_nResourceId$ = 8
_uType$ = 12
_this$ = -260
_szText$ = -256
?MessageBoxA@CWindow@@UAEHII@Z PROC NEAR		; CWindow::MessageBoxA, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	89 8d fc fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 204  :     TCHAR                   szText[0x100];
; 205  : 
; 206  :     LoadString(g_hInstance, nResourceId, szText, NUMELMS(szText));

  0000f	68 00 01 00 00	 push	 256			; 00000100H
  00014	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szText$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _nResourceId$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_hInstance
  00025	52		 push	 edx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadStringA@16

; 207  :     
; 208  :     return MessageBox(szText, uType);

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _uType$[ebp]
  0002f	50		 push	 eax
  00030	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szText$[ebp]
  00036	51		 push	 ecx
  00037	8b 95 fc fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 02		 mov	 eax, DWORD PTR [edx]
  0003f	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00045	ff 50 18	 call	 DWORD PTR [eax+24]

; 209  : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?MessageBoxA@CWindow@@UAEHII@Z ENDP			; CWindow::MessageBoxA
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?EnableAccelerators@CWindow@@UAEXH@Z
_TEXT	SEGMENT
_fEnable$ = 8
_this$ = -4
?EnableAccelerators@CWindow@@UAEXH@Z PROC NEAR		; CWindow::EnableAccelerators, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  :     m_fEnableAccel = fEnable;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _fEnable$[ebp]
  0000d	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 214  : }

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?EnableAccelerators@CWindow@@UAEXH@Z ENDP		; CWindow::EnableAccelerators
_TEXT	ENDS
PUBLIC	??1CWindow@@UAE@XZ				; CWindow::~CWindow
; Function compile flags: /Odt
;	COMDAT ??_GCWindow@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWindow@@UAEPAXI@Z PROC NEAR			; CWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51348
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51348:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWindow@@UAEPAXI@Z ENDP				; CWindow::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingPoolFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingPoolFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingPoolFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
EXTRN	__imp__DestroyWindow@4:NEAR
EXTRN	__imp__DestroyAcceleratorTable@4:NEAR
EXTRN	__imp__DestroyMenu@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp
;	COMDAT ??1CWindow@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWindow@@UAE@XZ PROC NEAR				; CWindow::~CWindow, COMDAT
; _this$ = ecx

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWindow@@6B@ ; CWindow::`vftable'

; 178  :     if(m_hwnd)

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  00017	74 17		 je	 SHORT $L51353

; 179  :     {
; 180  :         DestroyWindow(m_hwnd);

  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0001f	50		 push	 eax
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4

; 181  :         m_hwnd = NULL;

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
$L51353:

; 182  :     }
; 183  : 
; 184  :     if(m_hmenu)

  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	83 7a 20 00	 cmp	 DWORD PTR [edx+32], 0
  00037	74 17		 je	 SHORT $L51354

; 185  :     {
; 186  :         DestroyMenu(m_hmenu);

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0003f	51		 push	 ecx
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyMenu@4

; 187  :         m_hmenu = NULL;

  00046	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00049	c7 42 20 00 00
	00 00		 mov	 DWORD PTR [edx+32], 0
$L51354:

; 188  :     }
; 189  : 
; 190  :     if(m_haccel)

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00057	74 17		 je	 SHORT $L51355

; 191  :     {
; 192  :         DestroyAcceleratorTable(m_haccel);

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0005f	52		 push	 edx
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyAcceleratorTable@4

; 193  :         m_haccel = NULL;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0
$L51355:

; 194  :     }
; 195  : 
; 196  :     SetParent(NULL);

  00070	6a 00		 push	 0
  00072	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?SetParent@CWindow@@UAEXPAV1@@Z ; CWindow::SetParent

; 197  : }

  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
??1CWindow@@UAE@XZ ENDP					; CWindow::~CWindow
_TEXT	ENDS
PUBLIC	??_C@_0EG@HOLF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_07GECF@pCreate?$AA@			; `string'
PUBLIC	?WindowProc@CWindow@@KGJPAUHWND__@@IIJ@Z	; CWindow::WindowProc
EXTRN	__imp__RegisterClassExA@4:NEAR
EXTRN	__imp__CreateWindowExA@48:NEAR
EXTRN	_memset:NEAR
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
EXTRN	__imp__LoadAcceleratorsA@8:NEAR
EXTRN	__imp__LoadMenuA@8:NEAR
;	COMDAT ??_C@_0EG@HOLF@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0EG@HOLF@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GECF@pCreate?$AA@
CONST	SEGMENT
??_C@_07GECF@pCreate?$AA@ DB 'pCreate', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
_TEXT	SEGMENT
_pCreate$ = 8
_pvContext$ = 12
_pParent$ = 16
_this$ = -64
_fSuccess$ = -60
_wc$ = -56
_ctx$ = -8
?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z PROC NEAR	; CWindow::Create, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx

; 226  :     BOOL                    fSuccess    = TRUE;

  00009	c7 45 c4 01 00
	00 00		 mov	 DWORD PTR _fSuccess$[ebp], 1

; 227  :     WNDCLASSEX              wc;
; 228  :     WINDOWCREATECTX         ctx;
; 229  : 
; 230  :     ASSERT(pCreate);

  00010	68 e6 00 00 00	 push	 230			; 000000e6H
  00015	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@HOLF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07GECF@pCreate?$AA@ ; `string'
  0001f	33 c0		 xor	 eax, eax
  00021	83 7d 08 00	 cmp	 DWORD PTR _pCreate$[ebp], 0
  00025	0f 94 c0	 sete	 al
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0002e	83 c4 10	 add	 esp, 16			; 00000010H

; 231  :     
; 232  :     ZeroMemory(&wc, sizeof(wc));

  00031	6a 30		 push	 48			; 00000030H
  00033	6a 00		 push	 0
  00035	8d 4d c8	 lea	 ecx, DWORD PTR _wc$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 _memset
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 233  : 
; 234  :     wc.cbSize = sizeof(wc);

  00041	c7 45 c8 30 00
	00 00		 mov	 DWORD PTR _wc$[ebp], 48	; 00000030H

; 235  :     wc.style = pCreate->dwClassStyle;

  00048	8b 55 08	 mov	 edx, DWORD PTR _pCreate$[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	89 45 cc	 mov	 DWORD PTR _wc$[ebp+4], eax

; 236  :     wc.lpfnWndProc = WindowProc;

  00050	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _wc$[ebp+8], OFFSET FLAT:?WindowProc@CWindow@@KGJPAUHWND__@@IIJ@Z ; CWindow::WindowProc

; 237  :     wc.cbClsExtra = pCreate->dwClassExtra;

  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  0005a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0005d	89 55 d4	 mov	 DWORD PTR _wc$[ebp+12], edx

; 238  :     wc.cbWndExtra = pCreate->dwWndExtra;

  00060	8b 45 08	 mov	 eax, DWORD PTR _pCreate$[ebp]
  00063	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00066	89 4d d8	 mov	 DWORD PTR _wc$[ebp+16], ecx

; 239  :     wc.hInstance = g_hInstance;

  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_hInstance
  0006f	89 55 dc	 mov	 DWORD PTR _wc$[ebp+20], edx

; 240  :     wc.hIcon = pCreate->hIcon;

  00072	8b 45 08	 mov	 eax, DWORD PTR _pCreate$[ebp]
  00075	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00078	89 4d e0	 mov	 DWORD PTR _wc$[ebp+24], ecx

; 241  :     wc.hCursor = pCreate->hCursor;

  0007b	8b 55 08	 mov	 edx, DWORD PTR _pCreate$[ebp]
  0007e	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00081	89 45 e4	 mov	 DWORD PTR _wc$[ebp+28], eax

; 242  :     wc.hbrBackground = pCreate->hbrBackground;

  00084	8b 4d 08	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  00087	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0008a	89 55 e8	 mov	 DWORD PTR _wc$[ebp+32], edx

; 243  :     wc.lpszClassName = pCreate->pszClassName;

  0008d	8b 45 08	 mov	 eax, DWORD PTR _pCreate$[ebp]
  00090	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00093	89 4d f0	 mov	 DWORD PTR _wc$[ebp+40], ecx

; 244  :     wc.hIconSm = pCreate->hIconSm;

  00096	8b 55 08	 mov	 edx, DWORD PTR _pCreate$[ebp]
  00099	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0009c	89 45 f4	 mov	 DWORD PTR _wc$[ebp+44], eax

; 245  : 
; 246  :     if(pCreate->pszMenu)

  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  000a2	83 79 3c 00	 cmp	 DWORD PTR [ecx+60], 0
  000a6	74 1a		 je	 SHORT $L51367

; 247  :     {
; 248  :         m_hmenu = LoadMenu(g_hInstance, pCreate->pszMenu);

  000a8	8b 55 08	 mov	 edx, DWORD PTR _pCreate$[ebp]
  000ab	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000ae	50		 push	 eax
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  000b5	51		 push	 ecx
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadMenuA@8
  000bc	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	89 42 20	 mov	 DWORD PTR [edx+32], eax
$L51367:

; 249  :     }
; 250  : 
; 251  :     if(pCreate->pszAccelerator)

  000c2	8b 45 08	 mov	 eax, DWORD PTR _pCreate$[ebp]
  000c5	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  000c9	74 19		 je	 SHORT $L51368

; 252  :     {
; 253  :         m_haccel = LoadAccelerators(g_hInstance, pCreate->pszAccelerator);

  000cb	8b 4d 08	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  000ce	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  000d1	52		 push	 edx
  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_hInstance
  000d7	50		 push	 eax
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadAcceleratorsA@8
  000de	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	89 41 24	 mov	 DWORD PTR [ecx+36], eax
$L51368:

; 254  :     }
; 255  : 
; 256  :     if(pParent)

  000e4	83 7d 10 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  000e8	74 0f		 je	 SHORT $L51369

; 257  :     {
; 258  :         SetParent(pParent);

  000ea	8b 55 10	 mov	 edx, DWORD PTR _pParent$[ebp]
  000ed	52		 push	 edx
  000ee	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	8b 10		 mov	 edx, DWORD PTR [eax]
  000f3	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	ff 52 08	 call	 DWORD PTR [edx+8]
$L51369:

; 259  :     }
; 260  :     
; 261  :     if(!::RegisterClassEx(&wc))

  000f9	8d 45 c8	 lea	 eax, DWORD PTR _wc$[ebp]
  000fc	50		 push	 eax
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassExA@4
  00103	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00108	85 c0		 test	 eax, eax
  0010a	75 07		 jne	 SHORT $L51370

; 262  :     {
; 263  :         fSuccess = FALSE;

  0010c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _fSuccess$[ebp], 0
$L51370:

; 264  :     }
; 265  : 
; 266  :     if(fSuccess)

  00113	83 7d c4 00	 cmp	 DWORD PTR _fSuccess$[ebp], 0
  00117	0f 84 86 00 00
	00		 je	 $L51371

; 267  :     {
; 268  :         ctx.pWindow = this;

  0011d	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	89 4d f8	 mov	 DWORD PTR _ctx$[ebp], ecx

; 269  :         ctx.pvContext = pvContext;

  00123	8b 55 0c	 mov	 edx, DWORD PTR _pvContext$[ebp]
  00126	89 55 fc	 mov	 DWORD PTR _ctx$[ebp+4], edx

; 270  :         
; 271  :         if(!(m_hwnd = CreateWindowEx(pCreate->dwExStyle, pCreate->pszClassName, pCreate->pszWindowName, pCreate->dwStyle, pCreate->x, pCreate->y, pCreate->nWidth, pCreate->nHeight, pParent ? pParent->m_hwnd : NULL, NULL, wc.hInstance, &ctx)))

  00129	83 7d 10 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  0012d	74 0b		 je	 SHORT $L51801
  0012f	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00132	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00135	89 4d bc	 mov	 DWORD PTR -68+[ebp], ecx
  00138	eb 07		 jmp	 SHORT $L51802
$L51801:
  0013a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR -68+[ebp], 0
$L51802:
  00141	8d 55 f8	 lea	 edx, DWORD PTR _ctx$[ebp]
  00144	52		 push	 edx
  00145	8b 45 dc	 mov	 eax, DWORD PTR _wc$[ebp+20]
  00148	50		 push	 eax
  00149	6a 00		 push	 0
  0014b	8b 4d bc	 mov	 ecx, DWORD PTR -68+[ebp]
  0014e	51		 push	 ecx
  0014f	8b 55 08	 mov	 edx, DWORD PTR _pCreate$[ebp]
  00152	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00155	50		 push	 eax
  00156	8b 4d 08	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  00159	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  0015c	52		 push	 edx
  0015d	8b 45 08	 mov	 eax, DWORD PTR _pCreate$[ebp]
  00160	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00163	51		 push	 ecx
  00164	8b 55 08	 mov	 edx, DWORD PTR _pCreate$[ebp]
  00167	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0016a	50		 push	 eax
  0016b	8b 4d 08	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  0016e	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00171	52		 push	 edx
  00172	8b 45 08	 mov	 eax, DWORD PTR _pCreate$[ebp]
  00175	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00178	51		 push	 ecx
  00179	8b 55 08	 mov	 edx, DWORD PTR _pCreate$[ebp]
  0017c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0017f	50		 push	 eax
  00180	8b 4d 08	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  00183	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00186	52		 push	 edx
  00187	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExA@48
  0018d	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00190	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00193	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00196	83 7a 1c 00	 cmp	 DWORD PTR [edx+28], 0
  0019a	75 07		 jne	 SHORT $L51372

; 272  :         {
; 273  :             fSuccess = FALSE;

  0019c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _fSuccess$[ebp], 0
$L51372:
$L51371:

; 274  :         }
; 275  :     }
; 276  : 
; 277  :     return fSuccess;

  001a3	8b 45 c4	 mov	 eax, DWORD PTR _fSuccess$[ebp]

; 278  : }

  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 0c 00	 ret	 12			; 0000000cH
?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z ENDP	; CWindow::Create
_TEXT	ENDS
PUBLIC	??_C@_08IMGB@WAVBNDLR?$AA@			; `string'
PUBLIC	??_C@_0N@CJMF@CenterWindow?$AA@			; `string'
PUBLIC	??_C@_0CG@BPDC@Bogus?5this?5pointer?5from?5message?5@ ; `string'
PUBLIC	?DefaultMessageHandler@CWindow@@KGJPAUHWND__@@IIJ@Z ; CWindow::DefaultMessageHandler
EXTRN	__imp__GetWindowLongA@8:NEAR
EXTRN	__imp__SetWindowLongA@12:NEAR
EXTRN	?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z:NEAR ; DirectSound::CDebug::SetContext
EXTRN	?Print@CDebug@DirectSound@@SAXPBDZZ:NEAR	; DirectSound::CDebug::Print
;	COMDAT ??_C@_08IMGB@WAVBNDLR?$AA@
CONST	SEGMENT
??_C@_08IMGB@WAVBNDLR?$AA@ DB 'WAVBNDLR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJMF@CenterWindow?$AA@
CONST	SEGMENT
??_C@_0N@CJMF@CenterWindow?$AA@ DB 'CenterWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BPDC@Bogus?5this?5pointer?5from?5message?5@
CONST	SEGMENT
??_C@_0CG@BPDC@Bogus?5this?5pointer?5from?5message?5@ DB 'Bogus this poin'
	DB	'ter from message %4.4x', 00H		; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?WindowProc@CWindow@@KGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hwnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_pCreate$ = -4
_pCtx$ = -8
_pWindow$ = -12
_lResult$ = -20
_fHandled$ = -16
?WindowProc@CWindow@@KGJPAUHWND__@@IIJ@Z PROC NEAR	; CWindow::WindowProc, COMDAT

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 308  :     LPCREATESTRUCT          pCreate;
; 309  :     LPCWINDOWCREATECTX      pCtx;
; 310  :     CWindow *               pWindow;
; 311  :     LRESULT                 lResult;
; 312  :     BOOL                    fHandled;
; 313  :     
; 314  :     //
; 315  :     // Get the "this" pointer from the window
; 316  :     //
; 317  : 
; 318  :     if(WM_CREATE == uMsg)

  00006	83 7d 0c 01	 cmp	 DWORD PTR _uMsg$[ebp], 1
  0000a	75 31		 jne	 SHORT $L51384

; 319  :     {
; 320  :         pCreate = (LPCREATESTRUCT)lParam;

  0000c	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR _pCreate$[ebp], eax

; 321  :         pCtx = (LPCWINDOWCREATECTX)pCreate->lpCreateParams;

  00012	8b 4d fc	 mov	 ecx, DWORD PTR _pCreate$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	89 55 f8	 mov	 DWORD PTR _pCtx$[ebp], edx

; 322  :         pWindow = pCtx->pWindow;

  0001a	8b 45 f8	 mov	 eax, DWORD PTR _pCtx$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 4d f4	 mov	 DWORD PTR _pWindow$[ebp], ecx

; 323  : 
; 324  :         SetWindowLong(hwnd, GWL_USERDATA, (LONG)pWindow);

  00022	8b 55 f4	 mov	 edx, DWORD PTR _pWindow$[ebp]
  00025	52		 push	 edx
  00026	6a eb		 push	 -21			; ffffffebH
  00028	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  0002b	50		 push	 eax
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 325  : 
; 326  :         pWindow->m_hwnd = hwnd;

  00032	8b 4d f4	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  00035	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  00038	89 51 1c	 mov	 DWORD PTR [ecx+28], edx

; 327  :     }
; 328  :     else

  0003b	eb 0f		 jmp	 SHORT $L51388
$L51384:

; 329  :     {
; 330  :         pWindow = (CWindow *)GetWindowLong(hwnd, GWL_USERDATA);

  0003d	6a eb		 push	 -21			; ffffffebH
  0003f	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00042	50		 push	 eax
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  00049	89 45 f4	 mov	 DWORD PTR _pWindow$[ebp], eax
$L51388:

; 331  :     }
; 332  : 
; 333  :     if(pWindow)

  0004c	83 7d f4 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  00050	74 44		 je	 SHORT $L51390

; 334  :     {
; 335  :         if(WINDOW_SIGNATURE != pWindow->m_dwSignature)

  00052	8b 4d f4	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  00055	81 79 04 77 6e
	64 77		 cmp	 DWORD PTR [ecx+4], 2003070583 ; 77646e77H
  0005c	74 38		 je	 SHORT $L51391

; 336  :         {
; 337  :             DPF_INFO("Bogus this pointer from message %4.4x", uMsg);

  0005e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  00063	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@CJMF@CenterWindow?$AA@ ; `string'
  00068	68 51 01 00 00	 push	 337			; 00000151H
  0006d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@HOLF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00072	6a 04		 push	 4
  00074	6a 09		 push	 9
  00076	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  0007b	83 c4 18	 add	 esp, 24			; 00000018H
  0007e	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  00081	52		 push	 edx
  00082	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@BPDC@Bogus?5this?5pointer?5from?5message?5@ ; `string'
  00087	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  0008c	83 c4 08	 add	 esp, 8

; 338  :             pWindow = NULL;

  0008f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pWindow$[ebp], 0
$L51391:
$L51390:

; 339  :         }
; 340  :     }
; 341  : 
; 342  :     //
; 343  :     // Hand off to the dispatcher
; 344  :     //
; 345  : 
; 346  :     if(pWindow)

  00096	83 7d f4 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  0009a	74 20		 je	 SHORT $L51395

; 347  :     {
; 348  :         fHandled = pWindow->HandleMessage(uMsg, wParam, lParam, &lResult);

  0009c	8d 45 ec	 lea	 eax, DWORD PTR _lResult$[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  000a3	51		 push	 ecx
  000a4	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  000a7	52		 push	 edx
  000a8	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  000ab	50		 push	 eax
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  000af	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  000b4	ff 52 50	 call	 DWORD PTR [edx+80]
  000b7	89 45 f0	 mov	 DWORD PTR _fHandled$[ebp], eax

; 349  :     }
; 350  :     else

  000ba	eb 07		 jmp	 SHORT $L51396
$L51395:

; 351  :     {
; 352  :         fHandled = FALSE;

  000bc	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _fHandled$[ebp], 0
$L51396:

; 353  :     }
; 354  : 
; 355  :     //
; 356  :     // Handle destruction
; 357  :     //
; 358  :     
; 359  :     if((WM_DESTROY == uMsg) && pWindow)

  000c3	83 7d 0c 02	 cmp	 DWORD PTR _uMsg$[ebp], 2
  000c7	75 1e		 jne	 SHORT $L51397
  000c9	83 7d f4 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  000cd	74 18		 je	 SHORT $L51397

; 360  :     {
; 361  :         SetWindowLong(hwnd, GWL_USERDATA, NULL);

  000cf	6a 00		 push	 0
  000d1	6a eb		 push	 -21			; ffffffebH
  000d3	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000d6	50		 push	 eax
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 362  : 
; 363  :         pWindow->m_hwnd = NULL;

  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  000e0	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
$L51397:

; 364  :     }
; 365  : 
; 366  :     //
; 367  :     // Hand off to the default handler
; 368  :     //
; 369  : 
; 370  :     if(!fHandled)

  000e7	83 7d f0 00	 cmp	 DWORD PTR _fHandled$[ebp], 0
  000eb	75 18		 jne	 SHORT $L51398

; 371  :     {
; 372  :         lResult = DefaultMessageHandler(hwnd, uMsg, wParam, lParam);

  000ed	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  000f0	52		 push	 edx
  000f1	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  000f4	50		 push	 eax
  000f5	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  000f8	51		 push	 ecx
  000f9	8b 55 08	 mov	 edx, DWORD PTR _hwnd$[ebp]
  000fc	52		 push	 edx
  000fd	e8 00 00 00 00	 call	 ?DefaultMessageHandler@CWindow@@KGJPAUHWND__@@IIJ@Z ; CWindow::DefaultMessageHandler
  00102	89 45 ec	 mov	 DWORD PTR _lResult$[ebp], eax
$L51398:

; 373  :     }
; 374  : 
; 375  :     return lResult;

  00105	8b 45 ec	 mov	 eax, DWORD PTR _lResult$[ebp]

; 376  : }

  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 10 00	 ret	 16			; 00000010H
?WindowProc@CWindow@@KGJPAUHWND__@@IIJ@Z ENDP		; CWindow::WindowProc
_TEXT	ENDS
EXTRN	__imp__DefWindowProcA@16:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
;	COMDAT ?DefaultMessageHandler@CWindow@@KGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hwnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
?DefaultMessageHandler@CWindow@@KGJPAUHWND__@@IIJ@Z PROC NEAR ; CWindow::DefaultMessageHandler, COMDAT

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 149  :     return DefWindowProc(hwnd, uMsg, wParam, lParam);

  00003	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 150  : }

  00019	5d		 pop	 ebp
  0001a	c2 10 00	 ret	 16			; 00000010H
?DefaultMessageHandler@CWindow@@KGJPAUHWND__@@IIJ@Z ENDP ; CWindow::DefaultMessageHandler
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp
_TEXT	ENDS
;	COMDAT ?HandleMessage@CWindow@@MAEHIIJPAJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_plResult$ = 20
_this$ = -16
_pCreate$ = -4
_pCtx$ = -8
_fHandled$ = -12
?HandleMessage@CWindow@@MAEHIIJPAJ@Z PROC NEAR		; CWindow::HandleMessage, COMDAT
; _this$ = ecx

; 405  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 406  :     LPCREATESTRUCT          pCreate;
; 407  :     LPCWINDOWCREATECTX      pCtx;
; 408  :     BOOL                    fHandled;
; 409  :     
; 410  :     switch(uMsg)
; 411  :     {

  00009	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000c	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  0000f	83 7d ec 4e	 cmp	 DWORD PTR -20+[ebp], 78	; 0000004eH
  00013	77 2f		 ja	 SHORT $L51812
  00015	83 7d ec 4e	 cmp	 DWORD PTR -20+[ebp], 78	; 0000004eH
  00019	0f 84 32 01 00
	00		 je	 $L51429
  0001f	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  00022	83 e9 01	 sub	 ecx, 1
  00025	89 4d ec	 mov	 DWORD PTR -20+[ebp], ecx
  00028	83 7d ec 0f	 cmp	 DWORD PTR -20+[ebp], 15	; 0000000fH
  0002c	0f 87 d4 01 00
	00		 ja	 $L51449
  00032	8b 55 ec	 mov	 edx, DWORD PTR -20+[ebp]
  00035	33 c0		 xor	 eax, eax
  00037	8a 82 00 00 00
	00		 mov	 al, BYTE PTR $L51814[edx]
  0003d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L51815[eax*4]
$L51812:
  00044	81 7d ec 1f 01
	00 00		 cmp	 DWORD PTR -20+[ebp], 287 ; 0000011fH
  0004b	77 29		 ja	 SHORT $L51813
  0004d	81 7d ec 1f 01
	00 00		 cmp	 DWORD PTR -20+[ebp], 287 ; 0000011fH
  00054	0f 84 78 01 00
	00		 je	 $L51443
  0005a	83 7d ec 7b	 cmp	 DWORD PTR -20+[ebp], 123 ; 0000007bH
  0005e	0f 84 3b 01 00
	00		 je	 $L51437
  00064	81 7d ec 11 01
	00 00		 cmp	 DWORD PTR -20+[ebp], 273 ; 00000111H
  0006b	0f 84 a9 00 00
	00		 je	 $L51423
  00071	e9 90 01 00 00	 jmp	 $L51449
$L51813:
  00076	81 7d ec 00 80
	00 00		 cmp	 DWORD PTR -20+[ebp], 32768 ; 00008000H
  0007d	0f 84 e9 00 00
	00		 je	 $L51431
  00083	e9 7e 01 00 00	 jmp	 $L51449
$L51413:

; 412  :         case WM_CREATE:
; 413  :             pCreate = (LPCREATESTRUCT)lParam;

  00088	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0008b	89 4d fc	 mov	 DWORD PTR _pCreate$[ebp], ecx

; 414  :             pCtx = (LPCWINDOWCREATECTX)pCreate->lpCreateParams;

  0008e	8b 55 fc	 mov	 edx, DWORD PTR _pCreate$[ebp]
  00091	8b 02		 mov	 eax, DWORD PTR [edx]
  00093	89 45 f8	 mov	 DWORD PTR _pCtx$[ebp], eax

; 415  :             fHandled = OnCreate(pCtx->pvContext, plResult);

  00096	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  00099	51		 push	 ecx
  0009a	8b 55 f8	 mov	 edx, DWORD PTR _pCtx$[ebp]
  0009d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a0	50		 push	 eax
  000a1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	ff 52 20	 call	 DWORD PTR [edx+32]
  000ac	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 416  :             break;

  000af	e9 59 01 00 00	 jmp	 $L51410
$L51416:

; 417  :         
; 418  :         case WM_CLOSE:
; 419  :             fHandled = OnClose(plResult);

  000b4	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  000b7	50		 push	 eax
  000b8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	ff 52 24	 call	 DWORD PTR [edx+36]
  000c3	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 420  :             break;

  000c6	e9 42 01 00 00	 jmp	 $L51410
$L51417:

; 421  :         
; 422  :         case WM_DESTROY:
; 423  :             fHandled = OnDestroy(plResult);

  000cb	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  000ce	50		 push	 eax
  000cf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	ff 52 28	 call	 DWORD PTR [edx+40]
  000da	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 424  :             break;

  000dd	e9 2b 01 00 00	 jmp	 $L51410
$L51418:

; 425  : 
; 426  :         case WM_SIZE:
; 427  :             fHandled = OnSize(wParam, LOWORD(lParam), HIWORD(lParam), plResult);

  000e2	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  000e5	50		 push	 eax
  000e6	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  000e9	c1 e9 10	 shr	 ecx, 16			; 00000010H
  000ec	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000f2	51		 push	 ecx
  000f3	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  000f6	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  000fc	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00102	52		 push	 edx
  00103	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  00106	50		 push	 eax
  00107	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	ff 52 2c	 call	 DWORD PTR [edx+44]
  00112	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 428  :             break;

  00115	e9 f3 00 00 00	 jmp	 $L51410
$L51423:

; 429  : 
; 430  :         case WM_COMMAND:
; 431  :             fHandled = OnCommand(HIWORD(wParam), LOWORD(wParam), (HWND)lParam, plResult);

  0011a	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0011d	50		 push	 eax
  0011e	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00121	51		 push	 ecx
  00122	8b 55 0c	 mov	 edx, DWORD PTR _wParam$[ebp]
  00125	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0012b	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00131	52		 push	 edx
  00132	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  00135	c1 e8 10	 shr	 eax, 16			; 00000010H
  00138	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0013d	50		 push	 eax
  0013e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	8b 11		 mov	 edx, DWORD PTR [ecx]
  00143	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00146	ff 52 30	 call	 DWORD PTR [edx+48]
  00149	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 432  :             break;

  0014c	e9 bc 00 00 00	 jmp	 $L51410
$L51429:

; 433  :         
; 434  :         case WM_NOTIFY:
; 435  :             fHandled = OnNotify((LPNMHDR)lParam, plResult);

  00151	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  00154	50		 push	 eax
  00155	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00158	51		 push	 ecx
  00159	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0015c	8b 02		 mov	 eax, DWORD PTR [edx]
  0015e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	ff 50 34	 call	 DWORD PTR [eax+52]
  00164	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 436  :             break;

  00167	e9 a1 00 00 00	 jmp	 $L51410
$L51431:

; 437  : 
; 438  :         case WM_DPF:
; 439  :             fHandled = OnDebug(HIWORD(wParam), LOWORD(wParam), (LPCSTR)lParam, plResult);

  0016c	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  0016f	51		 push	 ecx
  00170	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  00173	52		 push	 edx
  00174	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  00177	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0017c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00181	50		 push	 eax
  00182	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00185	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00188	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0018e	51		 push	 ecx
  0018f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00192	8b 02		 mov	 eax, DWORD PTR [edx]
  00194	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	ff 50 38	 call	 DWORD PTR [eax+56]
  0019a	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 440  :             break;

  0019d	eb 6e		 jmp	 SHORT $L51410
$L51437:

; 441  : 
; 442  :         case WM_CONTEXTMENU:
; 443  :             fHandled = OnContextMenu((HWND)wParam, LOWORD(lParam), HIWORD(lParam), plResult);

  0019f	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  001a2	51		 push	 ecx
  001a3	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  001a6	c1 ea 10	 shr	 edx, 16			; 00000010H
  001a9	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  001af	52		 push	 edx
  001b0	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  001b3	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001b8	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001bd	50		 push	 eax
  001be	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  001c1	51		 push	 ecx
  001c2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001c5	8b 02		 mov	 eax, DWORD PTR [edx]
  001c7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	ff 50 3c	 call	 DWORD PTR [eax+60]
  001cd	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 444  :             break;

  001d0	eb 3b		 jmp	 SHORT $L51410
$L51443:

; 445  : 
; 446  :         case WM_MENUSELECT:
; 447  :             fHandled = OnMenuSelect(LOWORD(wParam), HIWORD(wParam), (HMENU)lParam, plResult);

  001d2	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  001d5	51		 push	 ecx
  001d6	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  001d9	52		 push	 edx
  001da	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  001dd	c1 e8 10	 shr	 eax, 16			; 00000010H
  001e0	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001e5	50		 push	 eax
  001e6	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  001e9	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  001ef	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  001f5	51		 push	 ecx
  001f6	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001f9	8b 02		 mov	 eax, DWORD PTR [edx]
  001fb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	ff 50 40	 call	 DWORD PTR [eax+64]
  00201	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 448  :             break;

  00204	eb 07		 jmp	 SHORT $L51410
$L51449:

; 449  :         
; 450  :         default:
; 451  :             fHandled = FALSE;

  00206	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _fHandled$[ebp], 0
$L51410:

; 452  :             break;
; 453  :     }
; 454  : 
; 455  :     return fHandled;

  0020d	8b 45 f4	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 456  : }

  00210	8b e5		 mov	 esp, ebp
  00212	5d		 pop	 ebp
  00213	c2 10 00	 ret	 16			; 00000010H
$L51815:
  00216	00 00 00 00	 DD	 $L51413
  0021a	00 00 00 00	 DD	 $L51417
  0021e	00 00 00 00	 DD	 $L51418
  00222	00 00 00 00	 DD	 $L51416
  00226	00 00 00 00	 DD	 $L51449
$L51814:
  0022a	00		 DB	 0
  0022b	01		 DB	 1
  0022c	04		 DB	 4
  0022d	04		 DB	 4
  0022e	02		 DB	 2
  0022f	04		 DB	 4
  00230	04		 DB	 4
  00231	04		 DB	 4
  00232	04		 DB	 4
  00233	04		 DB	 4
  00234	04		 DB	 4
  00235	04		 DB	 4
  00236	04		 DB	 4
  00237	04		 DB	 4
  00238	04		 DB	 4
  00239	03		 DB	 3
?HandleMessage@CWindow@@MAEHIIJPAJ@Z ENDP		; CWindow::HandleMessage
_TEXT	ENDS
PUBLIC	?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z		; InsertTailList
PUBLIC	?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z	; RemoveEntryList
; Function compile flags: /Odt
;	COMDAT ?SetParent@CWindow@@UAEXPAV1@@Z
_TEXT	SEGMENT
_pParent$ = 8
_this$ = -4
?SetParent@CWindow@@UAEXPAV1@@Z PROC NEAR		; CWindow::SetParent, COMDAT
; _this$ = ecx

; 479  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 480  :     RemoveEntryList(&m_leChild);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 14	 add	 eax, 20			; 00000014H
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ; RemoveEntryList

; 481  : 
; 482  :     if(m_pParent = pParent)

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 08	 mov	 edx, DWORD PTR _pParent$[ebp]
  00019	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0001c	83 7d 08 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  00020	74 13		 je	 SHORT $L51454

; 483  :     {
; 484  :         InsertTailList(&pParent->m_lstChildren, &m_leChild);

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 c0 14	 add	 eax, 20			; 00000014H
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _pParent$[ebp]
  0002c	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z ; InsertTailList
$L51454:

; 485  :     }
; 486  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?SetParent@CWindow@@UAEXPAV1@@Z ENDP			; CWindow::SetParent
_TEXT	ENDS
PUBLIC	?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList
PUBLIC	??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
;	COMDAT ??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@
; File c:\xbox\private\windows\directx\dsound\common\ntlist.h
CONST	SEGMENT
??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\privat'
	DB	'e\windows\directx\dsound\common\ntlist.h', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z
_TEXT	SEGMENT
_ListHead$ = 8
_Entry$ = 12
?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z PROC NEAR	; InsertTailList, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  :     AssertValidEntryList(ListHead, ASSERT_VALID_ONLY);

  00003	6a 75		 push	 117			; 00000075H
  00005	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000a	6a 00		 push	 0
  0000c	8b 45 08	 mov	 eax, DWORD PTR _ListHead$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 118  :     AssertValidEntryList(Entry, ASSERT_NOT_IN_LIST);

  00015	6a 76		 push	 118			; 00000076H
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0001c	6a 02		 push	 2
  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 119  : 
; 120  :     Entry->Flink = ListHead;

  00027	8b 55 0c	 mov	 edx, DWORD PTR _Entry$[ebp]
  0002a	8b 45 08	 mov	 eax, DWORD PTR _ListHead$[ebp]
  0002d	89 02		 mov	 DWORD PTR [edx], eax

; 121  :     Entry->Blink = ListHead->Blink;

  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00032	8b 55 08	 mov	 edx, DWORD PTR _ListHead$[ebp]
  00035	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00038	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 122  :     
; 123  :     Entry->Blink->Flink = Entry;

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  00044	89 02		 mov	 DWORD PTR [edx], eax

; 124  :     Entry->Flink->Blink = Entry;

  00046	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	8b 45 0c	 mov	 eax, DWORD PTR _Entry$[ebp]
  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 125  : 
; 126  :     AssertValidEntryList(Entry, ASSERT_IN_LIST);

  00051	6a 7e		 push	 126			; 0000007eH
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  00058	6a 01		 push	 1
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 127  : }    

  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
?InsertTailList@@YGXPAU_LIST_ENTRY@@0@Z ENDP		; InsertTailList
_TEXT	ENDS
PUBLIC	??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@	; `string'
PUBLIC	??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ ; `string'
PUBLIC	??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ ; `string'
PUBLIC	??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@	; `string'
PUBLIC	??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@	; `string'
;	COMDAT ??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@
CONST	SEGMENT
??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@ DB 'NULL list entry pointe'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@
CONST	SEGMENT
??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ DB 'List entry conta'
	DB	'ins NULL pointer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@
CONST	SEGMENT
??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ DB 'List entry part'
	DB	'ially points to itself', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@
CONST	SEGMENT
??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@ DB 'List entry not in list'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@
CONST	SEGMENT
??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@ DB 'List entry in list', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
_TEXT	SEGMENT
_Entry$ = 8
_nFlags$ = 12
_pszFile$ = 16
_nLine$ = 20
?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z PROC NEAR ; __AssertValidEntryList, COMDAT

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   :     if(!Entry)

  00003	83 7d 08 00	 cmp	 DWORD PTR _Entry$[ebp], 0
  00007	75 1c		 jne	 SHORT $L47476

; 57   :     {
; 58   :         DirectSound::CDebug::Assert(TRUE, "NULL list entry pointer", pszFile, nLine);

  00009	8b 45 14	 mov	 eax, DWORD PTR _nLine$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  00010	51		 push	 ecx
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@EAEP@NULL?5list?5entry?5pointer?$AA@ ; `string'
  00016	6a 01		 push	 1
  00018	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0001d	83 c4 10	 add	 esp, 16			; 00000010H

; 59   :     }
; 60   :     else if(!Entry->Flink || !Entry->Blink)

  00020	e9 c0 00 00 00	 jmp	 $L47478
$L47476:
  00025	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  00028	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0002b	74 09		 je	 SHORT $L47480
  0002d	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 1c		 jne	 SHORT $L47479
$L47480:

; 61   :     {
; 62   :         DirectSound::CDebug::Assert(TRUE, "List entry contains NULL pointer", pszFile, nLine);

  00036	8b 4d 14	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00039	51		 push	 ecx
  0003a	8b 55 10	 mov	 edx, DWORD PTR _pszFile$[ebp]
  0003d	52		 push	 edx
  0003e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@DLOI@List?5entry?5contains?5NULL?5pointer@ ; `string'
  00043	6a 01		 push	 1
  00045	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0004a	83 c4 10	 add	 esp, 16			; 00000010H

; 63   :     }
; 64   :     else if((Entry == Entry->Flink) || (Entry == Entry->Blink))

  0004d	e9 93 00 00 00	 jmp	 $L47482
$L47479:
  00052	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00058	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0005a	74 0b		 je	 SHORT $L47484
  0005c	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0005f	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00062	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00065	75 2e		 jne	 SHORT $L47483
$L47484:

; 65   :     {
; 66   :         if((Entry != Entry->Flink) || (Entry != Entry->Blink))

  00067	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0006a	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0006d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0006f	75 0b		 jne	 SHORT $L47486
  00071	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00077	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0007a	74 17		 je	 SHORT $L47485
$L47486:

; 67   :         {
; 68   :             DirectSound::CDebug::Assert(TRUE, "List entry partially points to itself", pszFile, nLine);

  0007c	8b 55 14	 mov	 edx, DWORD PTR _nLine$[ebp]
  0007f	52		 push	 edx
  00080	8b 45 10	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@BJAJ@List?5entry?5partially?5points?5to?5i@ ; `string'
  00089	6a 01		 push	 1
  0008b	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00090	83 c4 10	 add	 esp, 16			; 00000010H
$L47485:

; 69   :         }
; 70   :     }
; 71   :     else if(ASSERT_IN_LIST == nFlags)

  00093	eb 50		 jmp	 SHORT $L47488
$L47483:
  00095	83 7d 0c 01	 cmp	 DWORD PTR _nFlags$[ebp], 1
  00099	75 23		 jne	 SHORT $L47489

; 72   :     {
; 73   :         if(!IsEntryInList(Entry))

  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0009e	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  000a1	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a3	75 17		 jne	 SHORT $L47490

; 74   :         {
; 75   :             DirectSound::CDebug::Assert(TRUE, "List entry not in list", pszFile, nLine);

  000a5	8b 45 14	 mov	 eax, DWORD PTR _nLine$[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d 10	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  000ac	51		 push	 ecx
  000ad	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@GJDM@List?5entry?5not?5in?5list?$AA@ ; `string'
  000b2	6a 01		 push	 1
  000b4	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000b9	83 c4 10	 add	 esp, 16			; 00000010H
$L47490:

; 76   :         }
; 77   :     }
; 78   :     else if(ASSERT_NOT_IN_LIST == nFlags)

  000bc	eb 27		 jmp	 SHORT $L47492
$L47489:
  000be	83 7d 0c 02	 cmp	 DWORD PTR _nFlags$[ebp], 2
  000c2	75 21		 jne	 SHORT $L47493

; 79   :     {
; 80   :         if(IsEntryInList(Entry))

  000c4	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  000c7	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  000ca	3b 02		 cmp	 eax, DWORD PTR [edx]
  000cc	74 17		 je	 SHORT $L47494

; 81   :         {
; 82   :             DirectSound::CDebug::Assert(TRUE, "List entry in list", pszFile, nLine);

  000ce	8b 4d 14	 mov	 ecx, DWORD PTR _nLine$[ebp]
  000d1	51		 push	 ecx
  000d2	8b 55 10	 mov	 edx, DWORD PTR _pszFile$[ebp]
  000d5	52		 push	 edx
  000d6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@JAPH@List?5entry?5in?5list?$AA@ ; `string'
  000db	6a 01		 push	 1
  000dd	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000e2	83 c4 10	 add	 esp, 16			; 00000010H
$L47494:
$L47493:
$L47492:
$L47488:
$L47482:
$L47478:

; 83   :         }
; 84   :     }
; 85   : }

  000e5	5d		 pop	 ebp
  000e6	c2 10 00	 ret	 16			; 00000010H
?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ENDP ; __AssertValidEntryList
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z
_TEXT	SEGMENT
_Entry$ = 8
?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z PROC NEAR	; RemoveEntryList, COMDAT

; 215  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  :     AssertValidEntryList(Entry, ASSERT_VALID_ONLY);

  00003	68 d8 00 00 00	 push	 216			; 000000d8H
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MICE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0000d	6a 00		 push	 0
  0000f	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z ; __AssertValidEntryList

; 217  : 
; 218  :     if(IsEntryInList(Entry))

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0001e	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00020	74 2c		 je	 SHORT $L47516

; 219  :     {
; 220  :         Entry->Flink->Blink = Entry->Blink;

  00022	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0002a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 221  :         Entry->Blink->Flink = Entry->Flink;

  00030	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00033	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00036	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 0a		 mov	 DWORD PTR [edx], ecx

; 222  : 
; 223  :         Entry->Flink = Entry->Blink = Entry;

  0003d	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  00040	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]
  00043	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _Entry$[ebp]
  00049	8b 55 08	 mov	 edx, DWORD PTR _Entry$[ebp]
  0004c	89 11		 mov	 DWORD PTR [ecx], edx
$L47516:

; 224  :     }
; 225  : 
; 226  :     return Entry;

  0004e	8b 45 08	 mov	 eax, DWORD PTR _Entry$[ebp]

; 227  : }

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?RemoveEntryList@@YGPAU_LIST_ENTRY@@PAU1@@Z ENDP	; RemoveEntryList
_TEXT	ENDS
EXTRN	__imp__GetMessageA@16:NEAR
EXTRN	__imp__TranslateMessage@4:NEAR
EXTRN	__imp__DispatchMessageA@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp
;	COMDAT ?PumpMessages@CWindow@@UAEXXZ
_TEXT	SEGMENT
_this$ = -32
_msg$ = -28
?PumpMessages@CWindow@@UAEXXZ PROC NEAR			; CWindow::PumpMessages, COMDAT
; _this$ = ecx

; 509  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
$L51461:

; 510  :     MSG                     msg;
; 511  : 
; 512  :     while(::GetMessage(&msg, NULL, 0, 0))

  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
  00019	85 c0		 test	 eax, eax
  0001b	74 29		 je	 SHORT $L51462

; 513  :     {
; 514  :         if(!DispatchMessage(&msg))

  0001d	8d 4d e4	 lea	 ecx, DWORD PTR _msg$[ebp]
  00020	51		 push	 ecx
  00021	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00024	8b 02		 mov	 eax, DWORD PTR [edx]
  00026	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	ff 50 4c	 call	 DWORD PTR [eax+76]
  0002c	85 c0		 test	 eax, eax
  0002e	75 14		 jne	 SHORT $L51463

; 515  :         {
; 516  :             ::TranslateMessage(&msg);

  00030	8d 4d e4	 lea	 ecx, DWORD PTR _msg$[ebp]
  00033	51		 push	 ecx
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4

; 517  :             ::DispatchMessage(&msg);

  0003a	8d 55 e4	 lea	 edx, DWORD PTR _msg$[ebp]
  0003d	52		 push	 edx
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
$L51463:

; 518  :         }
; 519  :     }

  00044	eb c3		 jmp	 SHORT $L51461
$L51462:

; 520  : }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
?PumpMessages@CWindow@@UAEXXZ ENDP			; CWindow::PumpMessages
_TEXT	ENDS
EXTRN	__imp__TranslateAcceleratorA@12:NEAR
; Function compile flags: /Odt
;	COMDAT ?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_pmsg$ = 8
_this$ = -8
_pleChild$ = -4
?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z PROC NEAR	; CWindow::DispatchMessageA, COMDAT
; _this$ = ecx

; 544  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 545  :     PLIST_ENTRY             pleChild;
; 546  : 
; 547  :     if(m_haccel && m_fEnableAccel)

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00010	74 2c		 je	 SHORT $L51469
  00012	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 79 28 00	 cmp	 DWORD PTR [ecx+40], 0
  00019	74 23		 je	 SHORT $L51469

; 548  :     {
; 549  :         if(TranslateAccelerator(m_hwnd, m_haccel, pmsg))

  0001b	8b 55 08	 mov	 edx, DWORD PTR _pmsg$[ebp]
  0001e	52		 push	 edx
  0001f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00025	51		 push	 ecx
  00026	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00029	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateAcceleratorA@12
  00033	85 c0		 test	 eax, eax
  00035	74 07		 je	 SHORT $L51470

; 550  :         {
; 551  :             return TRUE;

  00037	b8 01 00 00 00	 mov	 eax, 1
  0003c	eb 40		 jmp	 SHORT $L51467
$L51470:
$L51469:

; 552  :         }
; 553  :     }
; 554  : 
; 555  :     for(pleChild = m_lstChildren.Flink; pleChild != &m_lstChildren; pleChild = pleChild->Flink)

  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00044	89 55 fc	 mov	 DWORD PTR _pleChild$[ebp], edx
  00047	eb 08		 jmp	 SHORT $L51471
$L51472:
  00049	8b 45 fc	 mov	 eax, DWORD PTR _pleChild$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	89 4d fc	 mov	 DWORD PTR _pleChild$[ebp], ecx
$L51471:
  00051	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00054	83 c2 0c	 add	 edx, 12			; 0000000cH
  00057	39 55 fc	 cmp	 DWORD PTR _pleChild$[ebp], edx
  0005a	74 20		 je	 SHORT $L51473

; 556  :     {
; 557  :         if(CONTAINING_RECORD(pleChild, CWindow, m_leChild)->DispatchMessage(pmsg))

  0005c	8b 45 08	 mov	 eax, DWORD PTR _pmsg$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _pleChild$[ebp]
  00063	83 e9 14	 sub	 ecx, 20			; 00000014H
  00066	8b 55 fc	 mov	 edx, DWORD PTR _pleChild$[ebp]
  00069	8b 42 ec	 mov	 eax, DWORD PTR [edx-20]
  0006c	ff 50 4c	 call	 DWORD PTR [eax+76]
  0006f	85 c0		 test	 eax, eax
  00071	74 07		 je	 SHORT $L51478

; 558  :         {
; 559  :             return TRUE;

  00073	b8 01 00 00 00	 mov	 eax, 1
  00078	eb 04		 jmp	 SHORT $L51467
$L51478:

; 560  :         }
; 561  :     }

  0007a	eb cd		 jmp	 SHORT $L51472
$L51473:

; 562  :     
; 563  :     return FALSE;

  0007c	33 c0		 xor	 eax, eax
$L51467:

; 564  : }

  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z ENDP	; CWindow::DispatchMessageA
_TEXT	ENDS
EXTRN	__imp__SetMenu@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnCreate@CWindow@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnCreate@CWindow@@UAEHPAXPAJ@Z PROC NEAR		; CWindow::OnCreate, COMDAT
; _this$ = ecx

; 592  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 593  :     if(m_hmenu)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0000e	74 14		 je	 SHORT $L51484

; 594  :     {
; 595  :         SetMenu(m_hwnd, m_hmenu);

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00016	52		 push	 edx
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001d	51		 push	 ecx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetMenu@8
$L51484:

; 596  :     }
; 597  : 
; 598  :     return FALSE;

  00024	33 c0		 xor	 eax, eax

; 599  : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?OnCreate@CWindow@@UAEHPAXPAJ@Z ENDP			; CWindow::OnCreate
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
_TEXT	SEGMENT
_nSignature$ = 8
_nLevel$ = 12
_pszMessage$ = 16
_plResult$ = 20
_this$ = -4
?OnDebug@CWindow@@UAEHIIPBDPAJ@Z PROC NEAR		; CWindow::OnDebug, COMDAT
; _this$ = ecx

; 631  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 632  :     if((WM_DPF_SIGNATURE == nSignature) && (nLevel >= DPFLVL_FIRST) && (nLevel <= DPFLVL_LAST))

  00009	81 7d 08 df 00
	00 00		 cmp	 DWORD PTR _nSignature$[ebp], 223 ; 000000dfH
  00010	75 4a		 jne	 SHORT $L51492
  00012	83 7d 0c 00	 cmp	 DWORD PTR _nLevel$[ebp], 0
  00016	72 44		 jb	 SHORT $L51492
  00018	83 7d 0c 09	 cmp	 DWORD PTR _nLevel$[ebp], 9
  0001c	77 3e		 ja	 SHORT $L51492

; 633  :     {
; 634  :         switch(nLevel)
; 635  :         {

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _nLevel$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00024	83 7d f8 00	 cmp	 DWORD PTR -8+[ebp], 0
  00028	76 32		 jbe	 SHORT $L51499
  0002a	83 7d f8 02	 cmp	 DWORD PTR -8+[ebp], 2
  0002e	76 08		 jbe	 SHORT $L51497
  00030	83 7d f8 03	 cmp	 DWORD PTR -8+[ebp], 3
  00034	74 15		 je	 SHORT $L51498
  00036	eb 24		 jmp	 SHORT $L51499
$L51497:

; 636  :             case DPFLVL_ERROR:
; 637  :             case DPFLVL_RESOURCE:
; 638  :                 MessageBox(pszMessage, MB_OK | MB_ICONERROR);

  00038	6a 10		 push	 16			; 00000010H
  0003a	8b 4d 10	 mov	 ecx, DWORD PTR _pszMessage$[ebp]
  0003d	51		 push	 ecx
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 02		 mov	 eax, DWORD PTR [edx]
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	ff 50 18	 call	 DWORD PTR [eax+24]

; 639  :                 break;

  00049	eb 11		 jmp	 SHORT $L51494
$L51498:

; 640  : 
; 641  :             case DPFLVL_WARNING:
; 642  :                 MessageBox(pszMessage, MB_OK | MB_ICONWARNING);

  0004b	6a 30		 push	 48			; 00000030H
  0004d	8b 4d 10	 mov	 ecx, DWORD PTR _pszMessage$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	8b 02		 mov	 eax, DWORD PTR [edx]
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	ff 50 18	 call	 DWORD PTR [eax+24]
$L51499:
$L51494:
$L51492:

; 643  :                 break;
; 644  : 
; 645  :             default:
; 646  :                 // MessageBox(pszMessage, MB_OK | MB_ICONINFORMATION);
; 647  :                 break;
; 648  :         }
; 649  :     }
; 650  : 
; 651  :     *plResult = 0;

  0005c	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  0005f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 652  : 
; 653  :     return TRUE;

  00065	b8 01 00 00 00	 mov	 eax, 1

; 654  : }

  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 10 00	 ret	 16			; 00000010H
?OnDebug@CWindow@@UAEHIIPBDPAJ@Z ENDP			; CWindow::OnDebug
_TEXT	ENDS
PUBLIC	??0CDialog@@QAE@XZ				; CDialog::CDialog
PUBLIC	?OnInitDialog@CDialog@@UAEHPAXPAJ@Z		; CDialog::OnInitDialog
PUBLIC	?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z	; CDialog::OnCommand
PUBLIC	?OnClose@CDialog@@UAEHPAJ@Z			; CDialog::OnClose
PUBLIC	?OnOk@CDialog@@UAEXXZ				; CDialog::OnOk
PUBLIC	?OnCancel@CDialog@@UAEXXZ			; CDialog::OnCancel
PUBLIC	?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z	; CDialog::DispatchMessageA
PUBLIC	?HandleMessage@CDialog@@MAEHIIJPAJ@Z		; CDialog::HandleMessage
PUBLIC	??_7CDialog@@6B@				; CDialog::`vftable'
PUBLIC	??_GCDialog@@UAEPAXI@Z				; CDialog::`scalar deleting destructor'
PUBLIC	??_ECDialog@@UAEPAXI@Z				; CDialog::`vector deleting destructor'
;	COMDAT ??_7CDialog@@6B@
CONST	SEGMENT
??_7CDialog@@6B@ DD FLAT:??_ECDialog@@UAEPAXI@Z		; CDialog::`vftable'
	DD	FLAT:?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
	DD	FLAT:?SetParent@CWindow@@UAEXPAV1@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHII@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHPBDI@Z
	DD	FLAT:?PumpMessages@CWindow@@UAEXXZ
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHKHHPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?EnableAccelerators@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?HandleMessage@CDialog@@MAEHIIJPAJ@Z
	DD	FLAT:?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
	DD	FLAT:?OnOk@CDialog@@UAEXXZ
	DD	FLAT:?OnCancel@CDialog@@UAEXXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CDialog@@QAE@XZ PROC NEAR				; CDialog::CDialog, COMDAT
; _this$ = ecx

; 676  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CWindow@@QAE@XZ	; CWindow::CWindow
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDialog@@6B@ ; CDialog::`vftable'

; 677  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CDialog@@QAE@XZ ENDP					; CDialog::CDialog
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnInitDialog@CDialog@@UAEHPAXPAJ@Z PROC NEAR		; CDialog::OnInitDialog, COMDAT
; _this$ = ecx

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 259  :     return TRUE;

  00007	b8 01 00 00 00	 mov	 eax, 1

; 260  : }

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?OnInitDialog@CDialog@@UAEHPAXPAJ@Z ENDP		; CDialog::OnInitDialog
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnClose@CDialog@@UAEHPAJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnClose@CDialog@@UAEHPAJ@Z PROC NEAR			; CDialog::OnClose, COMDAT
; _this$ = ecx

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  :     OnCancel();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 10		 mov	 edx, DWORD PTR [eax]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	ff 52 5c	 call	 DWORD PTR [edx+92]

; 265  :     return FALSE;

  00012	33 c0		 xor	 eax, eax

; 266  : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?OnClose@CDialog@@UAEHPAJ@Z ENDP			; CDialog::OnClose
_TEXT	ENDS
EXTRN	__imp__EndDialog@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?OnOk@CDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnOk@CDialog@@UAEXXZ PROC NEAR				; CDialog::OnOk, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 270  :     EndDialog(m_hwnd, TRUE);

  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 271  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnOk@CDialog@@UAEXXZ ENDP				; CDialog::OnOk
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCancel@CDialog@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnCancel@CDialog@@UAEXXZ PROC NEAR			; CDialog::OnCancel, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 275  :     EndDialog(m_hwnd, FALSE);

  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 276  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnCancel@CDialog@@UAEXXZ ENDP				; CDialog::OnCancel
_TEXT	ENDS
PUBLIC	??1CDialog@@UAE@XZ				; CDialog::~CDialog
; Function compile flags: /Odt
;	COMDAT ??_GCDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCDialog@@UAEPAXI@Z PROC NEAR			; CDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51507
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51507:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCDialog@@UAEPAXI@Z ENDP				; CDialog::`scalar deleting destructor'
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp
_TEXT	ENDS
;	COMDAT ??1CDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CDialog@@UAE@XZ PROC NEAR				; CDialog::~CDialog, COMDAT
; _this$ = ecx

; 699  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDialog@@6B@ ; CDialog::`vftable'

; 700  :     if(m_hwnd)

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  00017	74 19		 je	 SHORT $L51512

; 701  :     {
; 702  :         EndDialog(m_hwnd, 0);

  00019	6a 00		 push	 0
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8

; 703  :         m_hwnd = NULL;

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
$L51512:

; 704  :     }
; 705  : }

  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ??1CWindow@@UAE@XZ	; CWindow::~CWindow
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??1CDialog@@UAE@XZ ENDP					; CDialog::~CDialog
_TEXT	ENDS
EXTRN	__imp__IsDialogMessageA@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_pmsg$ = 8
_this$ = -4
?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z PROC NEAR	; CDialog::DispatchMessageA, COMDAT
; _this$ = ecx

; 729  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 730  :     if(IsDialogMessage(m_hwnd, pmsg))

  00007	8b 45 08	 mov	 eax, DWORD PTR _pmsg$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsDialogMessageA@8
  00018	85 c0		 test	 eax, eax
  0001a	74 07		 je	 SHORT $L51517

; 731  :     {
; 732  :         return TRUE;

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	eb 0c		 jmp	 SHORT $L51516
$L51517:

; 733  :     }
; 734  :     
; 735  :     return CWindow::DispatchMessage(pmsg);

  00023	8b 45 08	 mov	 eax, DWORD PTR _pmsg$[ebp]
  00026	50		 push	 eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?DispatchMessageA@CWindow@@MAEHPAUtagMSG@@@Z ; CWindow::DispatchMessageA
$L51516:

; 736  : }

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z ENDP	; CDialog::DispatchMessageA
_TEXT	ENDS
PUBLIC	??_C@_0BB@IFLG@CWindow?3?3OnDebug?$AA@		; `string'
PUBLIC	?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z	; CDialog::DialogProc
PUBLIC	?DefaultMessageHandler@CDialog@@KGJPAUHWND__@@IIJ@Z ; CDialog::DefaultMessageHandler
;	COMDAT ??_C@_0BB@IFLG@CWindow?3?3OnDebug?$AA@
CONST	SEGMENT
??_C@_0BB@IFLG@CWindow?3?3OnDebug?$AA@ DB 'CWindow::OnDebug', 00H ; `string'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hwnd$ = 8
_uMsg$ = 12
_wParam$ = 16
_lParam$ = 20
_pCtx$ = -4
_pWindow$ = -8
_lResult$ = -16
_fHandled$ = -12
?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z PROC NEAR	; CDialog::DialogProc, COMDAT

; 765  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 766  :     LPCWINDOWCREATECTX      pCtx;
; 767  :     CWindow *               pWindow;
; 768  :     LRESULT                 lResult;
; 769  :     BOOL                    fHandled;
; 770  :     
; 771  :     //
; 772  :     // Get the "this" pointer from the window
; 773  :     //
; 774  : 
; 775  :     if(WM_INITDIALOG == uMsg)

  00006	81 7d 0c 10 01
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 272 ; 00000110H
  0000d	75 29		 jne	 SHORT $L51528

; 776  :     {
; 777  :         pCtx = (LPCWINDOWCREATECTX)lParam;

  0000f	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR _pCtx$[ebp], eax

; 778  :         pWindow = pCtx->pWindow;

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _pCtx$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	89 55 f8	 mov	 DWORD PTR _pWindow$[ebp], edx

; 779  : 
; 780  :         SetWindowLong(hwnd, DWL_USER, (LONG)pWindow);

  0001d	8b 45 f8	 mov	 eax, DWORD PTR _pWindow$[ebp]
  00020	50		 push	 eax
  00021	6a 08		 push	 8
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  00026	51		 push	 ecx
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 781  : 
; 782  :         pWindow->m_hwnd = hwnd;

  0002d	8b 55 f8	 mov	 edx, DWORD PTR _pWindow$[ebp]
  00030	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  00033	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 783  :     }
; 784  :     else

  00036	eb 0f		 jmp	 SHORT $L51531
$L51528:

; 785  :     {
; 786  :         pWindow = (CWindow *)GetWindowLong(hwnd, DWL_USER);

  00038	6a 08		 push	 8
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  0003d	51		 push	 ecx
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  00044	89 45 f8	 mov	 DWORD PTR _pWindow$[ebp], eax
$L51531:

; 787  :     }
; 788  : 
; 789  :     if(pWindow)

  00047	83 7d f8 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  0004b	74 44		 je	 SHORT $L51533

; 790  :     {
; 791  :         if(WINDOW_SIGNATURE != pWindow->m_dwSignature)

  0004d	8b 55 f8	 mov	 edx, DWORD PTR _pWindow$[ebp]
  00050	81 7a 04 77 6e
	64 77		 cmp	 DWORD PTR [edx+4], 2003070583 ; 77646e77H
  00057	74 38		 je	 SHORT $L51534

; 792  :         {
; 793  :             DPF_INFO("Bogus this pointer from message %4.4x", uMsg);

  00059	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IMGB@WAVBNDLR?$AA@ ; `string'
  0005e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@IFLG@CWindow?3?3OnDebug?$AA@ ; `string'
  00063	68 19 03 00 00	 push	 793			; 00000319H
  00068	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EG@HOLF@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
  0006d	6a 04		 push	 4
  0006f	6a 09		 push	 9
  00071	e8 00 00 00 00	 call	 ?SetContext@CDebug@DirectSound@@SAXKKPBDI00@Z ; DirectSound::CDebug::SetContext
  00076	83 c4 18	 add	 esp, 24			; 00000018H
  00079	8b 45 0c	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0007c	50		 push	 eax
  0007d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@BPDC@Bogus?5this?5pointer?5from?5message?5@ ; `string'
  00082	e8 00 00 00 00	 call	 ?Print@CDebug@DirectSound@@SAXPBDZZ ; DirectSound::CDebug::Print
  00087	83 c4 08	 add	 esp, 8

; 794  :             pWindow = NULL;

  0008a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pWindow$[ebp], 0
$L51534:
$L51533:

; 795  :         }
; 796  :     }
; 797  : 
; 798  :     //
; 799  :     // Hand off to the dispatcher
; 800  :     //
; 801  : 
; 802  :     if(pWindow)

  00091	83 7d f8 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  00095	74 20		 je	 SHORT $L51536

; 803  :     {
; 804  :         fHandled = pWindow->HandleMessage(uMsg, wParam, lParam, &lResult);

  00097	8d 4d f0	 lea	 ecx, DWORD PTR _lResult$[ebp]
  0009a	51		 push	 ecx
  0009b	8b 55 14	 mov	 edx, DWORD PTR _lParam$[ebp]
  0009e	52		 push	 edx
  0009f	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  000a6	51		 push	 ecx
  000a7	8b 55 f8	 mov	 edx, DWORD PTR _pWindow$[ebp]
  000aa	8b 02		 mov	 eax, DWORD PTR [edx]
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _pWindow$[ebp]
  000af	ff 50 50	 call	 DWORD PTR [eax+80]
  000b2	89 45 f4	 mov	 DWORD PTR _fHandled$[ebp], eax

; 805  :     }
; 806  :     else

  000b5	eb 07		 jmp	 SHORT $L51537
$L51536:

; 807  :     {
; 808  :         fHandled = FALSE;

  000b7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _fHandled$[ebp], 0
$L51537:

; 809  :     }
; 810  : 
; 811  :     //
; 812  :     // Handle destruction
; 813  :     //
; 814  :     
; 815  :     if((WM_DESTROY == uMsg) && pWindow)

  000be	83 7d 0c 02	 cmp	 DWORD PTR _uMsg$[ebp], 2
  000c2	75 1e		 jne	 SHORT $L51538
  000c4	83 7d f8 00	 cmp	 DWORD PTR _pWindow$[ebp], 0
  000c8	74 18		 je	 SHORT $L51538

; 816  :     {
; 817  :         SetWindowLong(hwnd, DWL_USER, NULL);

  000ca	6a 00		 push	 0
  000cc	6a 08		 push	 8
  000ce	8b 4d 08	 mov	 ecx, DWORD PTR _hwnd$[ebp]
  000d1	51		 push	 ecx
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 818  : 
; 819  :         pWindow->m_hwnd = NULL;

  000d8	8b 55 f8	 mov	 edx, DWORD PTR _pWindow$[ebp]
  000db	c7 42 1c 00 00
	00 00		 mov	 DWORD PTR [edx+28], 0
$L51538:

; 820  :     }
; 821  : 
; 822  :     //
; 823  :     // Hand off to the default handler
; 824  :     //
; 825  : 
; 826  :     if(!fHandled)

  000e2	83 7d f4 00	 cmp	 DWORD PTR _fHandled$[ebp], 0
  000e6	75 18		 jne	 SHORT $L51539

; 827  :     {
; 828  :         lResult = DefaultMessageHandler(hwnd, uMsg, wParam, lParam);

  000e8	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  000ef	51		 push	 ecx
  000f0	8b 55 0c	 mov	 edx, DWORD PTR _uMsg$[ebp]
  000f3	52		 push	 edx
  000f4	8b 45 08	 mov	 eax, DWORD PTR _hwnd$[ebp]
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ?DefaultMessageHandler@CDialog@@KGJPAUHWND__@@IIJ@Z ; CDialog::DefaultMessageHandler
  000fd	89 45 f0	 mov	 DWORD PTR _lResult$[ebp], eax
$L51539:

; 829  :     }
; 830  : 
; 831  :     return lResult;

  00100	8b 45 f0	 mov	 eax, DWORD PTR _lResult$[ebp]

; 832  : }

  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 10 00	 ret	 16			; 00000010H
?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z ENDP		; CDialog::DialogProc
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.h
_TEXT	ENDS
;	COMDAT ?DefaultMessageHandler@CDialog@@KGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
?DefaultMessageHandler@CDialog@@KGJPAUHWND__@@IIJ@Z PROC NEAR ; CDialog::DefaultMessageHandler, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 254  :     return FALSE;

  00003	33 c0		 xor	 eax, eax

; 255  : }

  00005	5d		 pop	 ebp
  00006	c2 10 00	 ret	 16			; 00000010H
?DefaultMessageHandler@CDialog@@KGJPAUHWND__@@IIJ@Z ENDP ; CDialog::DefaultMessageHandler
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\tools\wavbndlr\gui\wndwrap.cpp
_TEXT	ENDS
;	COMDAT ?HandleMessage@CDialog@@MAEHIIJPAJ@Z
_TEXT	SEGMENT
_uMsg$ = 8
_wParam$ = 12
_lParam$ = 16
_plResult$ = 20
_this$ = -12
_pCtx$ = -4
_fHandled$ = -8
?HandleMessage@CDialog@@MAEHIIJPAJ@Z PROC NEAR		; CDialog::HandleMessage, COMDAT
; _this$ = ecx

; 861  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 862  :     LPCWINDOWCREATECTX      pCtx;
; 863  :     BOOL                    fHandled;
; 864  :     
; 865  :     switch(uMsg)
; 866  :     {

  00009	8b 45 08	 mov	 eax, DWORD PTR _uMsg$[ebp]
  0000c	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  0000f	81 7d f0 10 01
	00 00		 cmp	 DWORD PTR -16+[ebp], 272 ; 00000110H
  00016	74 02		 je	 SHORT $L51553
  00018	eb 21		 jmp	 SHORT $L51555
$L51553:

; 867  :         case WM_INITDIALOG:
; 868  :             pCtx = (LPCWINDOWCREATECTX)lParam;

  0001a	8b 4d 10	 mov	 ecx, DWORD PTR _lParam$[ebp]
  0001d	89 4d fc	 mov	 DWORD PTR _pCtx$[ebp], ecx

; 869  :             fHandled = OnInitDialog(pCtx->pvContext, plResult);

  00020	8b 55 14	 mov	 edx, DWORD PTR _plResult$[ebp]
  00023	52		 push	 edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _pCtx$[ebp]
  00027	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002a	51		 push	 ecx
  0002b	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	8b 02		 mov	 eax, DWORD PTR [edx]
  00030	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	ff 50 54	 call	 DWORD PTR [eax+84]
  00036	89 45 f8	 mov	 DWORD PTR _fHandled$[ebp], eax

; 870  :             break;

  00039	eb 1b		 jmp	 SHORT $L51550
$L51555:

; 871  :         
; 872  :         default:
; 873  :             fHandled = CWindow::HandleMessage(uMsg, wParam, lParam, plResult);

  0003b	8b 4d 14	 mov	 ecx, DWORD PTR _plResult$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 10	 mov	 edx, DWORD PTR _lParam$[ebp]
  00042	52		 push	 edx
  00043	8b 45 0c	 mov	 eax, DWORD PTR _wParam$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?HandleMessage@CWindow@@MAEHIIJPAJ@Z ; CWindow::HandleMessage
  00053	89 45 f8	 mov	 DWORD PTR _fHandled$[ebp], eax
$L51550:

; 874  :             break;
; 875  :     }
; 876  : 
; 877  :     return fHandled;

  00056	8b 45 f8	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 878  : }

  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 10 00	 ret	 16			; 00000010H
?HandleMessage@CDialog@@MAEHIIJPAJ@Z ENDP		; CDialog::HandleMessage
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
_TEXT	SEGMENT
_nCommandId$ = 8
_nControlId$ = 12
_hwndControl$ = 16
_plResult$ = 20
_this$ = -8
_fHandled$ = -4
?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z PROC NEAR	; CDialog::OnCommand, COMDAT
; _this$ = ecx

; 910  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 911  :     BOOL                    fHandled;
; 912  : 
; 913  :     fHandled = CWindow::OnCommand(nCommandId, nControlId, hwndControl, plResult);

  00009	8b 45 14	 mov	 eax, DWORD PTR _plResult$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _hwndControl$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _nControlId$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _nCommandId$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnCommand@CWindow@@UAEHIIPAUHWND__@@PAJ@Z ; CWindow::OnCommand
  00021	89 45 fc	 mov	 DWORD PTR _fHandled$[ebp], eax

; 914  : 
; 915  :     switch(nControlId)
; 916  :     {

  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _nControlId$[ebp]
  00027	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  0002a	83 7d f4 01	 cmp	 DWORD PTR -12+[ebp], 1
  0002e	74 08		 je	 SHORT $L51568
  00030	83 7d f4 02	 cmp	 DWORD PTR -12+[ebp], 2
  00034	74 0f		 je	 SHORT $L51569
  00036	eb 18		 jmp	 SHORT $L51565
$L51568:

; 917  :         case IDOK:
; 918  :             OnOk();

  00038	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	ff 50 58	 call	 DWORD PTR [eax+88]

; 919  :             break;

  00043	eb 0b		 jmp	 SHORT $L51565
$L51569:

; 920  : 
; 921  :         case IDCANCEL:
; 922  :             OnCancel();

  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	ff 52 5c	 call	 DWORD PTR [edx+92]
$L51565:

; 923  :             break;
; 924  :     }
; 925  : 
; 926  :     return fHandled;

  00050	8b 45 fc	 mov	 eax, DWORD PTR _fHandled$[ebp]

; 927  : }

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 10 00	 ret	 16			; 00000010H
?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z ENDP		; CDialog::OnCommand
_TEXT	ENDS
PUBLIC	??0CModalDialog@@QAE@XZ				; CModalDialog::CModalDialog
PUBLIC	?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z	; CModalDialog::Create
PUBLIC	??_7CModalDialog@@6B@				; CModalDialog::`vftable'
PUBLIC	??_GCModalDialog@@UAEPAXI@Z			; CModalDialog::`scalar deleting destructor'
PUBLIC	??_ECModalDialog@@UAEPAXI@Z			; CModalDialog::`vector deleting destructor'
;	COMDAT ??_7CModalDialog@@6B@
CONST	SEGMENT
??_7CModalDialog@@6B@ DD FLAT:??_ECModalDialog@@UAEPAXI@Z ; CModalDialog::`vftable'
	DD	FLAT:?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
	DD	FLAT:?SetParent@CWindow@@UAEXPAV1@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHII@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHPBDI@Z
	DD	FLAT:?PumpMessages@CWindow@@UAEXXZ
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHKHHPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?EnableAccelerators@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?HandleMessage@CDialog@@MAEHIIJPAJ@Z
	DD	FLAT:?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
	DD	FLAT:?OnOk@CDialog@@UAEXXZ
	DD	FLAT:?OnCancel@CDialog@@UAEXXZ
	DD	FLAT:?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CModalDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CModalDialog@@QAE@XZ PROC NEAR			; CModalDialog::CModalDialog, COMDAT
; _this$ = ecx

; 949  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CDialog@@QAE@XZ	; CDialog::CDialog
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CModalDialog@@6B@ ; CModalDialog::`vftable'

; 950  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CModalDialog@@QAE@XZ ENDP				; CModalDialog::CModalDialog
_TEXT	ENDS
PUBLIC	??1CModalDialog@@UAE@XZ				; CModalDialog::~CModalDialog
; Function compile flags: /Odt
;	COMDAT ??_GCModalDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCModalDialog@@UAEPAXI@Z PROC NEAR			; CModalDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CModalDialog@@UAE@XZ	; CModalDialog::~CModalDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51577
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51577:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCModalDialog@@UAEPAXI@Z ENDP			; CModalDialog::`scalar deleting destructor'
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1CModalDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CModalDialog@@UAE@XZ PROC NEAR			; CModalDialog::~CModalDialog, COMDAT
; _this$ = ecx

; 972  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CModalDialog@@6B@ ; CModalDialog::`vftable'

; 973  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CModalDialog@@UAE@XZ ENDP				; CModalDialog::~CModalDialog
_TEXT	ENDS
EXTRN	__imp__DialogBoxParamA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z
_TEXT	SEGMENT
_nResourceId$ = 8
_pvContext$ = 12
_pParent$ = 16
_this$ = -12
_ctx$ = -8
?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z PROC NEAR	; CModalDialog::Create, COMDAT
; _this$ = ecx

; 1000 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1001 :     WINDOWCREATECTX         ctx;
; 1002 :     
; 1003 :     if(pParent)

  00009	83 7d 10 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  0000d	74 0f		 je	 SHORT $L51589

; 1004 :     {
; 1005 :         SetParent(pParent);

  0000f	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00012	50		 push	 eax
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	ff 52 08	 call	 DWORD PTR [edx+8]
$L51589:

; 1006 :     }
; 1007 : 
; 1008 :     ctx.pWindow = this;

  0001e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _ctx$[ebp], eax

; 1009 :     ctx.pvContext = pvContext;

  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00027	89 4d fc	 mov	 DWORD PTR _ctx$[ebp+4], ecx

; 1010 :     
; 1011 :     return DialogBoxParam(g_hInstance, MAKEINTRESOURCE(nResourceId), pParent ? pParent->m_hwnd : NULL, DialogProc, (LPARAM)&ctx);

  0002a	83 7d 10 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  0002e	74 0b		 je	 SHORT $L51888
  00030	8b 55 10	 mov	 edx, DWORD PTR _pParent$[ebp]
  00033	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00036	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  00039	eb 07		 jmp	 SHORT $L51889
$L51888:
  0003b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L51889:
  00042	8d 4d f8	 lea	 ecx, DWORD PTR _ctx$[ebp]
  00045	51		 push	 ecx
  00046	68 00 00 00 00	 push	 OFFSET FLAT:?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z ; CDialog::DialogProc
  0004b	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  0004e	52		 push	 edx
  0004f	8b 45 08	 mov	 eax, DWORD PTR _nResourceId$[ebp]
  00052	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00057	50		 push	 eax
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0005e	51		 push	 ecx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20

; 1012 : }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 0c 00	 ret	 12			; 0000000cH
?Create@CModalDialog@@UAEHIPAXPAVCWindow@@@Z ENDP	; CModalDialog::Create
_TEXT	ENDS
PUBLIC	??_7CModelessDialog@@6B@			; CModelessDialog::`vftable'
PUBLIC	??_GCModelessDialog@@UAEPAXI@Z			; CModelessDialog::`scalar deleting destructor'
PUBLIC	??_ECModelessDialog@@UAEPAXI@Z			; CModelessDialog::`vector deleting destructor'
PUBLIC	??0CModelessDialog@@QAE@XZ			; CModelessDialog::CModelessDialog
PUBLIC	?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z ; CModelessDialog::Create
;	COMDAT ??_7CModelessDialog@@6B@
CONST	SEGMENT
??_7CModelessDialog@@6B@ DD FLAT:??_ECModelessDialog@@UAEPAXI@Z ; CModelessDialog::`vftable'
	DD	FLAT:?Create@CWindow@@UAEHPBUWNDCREATE@@PAXPAV1@@Z
	DD	FLAT:?SetParent@CWindow@@UAEXPAV1@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXPAUHWND__@@ABUtagRECT@@@Z
	DD	FLAT:?MoveWindow@CWindow@@UAEXABUtagRECT@@@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHII@Z
	DD	FLAT:?MessageBoxA@CWindow@@UAEHPBDI@Z
	DD	FLAT:?PumpMessages@CWindow@@UAEXXZ
	DD	FLAT:?OnCreate@CWindow@@UAEHPAXPAJ@Z
	DD	FLAT:?OnClose@CDialog@@UAEHPAJ@Z
	DD	FLAT:?OnDestroy@CWindow@@UAEHPAJ@Z
	DD	FLAT:?OnSize@CWindow@@UAEHKHHPAJ@Z
	DD	FLAT:?OnCommand@CDialog@@UAEHIIPAUHWND__@@PAJ@Z
	DD	FLAT:?OnNotify@CWindow@@UAEHPAUtagNMHDR@@PAJ@Z
	DD	FLAT:?OnDebug@CWindow@@UAEHIIPBDPAJ@Z
	DD	FLAT:?OnContextMenu@CWindow@@UAEHPAUHWND__@@HHPAJ@Z
	DD	FLAT:?OnMenuSelect@CWindow@@UAEHIIPAUHMENU__@@PAJ@Z
	DD	FLAT:?EnableAccelerators@CWindow@@UAEXH@Z
	DD	FLAT:??BCWindow@@UAEPAUHWND__@@XZ
	DD	FLAT:?DispatchMessageA@CDialog@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?HandleMessage@CDialog@@MAEHIIJPAJ@Z
	DD	FLAT:?OnInitDialog@CDialog@@UAEHPAXPAJ@Z
	DD	FLAT:?OnOk@CDialog@@UAEXXZ
	DD	FLAT:?OnCancel@CDialog@@UAEXXZ
	DD	FLAT:?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CModelessDialog@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CModelessDialog@@QAE@XZ PROC NEAR			; CModelessDialog::CModelessDialog, COMDAT
; _this$ = ecx

; 1034 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CDialog@@QAE@XZ	; CDialog::CDialog
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CModelessDialog@@6B@ ; CModelessDialog::`vftable'

; 1035 : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CModelessDialog@@QAE@XZ ENDP				; CModelessDialog::CModelessDialog
_TEXT	ENDS
PUBLIC	??1CModelessDialog@@UAE@XZ			; CModelessDialog::~CModelessDialog
; Function compile flags: /Odt
;	COMDAT ??_GCModelessDialog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCModelessDialog@@UAEPAXI@Z PROC NEAR		; CModelessDialog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CModelessDialog@@UAE@XZ ; CModelessDialog::~CModelessDialog
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L51601
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L51601:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCModelessDialog@@UAEPAXI@Z ENDP			; CModelessDialog::`scalar deleting destructor'
; Function compile flags: /Odt
_TEXT	ENDS
;	COMDAT ??1CModelessDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CModelessDialog@@UAE@XZ PROC NEAR			; CModelessDialog::~CModelessDialog, COMDAT
; _this$ = ecx

; 1057 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CModelessDialog@@6B@ ; CModelessDialog::`vftable'

; 1058 : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CModelessDialog@@UAE@XZ ENDP				; CModelessDialog::~CModelessDialog
_TEXT	ENDS
EXTRN	__imp__CreateDialogParamA@20:NEAR
; Function compile flags: /Odt
;	COMDAT ?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z
_TEXT	SEGMENT
_nResourceId$ = 8
_pvContext$ = 12
_pParent$ = 16
_this$ = -12
_ctx$ = -8
?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z PROC NEAR ; CModelessDialog::Create, COMDAT
; _this$ = ecx

; 1085 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1086 :     WINDOWCREATECTX         ctx;
; 1087 :     
; 1088 :     if(pParent)

  00009	83 7d 10 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  0000d	74 0f		 je	 SHORT $L51613

; 1089 :     {
; 1090 :         SetParent(pParent);

  0000f	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00012	50		 push	 eax
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	ff 52 08	 call	 DWORD PTR [edx+8]
$L51613:

; 1091 :     }
; 1092 : 
; 1093 :     ctx.pWindow = this;

  0001e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _ctx$[ebp], eax

; 1094 :     ctx.pvContext = pvContext;

  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _pvContext$[ebp]
  00027	89 4d fc	 mov	 DWORD PTR _ctx$[ebp+4], ecx

; 1095 :     
; 1096 :     return CreateDialogParam(g_hInstance, MAKEINTRESOURCE(nResourceId), pParent ? pParent->m_hwnd : NULL, DialogProc, (LPARAM)&ctx);

  0002a	83 7d 10 00	 cmp	 DWORD PTR _pParent$[ebp], 0
  0002e	74 0b		 je	 SHORT $L51902
  00030	8b 55 10	 mov	 edx, DWORD PTR _pParent$[ebp]
  00033	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00036	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  00039	eb 07		 jmp	 SHORT $L51903
$L51902:
  0003b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L51903:
  00042	8d 4d f8	 lea	 ecx, DWORD PTR _ctx$[ebp]
  00045	51		 push	 ecx
  00046	68 00 00 00 00	 push	 OFFSET FLAT:?DialogProc@CDialog@@KGHPAUHWND__@@IIJ@Z ; CDialog::DialogProc
  0004b	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  0004e	52		 push	 edx
  0004f	8b 45 08	 mov	 eax, DWORD PTR _nResourceId$[ebp]
  00052	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00057	50		 push	 eax
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_hInstance
  0005e	51		 push	 ecx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDialogParamA@20

; 1097 : }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 0c 00	 ret	 12			; 0000000cH
?Create@CModelessDialog@@UAEPAUHWND__@@IPAXPAVCWindow@@@Z ENDP ; CModelessDialog::Create
_TEXT	ENDS
END
