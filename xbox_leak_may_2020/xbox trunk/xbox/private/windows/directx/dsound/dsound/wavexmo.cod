; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\wavexmo.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
DSOUND_URW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_URW	ENDS
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@HLNMLIHP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_09GPGAJHPD@?$CIunknown?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@IMPCONDJ@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@PGACJKHL@?$CB?$CIx?5?$CG?5?$CIx?5?9?51?$CJ?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@KHLJBLPM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@MLMBNMPN@nLength?5?$DO?5sizeof?$CI?$CKpRunMarker?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@GEBIDJGO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@DHEFJAIP@IsValidAlgorithm?$CI?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@FFGMCHMA@m_pfnGetFilterPair?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06JAKMBBHB@DSOUND?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DG@DIPNMLMO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BF@JCCIJAPA@CDirectSound?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IDOOAHKJ@CDirectSoundBuffer?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IJJNEHOC@CDirectSoundBuffer?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@PKKBNDKL@CDirectSoundBuffer?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@PPDEBFDO@CDirectSoundBuffer?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@INMBMDIC@CDirectSoundBuffer?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@FNHOKAIC@CDirectSoundBuffer?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BGJIIJJH@CDirectSoundBuffer?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@EOPIEBA@CDirectSoundBuffer?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@IPGKAOBK@CDirectSoundBuffer?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@EJJCKIBH@CDirectSoundBuffer?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@IJCIHAHO@CDirectSoundBuffer?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@ENFJENBA@CDirectSoundBuffer?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@GMNMDMFI@CDirectSoundBuffer?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CFIEOKFB@CDirectSoundBuffer?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@GKILFNCM@CDirectSoundBuffer?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@BJHPKLFJ@CDirectSoundBuffer?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@FPOKJAEF@CDirectSoundBuffer?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@LECKPDBD@CDirectSoundBuffer?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@CEFJODPJ@CDirectSoundBuffer?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KCLFGBIJ@CDirectSoundBuffer?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@CJDDDDA@CDirectSoundBuffer?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@GALGNKNN@CDirectSoundBuffer?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@OMPMKPGG@CDirectSoundBuffer?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@DNKDAAOC@CDirectSoundBuffer?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CEGGDJFO@CDirectSoundBuffer?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@LIPCEEAM@CDirectSoundBuffer?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HPKGJBBG@CDirectSoundBuffer?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IGCEBFCD@CDirectSoundStream?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IEPFOHMO@CDirectSoundStream?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@BFEGBGIF@CDirectSoundStream?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@EFAECKOL@CDirectSoundStream?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@GPKLKEMB@CDirectSoundStream?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GCCGAGKM@CDirectSoundStream?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BDFCJLBN@CDirectSoundStream?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@MOKKBNNH@CDirectSoundStream?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GAINMLDE@CDirectSoundStream?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@KJJLHIOD@CDirectSoundStream?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@HMGNJNIP@CDirectSoundStream?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@JBGAKHBK@CDirectSoundStream?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@KGJDLLDP@CDirectSoundStream?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OPMLGNDG@CDirectSoundStream?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@JMIIELEI@CDirectSoundStream?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@EABPIKPF@CDirectSoundStream?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@BBDBCKJO@CDirectSoundStream?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@POADFFEE@CDirectSoundStream?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@GOHAEFKO@CDirectSoundStream?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KPNNMBKF@CDirectSoundStream?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@OCJKODME@CDirectSoundStream?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@IALPAKCJ@CDirectSoundStream?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@DPOABEBK@CDirectSoundStream?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@PHOMIHIF@CDirectSoundStream?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OOCJLODJ@CDirectSoundStream?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ENLHKJPN@CDirectSoundStream?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@DFIPDHEB@CDirectSoundStream?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@JNKFENGM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@JCBGLFIF@?$CBm_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@JLKNBNJM@?$CBm_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@BMLCBDGO@m_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ELEAODJN@dwNotifierIndex?5?$DM?5m_dwNotifierCo@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@MEDKFNKN@Unexpected?5notifier?5status?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BC@NHNIONPC@m_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@NBALOMF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BA@IANIBDAF@m_pGpDspManager?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@ONCKHILO@m_dwState?5?$CG?5MCPX_APUSTATE_GPIMAG@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@FGGNHBE@KeGetCurrentIrql?$CI?$CJ?5?$DO?$DN?5DISPATCH_L@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@IECLLDN@m_dwVoiceMapLock?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@FFOHIBNC@m_dwVoiceMapLock?5?$DO?$DN?51?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@MEFGGIAF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DB@IBOGJEGG@WAVE_FORMAT_PCM?5?$DN?$DN?5m_pSettings?9?$DO@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CP@IDFLDLJM@?$CB?$CIm_pSettings?9?$DOm_dwFlags?5?$CG?5DSBCA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0EJ@DJPLDOLH@m_pSettings?9?$DOm_pMixinBuffer?9?$DOm_p@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@MBLALCOP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@CELCEBLE@CAc97MediaObject?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@OKDMHHHN@CAc97MediaObject?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@NLKBAEGB@m_pwfxFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0M@GKGAFLDL@?$CBpxmbSource?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_08IFNCLCJG@pxmbDest?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@EGMOEPLH@pxmbDest?9?$DOpvBuffer?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@CKJOFCDP@pxmbDest?9?$DOdwMaxSize?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_05GFDKCJGP@pInfo?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@DNGDKPLK@pxmbSource?5?$HM?$HM?5pxmbDest?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@HCJGPKLD@?$CB?$CIpxmbSource?5?$CG?$CG?5pxmbDest?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BF@JLFMHMCK@pxmbSource?9?$DOpvBuffer?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@KEPNCPPF@pxmbSource?9?$DOdwMaxSize?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
DSOUND_RW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RW	ENDS
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _IsEqualGUID@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _==@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeGetCurrentIrql@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeIsExecutingDpc@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_AddRef@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_Release@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_BeginScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_EndScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DPalette_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _log10f@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _sqrtf@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _wmemchr@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?InsertHeadListUninit@@YGXPAU_LIST_ENTRY@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??3@YAXPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CIrql@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Raise@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Lower@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Save@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Restore@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CRefCount@DirectSound@@QAE@K@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?FloatToLong@Math@DirectSound@@YGJM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?lsb@Math@DirectSound@@YIII@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?IsValidAlgorithm@CHrtfSource@DirectSound@@SGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ReleaseChannel@CAc97Device@DirectSound@@QAEXPAVCAc97Channel@2@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundEnterCriticalSection@@YGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundLeaveCriticalSection@@YGXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Initialize@CMcpxNotifier@DirectSound@@QAEXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Free@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Reset@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetScratchSpaceLinAddr@CMcpxDspScratchDma@DirectSound@@QAEPAXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CWaveFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CWaveFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetStatus@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Discontinuity@CWaveFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Flush@CWaveFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetLength@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFormat@CWaveFileMediaObject@DirectSound@@UAGJPAPBUtWAVEFORMATEX@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetLoopRegion@CWaveFileMediaObject@DirectSound@@UAGJPAK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetStatus@CFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Discontinuity@CFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Flush@CFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Seek@CFileMediaObject@DirectSound@@UAGJJKPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetLength@CFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CWaveFileMediaObject@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCWaveFileMediaObject@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0XWaveFileMediaObject@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0XFileMediaObject@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0XMediaObject@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CWaveFileMediaObject@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetInfo@CWaveFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Process@CWaveFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Seek@CWaveFileMediaObject@DirectSound@@UAGJJKPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CFileMediaObject@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCFileMediaObject@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CFileMediaObject@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetInfo@CFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Process@CFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDEOEE@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDECCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDECCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDFDCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDFDCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EBEDDJDH@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EBEDDJDH@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDEOEE@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDECCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDFDCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EBEDDJDH@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CWaveFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CWaveFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7XFileMediaObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7XWaveFileMediaObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7XMediaObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDECCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EBEDDJDH@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDEOEE@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveFileMediaObject@DirectSound@@6BXWaveFileMediaObject@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDFDCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFileMediaObject@DirectSound@@6BXFileMediaObject@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFileMediaObject@DirectSound@@6BCRefCount@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWaveFileMediaObject@DirectSound@@6BCRefCount@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V, DSOUND_RW
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
PUBLIC	_DSoundBuildNumberD
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
DSOUND_RD	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT
_DSoundBuildNumberD DW 05344H
	DW	0554fH
	DW	0444eH
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	??0XWaveFileMediaObject@@QAE@XZ			; XWaveFileMediaObject::XWaveFileMediaObject
PUBLIC	??0CWaveFileMediaObject@DirectSound@@QAE@XZ	; DirectSound::CWaveFileMediaObject::CWaveFileMediaObject
PUBLIC	?AddRef@CWaveFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CWaveFileMediaObject::AddRef
PUBLIC	?Release@CWaveFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CWaveFileMediaObject::Release
PUBLIC	?GetInfo@CWaveFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z ; DirectSound::CWaveFileMediaObject::GetInfo
PUBLIC	?GetStatus@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z ; DirectSound::CWaveFileMediaObject::GetStatus
PUBLIC	?Process@CWaveFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z ; DirectSound::CWaveFileMediaObject::Process
PUBLIC	?Discontinuity@CWaveFileMediaObject@DirectSound@@UAGJXZ ; DirectSound::CWaveFileMediaObject::Discontinuity
PUBLIC	?Flush@CWaveFileMediaObject@DirectSound@@UAGJXZ	; DirectSound::CWaveFileMediaObject::Flush
PUBLIC	?Seek@CWaveFileMediaObject@DirectSound@@UAGJJKPAK@Z ; DirectSound::CWaveFileMediaObject::Seek
PUBLIC	?GetLength@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z ; DirectSound::CWaveFileMediaObject::GetLength
PUBLIC	?GetFormat@CWaveFileMediaObject@DirectSound@@UAGJPAPBUtWAVEFORMATEX@@@Z ; DirectSound::CWaveFileMediaObject::GetFormat
PUBLIC	?GetLoopRegion@CWaveFileMediaObject@DirectSound@@UAGJPAK0@Z ; DirectSound::CWaveFileMediaObject::GetLoopRegion
PUBLIC	??_7CWaveFileMediaObject@DirectSound@@6BXWaveFileMediaObject@@@ ; DirectSound::CWaveFileMediaObject::`vftable'
PUBLIC	??_7CWaveFileMediaObject@DirectSound@@6BCRefCount@1@@ ; DirectSound::CWaveFileMediaObject::`vftable'
PUBLIC	??_GCWaveFileMediaObject@DirectSound@@UAEPAXI@Z	; DirectSound::CWaveFileMediaObject::`scalar deleting destructor'
PUBLIC	??0CRefCount@DirectSound@@QAE@K@Z		; DirectSound::CRefCount::CRefCount
PUBLIC	?AddRef@CWaveFileMediaObject@DirectSound@@W3AGKXZ ; DirectSound::CWaveFileMediaObject::AddRef
PUBLIC	?Release@CWaveFileMediaObject@DirectSound@@W3AGKXZ ; DirectSound::CWaveFileMediaObject::Release
EXTRN	??_ECWaveFileMediaObject@DirectSound@@UAEPAXI@Z:NEAR ; DirectSound::CWaveFileMediaObject::`vector deleting destructor'
EXTRN	??0CWaveFile@WaveLoader@@QAE@XZ:NEAR		; WaveLoader::CWaveFile::CWaveFile
;	COMDAT ??_7CWaveFileMediaObject@DirectSound@@6BXWaveFileMediaObject@@@
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.cpp
CONST	SEGMENT
??_7CWaveFileMediaObject@DirectSound@@6BXWaveFileMediaObject@@@ DD FLAT:?AddRef@CWaveFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CWaveFileMediaObject::`vftable'
	DD	FLAT:?Release@CWaveFileMediaObject@DirectSound@@UAGKXZ
	DD	FLAT:?GetInfo@CWaveFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z
	DD	FLAT:?GetStatus@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z
	DD	FLAT:?Process@CWaveFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z
	DD	FLAT:?Discontinuity@CWaveFileMediaObject@DirectSound@@UAGJXZ
	DD	FLAT:?Flush@CWaveFileMediaObject@DirectSound@@UAGJXZ
	DD	FLAT:?Seek@CWaveFileMediaObject@DirectSound@@UAGJJKPAK@Z
	DD	FLAT:?GetLength@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z
	DD	FLAT:?GetFormat@CWaveFileMediaObject@DirectSound@@UAGJPAPBUtWAVEFORMATEX@@@Z
	DD	FLAT:?GetLoopRegion@CWaveFileMediaObject@DirectSound@@UAGJPAK0@Z
CONST	ENDS
;	COMDAT ??_7CWaveFileMediaObject@DirectSound@@6BCRefCount@1@@
CONST	SEGMENT
??_7CWaveFileMediaObject@DirectSound@@6BCRefCount@1@@ DD FLAT:??_ECWaveFileMediaObject@DirectSound@@UAEPAXI@Z ; DirectSound::CWaveFileMediaObject::`vftable'
	DD	FLAT:?AddRef@CWaveFileMediaObject@DirectSound@@W3AGKXZ
	DD	FLAT:?Release@CWaveFileMediaObject@DirectSound@@W3AGKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CWaveFileMediaObject@DirectSound@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0CWaveFileMediaObject@DirectSound@@QAE@XZ PROC NEAR	; DirectSound::CWaveFileMediaObject::CWaveFileMediaObject, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0XWaveFileMediaObject@@QAE@XZ
  0000f	6a 01		 push	 1
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 04	 add	 ecx, 4
  00017	e8 00 00 00 00	 call	 ??0CRefCount@DirectSound@@QAE@K@Z ; DirectSound::CRefCount::CRefCount
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00022	e8 00 00 00 00	 call	 ??0CWaveFile@WaveLoader@@QAE@XZ ; WaveLoader::CWaveFile::CWaveFile
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWaveFileMediaObject@DirectSound@@6BXWaveFileMediaObject@@@
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET FLAT:??_7CWaveFileMediaObject@DirectSound@@6BCRefCount@1@@

; 40   :     DPF_ENTER();
; 41   : 
; 42   :     //
; 43   :     // Initialize defaults
; 44   :     //
; 45   :     
; 46   :     m_dwReadOffset = 0;

  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	c7 42 4c 00 00
	00 00		 mov	 DWORD PTR [edx+76], 0

; 47   : 
; 48   :     DPF_LEAVE_VOID();
; 49   : }

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0CWaveFileMediaObject@DirectSound@@QAE@XZ ENDP	; DirectSound::CWaveFileMediaObject::CWaveFileMediaObject
DSOUND	ENDS
PUBLIC	?AddRef@CRefCount@DirectSound@@UAGKXZ		; DirectSound::CRefCount::AddRef
PUBLIC	?Release@CRefCount@DirectSound@@UAGKXZ		; DirectSound::CRefCount::Release
PUBLIC	??_7CRefCount@DirectSound@@6B@			; DirectSound::CRefCount::`vftable'
PUBLIC	??_GCRefCount@DirectSound@@UAEPAXI@Z		; DirectSound::CRefCount::`scalar deleting destructor'
EXTRN	??_ECRefCount@DirectSound@@UAEPAXI@Z:NEAR	; DirectSound::CRefCount::`vector deleting destructor'
;	COMDAT ??_7CRefCount@DirectSound@@6B@
; File c:\xbox\private\windows\directx\dsound\common\refcount.h
CONST	SEGMENT
??_7CRefCount@DirectSound@@6B@ DD FLAT:??_ECRefCount@DirectSound@@UAEPAXI@Z ; DirectSound::CRefCount::`vftable'
	DD	FLAT:?AddRef@CRefCount@DirectSound@@UAGKXZ
	DD	FLAT:?Release@CRefCount@DirectSound@@UAGKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CRefCount@DirectSound@@QAE@K@Z
DSOUND	SEGMENT
_this$ = -4
_dwInitialRefCount$ = 8
??0CRefCount@DirectSound@@QAE@K@Z PROC NEAR		; DirectSound::CRefCount::CRefCount, COMDAT
; _this$ = ecx

; 37   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRefCount@DirectSound@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _dwInitialRefCount$[ebp]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 38   :     }

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CRefCount@DirectSound@@QAE@K@Z ENDP			; DirectSound::CRefCount::CRefCount
DSOUND	ENDS
PUBLIC	??1CRefCount@DirectSound@@UAE@XZ		; DirectSound::CRefCount::~CRefCount
; Function compile flags: /Odt
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT
_this$ = -4
___flags$ = 8
??_GCRefCount@DirectSound@@UAEPAXI@Z PROC NEAR		; DirectSound::CRefCount::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CRefCount@DirectSound@@UAE@XZ ; DirectSound::CRefCount::~CRefCount
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L30389
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L30389:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCRefCount@DirectSound@@UAEPAXI@Z ENDP		; DirectSound::CRefCount::`scalar deleting destructor'
DSOUND	ENDS
EXTRN	?TrackingMemFree@CMemoryManager@DirectSound@@SGXPAX@Z:NEAR ; DirectSound::CMemoryManager::TrackingMemFree
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\memmgr.h
;	COMDAT ??3@YAXPAX@Z
DSOUND	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 244  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  :     DirectSound::CMemoryManager::TrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?TrackingMemFree@CMemoryManager@DirectSound@@SGXPAX@Z ; DirectSound::CMemoryManager::TrackingMemFree

; 246  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
DSOUND	ENDS
PUBLIC	??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@		; `string'
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
;	COMDAT ??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
; File c:\xbox\private\windows\directx\dsound\common\refcount.h
DSOUND_RD	SEGMENT
??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\common\refcount.h', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
DSOUND_RD	SEGMENT
??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@ DB '!m_dwRefCount', 00H ; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
DSOUND	SEGMENT
_this$ = -4
??1CRefCount@DirectSound@@UAE@XZ PROC NEAR		; DirectSound::CRefCount::~CRefCount, COMDAT
; _this$ = ecx

; 41   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRefCount@DirectSound@@6B@

; 42   :         ASSERT(!m_dwRefCount);

  00010	6a 2a		 push	 42			; 0000002aH
  00012	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00025	0f 95 c2	 setne	 dl
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0002e	83 c4 10	 add	 esp, 16			; 00000010H

; 43   :     }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??1CRefCount@DirectSound@@UAE@XZ ENDP			; DirectSound::CRefCount::~CRefCount
DSOUND	ENDS
PUBLIC	??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@ ; `string'
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT
??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@ DB 'm_dwRefCount < ~0'
	DB	'UL', 00H					; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT
_this$ = 8
?AddRef@CRefCount@DirectSound@@UAGKXZ PROC NEAR		; DirectSound::CRefCount::AddRef, COMDAT

; 46   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   :         ASSERT(m_dwRefCount < ~0UL);

  00003	6a 2f		 push	 47			; 0000002fH
  00005	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
  0000f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 78 04 ff	 cmp	 DWORD PTR [eax+4], -1
  00016	1b c9		 sbb	 ecx, ecx
  00018	41		 inc	 ecx
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0001f	83 c4 10	 add	 esp, 16			; 00000010H

; 48   :         return ++m_dwRefCount;

  00022	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	83 c0 01	 add	 eax, 1
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00031	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 49   :     }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?AddRef@CRefCount@DirectSound@@UAGKXZ ENDP		; DirectSound::CRefCount::AddRef
DSOUND	ENDS
PUBLIC	??_C@_0N@OILPJBKD@m_dwRefCount?$AA@		; `string'
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
DSOUND_RD	SEGMENT
??_C@_0N@OILPJBKD@m_dwRefCount?$AA@ DB 'm_dwRefCount', 00H ; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT
tv84 = -12
$T36017 = -8
$T36016 = -4
_this$ = 8
?Release@CRefCount@DirectSound@@UAGKXZ PROC NEAR	; DirectSound::CRefCount::Release, COMDAT

; 52   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 53   :         ASSERT(m_dwRefCount);

  00006	6a 35		 push	 53			; 00000035H
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
  0000d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
  00012	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00015	33 c9		 xor	 ecx, ecx
  00017	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001b	0f 94 c1	 sete	 cl
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 54   : 
; 55   :         if(m_dwRefCount > 0)

  00027	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  0002e	76 46		 jbe	 SHORT $L30406

; 56   :         {
; 57   :             if(!--m_dwRefCount)

  00030	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00036	83 e9 01	 sub	 ecx, 1
  00039	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00046	75 2e		 jne	 SHORT $L30406

; 58   :             {
; 59   :                 delete this;

  00048	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	89 4d f8	 mov	 DWORD PTR $T36017[ebp], ecx
  0004e	8b 55 f8	 mov	 edx, DWORD PTR $T36017[ebp]
  00051	89 55 fc	 mov	 DWORD PTR $T36016[ebp], edx
  00054	83 7d fc 00	 cmp	 DWORD PTR $T36016[ebp], 0
  00058	74 11		 je	 SHORT $L36018
  0005a	6a 01		 push	 1
  0005c	8b 45 fc	 mov	 eax, DWORD PTR $T36016[ebp]
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	8b 4d fc	 mov	 ecx, DWORD PTR $T36016[ebp]
  00064	ff 12		 call	 DWORD PTR [edx]
  00066	89 45 f4	 mov	 DWORD PTR tv84[ebp], eax
  00069	eb 07		 jmp	 SHORT $L36019
$L36018:
  0006b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$L36019:

; 60   :                 return 0;

  00072	33 c0		 xor	 eax, eax
  00074	eb 06		 jmp	 SHORT $L30404
$L30406:

; 61   :             }
; 62   :         }
; 63   : 
; 64   :         return m_dwRefCount;

  00076	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L30404:

; 65   :     }

  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?Release@CRefCount@DirectSound@@UAGKXZ ENDP		; DirectSound::CRefCount::Release
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.h
DSOUND	ENDS
;	COMDAT ?AddRef@CWaveFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT
_this$ = 8
?AddRef@CWaveFileMediaObject@DirectSound@@UAGKXZ PROC NEAR ; DirectSound::CWaveFileMediaObject::AddRef, COMDAT

; 61   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   :         return CRefCount::AddRef();

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?AddRef@CRefCount@DirectSound@@UAGKXZ ; DirectSound::CRefCount::AddRef

; 63   :     }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?AddRef@CWaveFileMediaObject@DirectSound@@UAGKXZ ENDP	; DirectSound::CWaveFileMediaObject::AddRef
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Release@CWaveFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT
_this$ = 8
?Release@CWaveFileMediaObject@DirectSound@@UAGKXZ PROC NEAR ; DirectSound::CWaveFileMediaObject::Release, COMDAT

; 66   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   :         return CRefCount::Release();

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?Release@CRefCount@DirectSound@@UAGKXZ ; DirectSound::CRefCount::Release

; 68   :     }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?Release@CWaveFileMediaObject@DirectSound@@UAGKXZ ENDP	; DirectSound::CWaveFileMediaObject::Release
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?GetStatus@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT
_this$ = 8
_pdwStatus$ = 12
?GetStatus@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::GetStatus, COMDAT

; 81   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   :         *pdwStatus = XMO_STATUSF_ACCEPT_OUTPUT_DATA;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pdwStatus$[ebp]
  00006	c7 00 02 00 00
	00		 mov	 DWORD PTR [eax], 2

; 83   :         return DS_OK;

  0000c	33 c0		 xor	 eax, eax

; 84   :     }

  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?GetStatus@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z ENDP ; DirectSound::CWaveFileMediaObject::GetStatus
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Discontinuity@CWaveFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT
_this$ = 8
?Discontinuity@CWaveFileMediaObject@DirectSound@@UAGJXZ PROC NEAR ; DirectSound::CWaveFileMediaObject::Discontinuity, COMDAT

; 87   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 88   :         return S_OK;

  00003	33 c0		 xor	 eax, eax

; 89   :     }

  00005	5d		 pop	 ebp
  00006	c2 04 00	 ret	 4
?Discontinuity@CWaveFileMediaObject@DirectSound@@UAGJXZ ENDP ; DirectSound::CWaveFileMediaObject::Discontinuity
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Flush@CWaveFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT
_this$ = 8
?Flush@CWaveFileMediaObject@DirectSound@@UAGJXZ PROC NEAR ; DirectSound::CWaveFileMediaObject::Flush, COMDAT

; 92   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 93   :         return Seek(0, FILE_BEGIN, NULL);

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00011	52		 push	 edx
  00012	ff 51 1c	 call	 DWORD PTR [ecx+28]

; 94   :     }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?Flush@CWaveFileMediaObject@DirectSound@@UAGJXZ ENDP	; DirectSound::CWaveFileMediaObject::Flush
DSOUND	ENDS
PUBLIC	?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z	; WaveLoader::CWaveFile::GetDuration
; Function compile flags: /Odt
;	COMDAT ?GetLength@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT
_this$ = 8
_pdwLength$ = 12
?GetLength@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::GetLength, COMDAT

; 97   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 98   :         return CWaveFile::GetDuration(pdwLength);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pdwLength$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000d	e8 00 00 00 00	 call	 ?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z ; WaveLoader::CWaveFile::GetDuration

; 99   :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?GetLength@CWaveFileMediaObject@DirectSound@@UAGJPAK@Z ENDP ; DirectSound::CWaveFileMediaObject::GetLength
DSOUND	ENDS
PUBLIC	?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ	; WaveLoader::CRiffChunk::GetDataSize
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\waveldr.h
;	COMDAT ?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z
DSOUND	SEGMENT
_this$ = -4
_pdwDuration$ = 8
?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z PROC NEAR	; WaveLoader::CWaveFile::GetDuration, COMDAT
; _this$ = ecx

; 357  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 358  :         *pdwDuration = m_DataChunk.GetDataSize();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 20	 add	 ecx, 32			; 00000020H
  0000d	e8 00 00 00 00	 call	 ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ ; WaveLoader::CRiffChunk::GetDataSize
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _pdwDuration$[ebp]
  00015	89 01		 mov	 DWORD PTR [ecx], eax

; 359  :         return S_OK;

  00017	33 c0		 xor	 eax, eax

; 360  :     }

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z ENDP	; WaveLoader::CWaveFile::GetDuration
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT
_this$ = -4
?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ PROC NEAR	; WaveLoader::CRiffChunk::GetDataSize, COMDAT
; _this$ = ecx

; 276  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 277  :         return m_dwDataSize;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 278  :     }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ ENDP		; WaveLoader::CRiffChunk::GetDataSize
DSOUND	ENDS
PUBLIC	?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z ; WaveLoader::CWaveFile::GetFormat
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.h
;	COMDAT ?GetFormat@CWaveFileMediaObject@DirectSound@@UAGJPAPBUtWAVEFORMATEX@@@Z
DSOUND	SEGMENT
_this$ = 8
_ppwfxFormat$ = 12
?GetFormat@CWaveFileMediaObject@DirectSound@@UAGJPAPBUtWAVEFORMATEX@@@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::GetFormat, COMDAT

; 102  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  :         return CWaveFile::GetFormat(ppwfxFormat);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _ppwfxFormat$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000d	e8 00 00 00 00	 call	 ?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z ; WaveLoader::CWaveFile::GetFormat

; 104  :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?GetFormat@CWaveFileMediaObject@DirectSound@@UAGJPAPBUtWAVEFORMATEX@@@Z ENDP ; DirectSound::CWaveFileMediaObject::GetFormat
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\common\waveldr.h
DSOUND	ENDS
;	COMDAT ?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z
DSOUND	SEGMENT
_this$ = -4
_ppwfxFormat$ = 8
?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z PROC NEAR ; WaveLoader::CWaveFile::GetFormat, COMDAT
; _this$ = ecx

; 363  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  :         *ppwfxFormat = m_pwfxFormat;

  00007	8b 45 08	 mov	 eax, DWORD PTR _ppwfxFormat$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 365  :         return S_OK;

  00012	33 c0		 xor	 eax, eax

; 366  :     }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z ENDP ; WaveLoader::CWaveFile::GetFormat
DSOUND	ENDS
EXTRN	?GetLoopRegion@CWaveFile@WaveLoader@@QAEJPAK0@Z:NEAR ; WaveLoader::CWaveFile::GetLoopRegion
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.h
;	COMDAT ?GetLoopRegion@CWaveFileMediaObject@DirectSound@@UAGJPAK0@Z
DSOUND	SEGMENT
_this$ = 8
_pdwLoopStart$ = 12
_pdwLoopLength$ = 16
?GetLoopRegion@CWaveFileMediaObject@DirectSound@@UAGJPAK0@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::GetLoopRegion, COMDAT

; 107  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  :         return CWaveFile::GetLoopRegion(pdwLoopStart, pdwLoopLength);

  00003	8b 45 10	 mov	 eax, DWORD PTR _pdwLoopLength$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _pdwLoopStart$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00011	e8 00 00 00 00	 call	 ?GetLoopRegion@CWaveFile@WaveLoader@@QAEJPAK0@Z ; WaveLoader::CWaveFile::GetLoopRegion

; 109  :     }

  00016	5d		 pop	 ebp
  00017	c2 0c 00	 ret	 12			; 0000000cH
?GetLoopRegion@CWaveFileMediaObject@DirectSound@@UAGJPAK0@Z ENDP ; DirectSound::CWaveFileMediaObject::GetLoopRegion
DSOUND	ENDS
PUBLIC	??1CWaveFileMediaObject@DirectSound@@UAE@XZ	; DirectSound::CWaveFileMediaObject::~CWaveFileMediaObject
; Function compile flags: /Odt
;	COMDAT ??_GCWaveFileMediaObject@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT
_this$ = -4
___flags$ = 8
??_GCWaveFileMediaObject@DirectSound@@UAEPAXI@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWaveFileMediaObject@DirectSound@@UAE@XZ ; DirectSound::CWaveFileMediaObject::~CWaveFileMediaObject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0f		 je	 SHORT $L35558
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 e9 04	 sub	 ecx, 4
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$L35558:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 e8 04	 sub	 eax, 4
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCWaveFileMediaObject@DirectSound@@UAEPAXI@Z ENDP	; DirectSound::CWaveFileMediaObject::`scalar deleting destructor'
DSOUND	ENDS
PUBLIC	??0XFileMediaObject@@QAE@XZ			; XFileMediaObject::XFileMediaObject
; Function compile flags: /Odt
;	COMDAT ??0XWaveFileMediaObject@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0XWaveFileMediaObject@@QAE@XZ PROC NEAR		; XWaveFileMediaObject::XWaveFileMediaObject, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0XFileMediaObject@@QAE@XZ
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0XWaveFileMediaObject@@QAE@XZ ENDP			; XWaveFileMediaObject::XWaveFileMediaObject
DSOUND	ENDS
PUBLIC	??0XMediaObject@@QAE@XZ				; XMediaObject::XMediaObject
; Function compile flags: /Odt
;	COMDAT ??0XFileMediaObject@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0XFileMediaObject@@QAE@XZ PROC NEAR			; XFileMediaObject::XFileMediaObject, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0XMediaObject@@QAE@XZ
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0XFileMediaObject@@QAE@XZ ENDP			; XFileMediaObject::XFileMediaObject
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ??0XMediaObject@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0XMediaObject@@QAE@XZ PROC NEAR			; XMediaObject::XMediaObject, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0XMediaObject@@QAE@XZ ENDP				; XMediaObject::XMediaObject
DSOUND	ENDS
EXTRN	??1CWaveFile@WaveLoader@@QAE@XZ:NEAR		; WaveLoader::CWaveFile::~CWaveFile
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.cpp
;	COMDAT ??1CWaveFileMediaObject@DirectSound@@UAE@XZ
DSOUND	SEGMENT
tv71 = -12
tv77 = -8
_this$ = -4
??1CWaveFileMediaObject@DirectSound@@UAE@XZ PROC NEAR	; DirectSound::CWaveFileMediaObject::~CWaveFileMediaObject, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 40 fc 00 00
	00 00		 mov	 DWORD PTR [eax-4], OFFSET FLAT:??_7CWaveFileMediaObject@DirectSound@@6BXWaveFileMediaObject@@@
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CWaveFileMediaObject@DirectSound@@6BCRefCount@1@@

; 75   :     DPF_ENTER();
; 76   :     DPF_LEAVE_VOID();
; 77   : }

  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	83 ea 04	 sub	 edx, 4
  00022	85 d2		 test	 edx, edx
  00024	74 0b		 je	 SHORT $L36070
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c0 08	 add	 eax, 8
  0002c	89 45 f8	 mov	 DWORD PTR tv77[ebp], eax
  0002f	eb 07		 jmp	 SHORT $L36071
$L36070:
  00031	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$L36071:
  00038	8b 4d f8	 mov	 ecx, DWORD PTR tv77[ebp]
  0003b	e8 00 00 00 00	 call	 ??1CWaveFile@WaveLoader@@QAE@XZ ; WaveLoader::CWaveFile::~CWaveFile
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 e9 04	 sub	 ecx, 4
  00046	85 c9		 test	 ecx, ecx
  00048	74 08		 je	 SHORT $L36068
  0004a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004d	89 55 f4	 mov	 DWORD PTR tv71[ebp], edx
  00050	eb 07		 jmp	 SHORT $L36069
$L36068:
  00052	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$L36069:
  00059	8b 4d f4	 mov	 ecx, DWORD PTR tv71[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CRefCount@DirectSound@@UAE@XZ ; DirectSound::CRefCount::~CRefCount
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??1CWaveFileMediaObject@DirectSound@@UAE@XZ ENDP	; DirectSound::CWaveFileMediaObject::~CWaveFileMediaObject
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?GetInfo@CWaveFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z
DSOUND	SEGMENT
_this$ = 8
_pInfo$ = 12
?GetInfo@CWaveFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::GetInfo, COMDAT

; 103  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 104  :     DPF_ENTER();
; 105  : 
; 106  :     pInfo->dwFlags = XMO_STREAMF_FIXED_SAMPLE_SIZE;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pInfo$[ebp]
  00006	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 107  :     pInfo->dwMaxLookahead = 0;

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  0000f	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 108  :     pInfo->dwInputSize = 0;

  00016	8b 55 0c	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00019	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 109  :     pInfo->dwOutputSize = m_pwfxFormat->nBlockAlign;

  00020	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00026	0f b7 51 0c	 movzx	 edx, WORD PTR [ecx+12]
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _pInfo$[ebp]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 110  : 
; 111  :     DPF_LEAVE_HRESULT(DS_OK);
; 112  : 
; 113  :     return DS_OK;

  00030	33 c0		 xor	 eax, eax

; 114  : }

  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?GetInfo@CWaveFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z ENDP ; DirectSound::CWaveFileMediaObject::GetInfo
DSOUND	ENDS
PUBLIC	?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z	; XMOAcceptPacket
PUBLIC	?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ; XMOCompletePacket
PUBLIC	??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0N@NLKBAEGB@m_pwfxFormat?$AA@		; `string'
PUBLIC	??_C@_0M@GKGAFLDL@?$CBpxmbSource?$AA@		; `string'
PUBLIC	??_C@_08IFNCLCJG@pxmbDest?$AA@			; `string'
PUBLIC	??_C@_0BD@EGMOEPLH@pxmbDest?9?$DOpvBuffer?$AA@	; `string'
PUBLIC	??_C@_0BE@CKJOFCDP@pxmbDest?9?$DOdwMaxSize?$AA@	; `string'
EXTRN	?ReadSample@CWaveFile@WaveLoader@@QAEJKPAXKPAK@Z:NEAR ; WaveLoader::CWaveFile::ReadSample
;	COMDAT ??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT
??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\dsound\wavexmo.cpp', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@NLKBAEGB@m_pwfxFormat?$AA@
DSOUND_RD	SEGMENT
??_C@_0N@NLKBAEGB@m_pwfxFormat?$AA@ DB 'm_pwfxFormat', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0M@GKGAFLDL@?$CBpxmbSource?$AA@
DSOUND_RD	SEGMENT
??_C@_0M@GKGAFLDL@?$CBpxmbSource?$AA@ DB '!pxmbSource', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_08IFNCLCJG@pxmbDest?$AA@
DSOUND_RD	SEGMENT
??_C@_08IFNCLCJG@pxmbDest?$AA@ DB 'pxmbDest', 00H	; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@EGMOEPLH@pxmbDest?9?$DOpvBuffer?$AA@
DSOUND_RD	SEGMENT
??_C@_0BD@EGMOEPLH@pxmbDest?9?$DOpvBuffer?$AA@ DB 'pxmbDest->pvBuffer', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@CKJOFCDP@pxmbDest?9?$DOdwMaxSize?$AA@
DSOUND_RD	SEGMENT
??_C@_0BE@CKJOFCDP@pxmbDest?9?$DOdwMaxSize?$AA@ DB 'pxmbDest->dwMaxSize', 00H ; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?Process@CWaveFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z
DSOUND	SEGMENT
_hr$ = -12
_pbDst$ = -8
_cbDst$ = -4
_this$ = 8
_pxmbSource$ = 12
_pxmbDest$ = 16
?Process@CWaveFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::Process, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 143  :     LPBYTE                  pbDst;
; 144  :     DWORD                   cbDst;
; 145  :     HRESULT                 hr;
; 146  : 
; 147  :     DPF_ENTER();
; 148  : 
; 149  :     ASSERT(m_pwfxFormat);

  00006	68 95 00 00 00	 push	 149			; 00000095H
  0000b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  00010	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@NLKBAEGB@m_pwfxFormat?$AA@
  00015	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  0001e	0f 94 c1	 sete	 cl
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00027	83 c4 10	 add	 esp, 16			; 00000010H

; 150  :     
; 151  :     //
; 152  :     // We're an output-only XMO, so we only use pxmbDest.  We'll just assume
; 153  :     // that it's valid and pxmbSource isn't.
; 154  :     //
; 155  : 
; 156  :     ASSERT(!pxmbSource);

  0002a	68 9c 00 00 00	 push	 156			; 0000009cH
  0002f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  00034	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@GKGAFLDL@?$CBpxmbSource?$AA@
  00039	33 d2		 xor	 edx, edx
  0003b	83 7d 0c 00	 cmp	 DWORD PTR _pxmbSource$[ebp], 0
  0003f	0f 95 c2	 setne	 dl
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00048	83 c4 10	 add	 esp, 16			; 00000010H

; 157  :     ASSERT(pxmbDest);

  0004b	68 9d 00 00 00	 push	 157			; 0000009dH
  00050	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  00055	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08IFNCLCJG@pxmbDest?$AA@
  0005a	33 c0		 xor	 eax, eax
  0005c	83 7d 10 00	 cmp	 DWORD PTR _pxmbDest$[ebp], 0
  00060	0f 94 c0	 sete	 al
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00069	83 c4 10	 add	 esp, 16			; 00000010H

; 158  :     ASSERT(pxmbDest->pvBuffer);

  0006c	68 9e 00 00 00	 push	 158			; 0000009eH
  00071	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  00076	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@EGMOEPLH@pxmbDest?9?$DOpvBuffer?$AA@
  0007b	8b 4d 10	 mov	 ecx, DWORD PTR _pxmbDest$[ebp]
  0007e	33 d2		 xor	 edx, edx
  00080	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00083	0f 94 c2	 sete	 dl
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0008c	83 c4 10	 add	 esp, 16			; 00000010H

; 159  :     ASSERT(pxmbDest->dwMaxSize);

  0008f	68 9f 00 00 00	 push	 159			; 0000009fH
  00094	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  00099	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@CKJOFCDP@pxmbDest?9?$DOdwMaxSize?$AA@
  0009e	8b 45 10	 mov	 eax, DWORD PTR _pxmbDest$[ebp]
  000a1	33 c9		 xor	 ecx, ecx
  000a3	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000a7	0f 94 c1	 sete	 cl
  000aa	51		 push	 ecx
  000ab	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000b0	83 c4 10	 add	 esp, 16			; 00000010H

; 160  : 
; 161  :     pbDst = (LPBYTE)pxmbDest->pvBuffer;

  000b3	8b 55 10	 mov	 edx, DWORD PTR _pxmbDest$[ebp]
  000b6	8b 02		 mov	 eax, DWORD PTR [edx]
  000b8	89 45 f8	 mov	 DWORD PTR _pbDst$[ebp], eax

; 162  :     cbDst = pxmbDest->dwMaxSize;

  000bb	8b 4d 10	 mov	 ecx, DWORD PTR _pxmbDest$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	89 55 fc	 mov	 DWORD PTR _cbDst$[ebp], edx

; 163  : 
; 164  :     //
; 165  :     // Block-align the size
; 166  :     //
; 167  : 
; 168  :     cbDst /= m_pwfxFormat->nBlockAlign;

  000c4	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  000ca	0f b7 49 0c	 movzx	 ecx, WORD PTR [ecx+12]
  000ce	8b 45 fc	 mov	 eax, DWORD PTR _cbDst$[ebp]
  000d1	33 d2		 xor	 edx, edx
  000d3	f7 f1		 div	 ecx
  000d5	89 45 fc	 mov	 DWORD PTR _cbDst$[ebp], eax

; 169  :     cbDst *= m_pwfxFormat->nBlockAlign;

  000d8	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000db	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  000de	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  000e2	8b 55 fc	 mov	 edx, DWORD PTR _cbDst$[ebp]
  000e5	0f af d1	 imul	 edx, ecx
  000e8	89 55 fc	 mov	 DWORD PTR _cbDst$[ebp], edx

; 170  : 
; 171  :     //
; 172  :     // Initialize packet output parameters
; 173  :     //
; 174  : 
; 175  :     XMOAcceptPacket(pxmbDest);

  000eb	8b 45 10	 mov	 eax, DWORD PTR _pxmbDest$[ebp]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z ; XMOAcceptPacket

; 176  : 
; 177  :     //
; 178  :     // Read from the file
; 179  :     //
; 180  : 
; 181  :     hr = CWaveFile::ReadSample(m_dwReadOffset, pbDst, cbDst, &cbDst);

  000f4	8d 4d fc	 lea	 ecx, DWORD PTR _cbDst$[ebp]
  000f7	51		 push	 ecx
  000f8	8b 55 fc	 mov	 edx, DWORD PTR _cbDst$[ebp]
  000fb	52		 push	 edx
  000fc	8b 45 f8	 mov	 eax, DWORD PTR _pbDst$[ebp]
  000ff	50		 push	 eax
  00100	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00106	52		 push	 edx
  00107	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0010d	e8 00 00 00 00	 call	 ?ReadSample@CWaveFile@WaveLoader@@QAEJKPAXKPAK@Z ; WaveLoader::CWaveFile::ReadSample
  00112	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 182  : 
; 183  :     //
; 184  :     // Update the read offset
; 185  :     //
; 186  : 
; 187  :     if(SUCCEEDED(hr))

  00115	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00119	7c 0f		 jl	 SHORT $L35590

; 188  :     {
; 189  :         m_dwReadOffset += cbDst;

  0011b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00121	03 4d fc	 add	 ecx, DWORD PTR _cbDst$[ebp]
  00124	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00127	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx
$L35590:

; 190  :     }
; 191  : 
; 192  :     //
; 193  :     // Complete the packet
; 194  :     //
; 195  : 
; 196  :     if(SUCCEEDED(hr))

  0012a	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0012e	7c 15		 jl	 SHORT $L35592

; 197  :     {
; 198  :         XMOCompletePacket(pxmbDest, cbDst);

  00130	6a 00		 push	 0
  00132	6a 00		 push	 0
  00134	6a 00		 push	 0
  00136	8b 45 fc	 mov	 eax, DWORD PTR _cbDst$[ebp]
  00139	50		 push	 eax
  0013a	8b 4d 10	 mov	 ecx, DWORD PTR _pxmbDest$[ebp]
  0013d	51		 push	 ecx
  0013e	e8 00 00 00 00	 call	 ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ; XMOCompletePacket

; 199  :     }
; 200  :     else

  00143	eb 14		 jmp	 SHORT $L35593
$L35592:

; 201  :     {
; 202  :         XMOCompletePacket(pxmbDest, 0, NULL, NULL, XMEDIAPACKET_STATUS_FAILURE);

  00145	68 05 40 00 80	 push	 -2147467259		; 80004005H
  0014a	6a 00		 push	 0
  0014c	6a 00		 push	 0
  0014e	6a 00		 push	 0
  00150	8b 55 10	 mov	 edx, DWORD PTR _pxmbDest$[ebp]
  00153	52		 push	 edx
  00154	e8 00 00 00 00	 call	 ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ; XMOCompletePacket
$L35593:

; 203  :     }
; 204  : 
; 205  :     DPF_LEAVE_HRESULT(hr);
; 206  : 
; 207  :     return hr;

  00159	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]

; 208  : }

  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 0c 00	 ret	 12			; 0000000cH
?Process@CWaveFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z ENDP ; DirectSound::CWaveFileMediaObject::Process
; Function compile flags: /Odt
; File c:\xbox\private\inc\dsoundp.h
DSOUND	ENDS
;	COMDAT ?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z
DSOUND	SEGMENT
_pxmp$ = 8
?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z PROC NEAR	; XMOAcceptPacket, COMDAT

; 1440 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1441 :     if(pxmp->pdwCompletedSize)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pxmp$[ebp]
  00006	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0000a	74 0c		 je	 SHORT $L27998

; 1442 :     {
; 1443 :         *pxmp->pdwCompletedSize = 0;

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _pxmp$[ebp]
  0000f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00012	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$L27998:

; 1444 :     }
; 1445 : 
; 1446 :     if(pxmp->pdwStatus)

  00018	8b 45 08	 mov	 eax, DWORD PTR _pxmp$[ebp]
  0001b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0001f	74 0c		 je	 SHORT $L27997

; 1447 :     {
; 1448 :         *pxmp->pdwStatus = XMEDIAPACKET_STATUS_PENDING;

  00021	8b 4d 08	 mov	 ecx, DWORD PTR _pxmp$[ebp]
  00024	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00027	c7 02 0a 00 00
	80		 mov	 DWORD PTR [edx], -2147483638 ; 8000000aH
$L27997:

; 1449 :     }
; 1450 : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z ENDP		; XMOAcceptPacket
DSOUND	ENDS
EXTRN	__imp__NtSetEvent@8:NEAR
; Function compile flags: /Odt
;	COMDAT ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z
DSOUND	SEGMENT
_pxmp$ = 8
_dwCompletedSize$ = 12
_pfnCallback$ = 16
_pvStreamContext$ = 20
_dwStatus$ = 24
?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z PROC NEAR ; XMOCompletePacket, COMDAT

; 1457 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1458 :     if(pxmp->pdwCompletedSize)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pxmp$[ebp]
  00006	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0000a	74 0b		 je	 SHORT $L28009

; 1459 :     {
; 1460 :         *pxmp->pdwCompletedSize = dwCompletedSize;

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _pxmp$[ebp]
  0000f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _dwCompletedSize$[ebp]
  00015	89 02		 mov	 DWORD PTR [edx], eax
$L28009:

; 1461 :     }
; 1462 : 
; 1463 :     if(pxmp->pdwStatus)

  00017	8b 4d 08	 mov	 ecx, DWORD PTR _pxmp$[ebp]
  0001a	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0001e	74 0b		 je	 SHORT $L28010

; 1464 :     {
; 1465 :         *pxmp->pdwStatus = dwStatus;

  00020	8b 55 08	 mov	 edx, DWORD PTR _pxmp$[ebp]
  00023	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00026	8b 4d 18	 mov	 ecx, DWORD PTR _dwStatus$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
$L28010:

; 1466 :     }
; 1467 : 
; 1468 :     if(pfnCallback)

  0002b	83 7d 10 00	 cmp	 DWORD PTR _pfnCallback$[ebp], 0
  0002f	74 14		 je	 SHORT $L28011

; 1469 :     {
; 1470 :         pfnCallback(pvStreamContext, pxmp->pContext, dwStatus);

  00031	8b 55 18	 mov	 edx, DWORD PTR _dwStatus$[ebp]
  00034	52		 push	 edx
  00035	8b 45 08	 mov	 eax, DWORD PTR _pxmp$[ebp]
  00038	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003b	51		 push	 ecx
  0003c	8b 55 14	 mov	 edx, DWORD PTR _pvStreamContext$[ebp]
  0003f	52		 push	 edx
  00040	ff 55 10	 call	 DWORD PTR _pfnCallback$[ebp]

; 1471 :     }
; 1472 :     else if(pxmp->hCompletionEvent)

  00043	eb 18		 jmp	 SHORT $L28008
$L28011:
  00045	8b 45 08	 mov	 eax, DWORD PTR _pxmp$[ebp]
  00048	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0004c	74 0f		 je	 SHORT $L28008

; 1473 :     {
; 1474 : 
; 1475 : #ifdef _NTEXAPI_
; 1476 : 
; 1477 :         NtSetEvent(pxmp->hCompletionEvent, NULL);

  0004e	6a 00		 push	 0
  00050	8b 4d 08	 mov	 ecx, DWORD PTR _pxmp$[ebp]
  00053	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00056	52		 push	 edx
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__NtSetEvent@8
$L28008:

; 1478 : 
; 1479 : #else // _NTEXAPI_
; 1480 : 
; 1481 :         SetEvent(pxmp->hCompletionEvent);
; 1482 : 
; 1483 : #endif // _NTEXAPI_
; 1484 : 
; 1485 :     }
; 1486 : }

  0005d	5d		 pop	 ebp
  0005e	c2 14 00	 ret	 20			; 00000014H
?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ENDP ; XMOCompletePacket
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.cpp
DSOUND	ENDS
;	COMDAT ?Seek@CWaveFileMediaObject@DirectSound@@UAGJJKPAK@Z
DSOUND	SEGMENT
tv64 = -4
_this$ = 8
_lOffset$ = 12
_dwOrigin$ = 16
_pdwAbsolute$ = 20
?Seek@CWaveFileMediaObject@DirectSound@@UAGJJKPAK@Z PROC NEAR ; DirectSound::CWaveFileMediaObject::Seek, COMDAT

; 238  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 239  :     DPF_ENTER();
; 240  :     
; 241  :     switch(dwOrigin)
; 242  :     {

  00004	8b 45 10	 mov	 eax, DWORD PTR _dwOrigin$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  0000a	83 7d fc 00	 cmp	 DWORD PTR tv64[ebp], 0
  0000e	74 08		 je	 SHORT $L35605
  00010	83 7d fc 02	 cmp	 DWORD PTR tv64[ebp], 2
  00014	74 0e		 je	 SHORT $L35606
  00016	eb 1d		 jmp	 SHORT $L35602
$L35605:

; 243  :         case FILE_BEGIN:
; 244  :             m_dwReadOffset = 0;

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 4c 00 00
	00 00		 mov	 DWORD PTR [ecx+76], 0

; 245  :             break;

  00022	eb 11		 jmp	 SHORT $L35602
$L35606:

; 246  : 
; 247  :         case FILE_END:
; 248  :             m_dwReadOffset = m_DataChunk.GetDataSize();

  00024	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0002a	e8 00 00 00 00	 call	 ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ ; WaveLoader::CRiffChunk::GetDataSize
  0002f	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00032	89 42 4c	 mov	 DWORD PTR [edx+76], eax
$L35602:

; 249  :             break;
; 250  :     }
; 251  : 
; 252  :     m_dwReadOffset += lOffset;

  00035	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0003b	03 4d 0c	 add	 ecx, DWORD PTR _lOffset$[ebp]
  0003e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00041	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx

; 253  : 
; 254  :     if(pdwAbsolute)

  00044	83 7d 14 00	 cmp	 DWORD PTR _pdwAbsolute$[ebp], 0
  00048	74 0b		 je	 SHORT $L35607

; 255  :     {
; 256  :         *pdwAbsolute = m_dwReadOffset;

  0004a	8b 45 14	 mov	 eax, DWORD PTR _pdwAbsolute$[ebp]
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00053	89 10		 mov	 DWORD PTR [eax], edx
$L35607:

; 257  :     }
; 258  : 
; 259  :     DPF_LEAVE_HRESULT(DS_OK);
; 260  : 
; 261  :     return DS_OK;

  00055	33 c0		 xor	 eax, eax

; 262  : }

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 10 00	 ret	 16			; 00000010H
?Seek@CWaveFileMediaObject@DirectSound@@UAGJJKPAK@Z ENDP ; DirectSound::CWaveFileMediaObject::Seek
DSOUND	ENDS
PUBLIC	??0CFileMediaObject@DirectSound@@QAE@XZ		; DirectSound::CFileMediaObject::CFileMediaObject
PUBLIC	?AddRef@CFileMediaObject@DirectSound@@UAGKXZ	; DirectSound::CFileMediaObject::AddRef
PUBLIC	?Release@CFileMediaObject@DirectSound@@UAGKXZ	; DirectSound::CFileMediaObject::Release
PUBLIC	?GetInfo@CFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z ; DirectSound::CFileMediaObject::GetInfo
PUBLIC	?GetStatus@CFileMediaObject@DirectSound@@UAGJPAK@Z ; DirectSound::CFileMediaObject::GetStatus
PUBLIC	?Process@CFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z ; DirectSound::CFileMediaObject::Process
PUBLIC	?Discontinuity@CFileMediaObject@DirectSound@@UAGJXZ ; DirectSound::CFileMediaObject::Discontinuity
PUBLIC	?Flush@CFileMediaObject@DirectSound@@UAGJXZ	; DirectSound::CFileMediaObject::Flush
PUBLIC	?Seek@CFileMediaObject@DirectSound@@UAGJJKPAK@Z	; DirectSound::CFileMediaObject::Seek
PUBLIC	?GetLength@CFileMediaObject@DirectSound@@UAGJPAK@Z ; DirectSound::CFileMediaObject::GetLength
PUBLIC	??_7CFileMediaObject@DirectSound@@6BXFileMediaObject@@@ ; DirectSound::CFileMediaObject::`vftable'
PUBLIC	??_7CFileMediaObject@DirectSound@@6BCRefCount@1@@ ; DirectSound::CFileMediaObject::`vftable'
PUBLIC	??_GCFileMediaObject@DirectSound@@UAEPAXI@Z	; DirectSound::CFileMediaObject::`scalar deleting destructor'
PUBLIC	?AddRef@CFileMediaObject@DirectSound@@W3AGKXZ	; DirectSound::CFileMediaObject::AddRef
PUBLIC	?Release@CFileMediaObject@DirectSound@@W3AGKXZ	; DirectSound::CFileMediaObject::Release
EXTRN	??_ECFileMediaObject@DirectSound@@UAEPAXI@Z:NEAR ; DirectSound::CFileMediaObject::`vector deleting destructor'
EXTRN	??0CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::CStdFileStream
;	COMDAT ??_7CFileMediaObject@DirectSound@@6BXFileMediaObject@@@
CONST	SEGMENT
??_7CFileMediaObject@DirectSound@@6BXFileMediaObject@@@ DD FLAT:?AddRef@CFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CFileMediaObject::`vftable'
	DD	FLAT:?Release@CFileMediaObject@DirectSound@@UAGKXZ
	DD	FLAT:?GetInfo@CFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z
	DD	FLAT:?GetStatus@CFileMediaObject@DirectSound@@UAGJPAK@Z
	DD	FLAT:?Process@CFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z
	DD	FLAT:?Discontinuity@CFileMediaObject@DirectSound@@UAGJXZ
	DD	FLAT:?Flush@CFileMediaObject@DirectSound@@UAGJXZ
	DD	FLAT:?Seek@CFileMediaObject@DirectSound@@UAGJJKPAK@Z
	DD	FLAT:?GetLength@CFileMediaObject@DirectSound@@UAGJPAK@Z
CONST	ENDS
;	COMDAT ??_7CFileMediaObject@DirectSound@@6BCRefCount@1@@
CONST	SEGMENT
??_7CFileMediaObject@DirectSound@@6BCRefCount@1@@ DD FLAT:??_ECFileMediaObject@DirectSound@@UAEPAXI@Z ; DirectSound::CFileMediaObject::`vftable'
	DD	FLAT:?AddRef@CFileMediaObject@DirectSound@@W3AGKXZ
	DD	FLAT:?Release@CFileMediaObject@DirectSound@@W3AGKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CFileMediaObject@DirectSound@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0CFileMediaObject@DirectSound@@QAE@XZ PROC NEAR	; DirectSound::CFileMediaObject::CFileMediaObject, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0XFileMediaObject@@QAE@XZ
  0000f	6a 01		 push	 1
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 04	 add	 ecx, 4
  00017	e8 00 00 00 00	 call	 ??0CRefCount@DirectSound@@QAE@K@Z ; DirectSound::CRefCount::CRefCount
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00022	e8 00 00 00 00	 call	 ??0CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::CStdFileStream
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFileMediaObject@DirectSound@@6BXFileMediaObject@@@
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET FLAT:??_7CFileMediaObject@DirectSound@@6BCRefCount@1@@

; 288  :     DPF_ENTER();
; 289  :     DPF_LEAVE_VOID();
; 290  : }

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??0CFileMediaObject@DirectSound@@QAE@XZ ENDP		; DirectSound::CFileMediaObject::CFileMediaObject
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.h
DSOUND	ENDS
;	COMDAT ?AddRef@CFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT
_this$ = 8
?AddRef@CFileMediaObject@DirectSound@@UAGKXZ PROC NEAR	; DirectSound::CFileMediaObject::AddRef, COMDAT

; 147  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 148  :         return CRefCount::AddRef();

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?AddRef@CRefCount@DirectSound@@UAGKXZ ; DirectSound::CRefCount::AddRef

; 149  :     }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?AddRef@CFileMediaObject@DirectSound@@UAGKXZ ENDP	; DirectSound::CFileMediaObject::AddRef
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Release@CFileMediaObject@DirectSound@@UAGKXZ
DSOUND	SEGMENT
_this$ = 8
?Release@CFileMediaObject@DirectSound@@UAGKXZ PROC NEAR	; DirectSound::CFileMediaObject::Release, COMDAT

; 152  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 153  :         return CRefCount::Release();

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?Release@CRefCount@DirectSound@@UAGKXZ ; DirectSound::CRefCount::Release

; 154  :     }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?Release@CFileMediaObject@DirectSound@@UAGKXZ ENDP	; DirectSound::CFileMediaObject::Release
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?GetStatus@CFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT
_this$ = 8
_pdwStatus$ = 12
?GetStatus@CFileMediaObject@DirectSound@@UAGJPAK@Z PROC NEAR ; DirectSound::CFileMediaObject::GetStatus, COMDAT

; 168  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 169  :         *pdwStatus = XMO_STATUSF_ACCEPT_INPUT_DATA | XMO_STATUSF_ACCEPT_OUTPUT_DATA;

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pdwStatus$[ebp]
  00006	c7 00 03 00 00
	00		 mov	 DWORD PTR [eax], 3

; 170  :         return DS_OK;

  0000c	33 c0		 xor	 eax, eax

; 171  :     }

  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?GetStatus@CFileMediaObject@DirectSound@@UAGJPAK@Z ENDP	; DirectSound::CFileMediaObject::GetStatus
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Discontinuity@CFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT
_this$ = 8
?Discontinuity@CFileMediaObject@DirectSound@@UAGJXZ PROC NEAR ; DirectSound::CFileMediaObject::Discontinuity, COMDAT

; 174  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 175  :         return S_OK;

  00003	33 c0		 xor	 eax, eax

; 176  :     }

  00005	5d		 pop	 ebp
  00006	c2 04 00	 ret	 4
?Discontinuity@CFileMediaObject@DirectSound@@UAGJXZ ENDP ; DirectSound::CFileMediaObject::Discontinuity
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Flush@CFileMediaObject@DirectSound@@UAGJXZ
DSOUND	SEGMENT
_this$ = 8
?Flush@CFileMediaObject@DirectSound@@UAGJXZ PROC NEAR	; DirectSound::CFileMediaObject::Flush, COMDAT

; 179  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 180  :         return Seek(0, FILE_BEGIN, NULL);

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00011	52		 push	 edx
  00012	ff 51 1c	 call	 DWORD PTR [ecx+28]

; 181  :     }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?Flush@CFileMediaObject@DirectSound@@UAGJXZ ENDP	; DirectSound::CFileMediaObject::Flush
DSOUND	ENDS
EXTRN	?Seek@CStdFileStream@WaveLoader@@QAEJJKPAK@Z:NEAR ; WaveLoader::CStdFileStream::Seek
; Function compile flags: /Odt
;	COMDAT ?Seek@CFileMediaObject@DirectSound@@UAGJJKPAK@Z
DSOUND	SEGMENT
_this$ = 8
_lOffset$ = 12
_dwOrigin$ = 16
_pdwAbsolute$ = 20
?Seek@CFileMediaObject@DirectSound@@UAGJJKPAK@Z PROC NEAR ; DirectSound::CFileMediaObject::Seek, COMDAT

; 184  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 185  :         return CStdFileStream::Seek(lOffset, dwOrigin, pdwAbsolute);

  00003	8b 45 14	 mov	 eax, DWORD PTR _pdwAbsolute$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _dwOrigin$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _lOffset$[ebp]
  0000e	52		 push	 edx
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00015	e8 00 00 00 00	 call	 ?Seek@CStdFileStream@WaveLoader@@QAEJJKPAK@Z ; WaveLoader::CStdFileStream::Seek

; 186  :     }

  0001a	5d		 pop	 ebp
  0001b	c2 10 00	 ret	 16			; 00000010H
?Seek@CFileMediaObject@DirectSound@@UAGJJKPAK@Z ENDP	; DirectSound::CFileMediaObject::Seek
DSOUND	ENDS
EXTRN	?GetLength@CStdFileStream@WaveLoader@@QAEJPAK@Z:NEAR ; WaveLoader::CStdFileStream::GetLength
; Function compile flags: /Odt
;	COMDAT ?GetLength@CFileMediaObject@DirectSound@@UAGJPAK@Z
DSOUND	SEGMENT
_this$ = 8
_pdwLength$ = 12
?GetLength@CFileMediaObject@DirectSound@@UAGJPAK@Z PROC NEAR ; DirectSound::CFileMediaObject::GetLength, COMDAT

; 189  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 190  :         return CStdFileStream::GetLength(pdwLength);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _pdwLength$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000d	e8 00 00 00 00	 call	 ?GetLength@CStdFileStream@WaveLoader@@QAEJPAK@Z ; WaveLoader::CStdFileStream::GetLength

; 191  :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?GetLength@CFileMediaObject@DirectSound@@UAGJPAK@Z ENDP	; DirectSound::CFileMediaObject::GetLength
DSOUND	ENDS
PUBLIC	??1CFileMediaObject@DirectSound@@UAE@XZ		; DirectSound::CFileMediaObject::~CFileMediaObject
; Function compile flags: /Odt
;	COMDAT ??_GCFileMediaObject@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT
_this$ = -4
___flags$ = 8
??_GCFileMediaObject@DirectSound@@UAEPAXI@Z PROC NEAR	; DirectSound::CFileMediaObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFileMediaObject@DirectSound@@UAE@XZ ; DirectSound::CFileMediaObject::~CFileMediaObject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0f		 je	 SHORT $L35616
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 e9 04	 sub	 ecx, 4
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$L35616:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 e8 04	 sub	 eax, 4
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
??_GCFileMediaObject@DirectSound@@UAEPAXI@Z ENDP	; DirectSound::CFileMediaObject::`scalar deleting destructor'
DSOUND	ENDS
EXTRN	??1CStdFileStream@WaveLoader@@QAE@XZ:NEAR	; WaveLoader::CStdFileStream::~CStdFileStream
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\wavexmo.cpp
;	COMDAT ??1CFileMediaObject@DirectSound@@UAE@XZ
DSOUND	SEGMENT
tv71 = -12
tv77 = -8
_this$ = -4
??1CFileMediaObject@DirectSound@@UAE@XZ PROC NEAR	; DirectSound::CFileMediaObject::~CFileMediaObject, COMDAT
; _this$ = ecx

; 315  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 40 fc 00 00
	00 00		 mov	 DWORD PTR [eax-4], OFFSET FLAT:??_7CFileMediaObject@DirectSound@@6BXFileMediaObject@@@
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CFileMediaObject@DirectSound@@6BCRefCount@1@@

; 316  :     DPF_ENTER();
; 317  :     DPF_LEAVE_VOID();
; 318  : }

  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	83 ea 04	 sub	 edx, 4
  00022	85 d2		 test	 edx, edx
  00024	74 0b		 je	 SHORT $L36119
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c0 08	 add	 eax, 8
  0002c	89 45 f8	 mov	 DWORD PTR tv77[ebp], eax
  0002f	eb 07		 jmp	 SHORT $L36120
$L36119:
  00031	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$L36120:
  00038	8b 4d f8	 mov	 ecx, DWORD PTR tv77[ebp]
  0003b	e8 00 00 00 00	 call	 ??1CStdFileStream@WaveLoader@@QAE@XZ ; WaveLoader::CStdFileStream::~CStdFileStream
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 e9 04	 sub	 ecx, 4
  00046	85 c9		 test	 ecx, ecx
  00048	74 08		 je	 SHORT $L36117
  0004a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004d	89 55 f4	 mov	 DWORD PTR tv71[ebp], edx
  00050	eb 07		 jmp	 SHORT $L36118
$L36117:
  00052	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$L36118:
  00059	8b 4d f4	 mov	 ecx, DWORD PTR tv71[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CRefCount@DirectSound@@UAE@XZ ; DirectSound::CRefCount::~CRefCount
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??1CFileMediaObject@DirectSound@@UAE@XZ ENDP		; DirectSound::CFileMediaObject::~CFileMediaObject
DSOUND	ENDS
PUBLIC	??_C@_05GFDKCJGP@pInfo?$AA@			; `string'
;	COMDAT ??_C@_05GFDKCJGP@pInfo?$AA@
DSOUND_RD	SEGMENT
??_C@_05GFDKCJGP@pInfo?$AA@ DB 'pInfo', 00H		; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?GetInfo@CFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z
DSOUND	SEGMENT
_this$ = 8
_pInfo$ = 12
?GetInfo@CFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z PROC NEAR ; DirectSound::CFileMediaObject::GetInfo, COMDAT

; 344  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 345  :     DPF_ENTER();
; 346  : 
; 347  :     ASSERT(pInfo);

  00003	68 5b 01 00 00	 push	 347			; 0000015bH
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  0000d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05GFDKCJGP@pInfo?$AA@
  00012	33 c0		 xor	 eax, eax
  00014	83 7d 0c 00	 cmp	 DWORD PTR _pInfo$[ebp], 0
  00018	0f 94 c0	 sete	 al
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00021	83 c4 10	 add	 esp, 16			; 00000010H

; 348  :     
; 349  :     pInfo->dwFlags = XMO_STREAMF_FIXED_SAMPLE_SIZE;

  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  00027	c7 01 01 00 00
	00		 mov	 DWORD PTR [ecx], 1

; 350  :     pInfo->dwMaxLookahead = 0;

  0002d	8b 55 0c	 mov	 edx, DWORD PTR _pInfo$[ebp]
  00030	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 351  :     pInfo->dwInputSize = 1;

  00037	8b 45 0c	 mov	 eax, DWORD PTR _pInfo$[ebp]
  0003a	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 352  :     pInfo->dwOutputSize = 1;

  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _pInfo$[ebp]
  00044	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1

; 353  : 
; 354  :     DPF_LEAVE_HRESULT(DS_OK);
; 355  : 
; 356  :     return DS_OK;

  0004b	33 c0		 xor	 eax, eax

; 357  : }

  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
?GetInfo@CFileMediaObject@DirectSound@@UAGJPAU_XMEDIAINFO@@@Z ENDP ; DirectSound::CFileMediaObject::GetInfo
DSOUND	ENDS
PUBLIC	??_C@_0BH@DNGDKPLK@pxmbSource?5?$HM?$HM?5pxmbDest?$AA@ ; `string'
PUBLIC	??_C@_0BK@HCJGPKLD@?$CB?$CIpxmbSource?5?$CG?$CG?5pxmbDest?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BF@JLFMHMCK@pxmbSource?9?$DOpvBuffer?$AA@ ; `string'
PUBLIC	??_C@_0BG@KEPNCPPF@pxmbSource?9?$DOdwMaxSize?$AA@ ; `string'
EXTRN	?Read@CStdFileStream@WaveLoader@@QAEJPAXKPAK@Z:NEAR ; WaveLoader::CStdFileStream::Read
EXTRN	?Write@CStdFileStream@WaveLoader@@QAEJPBXKPAK@Z:NEAR ; WaveLoader::CStdFileStream::Write
;	COMDAT ??_C@_0BH@DNGDKPLK@pxmbSource?5?$HM?$HM?5pxmbDest?$AA@
DSOUND_RD	SEGMENT
??_C@_0BH@DNGDKPLK@pxmbSource?5?$HM?$HM?5pxmbDest?$AA@ DB 'pxmbSource || '
	DB	'pxmbDest', 00H				; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@HCJGPKLD@?$CB?$CIpxmbSource?5?$CG?$CG?5pxmbDest?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BK@HCJGPKLD@?$CB?$CIpxmbSource?5?$CG?$CG?5pxmbDest?$CJ?$AA@ DB '!('
	DB	'pxmbSource && pxmbDest)', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BF@JLFMHMCK@pxmbSource?9?$DOpvBuffer?$AA@
DSOUND_RD	SEGMENT
??_C@_0BF@JLFMHMCK@pxmbSource?9?$DOpvBuffer?$AA@ DB 'pxmbSource->pvBuffer'
	DB	00H						; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@KEPNCPPF@pxmbSource?9?$DOdwMaxSize?$AA@
DSOUND_RD	SEGMENT
??_C@_0BG@KEPNCPPF@pxmbSource?9?$DOdwMaxSize?$AA@ DB 'pxmbSource->dwMaxSi'
	DB	'ze', 00H					; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?Process@CFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z
DSOUND	SEGMENT
tv76 = -28
tv69 = -24
_hr$ = -20
_pbDst$ = -16
_cbDst$ = -12
_cbSrc$ = -8
_pbSrc$ = -4
_this$ = 8
_pxmbSource$ = 12
_pxmbDest$ = 16
?Process@CFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z PROC NEAR ; DirectSound::CFileMediaObject::Process, COMDAT

; 385  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 386  :     HRESULT                 hr      = E_FAIL;

  00006	c7 45 ec 05 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467259 ; 80004005H

; 387  :     LPBYTE                  pbSrc;
; 388  :     DWORD                   cbSrc;
; 389  :     LPBYTE                  pbDst;
; 390  :     DWORD                   cbDst;
; 391  : 
; 392  :     DPF_ENTER();
; 393  : 
; 394  :     ASSERT(pxmbSource || pxmbDest);

  0000d	83 7d 0c 00	 cmp	 DWORD PTR _pxmbSource$[ebp], 0
  00011	75 0f		 jne	 SHORT $L36127
  00013	83 7d 10 00	 cmp	 DWORD PTR _pxmbDest$[ebp], 0
  00017	75 09		 jne	 SHORT $L36127
  00019	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00020	eb 07		 jmp	 SHORT $L36128
$L36127:
  00022	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$L36128:
  00029	68 8a 01 00 00	 push	 394			; 0000018aH
  0002e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  00033	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@DNGDKPLK@pxmbSource?5?$HM?$HM?5pxmbDest?$AA@
  00038	8b 45 e8	 mov	 eax, DWORD PTR tv69[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00041	83 c4 10	 add	 esp, 16			; 00000010H

; 395  :     ASSERT(!(pxmbSource && pxmbDest));

  00044	83 7d 0c 00	 cmp	 DWORD PTR _pxmbSource$[ebp], 0
  00048	74 0f		 je	 SHORT $L36129
  0004a	83 7d 10 00	 cmp	 DWORD PTR _pxmbDest$[ebp], 0
  0004e	74 09		 je	 SHORT $L36129
  00050	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00057	eb 07		 jmp	 SHORT $L36130
$L36129:
  00059	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$L36130:
  00060	68 8b 01 00 00	 push	 395			; 0000018bH
  00065	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  0006a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@HCJGPKLD@?$CB?$CIpxmbSource?5?$CG?$CG?5pxmbDest?$CJ?$AA@
  0006f	8b 4d e4	 mov	 ecx, DWORD PTR tv76[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00078	83 c4 10	 add	 esp, 16			; 00000010H

; 396  :     
; 397  :     if(pxmbSource)

  0007b	83 7d 0c 00	 cmp	 DWORD PTR _pxmbSource$[ebp], 0
  0007f	0f 84 af 00 00
	00		 je	 $L35640

; 398  :     {
; 399  :         ASSERT(pxmbSource->pvBuffer);

  00085	68 8f 01 00 00	 push	 399			; 0000018fH
  0008a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  0008f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@JLFMHMCK@pxmbSource?9?$DOpvBuffer?$AA@
  00094	8b 55 0c	 mov	 edx, DWORD PTR _pxmbSource$[ebp]
  00097	33 c0		 xor	 eax, eax
  00099	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0009c	0f 94 c0	 sete	 al
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000a5	83 c4 10	 add	 esp, 16			; 00000010H

; 400  :         ASSERT(pxmbSource->dwMaxSize);

  000a8	68 90 01 00 00	 push	 400			; 00000190H
  000ad	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  000b2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@KEPNCPPF@pxmbSource?9?$DOdwMaxSize?$AA@
  000b7	8b 4d 0c	 mov	 ecx, DWORD PTR _pxmbSource$[ebp]
  000ba	33 d2		 xor	 edx, edx
  000bc	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000c0	0f 94 c2	 sete	 dl
  000c3	52		 push	 edx
  000c4	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  000c9	83 c4 10	 add	 esp, 16			; 00000010H

; 401  : 
; 402  :         pbSrc = (LPBYTE)pxmbSource->pvBuffer;

  000cc	8b 45 0c	 mov	 eax, DWORD PTR _pxmbSource$[ebp]
  000cf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d1	89 4d fc	 mov	 DWORD PTR _pbSrc$[ebp], ecx

; 403  :         cbSrc = pxmbSource->dwMaxSize;

  000d4	8b 55 0c	 mov	 edx, DWORD PTR _pxmbSource$[ebp]
  000d7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000da	89 45 f8	 mov	 DWORD PTR _cbSrc$[ebp], eax

; 404  : 
; 405  :         XMOAcceptPacket(pxmbSource);

  000dd	8b 4d 0c	 mov	 ecx, DWORD PTR _pxmbSource$[ebp]
  000e0	51		 push	 ecx
  000e1	e8 00 00 00 00	 call	 ?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z ; XMOAcceptPacket

; 406  : 
; 407  :         hr = Write(pbSrc, cbSrc, &cbSrc);

  000e6	8d 55 f8	 lea	 edx, DWORD PTR _cbSrc$[ebp]
  000e9	52		 push	 edx
  000ea	8b 45 f8	 mov	 eax, DWORD PTR _cbSrc$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _pbSrc$[ebp]
  000f1	51		 push	 ecx
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000f8	e8 00 00 00 00	 call	 ?Write@CStdFileStream@WaveLoader@@QAEJPBXKPAK@Z ; WaveLoader::CStdFileStream::Write
  000fd	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 408  : 
; 409  :         if(SUCCEEDED(hr))

  00100	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00104	7c 15		 jl	 SHORT $L35645

; 410  :         {
; 411  :             XMOCompletePacket(pxmbSource, cbSrc);

  00106	6a 00		 push	 0
  00108	6a 00		 push	 0
  0010a	6a 00		 push	 0
  0010c	8b 55 f8	 mov	 edx, DWORD PTR _cbSrc$[ebp]
  0010f	52		 push	 edx
  00110	8b 45 0c	 mov	 eax, DWORD PTR _pxmbSource$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ; XMOCompletePacket

; 412  :         }
; 413  :         else

  00119	eb 14		 jmp	 SHORT $L35646
$L35645:

; 414  :         {
; 415  :             XMOCompletePacket(pxmbSource, 0, NULL, NULL, XMEDIAPACKET_STATUS_FAILURE);

  0011b	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00120	6a 00		 push	 0
  00122	6a 00		 push	 0
  00124	6a 00		 push	 0
  00126	8b 4d 0c	 mov	 ecx, DWORD PTR _pxmbSource$[ebp]
  00129	51		 push	 ecx
  0012a	e8 00 00 00 00	 call	 ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ; XMOCompletePacket
$L35646:

; 416  :         }
; 417  :     }
; 418  :     else if(pxmbDest)

  0012f	e9 b4 00 00 00	 jmp	 $L35648
$L35640:
  00134	83 7d 10 00	 cmp	 DWORD PTR _pxmbDest$[ebp], 0
  00138	0f 84 aa 00 00
	00		 je	 $L35648

; 419  :     {
; 420  :         ASSERT(pxmbDest->pvBuffer);

  0013e	68 a4 01 00 00	 push	 420			; 000001a4H
  00143	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  00148	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@EGMOEPLH@pxmbDest?9?$DOpvBuffer?$AA@
  0014d	8b 55 10	 mov	 edx, DWORD PTR _pxmbDest$[ebp]
  00150	33 c0		 xor	 eax, eax
  00152	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00155	0f 94 c0	 sete	 al
  00158	50		 push	 eax
  00159	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  0015e	83 c4 10	 add	 esp, 16			; 00000010H

; 421  :         ASSERT(pxmbDest->dwMaxSize);

  00161	68 a5 01 00 00	 push	 421			; 000001a5H
  00166	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@NIBKKOJE@c?3?2xbox?2private?2windows?2directx?2@
  0016b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@CKJOFCDP@pxmbDest?9?$DOdwMaxSize?$AA@
  00170	8b 4d 10	 mov	 ecx, DWORD PTR _pxmbDest$[ebp]
  00173	33 d2		 xor	 edx, edx
  00175	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00179	0f 94 c2	 sete	 dl
  0017c	52		 push	 edx
  0017d	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00182	83 c4 10	 add	 esp, 16			; 00000010H

; 422  : 
; 423  :         pbDst = (LPBYTE)pxmbDest->pvBuffer;

  00185	8b 45 10	 mov	 eax, DWORD PTR _pxmbDest$[ebp]
  00188	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018a	89 4d f0	 mov	 DWORD PTR _pbDst$[ebp], ecx

; 424  :         cbDst = pxmbDest->dwMaxSize;

  0018d	8b 55 10	 mov	 edx, DWORD PTR _pxmbDest$[ebp]
  00190	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00193	89 45 f4	 mov	 DWORD PTR _cbDst$[ebp], eax

; 425  : 
; 426  :         XMOAcceptPacket(pxmbDest);

  00196	8b 4d 10	 mov	 ecx, DWORD PTR _pxmbDest$[ebp]
  00199	51		 push	 ecx
  0019a	e8 00 00 00 00	 call	 ?XMOAcceptPacket@@YGXPBU_XMEDIAPACKET@@@Z ; XMOAcceptPacket

; 427  : 
; 428  :         hr = Read(pbDst, cbDst, &cbDst);

  0019f	8d 55 f4	 lea	 edx, DWORD PTR _cbDst$[ebp]
  001a2	52		 push	 edx
  001a3	8b 45 f4	 mov	 eax, DWORD PTR _cbDst$[ebp]
  001a6	50		 push	 eax
  001a7	8b 4d f0	 mov	 ecx, DWORD PTR _pbDst$[ebp]
  001aa	51		 push	 ecx
  001ab	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  001ae	83 c1 0c	 add	 ecx, 12			; 0000000cH
  001b1	e8 00 00 00 00	 call	 ?Read@CStdFileStream@WaveLoader@@QAEJPAXKPAK@Z ; WaveLoader::CStdFileStream::Read
  001b6	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 429  :         
; 430  :         if(SUCCEEDED(hr))

  001b9	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001bd	7c 15		 jl	 SHORT $L35652

; 431  :         {
; 432  :             XMOCompletePacket(pxmbDest, cbDst);

  001bf	6a 00		 push	 0
  001c1	6a 00		 push	 0
  001c3	6a 00		 push	 0
  001c5	8b 55 f4	 mov	 edx, DWORD PTR _cbDst$[ebp]
  001c8	52		 push	 edx
  001c9	8b 45 10	 mov	 eax, DWORD PTR _pxmbDest$[ebp]
  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ; XMOCompletePacket

; 433  :         }
; 434  :         else

  001d2	eb 14		 jmp	 SHORT $L35648
$L35652:

; 435  :         {
; 436  :             XMOCompletePacket(pxmbDest, 0, NULL, NULL, XMEDIAPACKET_STATUS_FAILURE);

  001d4	68 05 40 00 80	 push	 -2147467259		; 80004005H
  001d9	6a 00		 push	 0
  001db	6a 00		 push	 0
  001dd	6a 00		 push	 0
  001df	8b 4d 10	 mov	 ecx, DWORD PTR _pxmbDest$[ebp]
  001e2	51		 push	 ecx
  001e3	e8 00 00 00 00	 call	 ?XMOCompletePacket@@YGXPBU_XMEDIAPACKET@@KP6GXPAX1K@Z1K@Z ; XMOCompletePacket
$L35648:

; 437  :         }
; 438  :     }
; 439  :     
; 440  :     DPF_LEAVE_HRESULT(hr);
; 441  : 
; 442  :     return hr;

  001e8	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]

; 443  : }

  001eb	8b e5		 mov	 esp, ebp
  001ed	5d		 pop	 ebp
  001ee	c2 0c 00	 ret	 12			; 0000000cH
?Process@CFileMediaObject@DirectSound@@UAGJPBU_XMEDIAPACKET@@0@Z ENDP ; DirectSound::CFileMediaObject::Process
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?AddRef@CFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT
?AddRef@CFileMediaObject@DirectSound@@W3AGKXZ PROC NEAR	; DirectSound::CFileMediaObject::AddRef, COMDAT
  00000	83 6c 24 04 04	 sub	 DWORD PTR [esp+4], 4
  00005	e9 00 00 00 00	 jmp	 ?AddRef@CFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CFileMediaObject::AddRef
?AddRef@CFileMediaObject@DirectSound@@W3AGKXZ ENDP	; DirectSound::CFileMediaObject::AddRef
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Release@CFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT
?Release@CFileMediaObject@DirectSound@@W3AGKXZ PROC NEAR ; DirectSound::CFileMediaObject::Release, COMDAT
  00000	83 6c 24 04 04	 sub	 DWORD PTR [esp+4], 4
  00005	e9 00 00 00 00	 jmp	 ?Release@CFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CFileMediaObject::Release
?Release@CFileMediaObject@DirectSound@@W3AGKXZ ENDP	; DirectSound::CFileMediaObject::Release
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?AddRef@CWaveFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT
?AddRef@CWaveFileMediaObject@DirectSound@@W3AGKXZ PROC NEAR ; DirectSound::CWaveFileMediaObject::AddRef, COMDAT
  00000	83 6c 24 04 04	 sub	 DWORD PTR [esp+4], 4
  00005	e9 00 00 00 00	 jmp	 ?AddRef@CWaveFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CWaveFileMediaObject::AddRef
?AddRef@CWaveFileMediaObject@DirectSound@@W3AGKXZ ENDP	; DirectSound::CWaveFileMediaObject::AddRef
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?Release@CWaveFileMediaObject@DirectSound@@W3AGKXZ
DSOUND	SEGMENT
?Release@CWaveFileMediaObject@DirectSound@@W3AGKXZ PROC NEAR ; DirectSound::CWaveFileMediaObject::Release, COMDAT
  00000	83 6c 24 04 04	 sub	 DWORD PTR [esp+4], 4
  00005	e9 00 00 00 00	 jmp	 ?Release@CWaveFileMediaObject@DirectSound@@UAGKXZ ; DirectSound::CWaveFileMediaObject::Release
?Release@CWaveFileMediaObject@DirectSound@@W3AGKXZ ENDP	; DirectSound::CWaveFileMediaObject::Release
DSOUND	ENDS
END
