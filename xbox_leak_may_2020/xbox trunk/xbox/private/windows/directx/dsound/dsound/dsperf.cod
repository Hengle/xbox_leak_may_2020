; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\dsperf.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
DSOUND_URW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_URW	ENDS
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@HLNMLIHP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_09GPGAJHPD@?$CIunknown?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@IMPCONDJ@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@PGACJKHL@?$CB?$CIx?5?$CG?5?$CIx?5?9?51?$CJ?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@KHLJBLPM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@MLMBNMPN@nLength?5?$DO?5sizeof?$CI?$CKpRunMarker?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@GEBIDJGO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@DHEFJAIP@IsValidAlgorithm?$CI?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@FFGMCHMA@m_pfnGetFilterPair?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06JAKMBBHB@DSOUND?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DG@DIPNMLMO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BF@JCCIJAPA@CDirectSound?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IDOOAHKJ@CDirectSoundBuffer?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IJJNEHOC@CDirectSoundBuffer?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@PKKBNDKL@CDirectSoundBuffer?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@PPDEBFDO@CDirectSoundBuffer?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@INMBMDIC@CDirectSoundBuffer?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@FNHOKAIC@CDirectSoundBuffer?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BGJIIJJH@CDirectSoundBuffer?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@EOPIEBA@CDirectSoundBuffer?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@IPGKAOBK@CDirectSoundBuffer?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@EJJCKIBH@CDirectSoundBuffer?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@IJCIHAHO@CDirectSoundBuffer?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@ENFJENBA@CDirectSoundBuffer?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@GMNMDMFI@CDirectSoundBuffer?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CFIEOKFB@CDirectSoundBuffer?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@GKILFNCM@CDirectSoundBuffer?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@BJHPKLFJ@CDirectSoundBuffer?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@FPOKJAEF@CDirectSoundBuffer?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@LECKPDBD@CDirectSoundBuffer?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@CEFJODPJ@CDirectSoundBuffer?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KCLFGBIJ@CDirectSoundBuffer?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@CJDDDDA@CDirectSoundBuffer?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@GALGNKNN@CDirectSoundBuffer?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@OMPMKPGG@CDirectSoundBuffer?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@DNKDAAOC@CDirectSoundBuffer?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CEGGDJFO@CDirectSoundBuffer?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@LIPCEEAM@CDirectSoundBuffer?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HPKGJBBG@CDirectSoundBuffer?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IGCEBFCD@CDirectSoundStream?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IEPFOHMO@CDirectSoundStream?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@BFEGBGIF@CDirectSoundStream?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@EFAECKOL@CDirectSoundStream?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@GPKLKEMB@CDirectSoundStream?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GCCGAGKM@CDirectSoundStream?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BDFCJLBN@CDirectSoundStream?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@MOKKBNNH@CDirectSoundStream?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GAINMLDE@CDirectSoundStream?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@KJJLHIOD@CDirectSoundStream?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@HMGNJNIP@CDirectSoundStream?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@JBGAKHBK@CDirectSoundStream?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@KGJDLLDP@CDirectSoundStream?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OPMLGNDG@CDirectSoundStream?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@JMIIELEI@CDirectSoundStream?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@EABPIKPF@CDirectSoundStream?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@BBDBCKJO@CDirectSoundStream?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@POADFFEE@CDirectSoundStream?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@GOHAEFKO@CDirectSoundStream?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KPNNMBKF@CDirectSoundStream?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@OCJKODME@CDirectSoundStream?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@IALPAKCJ@CDirectSoundStream?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@DPOABEBK@CDirectSoundStream?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@PHOMIHIF@CDirectSoundStream?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OOCJLODJ@CDirectSoundStream?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ENLHKJPN@CDirectSoundStream?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@DFIPDHEB@CDirectSoundStream?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@JNKFENGM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@JCBGLFIF@?$CBm_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@JLKNBNJM@?$CBm_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@BMLCBDGO@m_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ELEAODJN@dwNotifierIndex?5?$DM?5m_dwNotifierCo@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@MEDKFNKN@Unexpected?5notifier?5status?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BC@NHNIONPC@m_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@NBALOMF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BA@IANIBDAF@m_pGpDspManager?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@ONCKHILO@m_dwState?5?$CG?5MCPX_APUSTATE_GPIMAG@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@FGGNHBE@KeGetCurrentIrql?$CI?$CJ?5?$DO?$DN?5DISPATCH_L@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@IECLLDN@m_dwVoiceMapLock?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@FFOHIBNC@m_dwVoiceMapLock?5?$DO?$DN?51?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@MEFGGIAF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DB@IBOGJEGG@WAVE_FORMAT_PCM?5?$DN?$DN?5m_pSettings?9?$DO@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CP@IDFLDLJM@?$CB?$CIm_pSettings?9?$DOm_dwFlags?5?$CG?5DSBCA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0EJ@DJPLDOLH@m_pSettings?9?$DOm_pMixinBuffer?9?$DOm_p@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@MBLALCOP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@CELCEBLE@CAc97MediaObject?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@OKDMHHHN@CAc97MediaObject?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@LGFLBGN@DirectSound?5free?52D?5voices?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@OEKHNKFD@DirectSound?5free?53D?5voices?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@NIHAINCD@DirectSound?5free?5buffer?5SGEs?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@LOHPFADN@DirectSound?5pool?5memory?5used?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@LLJLFFAI@DirectSound?5physical?5memory?5used@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HIIFFPLC@DirectSound?5percent?5free?5GP?5cycl@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HMHAIPIP@DirectSound?5percent?5free?5EP?5cycl@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
DSOUND_RW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RW	ENDS
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _IsEqualGUID@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _==@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeGetCurrentPrcb@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeGetCurrentIrql@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeIsExecutingDpc@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_AddRef@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_Release@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_BeginScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_EndScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DPalette_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _log10f@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _sqrtf@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _wmemchr@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?InsertHeadListUninit@@YGXPAU_LIST_ENTRY@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??3@YAXPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CIrql@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Raise@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Lower@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Save@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Restore@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?FloatToLong@Math@DirectSound@@YGJM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?lsb@Math@DirectSound@@YIII@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?IsValidAlgorithm@CHrtfSource@DirectSound@@SGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ReleaseChannel@CAc97Device@DirectSound@@QAEXPAVCAc97Channel@2@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundEnterCriticalSection@@YGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundLeaveCriticalSection@@YGXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Initialize@CMcpxNotifier@DirectSound@@QAEXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Free@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Reset@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetScratchSpaceLinAddr@CMcpxDspScratchDma@DirectSound@@QAEPAXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DmTell@@YGKKPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DmTell_RegisterPerformanceCounter@@YGKPBDKPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DmTell_UnregisterPerformanceCounter@@YGKPBD@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?RegisterCounters@CPerfMon@DirectSound@@SGXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?UnregisterCounters@CPerfMon@DirectSound@@SGXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFreeGPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFreeEPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDEOEE@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDECCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDECCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDFDCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDFDCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EBEDDJDH@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EBEDDJDH@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDEOEE@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDECCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDFDCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EBEDDJDH@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA
DSOUND_URW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_URW	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDECCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EBEDDJDH@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDEOEE@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDFDCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V, DSOUND_RW
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
PUBLIC	??_C@_0BL@LGFLBGN@DirectSound?5free?52D?5voices?$AA@ ; `string'
PUBLIC	??_C@_0BL@OEKHNKFD@DirectSound?5free?53D?5voices?$AA@ ; `string'
PUBLIC	??_C@_0BN@NIHAINCD@DirectSound?5free?5buffer?5SGEs?$AA@ ; `string'
PUBLIC	??_C@_0BN@LOHPFADN@DirectSound?5pool?5memory?5used?$AA@ ; `string'
PUBLIC	??_C@_0CB@LLJLFFAI@DirectSound?5physical?5memory?5used@ ; `string'
PUBLIC	??_C@_0CD@HIIFFPLC@DirectSound?5percent?5free?5GP?5cycl@ ; `string'
PUBLIC	??_C@_0CD@HMHAIPIP@DirectSound?5percent?5free?5EP?5cycl@ ; `string'
PUBLIC	?m_aCounters@CPerfMon@DirectSound@@0QBUDSPERFCOUNTER@@B ; DirectSound::CPerfMon::m_aCounters
PUBLIC	?GetFreeGPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z ; DirectSound::CPerfMon::GetFreeGPCycles
PUBLIC	?GetFreeEPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z ; DirectSound::CPerfMon::GetFreeEPCycles
PUBLIC	_DSoundBuildNumberD
EXTRN	_g_dwDirectSoundPoolMemoryUsage:DWORD
EXTRN	_g_dwDirectSoundPhysicalMemoryUsage:DWORD
EXTRN	_g_dwDirectSoundFree2dVoices:DWORD
EXTRN	_g_dwDirectSoundFree3dVoices:DWORD
EXTRN	_g_dwDirectSoundFreeBufferSGEs:DWORD
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
DSOUND_RD	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT
_DSoundBuildNumberD DW 05344H
	DW	0554fH
	DW	0444eH
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
;	COMDAT ??_C@_0BL@LGFLBGN@DirectSound?5free?52D?5voices?$AA@
DSOUND_RD	SEGMENT
??_C@_0BL@LGFLBGN@DirectSound?5free?52D?5voices?$AA@ DB 'DirectSound free'
	DB	' 2D voices', 00H				; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@OEKHNKFD@DirectSound?5free?53D?5voices?$AA@
DSOUND_RD	SEGMENT
??_C@_0BL@OEKHNKFD@DirectSound?5free?53D?5voices?$AA@ DB 'DirectSound fre'
	DB	'e 3D voices', 00H				; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@NIHAINCD@DirectSound?5free?5buffer?5SGEs?$AA@
DSOUND_RD	SEGMENT
??_C@_0BN@NIHAINCD@DirectSound?5free?5buffer?5SGEs?$AA@ DB 'DirectSound f'
	DB	'ree buffer SGEs', 00H			; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@LOHPFADN@DirectSound?5pool?5memory?5used?$AA@
DSOUND_RD	SEGMENT
??_C@_0BN@LOHPFADN@DirectSound?5pool?5memory?5used?$AA@ DB 'DirectSound p'
	DB	'ool memory used', 00H			; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@LLJLFFAI@DirectSound?5physical?5memory?5used@
DSOUND_RD	SEGMENT
??_C@_0CB@LLJLFFAI@DirectSound?5physical?5memory?5used@ DB 'DirectSound p'
	DB	'hysical memory used', 00H			; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HIIFFPLC@DirectSound?5percent?5free?5GP?5cycl@
DSOUND_RD	SEGMENT
??_C@_0CD@HIIFFPLC@DirectSound?5percent?5free?5GP?5cycl@ DB 'DirectSound '
	DB	'percent free GP cycles', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HMHAIPIP@DirectSound?5percent?5free?5EP?5cycl@
DSOUND_RD	SEGMENT
??_C@_0CD@HMHAIPIP@DirectSound?5percent?5free?5EP?5cycl@ DB 'DirectSound '
	DB	'percent free EP cycles', 00H		; `string'
DSOUND_RD	ENDS
DSOUND_RD	SEGMENT
?m_aCounters@CPerfMon@DirectSound@@0QBUDSPERFCOUNTER@@B DD FLAT:??_C@_0BL@LGFLBGN@DirectSound?5free?52D?5voices?$AA@ ; DirectSound::CPerfMon::m_aCounters
	DD	020000H
	DD	FLAT:_g_dwDirectSoundFree2dVoices
	DD	FLAT:??_C@_0BL@OEKHNKFD@DirectSound?5free?53D?5voices?$AA@
	DD	020000H
	DD	FLAT:_g_dwDirectSoundFree3dVoices
	DD	FLAT:??_C@_0BN@NIHAINCD@DirectSound?5free?5buffer?5SGEs?$AA@
	DD	020000H
	DD	FLAT:_g_dwDirectSoundFreeBufferSGEs
	DD	FLAT:??_C@_0BN@LOHPFADN@DirectSound?5pool?5memory?5used?$AA@
	DD	020000H
	DD	FLAT:_g_dwDirectSoundPoolMemoryUsage
	DD	FLAT:??_C@_0CB@LLJLFFAI@DirectSound?5physical?5memory?5used@
	DD	020000H
	DD	FLAT:_g_dwDirectSoundPhysicalMemoryUsage
	DD	FLAT:??_C@_0CD@HIIFFPLC@DirectSound?5percent?5free?5GP?5cycl@
	DD	010000H
	DD	FLAT:?GetFreeGPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z
	DD	FLAT:??_C@_0CD@HMHAIPIP@DirectSound?5percent?5free?5EP?5cycl@
	DD	010000H
	DD	FLAT:?GetFreeEPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z
DSOUND_RD	ENDS
PUBLIC	?RegisterCounters@CPerfMon@DirectSound@@SGXXZ	; DirectSound::CPerfMon::RegisterCounters
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\dsperf.cpp
;	COMDAT ?RegisterCounters@CPerfMon@DirectSound@@SGXXZ
DSOUND	SEGMENT
_i$ = -4
?RegisterCounters@CPerfMon@DirectSound@@SGXXZ PROC NEAR	; DirectSound::CPerfMon::RegisterCounters, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 57   :     DWORD                   i;
; 58   :     
; 59   :     DPF_ENTER();
; 60   : 
; 61   :     for(i = 0; i < NUMELMS(m_aCounters); i++)

  00004	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0000b	eb 09		 jmp	 SHORT $L36145
$L36146:
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00010	83 c0 01	 add	 eax, 1
  00013	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L36145:
  00016	83 7d fc 07	 cmp	 DWORD PTR _i$[ebp], 7
  0001a	73 2e		 jae	 SHORT $L36143

; 62   :     {
; 63   :         DmTell_RegisterPerformanceCounter(m_aCounters[i].pszName, m_aCounters[i].dwFlags, m_aCounters[i].pvData);

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0001f	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00022	8b 91 08 00 00
	00		 mov	 edx, DWORD PTR ?m_aCounters@CPerfMon@DirectSound@@0QBUDSPERFCOUNTER@@B[ecx+8]
  00028	52		 push	 edx
  00029	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0002c	6b c0 0c	 imul	 eax, 12			; 0000000cH
  0002f	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_aCounters@CPerfMon@DirectSound@@0QBUDSPERFCOUNTER@@B[eax+4]
  00035	51		 push	 ecx
  00036	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00039	6b d2 0c	 imul	 edx, 12			; 0000000cH
  0003c	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?m_aCounters@CPerfMon@DirectSound@@0QBUDSPERFCOUNTER@@B[edx]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?DmTell_RegisterPerformanceCounter@@YGKPBDKPAX@Z ; DmTell_RegisterPerformanceCounter

; 64   :     }

  00048	eb c3		 jmp	 SHORT $L36146
$L36143:

; 65   : 
; 66   :     DPF_LEAVE_VOID();
; 67   : }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?RegisterCounters@CPerfMon@DirectSound@@SGXXZ ENDP	; DirectSound::CPerfMon::RegisterCounters
; Function compile flags: /Odt
; File c:\xbox\private\ntos\inc\dm.h
DSOUND	ENDS
;	COMDAT ?DmTell_RegisterPerformanceCounter@@YGKPBDKPAX@Z
DSOUND	SEGMENT
_block$ = -12
_szName$ = 8
_dwType$ = 12
_pvArg$ = 16
?DmTell_RegisterPerformanceCounter@@YGKPBDKPAX@Z PROC NEAR ; DmTell_RegisterPerformanceCounter, COMDAT

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 172  :     DMREGISTERPERFCOUNTERPARAMBLOCK block;
; 173  :     block.szName = szName;

  00006	8b 45 08	 mov	 eax, DWORD PTR _szName$[ebp]
  00009	89 45 f4	 mov	 DWORD PTR _block$[ebp], eax

; 174  :     block.dwType = dwType;

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _dwType$[ebp]
  0000f	89 4d f8	 mov	 DWORD PTR _block$[ebp+4], ecx

; 175  :     block.pvArg = pvArg;

  00012	8b 55 10	 mov	 edx, DWORD PTR _pvArg$[ebp]
  00015	89 55 fc	 mov	 DWORD PTR _block$[ebp+8], edx

; 176  :     return DmTell(DMTELL_REGISTERPERFCOUNTER, &block);

  00018	8d 45 f4	 lea	 eax, DWORD PTR _block$[ebp]
  0001b	50		 push	 eax
  0001c	6a 06		 push	 6
  0001e	e8 00 00 00 00	 call	 ?DmTell@@YGKKPAX@Z	; DmTell

; 177  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 0c 00	 ret	 12			; 0000000cH
?DmTell_RegisterPerformanceCounter@@YGKPBDKPAX@Z ENDP	; DmTell_RegisterPerformanceCounter
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?DmTell@@YGKKPAX@Z
DSOUND	SEGMENT
_pdmi$ = -4
_ulCode$ = 8
_pvData$ = 12
?DmTell@@YGKKPAX@Z PROC NEAR				; DmTell, COMDAT

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 142  :     PDMINIT pdmi = DmGetCurrentDmi();

  00004	e8 00 00 00 00	 call	 _KeGetCurrentPrcb@0
  00009	8b 80 50 02 00
	00		 mov	 eax, DWORD PTR [eax+592]
  0000f	89 45 fc	 mov	 DWORD PTR _pdmi$[ebp], eax

; 143  :     if(pdmi)

  00012	83 7d fc 00	 cmp	 DWORD PTR _pdmi$[ebp], 0
  00016	74 10		 je	 SHORT $L35650

; 144  :         return pdmi->TellRoutine(ulCode, pvData);

  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _pvData$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 55 08	 mov	 edx, DWORD PTR _ulCode$[ebp]
  0001f	52		 push	 edx
  00020	8b 45 fc	 mov	 eax, DWORD PTR _pdmi$[ebp]
  00023	ff 50 14	 call	 DWORD PTR [eax+20]
  00026	eb 02		 jmp	 SHORT $L35647
$L35650:

; 145  :     else
; 146  :         return 0;

  00028	33 c0		 xor	 eax, eax
$L35647:

; 147  : }

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?DmTell@@YGKKPAX@Z ENDP					; DmTell
; Function compile flags: /Odt
; File c:\xbox\private\ntos\inc\i386.h
DSOUND	ENDS
;	COMDAT _KeGetCurrentPrcb@0
DSOUND	SEGMENT
_KeGetCurrentPrcb@0 PROC NEAR				; COMDAT

; 1479 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1480 : #if defined(_NTSYSTEM_)
; 1481 :     return &KeGetPcr()->PrcbData;
; 1482 : #else
; 1483 :     __asm {  mov eax, fs:[0] KPCR.Prcb }

  00003	64 a1 20 00 00
	00		 mov	 eax, DWORD PTR fs:32

; 1484 : #endif
; 1485 : }

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
_KeGetCurrentPrcb@0 ENDP
DSOUND	ENDS
PUBLIC	?UnregisterCounters@CPerfMon@DirectSound@@SGXXZ	; DirectSound::CPerfMon::UnregisterCounters
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\dsperf.cpp
;	COMDAT ?UnregisterCounters@CPerfMon@DirectSound@@SGXXZ
DSOUND	SEGMENT
_i$ = -4
?UnregisterCounters@CPerfMon@DirectSound@@SGXXZ PROC NEAR ; DirectSound::CPerfMon::UnregisterCounters, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 94   :     DWORD                   i;
; 95   :     
; 96   :     DPF_ENTER();
; 97   : 
; 98   :     for(i = 0; i < NUMELMS(m_aCounters); i++)

  00004	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0000b	eb 09		 jmp	 SHORT $L36152
$L36153:
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00010	83 c0 01	 add	 eax, 1
  00013	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L36152:
  00016	83 7d fc 07	 cmp	 DWORD PTR _i$[ebp], 7
  0001a	73 14		 jae	 SHORT $L36150

; 99   :     {
; 100  :         DmTell_UnregisterPerformanceCounter(m_aCounters[i].pszName);

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0001f	6b c9 0c	 imul	 ecx, 12			; 0000000cH
  00022	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?m_aCounters@CPerfMon@DirectSound@@0QBUDSPERFCOUNTER@@B[ecx]
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 ?DmTell_UnregisterPerformanceCounter@@YGKPBD@Z ; DmTell_UnregisterPerformanceCounter

; 101  :     }

  0002e	eb dd		 jmp	 SHORT $L36153
$L36150:

; 102  : 
; 103  :     DPF_LEAVE_VOID();
; 104  : }

  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?UnregisterCounters@CPerfMon@DirectSound@@SGXXZ ENDP	; DirectSound::CPerfMon::UnregisterCounters
; Function compile flags: /Odt
; File c:\xbox\private\ntos\inc\dm.h
DSOUND	ENDS
;	COMDAT ?DmTell_UnregisterPerformanceCounter@@YGKPBD@Z
DSOUND	SEGMENT
_szName$ = 8
?DmTell_UnregisterPerformanceCounter@@YGKPBD@Z PROC NEAR ; DmTell_UnregisterPerformanceCounter, COMDAT

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 181  :     return DmTell(DMTELL_UNREGISTERPERFCOUNTER, (PVOID) szName);

  00003	8b 45 08	 mov	 eax, DWORD PTR _szName$[ebp]
  00006	50		 push	 eax
  00007	6a 07		 push	 7
  00009	e8 00 00 00 00	 call	 ?DmTell@@YGKKPAX@Z	; DmTell

; 182  : }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?DmTell_UnregisterPerformanceCounter@@YGKPBD@Z ENDP	; DmTell_UnregisterPerformanceCounter
DSOUND	ENDS
PUBLIC	?GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z	; DirectSound::CPerfMon::GetFreeDSPCycles
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\dsound\dsperf.cpp
;	COMDAT ?GetFreeGPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z
DSOUND	SEGMENT
_pliData$ = 8
_pliUnused$ = 12
?GetFreeGPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z PROC NEAR ; DirectSound::CPerfMon::GetFreeGPCycles, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 133  :     DPF_ENTER();
; 134  : 
; 135  :     pliData->QuadPart = GetFreeDSPCycles(0xFE8301F0, 32);

  00003	6a 20		 push	 32			; 00000020H
  00005	68 f0 01 83 fe	 push	 -24968720		; fe8301f0H
  0000a	e8 00 00 00 00	 call	 ?GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z ; DirectSound::CPerfMon::GetFreeDSPCycles
  0000f	33 c9		 xor	 ecx, ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR _pliData$[ebp]
  00014	89 02		 mov	 DWORD PTR [edx], eax
  00016	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 136  : 
; 137  :     DPF_LEAVE_HRESULT(XBDM_NOERR);
; 138  : 
; 139  :     return XBDM_NOERR;

  00019	b8 00 00 db 02	 mov	 eax, 47906816		; 02db0000H

; 140  : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?GetFreeGPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z ENDP ; DirectSound::CPerfMon::GetFreeGPCycles
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?GetFreeEPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z
DSOUND	SEGMENT
_pliData$ = 8
_pliUnused$ = 12
?GetFreeEPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z PROC NEAR ; DirectSound::CPerfMon::GetFreeEPCycles, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 169  :     DPF_ENTER();
; 170  : 
; 171  :     pliData->QuadPart = GetFreeDSPCycles(0xFE85A010, 256);

  00003	68 00 01 00 00	 push	 256			; 00000100H
  00008	68 10 a0 85 fe	 push	 -24797168		; fe85a010H
  0000d	e8 00 00 00 00	 call	 ?GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z ; DirectSound::CPerfMon::GetFreeDSPCycles
  00012	33 c9		 xor	 ecx, ecx
  00014	8b 55 08	 mov	 edx, DWORD PTR _pliData$[ebp]
  00017	89 02		 mov	 DWORD PTR [edx], eax
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 172  : 
; 173  :     DPF_LEAVE_HRESULT(XBDM_NOERR);
; 174  : 
; 175  :     return XBDM_NOERR;

  0001c	b8 00 00 db 02	 mov	 eax, 47906816		; 02db0000H

; 176  : }

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?GetFreeEPCycles@CPerfMon@DirectSound@@KGJPAT_LARGE_INTEGER@@0@Z ENDP ; DirectSound::CPerfMon::GetFreeEPCycles
DSOUND	ENDS
EXTRN	__imp__HalReadWritePCISpace@24:NEAR
;	COMDAT ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA
DSOUND_URW	SEGMENT
?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA DD 01H DUP (?) ; `DirectSound::CPerfMon::GetFreeDSPCycles'::`2'::dwClockSpeed
; Function compile flags: /Odt
DSOUND_URW	ENDS
;	COMDAT ?GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z
DSOUND	SEGMENT
tv76 = -16
_dwMaxIdle$ = -12
_Slot$ = -8
_dwUsage$ = -4
_dwAddress$ = 8
_dwSamplesPerClock$ = 12
?GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z PROC NEAR ; DirectSound::CPerfMon::GetFreeDSPCycles, COMDAT

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 205  :     static DWORD            dwClockSpeed;
; 206  :     PCI_SLOT_NUMBER         Slot;
; 207  :     DWORD                   dwMaxIdle;
; 208  :     DWORD                   dwUsage;
; 209  :     
; 210  :     DPF_ENTER();
; 211  : 
; 212  :     //
; 213  :     // Get the DSP clock speed
; 214  :     //
; 215  :     
; 216  :     if(!dwClockSpeed)

  00006	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA, 0
  0000d	75 77		 jne	 SHORT $L36180

; 217  :     {
; 218  :         Slot.u.AsULONG = 0;

  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp], 0

; 219  :         Slot.u.bits.DeviceNumber = 1;

  00016	8b 45 f8	 mov	 eax, DWORD PTR _Slot$[ebp]
  00019	83 e0 e0	 and	 eax, -32		; ffffffe0H
  0001c	83 c8 01	 or	 eax, 1
  0001f	89 45 f8	 mov	 DWORD PTR _Slot$[ebp], eax

; 220  :         Slot.u.bits.FunctionNumber = 0;

  00022	8b 4d f8	 mov	 ecx, DWORD PTR _Slot$[ebp]
  00025	81 e1 1f ff ff
	ff		 and	 ecx, -225		; ffffff1fH
  0002b	89 4d f8	 mov	 DWORD PTR _Slot$[ebp], ecx

; 221  : 
; 222  :         HalReadPCISpace(0, Slot.u.AsULONG, 0x8C, &dwClockSpeed, sizeof(dwClockSpeed));

  0002e	6a 00		 push	 0
  00030	6a 04		 push	 4
  00032	68 00 00 00 00	 push	 OFFSET FLAT:?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA
  00037	68 8c 00 00 00	 push	 140			; 0000008cH
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _Slot$[ebp]
  0003f	52		 push	 edx
  00040	6a 00		 push	 0
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HalReadWritePCISpace@24

; 223  : 
; 224  :         switch((dwClockSpeed >> 26) & 3)
; 225  :         {

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA
  0004d	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  00050	83 e0 03	 and	 eax, 3
  00053	89 45 f0	 mov	 DWORD PTR tv76[ebp], eax
  00056	83 7d f0 01	 cmp	 DWORD PTR tv76[ebp], 1
  0005a	74 08		 je	 SHORT $L36185
  0005c	83 7d f0 02	 cmp	 DWORD PTR tv76[ebp], 2
  00060	74 0e		 je	 SHORT $L36186
  00062	eb 18		 jmp	 SHORT $L36187
$L36185:

; 226  :             case 1:
; 227  :                 dwClockSpeed = 133;

  00064	c7 05 00 00 00
	00 85 00 00 00	 mov	 DWORD PTR ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA, 133 ; 00000085H

; 228  :                 break;

  0006e	eb 16		 jmp	 SHORT $L36180
$L36186:

; 229  : 
; 230  :             case 2:
; 231  :                 dwClockSpeed = 200;

  00070	c7 05 00 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA, 200 ; 000000c8H

; 232  :                 break;

  0007a	eb 0a		 jmp	 SHORT $L36180
$L36187:

; 233  : 
; 234  :             default:
; 235  :                 dwClockSpeed = 160;

  0007c	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA, 160 ; 000000a0H
$L36180:

; 236  :                 break;
; 237  :         }
; 238  :     }
; 239  : 
; 240  :     //
; 241  :     // Calculate max idle cycles
; 242  :     //
; 243  : 
; 244  :     dwMaxIdle = ((dwSamplesPerClock * 1000) / 48) * dwClockSpeed;

  00086	8b 45 0c	 mov	 eax, DWORD PTR _dwSamplesPerClock$[ebp]
  00089	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  0008f	33 d2		 xor	 edx, edx
  00091	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00096	f7 f1		 div	 ecx
  00098	0f af 05 00 00
	00 00		 imul	 eax, DWORD PTR ?dwClockSpeed@?1??GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z@4KA
  0009f	89 45 f4	 mov	 DWORD PTR _dwMaxIdle$[ebp], eax

; 245  : 
; 246  :     //
; 247  :     // Get the count of cycles currently being used
; 248  :     //
; 249  : 
; 250  :     dwUsage = *(LPDWORD)dwAddress;

  000a2	8b 55 08	 mov	 edx, DWORD PTR _dwAddress$[ebp]
  000a5	8b 02		 mov	 eax, DWORD PTR [edx]
  000a7	89 45 fc	 mov	 DWORD PTR _dwUsage$[ebp], eax

; 251  : 
; 252  :     //
; 253  :     // Convert to idle cycles
; 254  :     //
; 255  : 
; 256  :     if(dwUsage >= dwMaxIdle)

  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _dwUsage$[ebp]
  000ad	3b 4d f4	 cmp	 ecx, DWORD PTR _dwMaxIdle$[ebp]
  000b0	72 08		 jb	 SHORT $L36189

; 257  :     {
; 258  :         dwUsage = dwMaxIdle;

  000b2	8b 55 f4	 mov	 edx, DWORD PTR _dwMaxIdle$[ebp]
  000b5	89 55 fc	 mov	 DWORD PTR _dwUsage$[ebp], edx

; 259  :     }
; 260  :     else

  000b8	eb 09		 jmp	 SHORT $L36190
$L36189:

; 261  :     {
; 262  :         dwUsage = dwMaxIdle - dwUsage;

  000ba	8b 45 f4	 mov	 eax, DWORD PTR _dwMaxIdle$[ebp]
  000bd	2b 45 fc	 sub	 eax, DWORD PTR _dwUsage$[ebp]
  000c0	89 45 fc	 mov	 DWORD PTR _dwUsage$[ebp], eax
$L36190:

; 263  :     }
; 264  : 
; 265  :     //
; 266  :     // Convert to percentage
; 267  :     //
; 268  : 
; 269  :     dwUsage *= 100;

  000c3	8b 4d fc	 mov	 ecx, DWORD PTR _dwUsage$[ebp]
  000c6	6b c9 64	 imul	 ecx, 100		; 00000064H
  000c9	89 4d fc	 mov	 DWORD PTR _dwUsage$[ebp], ecx

; 270  :     dwUsage /= dwMaxIdle;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _dwUsage$[ebp]
  000cf	33 d2		 xor	 edx, edx
  000d1	f7 75 f4	 div	 DWORD PTR _dwMaxIdle$[ebp]
  000d4	89 45 fc	 mov	 DWORD PTR _dwUsage$[ebp], eax

; 271  : 
; 272  :     DPF_LEAVE(dwUsage);
; 273  : 
; 274  :     return dwUsage;

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _dwUsage$[ebp]

; 275  : }

  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 08 00	 ret	 8
?GetFreeDSPCycles@CPerfMon@DirectSound@@CGKKK@Z ENDP	; DirectSound::CPerfMon::GetFreeDSPCycles
DSOUND	ENDS
END
