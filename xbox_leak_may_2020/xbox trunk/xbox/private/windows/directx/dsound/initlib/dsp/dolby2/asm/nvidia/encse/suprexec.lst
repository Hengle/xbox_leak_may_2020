


Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 1



1                          ; ******************************************************************
2                          ;
3                          ;       Unpublished work.  Copyright 2000 Dolby Laboratories Inc.
4                          ;       All Rights Reserved.
5                          ;
6                          ;       File:                   Suprexec.asm
7                          ;
8                          ;   Contents:           Superexec for Dolby Game Encoder
9                          ;
10                         ;       Author:                 jmw
11                         ;
12                         ;       Revision:               1.00
13                         ;
14                         ;       History:
15                         ;
16                         ;               Rev 1.00        8/16/2000 3:51:37 PM            jmw
17                         ;       Created.
18                         ;
19                         ;
20                         ; ******************************************************************
21     
22                                   page    132,66,3,3
23                                                   opt     cre,loc,cc,cex,mex,mu,so
24     
26     
27                                                   section SuperExec
28     
29                                         ;**** include files ************************************************
30     
372    
373                                        ;**** Development Switches *****************************************
374    
375                                                  IF      @DEF('SIM_XBOX_SYS_MEM')
377                                                  ENDIF
378    
379                                        ;*** Switches (leave defined for X-Box) ****************************
380    
381                                                  DEFINE  ERRHALT   '1'                     ; Halt on loader error
382    
383                                        ;**** Development External References ******************************
384    
385                                                  IF      @DEF('RTSYS')                     ; Dolby development HW only
387                                                  ENDIF
388    
389                                                  IF      @DEF('SIM_XBOX_SYS_MEM')          ; Motorola simulator only
394                                                  ENDIF
395    
396                                        ;**** equates ******************************************************
397    
398                                        STACK_EXTSZ
399       000020                                     equ     32                                ; stack extension size
400                                        CONFIG_SIZE
401       000020                                     equ     32                                ; config data size
402                                        SE_NUM_BLOCKS
403       000006                                     equ     6                                 ; number of blocks per frame (6)
404       001000                           PMEMSIZE  equ     $001000                           ; p: is 4k words






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 2
Dolby Super Exec


405       000100                           YMEMSIZE  equ     $000100                           ; y: is 256 words
406       FFFFFF                           TRASHWORD equ     $ffffff                           ; overwrite memory with this word
407    
408                                        ;*******************************************************************
409                                        ;       Super Exec sets up stack extension at top of x: RAM.
410    
411                                                  mode    rel
412       X:000000                                   org     x(201):                           ; place stack at top of RAM.
413    
414       X:000000                         stack_ext ds      STACK_EXTSZ                       ; stack extension
415    
416                                        ;*******************************************************************
417                                        ;       Config List from System. Place immediately below stack extension.
418    
419                                                  mode    rel
420       X:000000                                   org     x(204):
421    
422                                        config_list
423       X:000000                                   ds      CONFIG_SIZE
424    
439    
440                                        ;**** code *********************************************************
441                                        ;       Start Program Code Here.
442    
443                                                  mode    rel
444       P:000000                                   org     p(202):
445    
446                                        SuperExec:
447    
448       P:000000 050C08  [4 -        4]            bra     <SEStart                          ; skip over local variables
449    
450                                        ;       Local Variables
451    
452  d                                     supexec_blknum
453  d    P:000001 000000                            dc      0                                 ; to sync all functions to same block
.
454  d    P:000002 000001                  surr_reset dc     1                                 ; surround reset flag - init to one (
!)
455  d    P:000003 000001                  game_reset dc     1                                 ; game encoder reset flag - init to o
ne (!)
456    
457  d                                     suprexec_idle_time
458  d    P:000004 000000                            dc      0                                 ; idle loop time
459  d                                     suprexec_time
460  d    P:000005 000000                            dc      0                                 ; execution time
461  d                                     suprexec_temp
462  d    P:000006 000000                            dc      0
463  d                                     suprexec_chksum
464  d    P:000007 000000                            dc      0
465    
466    
467    
468                                        ;*******************************************************************
469                                        ;       Start SuperExec Program Code.
470    
471                                        SEStart:






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 3
Dolby Super Exec


472    
473    
474                                        ;       Enable Stack extension.
475    
476       P:000008 0500BB  [1 -        5]            movec             #0,sp                   ; reset the stack pointer
477       P:000009 05F42A  [2 -        7]            movec             #stack_ext,ep           ; init extension pointer register
                   000000
478       P:00000B 0520B8  [1 -        8]            movec             #STACK_EXTSZ,sz         ; init stack size register
479       P:00000C 0AFA74  [2 -       10]            bset    #20,omr                           ; enable stack extension
480    
481                                        ;       Enable any counters, etc. at reset.
482    
483       P:00000D 200013  [1 -       11]            clr     a                                 ; a0 = 0
484       P:00000E 077088  [7+1 -     19]            move              a0,p:supexec_blknum     ; start with block zero at reset
                   000001
485       P:000010 000008  [1 -       20]            inc     a                                 ; a0 = 1
486       P:000011 077088  [7+1 -     28]            move              a0,p:surr_reset         ; explicitly set reset flag
                   000002
487       P:000013 077088  [7 -       35]            move              a0,p:game_reset         ; explicitly set reset flag
                   000003
488    
489                                        ;       Initialize the loader
490    
491       P:000015 56F400  [2 -       37]            move              #>LID_LOADER_INIT,a     ; Packet ID
                   000000
492       P:000017 0BF080  [4 -       41]            jsr     LOADERBASE                        ; Call the Loader
                   000000
493                                                  IF      @DEF('ERRHALT')
494       P:000019 200003  [1 -       42]            tst     a                                 ; check error status
495       P:00001A 052400  [4 -       46]            bne     <*
496                                                  ENDIF
497    
498                                        ;       Dolby development hardware only (RTSYS)
499    
500                                                  IF      @DEF('RTSYS')
502                                                  ENDIF
503    
504                                        ;       Clear the start frame bit
505                                                  EPClearStartFrameBit
506   +   P:00001B 08F485  [2 -       48]            movep             #2,x:INTERRUPT_REGISTER ; "Write-1-To-Clear-One"
                   000002
507    
508    
509                                        ;*******************************************************************
510                                        ;       Enter Endless Loop to process each of the four possible Functions
511                                        ;       in series.      Note that we might not process the function; it depends upon
512                                        ;       the corresponding flag in the config_list.
513    
514                                        ;       1. Dolby Surround
515                                        ;       2. Dolby Game Encoder Function 1
516                                        ;       3. Dolby Game Encoder Function 2
517                                        ;       4. Dolby Game Encoder Function 3
518    
519                                        SELoop:
520    
521                                        ; Write the idle bit






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 4
Dolby Super Exec


522                                                  EPSetIdleBit
523   +   P:00001D 08F484  [2 -       50]            movep             #1,x:PROCESSING_CONTROL_REGISTER ; "Write-1-To-Clear-One"
                   000001
524    
525       P:00001F 56F000  [2 -       52]            move              x:TIMER1_COUNT,a
                   FFFFB3
526       P:000021 07F084  [7 -       59]            move              p:suprexec_temp,x0
                   000006
527       P:000023 07708E  [7 -       66]            move              a,p:suprexec_temp
                   000006
528       P:000025 200044  [1 -       67]            sub     x0,a
529       P:000026 07708E  [7+1 -     75]            move              a,p:suprexec_time
                   000005
530    
531    
532                                        ;       Simulate fact that memory is in unknown state
533    
534                                                  IF      @DEF('TRASH_DSP_MEMORY')
536                                                  ENDIF
537    
538                                        ;       following section is for Dolby development hardware only
539                                        ;       gui can override config_list parameters
540                                        ;       call to rt_input returns a = audio/non-audio flag
541    
542                                                  IF      @DEF('RTSYS')
544                                                  ENDIF                                     ; @DEF('RTSYS')
545    
546                                        ;       if block zero, get configuration data from system memory
547    
548       P:000028 07F08E  [7 -       82]            move              p:supexec_blknum,a      ; get block number
                   000001
549       P:00002A 60F403  [2 -       84]            tst     a         #config_list,r0         ; is it zero? preload config_list add
ress
                   000000
550       P:00002C 052408  [4 -       88]            bne     <config_list_loaded               ; if not, don't load list
551    
552       P:00002D 56F400  [2 -       90]            move              #>LID_CONFIG_LIST,a     ; Packet ID
                   000008
553       P:00002F 382000  [1 -       91]            move              #CONFIG_SIZE,n0         ; tell Loader max number of words all
owable
554       P:000030 0BF080  [4 -       95]            jsr     LOADERBASE                        ; Call the Loader
                   000000
555                                                  IF      @DEF('ERRHALT')
556       P:000032 200003  [1 -       96]            tst     a                                 ; check error status
557       P:000033 052400  [4 -      100]            bne     <*                                ; stop if loader error
558                                                  ENDIF
559    
560                                        config_list_loaded:
561    
562    
563                                        waitframe:
564    
565       P:000034 0A8581  [4 -      104]            jclr    #kStartFrameBit,x:INTERRUPT_REGISTER,waitframe
                   000034
566    
567                                        ; Clear GP Start Block (bit 1)






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 5
Dolby Super Exec


568                                                  EPClearStartFrameBit
569   +   P:000036 08F485  [2 -      106]            movep             #2,x:INTERRUPT_REGISTER ; "Write-1-To-Clear-One"
                   000002
570    
571    
572       P:000038 56F000  [2 -      108]            move              x:TIMER1_COUNT,a
                   FFFFB3
573       P:00003A 07F084  [7 -      115]            move              p:suprexec_temp,x0
                   000006
574       P:00003C 07708E  [7 -      122]            move              a,p:suprexec_temp
                   000006
575       P:00003E 200044  [1 -      123]            sub     x0,a
576       P:00003F 07708E  [7+1 -    131]            move              a,p:suprexec_idle_time
                   000004
577    
578                                        ;-------------------------------------------------------------------
579                                        ;       1. Check if we're supposed to do Dolby Surround. If not, skip it.
580                                        ;-------------------------------------------------------------------
581    
582                                        SEDS:
583    
584       P:000041 56F000  [2 -      133]            move              x:config_list+SE_IN_DO_SURROUND,a ; get DO_SURROUND flag
                   000001
585       P:000043 60F403  [2 -      135]            tst     a         #DOLBYEXECBASE,r0       ; is zero? preload DSP memory address
                   000000
586       P:000045 05A410  [4 -      139]            beq     <SEDSDone                         ; if so, bypass Surround
587    
588                                        ;       Load Program Code for Dolby Surround
589    
590                                        SEDSLdP:
591    
592       P:000046 56F400  [2 -      141]            move              #>LID_PROG_DSURRE,a     ; Packet ID
                   000001
593       P:000048 0BF080  [4 -      145]            jsr     LOADERBASE                        ; Call the Loader
                   000000
594                                                  IF      @DEF('ERRHALT')
595       P:00004A 200003  [1 -      146]            tst     a                                 ; check error status
596       P:00004B 052400  [4 -      150]            bne     <*                                ; stop if loader error
597                                                  ENDIF
598    
599                                                  IF      @DEF('SIM_XBOX_SYS_MEM')
607                                                  ENDIF                                     ; @DEF('SIM_XBOX_SYS_MEM')
608    
609    
610                                                                                            ;       Run Program Code for Dolby Su
rround
611    
612                                        SEDSjsr:
613    
614       P:00004C 07F08F  [7 -      157]            move              p:surr_reset,b          ; get surround reset word
                   000002
615       P:00004E 60F400  [2 -      159]            move              #config_list,r0         ; pass pointer to configuration data 
(in x:)
                   000000
616       P:000050 0BF080  [4 -      163]            jsr     DOLBYEXECBASE+LDR_HDR_SIZE        ; jsr to Entry Point of Dolby Surroun
d Exec (skip header)






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 6
Dolby Super Exec


                   000000
617    
618                                        ;       clear surround reset word
619    
620       P:000052 240000  [1 -      164]            move              #0,x0
621       P:000053 077084  [7 -      171]            move              x0,p:surr_reset
                   000002
622    
623    
624                                                  IF      @DEF('SIM_XBOX_SYS_MEM')
632                                                  ENDIF                                     ; @DEF('SIM_XBOX_SYS_MEM')
633    
634                                        ; All Done with Dolby Surround.
635    
636                                        SEDSDone:
637    
638                                        ;-------------------------------------------------------------------
639                                        ;       2. Check if we're supposed to do Game Encoder. If not, skip it.
640                                        ;-------------------------------------------------------------------
641    
642                                        SEF1:
643    
644       P:000055 56F000  [2 -      173]            move              x:config_list+SE_IN_DO_GAME,a ; get DO_GAME flag
                   000002
645       P:000057 60F403  [2 -      175]            tst     a         #DOLBYEXECBASE,r0       ; is it zero? preload DSP memory addr
ess
                   000000
646       P:000059 05A44C  [4 -      179]            beq     <SEF3Done                         ; if so, bypass Game Encoder
647    
648                                        ;       Load Program Code for Function 1
649    
650                                        SEF1LdP:
651    
652       P:00005A 56F400  [2 -      181]            move              #>LID_PROG_DGAME1,a     ; Packet ID
                   000002
653       P:00005C 0BF080  [4 -      185]            jsr     LOADERBASE                        ; Call the Loader
                   000000
654                                                  IF      @DEF('ERRHALT')
655       P:00005E 200003  [1 -      186]            tst     a                                 ; check error status
656       P:00005F 052400  [4 -      190]            bne     <*                                ; stop if loader error
657                                                  ENDIF
658    
659    
660                                                  IF      @DEF('SIM_XBOX_SYS_MEM')
666                                                  ENDIF                                     ; @DEF('SIM_XBOX_SYS_MEM')
667    
668    
669                                        ;       Run Program Code for Function 1
670    
671                                        SEF1jsr:
672    
673    
674    
675       P:000060 60F400  [2 -      192]            move              #config_list,r0         ; set up config list pointer
                   000000
676       P:000062 07F08F  [7 -      199]            move              p:game_reset,b          ; get Game Encoder reset word






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 7
Dolby Super Exec


                   000003
677       P:000064 07F084  [7 -      206]            move              p:supexec_blknum,x0     ; set up x0 with current block number
                   000001
678       P:000066 0BF080  [4 -      210]            jsr     DOLBYEXECBASE+LDR_HDR_SIZE        ; jsr to Entry Point of GE Function 1
 (skip past header)
                   000000
679    
680    
681    
682                                        ;       All Done with Function 1.
683    
684                                        SEF1Done:
685    
686                                        ;-------------------------------------------------------------------
687                                        ;       Game Encoder Fcn 2.
688                                        ;-------------------------------------------------------------------
689    
690                                        SEF2:
691    
692                                        ;       Load Program Code for Function 2
693    
694                                        SEF2LdP:
695    
696       P:000068 60F400  [2 -      212]            move              #DOLBYEXECBASE,r0       ; r0 is DSP memory address
                   000000
697       P:00006A 56F400  [2 -      214]            move              #>LID_PROG_DGAME2,a     ; Packet ID
                   000003
698       P:00006C 0BF080  [4 -      218]            jsr     LOADERBASE                        ; Call the Loader
                   000000
699                                                  IF      @DEF('ERRHALT')
700       P:00006E 200003  [1 -      219]            tst     a                                 ; check error status
701       P:00006F 052400  [4 -      223]            bne     <*                                ; stop if loader error
702                                                  ENDIF
703    
704    
705                                        ;       Run Program Code for Function 2
706    
707                                        SEF2jsr:
708    
709       P:000070 07F08F  [7 -      230]            move              p:game_reset,b          ; get Game Encoder reset word
                   000003
710       P:000072 0BF080  [4 -      234]            jsr     DOLBYEXECBASE+LDR_HDR_SIZE        ; jsr to Entry Point of GE Function 2
 (skip past header)
                   000000
711    
712                                        ;       All Done with Function 2.
713    
714                                        SEF2Done:
715    
716                                        ;-------------------------------------------------------------------
717                                        ;       Game Encoder Fcn 3.
718                                        ;-------------------------------------------------------------------
719    
720                                        SEF3:
721    
722                                        ;       Load Program Code for Function 3 Executive






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 8
Dolby Super Exec


723    
724                                        SEF3LdP:
725    
726       P:000074 60F400  [2 -      236]            move              #DOLBYEXECBASE,r0       ; r0 is DSP memory address
                   000000
727       P:000076 56F400  [2 -      238]            move              #>LID_PROG_DGAME3,a     ; Packet ID
                   000004
728       P:000078 0BF080  [4 -      242]            jsr     LOADERBASE                        ; Call the Loader
                   000000
729                                                  IF      @DEF('ERRHALT')
730       P:00007A 200003  [1 -      243]            tst     a                                 ; check error status
731       P:00007B 052400  [4 -      247]            bne     <*                                ; stop if loader error
732                                                  ENDIF
733    
734    
735                                        ;       Run Program Code for Function 3
736    
737                                        SEF3jsr:
738    
739       P:00007C 07F08F  [7 -      254]            move              p:game_reset,b          ; get Game Encoder reset word
                   000003
740       P:00007E 07F084  [7 -      261]            move              p:supexec_blknum,x0     ; set up x0 with current block number
 (need for output)
                   000001
741       P:000080 0BF080  [4 -      265]            jsr     DOLBYEXECBASE+LDR_HDR_SIZE        ; jsr to Entry Point of GE Function 3
 (skip past header)
                   000000
742    
743                                        ;       clear Game Encoder reset word
744    
745       P:000082 240000  [1 -      266]            move              #0,x0
746       P:000083 077084  [7 -      273]            move              x0,p:game_reset
                   000003
747    
748                                                  IF      @DEF('SIM_XBOX_SYS_MEM')
759                                                  ENDIF                                     ; @DEF('SIM_XBOX_SYS_MEM')
760    
761                                        ;       All Done with Function 3.
762    
763                                        SEF3Done:
764    
765                                                  IF      @DEF('RTSYS')
773                                                  ENDIF                                     ; @DEF('RTSYS')
774    
775                                        ;-------------------------------------------------------------------
776                                        ;       Increment Block Number, and wrap if necessary.
777    
778                                        SEBlkAdj:
779    
780       P:000085 07F08E  [7 -      280]            move              p:supexec_blknum,a
                   000001
781       P:000087 014180  [1 -      281]            add     #1,a
782       P:000088 014685  [1 -      282]            cmp     #SE_NUM_BLOCKS,a
783       P:000089 202113  [1 -      283]            clr     a         ifge
784       P:00008A 07708C  [7+1 -    291]            move              a1,p:supexec_blknum
                   000001






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 9
Dolby Super Exec


785    
786                                        ;       Loop
787    
788    
789                                        ;       Increment the ping-pong for pcm input
790    
791       P:00008C 56F400  [2 -      293]            move              #>LID_PING_PONG,a       ; Packet ID
                   000009
792       P:00008E 0BF080  [4 -      297]            jsr     LOADERBASE                        ; Call the Loader
                   000000
793    
794    
795       P:000090 050F0D  [4 -      301]            bra     <SELoop
796    
797    
798    
800    
801    
802                                                  IF      @DEF('TRASH_DSP_MEMORY')
865                                                  ENDIF                                     ; @DEF('TRASH_DSP_MEMORY')
866    
867    
868                                        ;*******************************************************************
869                                                  endsec                                    ; SuperExec
870    
871                                                  end                                       ; end of file

0    Errors
0    Warnings

































Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 10
Dolby Super Exec


Define symbols:

Symbol           Definition

ERRHALT..........'1'


Macros:

Name          Definition       Section
                 Line

EPClearDataRAM...349           SuperExec
EPClearInterrupt.309           SuperExec
EPClearProcessin.317           SuperExec
EPClearSampleCon.325           SuperExec
EPClearStartFram.341           SuperExec
EPSetIdleBit.....333           SuperExec
EPWritePC........358           SuperExec


Relocatable Sections:

Name

SuperExec


Symbols:

Name             Type    Value         Section           Attributes

COMMAND_GET_REGI.int     FFFFC0        SuperExec         ABS
COMMAND_PUT_REGI.int     FFFFC1        SuperExec         ABS
CONFIG_SIZE......int     000020        SuperExec         ABS
FIFOIN_CONTROL_R.int     FFFFC9        SuperExec         ABS
FIFOOUT_CONTROL_.int     FFFFC8        SuperExec         ABS
GLOBAL_SAMPLE_CO.int     FFFFC6        SuperExec         ABS
INTERRUPT_REGIST.int     FFFFC5        SuperExec         ABS
INTERRUPT_TABLE_.int     FF0000        SuperExec         ABS
LDR_ACT_ALLOC....int     000000        SuperExec         ABS
LDR_ACT_FROM_DSP.int     000006        SuperExec         ABS
LDR_ACT_FROM_DSP.int     000002        SuperExec         ABS
LDR_ACT_FROM_DSP.int     000004        SuperExec         ABS
LDR_ACT_MAX......int     000006        SuperExec         ABS
LDR_ACT_MIN......int     000000        SuperExec         ABS
LDR_ACT_TO_DSPP..int     000005        SuperExec         ABS
LDR_ACT_TO_DSPX..int     000001        SuperExec         ABS
LDR_ACT_TO_DSPY..int     000003        SuperExec         ABS
LDR_ERR_ACTION...int     000002        SuperExec         ABS
LDR_ERR_ALLOC....int     000004        SuperExec         ABS
LDR_ERR_ID.......int     000001        SuperExec         ABS
LDR_ERR_LENGTH...int     000003        SuperExec         ABS
LDR_ERR_NONE.....int     000000        SuperExec         ABS
LDR_HDR_SIZE.....int     000004        SuperExec         ABS
LDR_HEAP_ADDR....int     000018        SuperExec         ABS






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 11
Dolby Super Exec


LDR_HEAP_SIZE....int     000019        SuperExec         ABS
LDR_NUM_DATA.....int     000014        SuperExec         ABS
LDR_OFF_PCM_C....int     000001        SuperExec         ABS
LDR_OFF_PCM_L....int     000000        SuperExec         ABS
LDR_OFF_PCM_LFE..int     000005        SuperExec         ABS
LDR_OFF_PCM_LS...int     000003        SuperExec         ABS
LDR_OFF_PCM_LT...int     000000        SuperExec         ABS
LDR_OFF_PCM_R....int     000002        SuperExec         ABS
LDR_OFF_PCM_RS...int     000004        SuperExec         ABS
LDR_OFF_PCM_RT...int     000001        SuperExec         ABS
LDR_PINGPONG_OFF.int     000012        SuperExec         ABS
LDR_SYSTABLE_SIZ.int     00001A        SuperExec         ABS
LDR_TABLE_SIZE...int     000040        SuperExec         ABS
LID_AC3_PREAMBLE.int     00000B        SuperExec         ABS
LID_AC3_ZEROS....int     00000A        SuperExec         ABS
LID_BUF_AC3......int     000007        SuperExec         ABS
LID_BUF_DATA.....int     00000C        SuperExec         ABS
LID_BUF_LTRT.....int     000006        SuperExec         ABS
LID_BUF_PCM......int     000005        SuperExec         ABS
LID_CONFIG_LIST..int     000008        SuperExec         ABS
LID_LOADER_INIT..int     000000        SuperExec         ABS
LID_MAX..........int     00001F        SuperExec         ABS
LID_MAX_PROG.....int     000004        SuperExec         ABS
LID_MIN..........int     000000        SuperExec         ABS
LID_PING_PONG....int     000009        SuperExec         ABS
LID_PROG_DGAME1..int     000002        SuperExec         ABS
LID_PROG_DGAME2..int     000003        SuperExec         ABS
LID_PROG_DGAME3..int     000004        SuperExec         ABS
LID_PROG_DSURRE..int     000001        SuperExec         ABS
MAILBOX_IN.......int     FFFFC3        SuperExec         ABS
MAILBOX_OUT......int     FFFFC2        SuperExec         ABS
NV_PAPU_EPOFBASE.int     003024        SuperExec         ABS
NV_PAPU_EPOFBASE.int     003034        SuperExec         ABS
NV_PAPU_EPOFBASE.int     003044        SuperExec         ABS
NV_PAPU_EPOFBASE.int     003054        SuperExec         ABS
NV_PAPU_EPOFCUR0.int     00302C        SuperExec         ABS
NV_PAPU_EPOFCUR1.int     00303C        SuperExec         ABS
NV_PAPU_EPOFCUR2.int     00304C        SuperExec         ABS
NV_PAPU_EPOFCUR3.int     00305C        SuperExec         ABS
NV_PAPU_EPOFEND0.int     003028        SuperExec         ABS
NV_PAPU_EPOFEND1.int     003038        SuperExec         ABS
NV_PAPU_EPOFEND2.int     003048        SuperExec         ABS
NV_PAPU_EPOFEND3.int     003058        SuperExec         ABS
PMEMSIZE.........int     001000        SuperExec         ABS
PROCESSING_CONTR.int     FFFFC4        SuperExec         ABS
SAMPLE_CONTROL_R.int     FFFFCA        SuperExec         ABS
SEBlkAdj.........int   P:000085        SuperExec         REL
SEDS.............int   P:000041        SuperExec         REL
SEDSDone.........int   P:000055        SuperExec         REL
SEDSLdP..........int   P:000046        SuperExec         REL
SEDSjsr..........int   P:00004C        SuperExec         REL
SEF1.............int   P:000055        SuperExec         REL
SEF1Done.........int   P:000068        SuperExec         REL
SEF1LdP..........int   P:00005A        SuperExec         REL
SEF1jsr..........int   P:000060        SuperExec         REL
SEF2.............int   P:000068        SuperExec         REL






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 12
Dolby Super Exec


SEF2Done.........int   P:000074        SuperExec         REL
SEF2LdP..........int   P:000068        SuperExec         REL
SEF2jsr..........int   P:000070        SuperExec         REL
SEF3.............int   P:000074        SuperExec         REL
SEF3Done.........int   P:000085        SuperExec         REL
SEF3LdP..........int   P:000074        SuperExec         REL
SEF3jsr..........int   P:00007C        SuperExec         REL
SELoop...........int   P:00001D        SuperExec         REL
SEStart..........int   P:000008        SuperExec         REL
SE_IN_ACMODE.....int     000004        SuperExec         ABS
SE_IN_BW.........int     000007        SuperExec         ABS
SE_IN_COMPR......int     00000E        SuperExec         ABS
SE_IN_COMPRE.....int     00000D        SuperExec         ABS
SE_IN_DIALNORM...int     000006        SuperExec         ABS
SE_IN_DO_GAME....int     000002        SuperExec         ABS
SE_IN_DO_SURROUN.int     000001        SuperExec         ABS
SE_IN_DSURMOD....int     000011        SuperExec         ABS
SE_IN_DYNRNG.....int     00000C        SuperExec         ABS
SE_IN_DYNRNGE....int     00000B        SuperExec         ABS
SE_IN_FSCODE.....int     000003        SuperExec         ABS
SE_IN_HPF........int     00000A        SuperExec         ABS
SE_IN_LFE........int     000005        SuperExec         ABS
SE_IN_LFELPF.....int     000009        SuperExec         ABS
SE_IN_LPF........int     000008        SuperExec         ABS
SE_IN_MAX........int     000012        SuperExec         ABS
SE_IN_SIZE.......int     000000        SuperExec         ABS
SE_IN_SURR_GAIN..int     000010        SuperExec         ABS
SE_IN_SURR_GE....int     00000F        SuperExec         ABS
SE_NUM_BLOCKS....int     000006        SuperExec         ABS
STACK_EXTSZ......int     000020        SuperExec         ABS
SuperExec........int   P:000000        SuperExec         REL
TIMER1_COUNT.....int     FFFFB3        SuperExec         ABS
TIMER2_COUNT.....int     FFFFB7        SuperExec         ABS
TRASHWORD........int     FFFFFF        SuperExec         ABS
YMEMSIZE.........int     000100        SuperExec         ABS
config_list......int   X:000000        SuperExec         REL
config_list_load.int   P:000034        SuperExec         REL
game_reset.......int   P:000003        SuperExec         REL
kAbortFrameBit...int     000000        SuperExec         ABS
kAddressErrorBit.int     00000B        SuperExec         ABS
kCounter.........int     000000        SuperExec         ABS
kDMAComplete1Bit.int     000004        SuperExec         ABS
kDMAComplete2Bit.int     000005        SuperExec         ABS
kDMAComplete3Bit.int     000006        SuperExec         ABS
kDMAEndOfListBit.int     000007        SuperExec         ABS
kDMAErrorBit.....int     00000A        SuperExec         ABS
kEPMemory_Base...int     000000        SuperExec         ABS
kEPMemory_Base_B.int     FF0000        SuperExec         ABS
kEPMemory_Base_C.int     FFF000        SuperExec         ABS
kEPMemory_Base_P.int     002800        SuperExec         ABS
kEPMemory_Base_X.int     000000        SuperExec         ABS
kEPMemory_Base_Y.int     001800        SuperExec         ABS
kEPMemory_Size_P.int     001000        SuperExec         ABS
kEPMemory_Size_X.int     000C00        SuperExec         ABS
kEPMemory_Size_Y.int     000100        SuperExec         ABS
kFIFO_Channels1..int     000000        SuperExec         ABS






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 13
Dolby Super Exec


kFIFO_Channels2..int     000001        SuperExec         ABS
kFIFO_Channels4..int     000002        SuperExec         ABS
kFIFO_Channels6..int     000003        SuperExec         ABS
kFIFO_SampleForm.int     000000        SuperExec         ABS
kFIFO_SampleForm.int     000001        SuperExec         ABS
kFIFO_SampleForm.int     000002        SuperExec         ABS
kFIFO_SampleForm.int     000003        SuperExec         ABS
kFifoOut0_Defaul.int     000012        SuperExec         ABS
kFrameLength.....int     000020        SuperExec         ABS
kMailInUpdateBit.int     000003        SuperExec         ABS
kPCValue.........int     000000        SuperExec         ABS
kProcessingContr.int     000001        SuperExec         ABS
kProcessingContr.int     000000        SuperExec         ABS
kPutUpdateBit....int     000002        SuperExec         ABS
kStartFrameBit...int     000001        SuperExec         ABS
kTimer1Bit.......int     000008        SuperExec         ABS
kTimer2Bit.......int     000009        SuperExec         ABS
stack_ext........int   X:000000        SuperExec         REL
supexec_blknum...int   P:000001        SuperExec         REL
suprexec_chksum..int   P:000007        SuperExec         REL
suprexec_idle_ti.int   P:000004        SuperExec         REL
suprexec_temp....int   P:000006        SuperExec         REL
suprexec_time....int   P:000005        SuperExec         REL
surr_reset.......int   P:000002        SuperExec         REL
waitframe........int   P:000034        SuperExec         REL


Symbol cross-reference listing:

Name             Line number (* is definition)
COMMAND_GET_REGI.  283*  
COMMAND_PUT_REGI.  284*  
CONFIG_SIZE......  400*    422     553   
FIFOIN_CONTROL_R.  240*  
FIFOOUT_CONTROL_.  239*  
GLOBAL_SAMPLE_CO.  304*  
INTERRUPT_REGIST.  222*    506     565     569   
INTERRUPT_TABLE_.  215*  
LDR_ACT_ALLOC....   98*  
LDR_ACT_FROM_DSP.  104*  
LDR_ACT_FROM_DSP.  100*  
LDR_ACT_FROM_DSP.  102*  
LDR_ACT_MAX......  106*  
LDR_ACT_MIN......   96*  
LDR_ACT_TO_DSPP..  103*  
LDR_ACT_TO_DSPX..   99*  
LDR_ACT_TO_DSPY..  101*  
LDR_ERR_ACTION...  124*  
LDR_ERR_ALLOC....  126*  
LDR_ERR_ID.......  123*  
LDR_ERR_LENGTH...  125*  
LDR_ERR_NONE.....  122*  
LDR_HDR_SIZE.....   57*    616     678     710     741   
LDR_HEAP_ADDR....   90*  
LDR_HEAP_SIZE....   91*  
LDR_NUM_DATA.....   84*  






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 14
Dolby Super Exec


LDR_OFF_PCM_C....  111*  
LDR_OFF_PCM_L....  110*  
LDR_OFF_PCM_LFE..  115*  
LDR_OFF_PCM_LS...  113*  
LDR_OFF_PCM_LT...  117*  
LDR_OFF_PCM_R....  112*  
LDR_OFF_PCM_RS...  114*  
LDR_OFF_PCM_RT...  118*  
LDR_PINGPONG_OFF.   92*  
LDR_SYSTABLE_SIZ.   89*  
LDR_TABLE_SIZE...   88*  
LID_AC3_PREAMBLE.   81*  
LID_AC3_ZEROS....   80*  
LID_BUF_AC3......   75*  
LID_BUF_DATA.....   82*     84      89      90      91   
LID_BUF_LTRT.....   74*  
LID_BUF_PCM......   73*  
LID_CONFIG_LIST..   77*    552   
LID_LOADER_INIT..   64*    491   
LID_MAX..........   62*     84      88   
LID_MAX_PROG.....   71*  
LID_MIN..........   61*  
LID_PING_PONG....   79*     92     791   
LID_PROG_DGAME1..   67*    652   
LID_PROG_DGAME2..   68*    697   
LID_PROG_DGAME3..   69*    727   
LID_PROG_DSURRE..   66*    592   
MAILBOX_IN.......  288*  
MAILBOX_OUT......  287*  
NV_PAPU_EPOFBASE.  273*  
NV_PAPU_EPOFBASE.  274*  
NV_PAPU_EPOFBASE.  275*  
NV_PAPU_EPOFBASE.  276*  
NV_PAPU_EPOFCUR0.  261*  
NV_PAPU_EPOFCUR1.  262*  
NV_PAPU_EPOFCUR2.  263*  
NV_PAPU_EPOFCUR3.  264*  
NV_PAPU_EPOFEND0.  267*  
NV_PAPU_EPOFEND1.  268*  
NV_PAPU_EPOFEND2.  269*  
NV_PAPU_EPOFEND3.  270*  
PMEMSIZE.........  404*  
PROCESSING_CONTR.  297*    523   
SAMPLE_CONTROL_R.  241*  
SEBlkAdj.........  778*  
SEDS.............  582*  
SEDSDone.........  586     636*  
SEDSLdP..........  590*  
SEDSjsr..........  612*  
SEF1.............  642*  
SEF1Done.........  684*  
SEF1LdP..........  650*  
SEF1jsr..........  671*  
SEF2.............  690*  
SEF2Done.........  714*  
SEF2LdP..........  694*  






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 15
Dolby Super Exec


SEF2jsr..........  707*  
SEF3.............  720*  
SEF3Done.........  646     763*  
SEF3LdP..........  724*  
SEF3jsr..........  737*  
SELoop...........  519*    795   
SEStart..........  448     471*  
SE_IN_ACMODE.....  155*  
SE_IN_BW.........  158*  
SE_IN_COMPR......  165*  
SE_IN_COMPRE.....  164*  
SE_IN_DIALNORM...  157*  
SE_IN_DO_GAME....  153*    644   
SE_IN_DO_SURROUN.  152*    584   
SE_IN_DSURMOD....  168*  
SE_IN_DYNRNG.....  163*  
SE_IN_DYNRNGE....  162*  
SE_IN_FSCODE.....  154*  
SE_IN_HPF........  161*  
SE_IN_LFE........  156*  
SE_IN_LFELPF.....  160*  
SE_IN_LPF........  159*  
SE_IN_MAX........  170*  
SE_IN_SIZE.......  151*  
SE_IN_SURR_GAIN..  167*  
SE_IN_SURR_GE....  166*  
SE_NUM_BLOCKS....  402*    782   
STACK_EXTSZ......  398*    414     478   
SuperExec........  446*  
TIMER1_COUNT.....  290*    525     572   
TIMER2_COUNT.....  291*  
TRASHWORD........  406*  
YMEMSIZE.........  405*  
config_list......  422*    549     584     615     644     675   
config_list_load.  550     560*  
game_reset.......  455*    487     676     709     739     746   
kAbortFrameBit...  223*  
kAddressErrorBit.  234*  
kCounter.........  185*  
kDMAComplete1Bit.  227*  
kDMAComplete2Bit.  228*  
kDMAComplete3Bit.  229*  
kDMAEndOfListBit.  230*  
kDMAErrorBit.....  233*  
kEPMemory_Base...  203*    204     205     206   
kEPMemory_Base_B.  212*  
kEPMemory_Base_C.  281*  
kEPMemory_Base_P.  206*  
kEPMemory_Base_X.  204*  
kEPMemory_Base_Y.  205*  
kEPMemory_Size_P.  210*  
kEPMemory_Size_X.  208*  
kEPMemory_Size_Y.  209*  
kFIFO_Channels1..  243*  
kFIFO_Channels2..  244*  
kFIFO_Channels4..  245*  






Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 16
Dolby Super Exec


kFIFO_Channels6..  246*  
kFIFO_SampleForm.  248*  
kFIFO_SampleForm.  249*  
kFIFO_SampleForm.  250*  
kFIFO_SampleForm.  251*  
kFifoOut0_Defaul.  258*  
kFrameLength.....  183*  
kMailInUpdateBit.  226*  
kPCValue.........  184*  
kProcessingContr.  299*  
kProcessingContr.  298*  
kPutUpdateBit....  225*  
kStartFrameBit...  224*    565   
kTimer1Bit.......  231*  
kTimer2Bit.......  232*  
stack_ext........  414*    477   
supexec_blknum...  452*    484     548     677     740     780     784   
suprexec_chksum..  463*  
suprexec_idle_ti.  457*    576   
suprexec_temp....  461*    526     527     573     574   
suprexec_time....  459*    529   
surr_reset.......  454*    486     614     621   
waitframe........  563*    565   







































Motorola DSP56300 Assembler  Version 6.3.0   101-05-11  20:00:34  .\suprexec.asm  Page 17
Dolby Super Exec


                         Memory Utilization Report


X Memory

Start    End         Length  Type       Label             Section           Overlay Address
000000   00001F          32  DATA       config_list       SuperExec
000000   00001F          32  DATA       stack_ext         SuperExec                         *Overlap*
000020   FFFFFF    16777184  UNUSED


P Memory

Start    End         Length  Type       Label             Section           Overlay Address
000000   000000           1  CODE                         SuperExec
000001   000001           1  CONST      supexec_blknum    SuperExec
000002   000002           1  CONST      surr_reset        SuperExec
000003   000003           1  CONST      game_reset        SuperExec
000004   000004           1  CONST      suprexec_idle_ti  SuperExec
000005   000005           1  CONST      suprexec_time     SuperExec
000006   000006           1  CONST      suprexec_temp     SuperExec
000007   000007           1  CONST      suprexec_chksum   SuperExec
000008   000090         137  CODE                         SuperExec
000091   FFFFFF    16777071  UNUSED
