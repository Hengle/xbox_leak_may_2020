; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\dsapi.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
DSOUND_URW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_URW	ENDS
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@GIDDCAOM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_09GPGAJHPD@?$CIunknown?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DK@BHCCMBKD@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DG@LNGLCLLL@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@MLMBNMPN@nLength?5?$DO?5sizeof?$CI?$CKpRunMarker?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_07CNKCBOKB@TESTSND?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@GKNCNMBD@CDirectSoundTest?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@KCMACBKL@CDirectSoundTest?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DK@PBGBJGJP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@JCBGLFIF@?$CBm_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@JLKNBNJM@?$CBm_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@BMLCBDGO@m_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ELEAODJN@dwNotifierIndex?5?$DM?5m_dwNotifierCo@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@MEDKFNKN@Unexpected?5notifier?5status?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BC@NHNIONPC@m_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@JEPBENHJ@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BA@IANIBDAF@m_pGpDspManager?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@ONCKHILO@m_dwState?5?$CG?5MCPX_APUSTATE_GPIMAG@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@FGGNHBE@KeGetCurrentIrql?$CI?$CJ?5?$DO?$DN?5DISPATCH_L@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@IECLLDN@m_dwVoiceMapLock?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@FFOHIBNC@m_dwVoiceMapLock?5?$DO?$DN?51?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BB@FOAPMLBA@CDirectSoundTest?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@DPFLFMGJ@DirectSoundCreateTest?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DK@JFIBKPKF@NULL?5or?5GUID_NULL?5is?5the?5only?5su@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@HEGINMCG@Failed?5to?5supply?5an?5LPDIRECTSOUN@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@KMLCCGBC@Aggregation?5is?5not?5supported?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@JJMFDDDK@CDirectSoundTestSettings?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@JBIFFKD@CMcpxAPUTest?$CIm_pSettings?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
DSOUND_RW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RW	ENDS
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _IsEqualGUID@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _==@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeGetCurrentIrql@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeIsExecutingDpc@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_AddRef@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_Release@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_BeginScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_EndScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DPalette_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _sqrtf@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?InsertHeadListUninit@@YGXPAU_LIST_ENTRY@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??2@YAPAXIPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??3@YAXPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CIrql@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Raise@CIrql@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Lower@CIrql@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Save@CFpState@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Restore@CFpState@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CRefCountTest@@QAE@K@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCRefCountTest@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CRefCountTest@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CRefCountTest@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CRefCountTest@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister8@CAc97Device@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister8@CAc97Device@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister16@CAc97Device@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister16@CAc97Device@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister32@CAc97Device@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister32@CAc97Device@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister8@CAc97Device@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister8@CAc97Device@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister16@CAc97Device@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister16@CAc97Device@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister32@CAc97Device@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister32@CAc97Device@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ReleaseChannel@CAc97Device@@QAEXPAVCAc97Channel@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundTestEnterCriticalSection@@YGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundTestLeaveCriticalSection@@YGXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CAutoLockTest@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CAutoLockTest@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CDirectSoundTest@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CDirectSoundTest@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Free@CMcpxNotifierTest@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Reset@CMcpxNotifierTest@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetScratchSpaceLinAddr@CMcpxDspScratchDmaTest@@QAEPAXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundCreateInternal@@YGJPAPAVCDirectSoundTest@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _DirectSoundCreateTest@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CDirectSoundTestSettings@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCDirectSoundTestSettings@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0DS3DLISTENERPARAMS@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0_DS3DLISTENER@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CDirectSoundTestSettings@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?SetEffectImageLocations@CDirectSoundTestSettings@@QAEXPBU_DSEFFECTIMAGELOC@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CDirectSoundTest@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCDirectSoundTest@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CDirectSoundTest@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Initialize@CDirectSoundTest@@QAGJXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0?$CValidObject@$0EEFDEOEE@@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDEOEE@@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AddRef@@YGPAVCDirectSoundTest@@PAV1@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDEOEE@@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_ECDirectSoundTest@@W7AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7CDirectSoundTest@@6B?$CValidObject@$0EEFDEOEE@@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDEOEE@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7CDirectSoundTest@@6BCRefCountTest@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _TestSoundLibBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7CRefCountTest@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7CDirectSoundTestSettings@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V, DSOUND_RW
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
PUBLIC	?g_dwDirectSoundTestOverrideSpeakerConfig@@3KA	; g_dwDirectSoundTestOverrideSpeakerConfig
PUBLIC	_TestSoundLibBuildNumberD
PUBLIC	_g_fDirectSoundTestInFinalRelease
PUBLIC	_g_DirectSoundTestCriticalSection
PUBLIC	?m_pDirectSound@CDirectSoundTest@@2PAV1@A	; CDirectSoundTest::m_pDirectSound
PUBLIC	?m_pvEncoderImageData@CDirectSoundTest@@2PAXA	; CDirectSoundTest::m_pvEncoderImageData
PUBLIC	?m_dwEncoderImageSize@CDirectSoundTest@@2KA	; CDirectSoundTest::m_dwEncoderImageSize
DSOUND_URW	SEGMENT
?m_pDirectSound@CDirectSoundTest@@2PAV1@A DD 01H DUP (?) ; CDirectSoundTest::m_pDirectSound
?m_pvEncoderImageData@CDirectSoundTest@@2PAXA DD 01H DUP (?) ; CDirectSoundTest::m_pvEncoderImageData
?m_dwEncoderImageSize@CDirectSoundTest@@2KA DD 01H DUP (?) ; CDirectSoundTest::m_dwEncoderImageSize
DSOUND_URW	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
DSOUND_RD	ENDS
;	COMDAT _TestSoundLibBuildNumberD
XBLD$V	SEGMENT
_TestSoundLibBuildNumberD DW 04554H
	DW	05453H
	DW	04e53H
	DW	04444H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
DSOUND_RW	SEGMENT
?g_dwDirectSoundTestOverrideSpeakerConfig@@3KA DD 0ffffffffH ; g_dwDirectSoundTestOverrideSpeakerConfig
_g_fDirectSoundTestInFinalRelease DD 00H
_g_DirectSoundTestCriticalSection DB 01H
	DB	00H
	DB	04H
	DB	00H
	DD	00H
	DD	FLAT:_g_DirectSoundTestCriticalSection+8
	DD	FLAT:_g_DirectSoundTestCriticalSection+8
	DD	0ffffffffH
	DD	00H
	DD	00H
DSOUND_RW	ENDS
PUBLIC	??0CDirectSoundTest@@QAE@XZ			; CDirectSoundTest::CDirectSoundTest
PUBLIC	?Initialize@CDirectSoundTest@@QAGJXZ		; CDirectSoundTest::Initialize
PUBLIC	?DirectSoundCreateInternal@@YGJPAPAVCDirectSoundTest@@@Z ; DirectSoundCreateInternal
PUBLIC	?__AddRef@@YGPAVCDirectSoundTest@@PAV1@@Z	; __AddRef
PUBLIC	??_C@_0BB@FOAPMLBA@CDirectSoundTest?$AA@	; `string'
PUBLIC	??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
;	COMDAT ??_C@_0BB@FOAPMLBA@CDirectSoundTest?$AA@
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.cpp
DSOUND_RD	SEGMENT
??_C@_0BB@FOAPMLBA@CDirectSoundTest?$AA@ DB 'CDirectSoundTest', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT
??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\initlib\dsapi.cpp', 00H ; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?DirectSoundCreateInternal@@YGJPAPAVCDirectSoundTest@@@Z
DSOUND	SEGMENT
tv75 = -16
$T32348 = -12
_hr$ = -8
_pDirectSound$ = -4
_ppDirectSound$ = 8
?DirectSoundCreateInternal@@YGJPAPAVCDirectSoundTest@@@Z PROC NEAR ; DirectSoundCreateInternal, COMDAT

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 59   :     CDirectSoundTest *          pDirectSound    = NULL;

  00006	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pDirectSound$[ebp], 0

; 60   :     HRESULT                 hr              = DS_OK;

  0000d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 61   :     
; 62   :     DPF_ENTER();
; 63   : 
; 64   :     //
; 65   :     // Check to see if the DirectSound object already exists
; 66   :     //
; 67   : 
; 68   :     if(CDirectSoundTest::m_pDirectSound)

  00014	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pDirectSound@CDirectSoundTest@@2PAV1@A, 0 ; CDirectSoundTest::m_pDirectSound
  0001b	74 15		 je	 SHORT $L32065

; 69   :     {
; 70   :         *ppDirectSound = ADDREF(CDirectSoundTest::m_pDirectSound);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pDirectSound@CDirectSoundTest@@2PAV1@A ; CDirectSoundTest::m_pDirectSound
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?__AddRef@@YGPAVCDirectSoundTest@@PAV1@@Z ; __AddRef
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _ppDirectSound$[ebp]
  0002b	89 01		 mov	 DWORD PTR [ecx], eax

; 71   :     }
; 72   :     else

  0002d	e9 8a 00 00 00	 jmp	 $L32070
$L32065:

; 73   :     {
; 74   :         hr = HRFROMP(pDirectSound = NEW(CDirectSoundTest));

  00032	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@FOAPMLBA@CDirectSoundTest?$AA@
  00037	6a 4a		 push	 74			; 0000004aH
  00039	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
  0003e	6a 20		 push	 32			; 00000020H
  00040	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  00045	83 c4 10	 add	 esp, 16			; 00000010H
  00048	89 45 f4	 mov	 DWORD PTR $T32348[ebp], eax
  0004b	83 7d f4 00	 cmp	 DWORD PTR $T32348[ebp], 0
  0004f	74 0d		 je	 SHORT $L32349
  00051	8b 4d f4	 mov	 ecx, DWORD PTR $T32348[ebp]
  00054	e8 00 00 00 00	 call	 ??0CDirectSoundTest@@QAE@XZ ; CDirectSoundTest::CDirectSoundTest
  00059	89 45 f0	 mov	 DWORD PTR tv75[ebp], eax
  0005c	eb 07		 jmp	 SHORT $L32350
$L32349:
  0005e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$L32350:
  00065	8b 55 f0	 mov	 edx, DWORD PTR tv75[ebp]
  00068	89 55 fc	 mov	 DWORD PTR _pDirectSound$[ebp], edx
  0006b	33 c0		 xor	 eax, eax
  0006d	83 7d fc 00	 cmp	 DWORD PTR _pDirectSound$[ebp], 0
  00071	0f 95 c0	 setne	 al
  00074	48		 dec	 eax
  00075	25 0e 00 07 80	 and	 eax, -2147024882	; 8007000eH
  0007a	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 75   : 
; 76   :         if(SUCCEEDED(hr))

  0007d	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00081	7c 0c		 jl	 SHORT $L32078

; 77   :         {
; 78   :             hr = pDirectSound->Initialize();

  00083	8b 4d fc	 mov	 ecx, DWORD PTR _pDirectSound$[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 ?Initialize@CDirectSoundTest@@QAGJXZ ; CDirectSoundTest::Initialize
  0008c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
$L32078:

; 79   :         }
; 80   : 
; 81   :         if(SUCCEEDED(hr))

  0008f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00093	7c 0a		 jl	 SHORT $L32080

; 82   :         {
; 83   :             *ppDirectSound = pDirectSound;

  00095	8b 55 08	 mov	 edx, DWORD PTR _ppDirectSound$[ebp]
  00098	8b 45 fc	 mov	 eax, DWORD PTR _pDirectSound$[ebp]
  0009b	89 02		 mov	 DWORD PTR [edx], eax

; 84   :         }
; 85   :         else

  0009d	eb 1d		 jmp	 SHORT $L32070
$L32080:

; 86   :         {
; 87   :             RELEASE(pDirectSound);

  0009f	83 7d fc 00	 cmp	 DWORD PTR _pDirectSound$[ebp], 0
  000a3	74 17		 je	 SHORT $L32070
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _pDirectSound$[ebp]
  000a8	83 c1 08	 add	 ecx, 8
  000ab	8b 55 fc	 mov	 edx, DWORD PTR _pDirectSound$[ebp]
  000ae	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000b1	51		 push	 ecx
  000b2	ff 50 08	 call	 DWORD PTR [eax+8]
  000b5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pDirectSound$[ebp], 0
$L32070:

; 88   :         }
; 89   :     }
; 90   : 
; 91   :     DPF_LEAVE_HRESULT(hr);
; 92   : 
; 93   :     return hr;

  000bc	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]

; 94   : }

  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
?DirectSoundCreateInternal@@YGJPAPAVCDirectSoundTest@@@Z ENDP ; DirectSoundCreateInternal
DSOUND	ENDS
EXTRN	_DirectSoundTestTrackingMemAlloc@24:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\initlib\memmgr.h
;	COMDAT ??2@YAPAXIPBDK0@Z
DSOUND	SEGMENT
_cbBuffer$ = 8
_pszFile$ = 12
_nLine$ = 16
_pszClass$ = 20
??2@YAPAXIPBDK0@Z PROC NEAR				; operator new, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 169  :     return DirectSoundTestTrackingMemAlloc(pszFile, nLine, pszClass, DSOUND_OBJECT_POOL_TAG, cbBuffer, TRUE); 

  00003	6a 01		 push	 1
  00005	8b 45 08	 mov	 eax, DWORD PTR _cbBuffer$[ebp]
  00008	50		 push	 eax
  00009	68 44 53 6f 62	 push	 1651462980		; 626f5344H
  0000e	8b 4d 14	 mov	 ecx, DWORD PTR _pszClass$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 10	 mov	 edx, DWORD PTR _nLine$[ebp]
  00015	52		 push	 edx
  00016	8b 45 0c	 mov	 eax, DWORD PTR _pszFile$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 _DirectSoundTestTrackingMemAlloc@24

; 170  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??2@YAPAXIPBDK0@Z ENDP					; operator new
DSOUND	ENDS
PUBLIC	??_C@_07CNKCBOKB@TESTSND?$AA@			; `string'
PUBLIC	_IsEqualGUID@8
PUBLIC	_DirectSoundCreateTest@12
PUBLIC	??_C@_0BG@DPFLFMGJ@DirectSoundCreateTest?$AA@	; `string'
PUBLIC	??_C@_0DK@JFIBKPKF@NULL?5or?5GUID_NULL?5is?5the?5only?5su@ ; `string'
PUBLIC	??_C@_0CE@HEGINMCG@Failed?5to?5supply?5an?5LPDIRECTSOUN@ ; `string'
PUBLIC	??_C@_0BN@KMLCCGBC@Aggregation?5is?5not?5supported?$AA@ ; `string'
PUBLIC	??0CAutoLockTest@@QAE@XZ			; CAutoLockTest::CAutoLockTest
PUBLIC	??1CAutoLockTest@@QAE@XZ			; CAutoLockTest::~CAutoLockTest
EXTRN	_DwDbgSetContext:NEAR
EXTRN	_DwDbgPrint:NEAR
EXTRN	_GUID_NULL:BYTE
;	COMDAT ??_C@_07CNKCBOKB@TESTSND?$AA@
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.cpp
DSOUND_RD	SEGMENT
??_C@_07CNKCBOKB@TESTSND?$AA@ DB 'TESTSND', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@DPFLFMGJ@DirectSoundCreateTest?$AA@
DSOUND_RD	SEGMENT
??_C@_0BG@DPFLFMGJ@DirectSoundCreateTest?$AA@ DB 'DirectSoundCreateTest', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DK@JFIBKPKF@NULL?5or?5GUID_NULL?5is?5the?5only?5su@
DSOUND_RD	SEGMENT
??_C@_0DK@JFIBKPKF@NULL?5or?5GUID_NULL?5is?5the?5only?5su@ DB 'NULL or GU'
	DB	'ID_NULL is the only supported device identifier', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@HEGINMCG@Failed?5to?5supply?5an?5LPDIRECTSOUN@
DSOUND_RD	SEGMENT
??_C@_0CE@HEGINMCG@Failed?5to?5supply?5an?5LPDIRECTSOUN@ DB 'Failed to su'
	DB	'pply an LPDIRECTSOUND *', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@KMLCCGBC@Aggregation?5is?5not?5supported?$AA@
DSOUND_RD	SEGMENT
??_C@_0BN@KMLCCGBC@Aggregation?5is?5not?5supported?$AA@ DB 'Aggregation i'
	DB	's not supported', 00H			; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT _DirectSoundCreateTest@12
DSOUND	SEGMENT
tv132 = -20
$T32359 = -16
_hr$ = -12
_pDirectSound$ = -8
___AutoLockTest$ = -4
_pguidDeviceId$ = 8
_ppDirectSound$ = 12
_pControllingUnknown$ = 16
_DirectSoundCreateTest@12 PROC NEAR			; COMDAT

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 126  :     CDirectSoundTest *          pDirectSound;
; 127  :     HRESULT                 hr;
; 128  :     
; 129  :     DPF_ENTER();
; 130  :     ENTER_EXTERNAL_FUNCTION();

  00006	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  00009	e8 00 00 00 00	 call	 ??0CAutoLockTest@@QAE@XZ ; CAutoLockTest::CAutoLockTest

; 131  : 
; 132  : #ifdef VALIDATE_PARAMETERS
; 133  : 
; 134  :     if(!IS_NULL_GUID(*pguidDeviceId))

  0000e	83 7d 08 00	 cmp	 DWORD PTR _pguidDeviceId$[ebp], 0
  00012	74 3f		 je	 SHORT $L32091
  00014	68 00 00 00 00	 push	 OFFSET FLAT:_GUID_NULL
  00019	8b 45 08	 mov	 eax, DWORD PTR _pguidDeviceId$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _IsEqualGUID@8
  00022	85 c0		 test	 eax, eax
  00024	75 2d		 jne	 SHORT $L32091

; 135  :     {
; 136  :         DPF_ERROR("NULL or GUID_NULL is the only supported device identifier");

  00026	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07CNKCBOKB@TESTSND?$AA@
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@DPFLFMGJ@DirectSoundCreateTest?$AA@
  00030	68 88 00 00 00	 push	 136			; 00000088H
  00035	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
  0003a	6a 01		 push	 1
  0003c	6a 09		 push	 9
  0003e	e8 00 00 00 00	 call	 _DwDbgSetContext
  00043	83 c4 18	 add	 esp, 24			; 00000018H
  00046	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@JFIBKPKF@NULL?5or?5GUID_NULL?5is?5the?5only?5su@
  0004b	e8 00 00 00 00	 call	 _DwDbgPrint
  00050	83 c4 04	 add	 esp, 4
$L32091:

; 137  :     }
; 138  : 
; 139  :     if(!ppDirectSound)

  00053	83 7d 0c 00	 cmp	 DWORD PTR _ppDirectSound$[ebp], 0
  00057	75 2d		 jne	 SHORT $L32094

; 140  :     {
; 141  :         DPF_ERROR("Failed to supply an LPDIRECTSOUND *");

  00059	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07CNKCBOKB@TESTSND?$AA@
  0005e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@DPFLFMGJ@DirectSoundCreateTest?$AA@
  00063	68 8d 00 00 00	 push	 141			; 0000008dH
  00068	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
  0006d	6a 01		 push	 1
  0006f	6a 09		 push	 9
  00071	e8 00 00 00 00	 call	 _DwDbgSetContext
  00076	83 c4 18	 add	 esp, 24			; 00000018H
  00079	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@HEGINMCG@Failed?5to?5supply?5an?5LPDIRECTSOUN@
  0007e	e8 00 00 00 00	 call	 _DwDbgPrint
  00083	83 c4 04	 add	 esp, 4
$L32094:

; 142  :     }
; 143  :     
; 144  :     if(pControllingUnknown)

  00086	83 7d 10 00	 cmp	 DWORD PTR _pControllingUnknown$[ebp], 0
  0008a	74 2d		 je	 SHORT $L32096

; 145  :     {
; 146  :         DPF_ERROR("Aggregation is not supported");

  0008c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07CNKCBOKB@TESTSND?$AA@
  00091	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@DPFLFMGJ@DirectSoundCreateTest?$AA@
  00096	68 92 00 00 00	 push	 146			; 00000092H
  0009b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
  000a0	6a 01		 push	 1
  000a2	6a 09		 push	 9
  000a4	e8 00 00 00 00	 call	 _DwDbgSetContext
  000a9	83 c4 18	 add	 esp, 24			; 00000018H
  000ac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@KMLCCGBC@Aggregation?5is?5not?5supported?$AA@
  000b1	e8 00 00 00 00	 call	 _DwDbgPrint
  000b6	83 c4 04	 add	 esp, 4
$L32096:

; 147  :     }
; 148  : 
; 149  : #endif // VALIDATE_PARAMETERS
; 150  : 
; 151  :     hr = DirectSoundCreateInternal(&pDirectSound);

  000b9	8d 4d f8	 lea	 ecx, DWORD PTR _pDirectSound$[ebp]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 ?DirectSoundCreateInternal@@YGJPAPAVCDirectSoundTest@@@Z ; DirectSoundCreateInternal
  000c2	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 152  : 
; 153  :     if(SUCCEEDED(hr))

  000c5	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c9	7c 20		 jl	 SHORT $L32099

; 154  :     {
; 155  :         *ppDirectSound = pDirectSound;

  000cb	83 7d f8 00	 cmp	 DWORD PTR _pDirectSound$[ebp], 0
  000cf	74 0b		 je	 SHORT $L32357
  000d1	8b 55 f8	 mov	 edx, DWORD PTR _pDirectSound$[ebp]
  000d4	83 c2 10	 add	 edx, 16			; 00000010H
  000d7	89 55 ec	 mov	 DWORD PTR tv132[ebp], edx
  000da	eb 07		 jmp	 SHORT $L32358
$L32357:
  000dc	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$L32358:
  000e3	8b 45 0c	 mov	 eax, DWORD PTR _ppDirectSound$[ebp]
  000e6	8b 4d ec	 mov	 ecx, DWORD PTR tv132[ebp]
  000e9	89 08		 mov	 DWORD PTR [eax], ecx
$L32099:

; 156  :     }
; 157  : 
; 158  :     DPF_LEAVE_HRESULT(hr);
; 159  : 
; 160  :     return hr;

  000eb	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  000ee	89 55 f0	 mov	 DWORD PTR $T32359[ebp], edx
  000f1	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  000f4	e8 00 00 00 00	 call	 ??1CAutoLockTest@@QAE@XZ ; CAutoLockTest::~CAutoLockTest
  000f9	8b 45 f0	 mov	 eax, DWORD PTR $T32359[ebp]

; 161  : }

  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 0c 00	 ret	 12			; 0000000cH
_DirectSoundCreateTest@12 ENDP
DSOUND	ENDS
EXTRN	_memcmp:NEAR
; Function compile flags: /Odt
; File c:\xbox\public\sdk\inc\guiddef.h
;	COMDAT _IsEqualGUID@8
DSOUND	SEGMENT
_rguid1$ = 8
_rguid2$ = 12
_IsEqualGUID@8 PROC NEAR				; COMDAT

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 156  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00003	6a 10		 push	 16			; 00000010H
  00005	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  00008	50		 push	 eax
  00009	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 _memcmp
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	f7 d8		 neg	 eax
  00017	1b c0		 sbb	 eax, eax
  00019	40		 inc	 eax

; 157  : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
_IsEqualGUID@8 ENDP
DSOUND	ENDS
PUBLIC	?DirectSoundTestEnterCriticalSection@@YGHXZ	; DirectSoundTestEnterCriticalSection
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.h
;	COMDAT ??0CAutoLockTest@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0CAutoLockTest@@QAE@XZ PROC NEAR			; CAutoLockTest::CAutoLockTest, COMDAT
; _this$ = ecx

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 138  :     m_fLocked = (BOOLEAN)DirectSoundTestEnterCriticalSection();

  00007	e8 00 00 00 00	 call	 ?DirectSoundTestEnterCriticalSection@@YGHXZ ; DirectSoundTestEnterCriticalSection
  0000c	0f b6 c0	 movzx	 eax, al
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	89 01		 mov	 DWORD PTR [ecx], eax

; 139  : }

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??0CAutoLockTest@@QAE@XZ ENDP				; CAutoLockTest::CAutoLockTest
DSOUND	ENDS
EXTRN	__imp__RtlEnterCriticalSection@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?DirectSoundTestEnterCriticalSection@@YGHXZ
DSOUND	SEGMENT
?DirectSoundTestEnterCriticalSection@@YGHXZ PROC NEAR	; DirectSoundTestEnterCriticalSection, COMDAT

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   :     if(PASSIVE_LEVEL != KeGetCurrentIrql())

  00003	e8 00 00 00 00	 call	 _KeGetCurrentIrql@0
  00008	0f b6 c0	 movzx	 eax, al
  0000b	85 c0		 test	 eax, eax
  0000d	74 04		 je	 SHORT $L30586

; 29   :     {
; 30   :         return FALSE;

  0000f	33 c0		 xor	 eax, eax
  00011	eb 10		 jmp	 SHORT $L30585
$L30586:

; 31   :     }
; 32   : 
; 33   :     EnterCriticalSection(&g_DirectSoundTestCriticalSection); 

  00013	68 00 00 00 00	 push	 OFFSET FLAT:_g_DirectSoundTestCriticalSection
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlEnterCriticalSection@4

; 34   : 
; 35   :     return TRUE;

  0001e	b8 01 00 00 00	 mov	 eax, 1
$L30585:

; 36   : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?DirectSoundTestEnterCriticalSection@@YGHXZ ENDP	; DirectSoundTestEnterCriticalSection
; Function compile flags: /Odt
; File c:\xbox\private\ntos\inc\i386.h
DSOUND	ENDS
;	COMDAT _KeGetCurrentIrql@0
DSOUND	SEGMENT
_KeGetCurrentIrql@0 PROC NEAR				; COMDAT

; 1496 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1497 : #if defined(_NTSYSTEM_)
; 1498 :     return KeGetPcr()->Irql;
; 1499 : #else
; 1500 :     __asm {  movzx eax, byte ptr fs:[0] KPCR.Irql }

  00003	64 0f b6 05 24
	00 00 00	 movzx	 eax, BYTE PTR fs:36

; 1501 : #endif
; 1502 : }    

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
_KeGetCurrentIrql@0 ENDP
DSOUND	ENDS
PUBLIC	?DirectSoundTestLeaveCriticalSection@@YGXXZ	; DirectSoundTestLeaveCriticalSection
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.h
;	COMDAT ??1CAutoLockTest@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??1CAutoLockTest@@QAE@XZ PROC NEAR			; CAutoLockTest::~CAutoLockTest, COMDAT
; _this$ = ecx

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  :     if(m_fLocked)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 05		 je	 SHORT $L30668

; 144  :     {
; 145  :         DirectSoundTestLeaveCriticalSection();

  0000f	e8 00 00 00 00	 call	 ?DirectSoundTestLeaveCriticalSection@@YGXXZ ; DirectSoundTestLeaveCriticalSection
$L30668:

; 146  :     }
; 147  : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??1CAutoLockTest@@QAE@XZ ENDP				; CAutoLockTest::~CAutoLockTest
DSOUND	ENDS
EXTRN	__imp__RtlLeaveCriticalSection@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?DirectSoundTestLeaveCriticalSection@@YGXXZ
DSOUND	SEGMENT
?DirectSoundTestLeaveCriticalSection@@YGXXZ PROC NEAR	; DirectSoundTestLeaveCriticalSection, COMDAT

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 40   :     LeaveCriticalSection(&g_DirectSoundTestCriticalSection);

  00003	68 00 00 00 00	 push	 OFFSET FLAT:_g_DirectSoundTestCriticalSection
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RtlLeaveCriticalSection@4

; 41   : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?DirectSoundTestLeaveCriticalSection@@YGXXZ ENDP	; DirectSoundTestLeaveCriticalSection
DSOUND	ENDS
PUBLIC	??0CRefCountTest@@QAE@K@Z			; CRefCountTest::CRefCountTest
PUBLIC	?AddRef@CRefCountTest@@UAGKXZ			; CRefCountTest::AddRef
PUBLIC	?Release@CRefCountTest@@UAGKXZ			; CRefCountTest::Release
PUBLIC	??0DS3DLISTENERPARAMS@@QAE@XZ			; DS3DLISTENERPARAMS::DS3DLISTENERPARAMS
PUBLIC	??0CDirectSoundTestSettings@@QAE@XZ		; CDirectSoundTestSettings::CDirectSoundTestSettings
PUBLIC	?SetEffectImageLocations@CDirectSoundTestSettings@@QAEXPBU_DSEFFECTIMAGELOC@@@Z ; CDirectSoundTestSettings::SetEffectImageLocations
PUBLIC	??_7CDirectSoundTestSettings@@6B@		; CDirectSoundTestSettings::`vftable'
PUBLIC	??_GCDirectSoundTestSettings@@UAEPAXI@Z		; CDirectSoundTestSettings::`scalar deleting destructor'
EXTRN	_XGetAudioFlags@0:NEAR
EXTRN	_DirectSoundDefault3DListener:BYTE
EXTRN	_DirectSoundI3DL2ListenerPreset_Default:BYTE
EXTRN	??_ECDirectSoundTestSettings@@UAEPAXI@Z:NEAR	; CDirectSoundTestSettings::`vector deleting destructor'
;	COMDAT ??_7CDirectSoundTestSettings@@6B@
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.cpp
CONST	SEGMENT
??_7CDirectSoundTestSettings@@6B@ DD FLAT:??_ECDirectSoundTestSettings@@UAEPAXI@Z ; CDirectSoundTestSettings::`vftable'
	DD	FLAT:?AddRef@CRefCountTest@@UAGKXZ
	DD	FLAT:?Release@CRefCountTest@@UAGKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CDirectSoundTestSettings@@QAE@XZ
DSOUND	SEGMENT
_this$ = -8
_i$ = -4
??0CDirectSoundTestSettings@@QAE@XZ PROC NEAR		; CDirectSoundTestSettings::CDirectSoundTestSettings, COMDAT
; _this$ = ecx

; 186  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0000b	6a 01		 push	 1
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ??0CRefCountTest@@QAE@K@Z ; CRefCountTest::CRefCountTest
  00015	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDirectSoundTestSettings@@6B@
  0001e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 34	 add	 ecx, 52			; 00000034H
  00024	e8 00 00 00 00	 call	 ??0DS3DLISTENERPARAMS@@QAE@XZ

; 187  :     DWORD                   i;
; 188  : 
; 189  :     DPF_ENTER();
; 190  : 
; 191  : #ifndef MCPX_BOOT_LIB
; 192  : 
; 193  :     m_3dParams.HrtfParams = DirectSoundDefault3DListener;

  00029	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  0002c	83 c7 34	 add	 edi, 52			; 00000034H
  0002f	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00034	be 00 00 00 00	 mov	 esi, OFFSET FLAT:_DirectSoundDefault3DListener
  00039	f3 a5		 rep movsd

; 194  :     m_3dParams.I3dl2Params = DirectSoundI3DL2ListenerPreset_Default;

  0003b	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  0003e	83 c7 74	 add	 edi, 116		; 00000074H
  00041	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00046	be 00 00 00 00	 mov	 esi, OFFSET FLAT:_DirectSoundI3DL2ListenerPreset_Default
  0004b	f3 a5		 rep movsd

; 195  : 
; 196  : #endif // MCPX_BOOT_LIB
; 197  : 
; 198  :     //
; 199  :     // Read the speaker configuration from the EEPROM
; 200  :     //
; 201  : 
; 202  : #ifndef MCPX_BOOT_LIB
; 203  : 
; 204  :     if(DSSPEAKER_IS_VALID(g_dwDirectSoundTestOverrideSpeakerConfig))

  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_dwDirectSoundTestOverrideSpeakerConfig@@3KA ; g_dwDirectSoundTestOverrideSpeakerConfig
  00053	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00059	85 c9		 test	 ecx, ecx
  0005b	72 32		 jb	 SHORT $L32109
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_dwDirectSoundTestOverrideSpeakerConfig@@3KA ; g_dwDirectSoundTestOverrideSpeakerConfig
  00063	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00069	83 fa 02	 cmp	 edx, 2
  0006c	77 21		 ja	 SHORT $L32109
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_dwDirectSoundTestOverrideSpeakerConfig@@3KA ; g_dwDirectSoundTestOverrideSpeakerConfig
  00073	25 00 00 ff ff	 and	 eax, -65536		; ffff0000H
  00078	25 ff ff fc ff	 and	 eax, -196609		; fffcffffH
  0007d	85 c0		 test	 eax, eax
  0007f	75 0e		 jne	 SHORT $L32109

; 205  :     {
; 206  :         m_dwSpeakerConfig = g_dwDirectSoundTestOverrideSpeakerConfig;

  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_dwDirectSoundTestOverrideSpeakerConfig@@3KA ; g_dwDirectSoundTestOverrideSpeakerConfig
  0008a	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 207  :     }
; 208  :     else

  0008d	eb 0b		 jmp	 SHORT $L32110
$L32109:

; 209  :     {
; 210  :         m_dwSpeakerConfig = XAudioGetSpeakerConfig();

  0008f	e8 00 00 00 00	 call	 _XGetAudioFlags@0
  00094	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$L32110:

; 211  :     }
; 212  : 
; 213  : #else // MCPX_BOOT_LIB
; 214  : 
; 215  :     m_dwSpeakerConfig = DSSPEAKER_STEREO;
; 216  : 
; 217  : #endif // MCPX_BOOT_LIB
; 218  : 
; 219  :     //
; 220  :     // Set default mixbin headroom
; 221  :     //
; 222  : 
; 223  :     for(i = 0; i < DSMIXBIN_SUBMIX; i++)

  0009a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  000a1	eb 09		 jmp	 SHORT $L32111
$L32112:
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  000a6	83 c2 01	 add	 edx, 1
  000a9	89 55 fc	 mov	 DWORD PTR _i$[ebp], edx
$L32111:
  000ac	83 7d fc 1f	 cmp	 DWORD PTR _i$[ebp], 31	; 0000001fH
  000b0	73 0c		 jae	 SHORT $L32113

; 224  :     {
; 225  :         m_abMixBinHeadroom[i] = DSHEADROOM_DEFAULT;

  000b2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	03 45 fc	 add	 eax, DWORD PTR _i$[ebp]
  000b8	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 226  :     }

  000bc	eb e5		 jmp	 SHORT $L32112
$L32113:

; 227  : 
; 228  :     m_abMixBinHeadroom[DSMIXBIN_SUBMIX] = 0;

  000be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	c6 41 33 00	 mov	 BYTE PTR [ecx+51], 0

; 229  : 
; 230  :     //
; 231  :     // Set default effect locations
; 232  :     //
; 233  : 
; 234  :     SetEffectImageLocations(NULL);

  000c5	6a 00		 push	 0
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	e8 00 00 00 00	 call	 ?SetEffectImageLocations@CDirectSoundTestSettings@@QAEXPBU_DSEFFECTIMAGELOC@@@Z ; CDirectSoundTestSettings::SetEffectImageLocations

; 235  : 
; 236  :     DPF_LEAVE_VOID();
; 237  : }

  000cf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c3		 ret	 0
??0CDirectSoundTestSettings@@QAE@XZ ENDP		; CDirectSoundTestSettings::CDirectSoundTestSettings
DSOUND	ENDS
PUBLIC	??_7CRefCountTest@@6B@				; CRefCountTest::`vftable'
PUBLIC	??_GCRefCountTest@@UAEPAXI@Z			; CRefCountTest::`scalar deleting destructor'
EXTRN	??_ECRefCountTest@@UAEPAXI@Z:NEAR		; CRefCountTest::`vector deleting destructor'
;	COMDAT ??_7CRefCountTest@@6B@
; File c:\xbox\private\windows\directx\dsound\initlib\refcount.h
CONST	SEGMENT
??_7CRefCountTest@@6B@ DD FLAT:??_ECRefCountTest@@UAEPAXI@Z ; CRefCountTest::`vftable'
	DD	FLAT:?AddRef@CRefCountTest@@UAGKXZ
	DD	FLAT:?Release@CRefCountTest@@UAGKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CRefCountTest@@QAE@K@Z
DSOUND	SEGMENT
_this$ = -4
_dwInitialRefCount$ = 8
??0CRefCountTest@@QAE@K@Z PROC NEAR			; CRefCountTest::CRefCountTest, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRefCountTest@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _dwInitialRefCount$[ebp]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 36   : }

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CRefCountTest@@QAE@K@Z ENDP				; CRefCountTest::CRefCountTest
DSOUND	ENDS
PUBLIC	??1CRefCountTest@@UAE@XZ			; CRefCountTest::~CRefCountTest
; Function compile flags: /Odt
;	COMDAT ??_GCRefCountTest@@UAEPAXI@Z
DSOUND	SEGMENT
_this$ = -4
___flags$ = 8
??_GCRefCountTest@@UAEPAXI@Z PROC NEAR			; CRefCountTest::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CRefCountTest@@UAE@XZ ; CRefCountTest::~CRefCountTest
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L29812
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L29812:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCRefCountTest@@UAEPAXI@Z ENDP			; CRefCountTest::`scalar deleting destructor'
DSOUND	ENDS
EXTRN	_DirectSoundTestTrackingMemFree@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\initlib\memmgr.h
;	COMDAT ??3@YAXPAX@Z
DSOUND	SEGMENT
_pvBuffer$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 180  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 181  :     DirectSoundTestTrackingMemFree(pvBuffer); 

  00003	8b 45 08	 mov	 eax, DWORD PTR _pvBuffer$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 _DirectSoundTestTrackingMemFree@4

; 182  : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??3@YAXPAX@Z ENDP					; operator delete
DSOUND	ENDS
PUBLIC	??_C@_0DK@BHCCMBKD@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@		; `string'
EXTRN	_DwDbgAssert:NEAR
;	COMDAT ??_C@_0DK@BHCCMBKD@c?3?2xbox?2private?2windows?2directx?2@
; File c:\xbox\private\windows\directx\dsound\initlib\refcount.h
DSOUND_RD	SEGMENT
??_C@_0DK@BHCCMBKD@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\initlib\refcount.h', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
DSOUND_RD	SEGMENT
??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@ DB '!m_dwRefCount', 00H ; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ??1CRefCountTest@@UAE@XZ
DSOUND	SEGMENT
_this$ = -4
??1CRefCountTest@@UAE@XZ PROC NEAR			; CRefCountTest::~CRefCountTest, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRefCountTest@@6B@

; 40   :     ASSERT(!m_dwRefCount);

  00010	6a 28		 push	 40			; 00000028H
  00012	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@BHCCMBKD@c?3?2xbox?2private?2windows?2directx?2@
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00025	0f 95 c2	 setne	 dl
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 _DwDbgAssert
  0002e	83 c4 10	 add	 esp, 16			; 00000010H

; 41   : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??1CRefCountTest@@UAE@XZ ENDP				; CRefCountTest::~CRefCountTest
DSOUND	ENDS
PUBLIC	??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@ ; `string'
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT
??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@ DB 'm_dwRefCount < ~0'
	DB	'UL', 00H					; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?AddRef@CRefCountTest@@UAGKXZ
DSOUND	SEGMENT
_this$ = 8
?AddRef@CRefCountTest@@UAGKXZ PROC NEAR			; CRefCountTest::AddRef, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   :     ASSERT(m_dwRefCount < ~0UL);

  00003	6a 2d		 push	 45			; 0000002dH
  00005	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@BHCCMBKD@c?3?2xbox?2private?2windows?2directx?2@
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
  0000f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 78 04 ff	 cmp	 DWORD PTR [eax+4], -1
  00016	1b c9		 sbb	 ecx, ecx
  00018	41		 inc	 ecx
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 _DwDbgAssert
  0001f	83 c4 10	 add	 esp, 16			; 00000010H

; 46   :     return ++m_dwRefCount;

  00022	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00028	83 c0 01	 add	 eax, 1
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00031	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 47   : }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?AddRef@CRefCountTest@@UAGKXZ ENDP			; CRefCountTest::AddRef
DSOUND	ENDS
PUBLIC	??_C@_0N@OILPJBKD@m_dwRefCount?$AA@		; `string'
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
DSOUND_RD	SEGMENT
??_C@_0N@OILPJBKD@m_dwRefCount?$AA@ DB 'm_dwRefCount', 00H ; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?Release@CRefCountTest@@UAGKXZ
DSOUND	SEGMENT
tv84 = -12
$T32400 = -8
$T32399 = -4
_this$ = 8
?Release@CRefCountTest@@UAGKXZ PROC NEAR		; CRefCountTest::Release, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 51   :     ASSERT(m_dwRefCount);

  00006	6a 33		 push	 51			; 00000033H
  00008	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DK@BHCCMBKD@c?3?2xbox?2private?2windows?2directx?2@
  0000d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
  00012	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00015	33 c9		 xor	 ecx, ecx
  00017	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001b	0f 94 c1	 sete	 cl
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 _DwDbgAssert
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 52   : 
; 53   :     if(m_dwRefCount > 0)

  00027	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  0002e	76 46		 jbe	 SHORT $L29829

; 54   :     {
; 55   :         if(!--m_dwRefCount)

  00030	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00036	83 e9 01	 sub	 ecx, 1
  00039	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00046	75 2e		 jne	 SHORT $L29829

; 56   :         {
; 57   :             delete this;

  00048	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	89 4d f8	 mov	 DWORD PTR $T32400[ebp], ecx
  0004e	8b 55 f8	 mov	 edx, DWORD PTR $T32400[ebp]
  00051	89 55 fc	 mov	 DWORD PTR $T32399[ebp], edx
  00054	83 7d fc 00	 cmp	 DWORD PTR $T32399[ebp], 0
  00058	74 11		 je	 SHORT $L32401
  0005a	6a 01		 push	 1
  0005c	8b 45 fc	 mov	 eax, DWORD PTR $T32399[ebp]
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	8b 4d fc	 mov	 ecx, DWORD PTR $T32399[ebp]
  00064	ff 12		 call	 DWORD PTR [edx]
  00066	89 45 f4	 mov	 DWORD PTR tv84[ebp], eax
  00069	eb 07		 jmp	 SHORT $L32402
$L32401:
  0006b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$L32402:

; 58   :             return 0;

  00072	33 c0		 xor	 eax, eax
  00074	eb 06		 jmp	 SHORT $L29827
$L29829:

; 59   :         }
; 60   :     }
; 61   : 
; 62   :     return m_dwRefCount;

  00076	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L29827:

; 63   : }

  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?Release@CRefCountTest@@UAGKXZ ENDP			; CRefCountTest::Release
DSOUND	ENDS
PUBLIC	??1CDirectSoundTestSettings@@UAE@XZ		; CDirectSoundTestSettings::~CDirectSoundTestSettings
; Function compile flags: /Odt
;	COMDAT ??_GCDirectSoundTestSettings@@UAEPAXI@Z
DSOUND	SEGMENT
_this$ = -4
___flags$ = 8
??_GCDirectSoundTestSettings@@UAEPAXI@Z PROC NEAR	; CDirectSoundTestSettings::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDirectSoundTestSettings@@UAE@XZ ; CDirectSoundTestSettings::~CDirectSoundTestSettings
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L32117
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L32117:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCDirectSoundTestSettings@@UAEPAXI@Z ENDP		; CDirectSoundTestSettings::`scalar deleting destructor'
DSOUND	ENDS
PUBLIC	??0_DS3DLISTENER@@QAE@XZ			; _DS3DLISTENER::_DS3DLISTENER
; Function compile flags: /Odt
;	COMDAT ??0DS3DLISTENERPARAMS@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0DS3DLISTENERPARAMS@@QAE@XZ PROC NEAR			; DS3DLISTENERPARAMS::DS3DLISTENERPARAMS, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0_DS3DLISTENER@@QAE@XZ
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0DS3DLISTENERPARAMS@@QAE@XZ ENDP			; DS3DLISTENERPARAMS::DS3DLISTENERPARAMS
DSOUND	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Odt
;	COMDAT ??0_DS3DLISTENER@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0_DS3DLISTENER@@QAE@XZ PROC NEAR			; _DS3DLISTENER::_DS3DLISTENER, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 04	 add	 ecx, 4
  0000d	e8 00 00 00 00	 call	 ??0D3DXVECTOR3@@QAE@XZ	; D3DXVECTOR3::D3DXVECTOR3
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 10	 add	 ecx, 16			; 00000010H
  00018	e8 00 00 00 00	 call	 ??0D3DXVECTOR3@@QAE@XZ	; D3DXVECTOR3::D3DXVECTOR3
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00023	e8 00 00 00 00	 call	 ??0D3DXVECTOR3@@QAE@XZ	; D3DXVECTOR3::D3DXVECTOR3
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 28	 add	 ecx, 40			; 00000028H
  0002e	e8 00 00 00 00	 call	 ??0D3DXVECTOR3@@QAE@XZ	; D3DXVECTOR3::D3DXVECTOR3
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??0_DS3DLISTENER@@QAE@XZ ENDP				; _DS3DLISTENER::_DS3DLISTENER
; Function compile flags: /Odt
; File c:\xbox\public\sdk\inc\d3dx8math.h
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0D3DXVECTOR3@@QAE@XZ PROC NEAR			; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 103  :     D3DXVECTOR3() {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.cpp
DSOUND	ENDS
;	COMDAT ??1CDirectSoundTestSettings@@UAE@XZ
DSOUND	SEGMENT
_this$ = -4
??1CDirectSoundTestSettings@@UAE@XZ PROC NEAR		; CDirectSoundTestSettings::~CDirectSoundTestSettings, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDirectSoundTestSettings@@6B@

; 263  :     DPF_ENTER();
; 264  :     DPF_LEAVE_VOID();
; 265  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CRefCountTest@@UAE@XZ ; CRefCountTest::~CRefCountTest
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CDirectSoundTestSettings@@UAE@XZ ENDP		; CDirectSoundTestSettings::~CDirectSoundTestSettings
DSOUND	ENDS
EXTRN	_memcpy:NEAR
EXTRN	_memset:NEAR
; Function compile flags: /Odt
;	COMDAT ?SetEffectImageLocations@CDirectSoundTestSettings@@QAEXPBU_DSEFFECTIMAGELOC@@@Z
DSOUND	SEGMENT
_this$ = -4
_pImageLoc$ = 8
?SetEffectImageLocations@CDirectSoundTestSettings@@QAEXPBU_DSEFFECTIMAGELOC@@@Z PROC NEAR ; CDirectSoundTestSettings::SetEffectImageLocations, COMDAT
; _this$ = ecx

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  :     DPF_ENTER();
; 293  : 
; 294  :     if(pImageLoc)

  00007	83 7d 08 00	 cmp	 DWORD PTR _pImageLoc$[ebp], 0
  0000b	74 17		 je	 SHORT $L32130

; 295  :     {
; 296  :         CopyMemory(&m_EffectLocations, pImageLoc, sizeof(*pImageLoc));

  0000d	6a 08		 push	 8
  0000f	8b 45 08	 mov	 eax, DWORD PTR _pImageLoc$[ebp]
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 _memcpy
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 297  :     }
; 298  :     else

  00022	eb 16		 jmp	 SHORT $L32129
$L32130:

; 299  :     {
; 300  :         memset(&m_EffectLocations, 0xFF, sizeof(m_EffectLocations));

  00024	6a 08		 push	 8
  00026	68 ff 00 00 00	 push	 255			; 000000ffH
  0002b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002e	83 c2 0c	 add	 edx, 12			; 0000000cH
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 _memset
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L32129:

; 301  :     }
; 302  : 
; 303  :     DPF_LEAVE_VOID();
; 304  : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?SetEffectImageLocations@CDirectSoundTestSettings@@QAEXPBU_DSEFFECTIMAGELOC@@@Z ENDP ; CDirectSoundTestSettings::SetEffectImageLocations
DSOUND	ENDS
PUBLIC	?AddRef@CDirectSoundTest@@UAGKXZ		; CDirectSoundTest::AddRef
PUBLIC	?Release@CDirectSoundTest@@UAGKXZ		; CDirectSoundTest::Release
PUBLIC	??_7CDirectSoundTest@@6B?$CValidObject@$0EEFDEOEE@@@@ ; CDirectSoundTest::`vftable'
PUBLIC	??_7CDirectSoundTest@@6BCRefCountTest@@@	; CDirectSoundTest::`vftable'
PUBLIC	??_GCDirectSoundTest@@UAEPAXI@Z			; CDirectSoundTest::`scalar deleting destructor'
PUBLIC	??_ECDirectSoundTest@@W7AEPAXI@Z		; CDirectSoundTest::`vector deleting destructor'
PUBLIC	??0?$CValidObject@$0EEFDEOEE@@@QAE@XZ		; CValidObject<1146310212>::CValidObject<1146310212>
EXTRN	??_ECDirectSoundTest@@UAEPAXI@Z:NEAR		; CDirectSoundTest::`vector deleting destructor'
;	COMDAT ??_7CDirectSoundTest@@6B?$CValidObject@$0EEFDEOEE@@@@
CONST	SEGMENT
??_7CDirectSoundTest@@6B?$CValidObject@$0EEFDEOEE@@@@ DD FLAT:??_ECDirectSoundTest@@UAEPAXI@Z ; CDirectSoundTest::`vftable'
CONST	ENDS
;	COMDAT ??_7CDirectSoundTest@@6BCRefCountTest@@@
CONST	SEGMENT
??_7CDirectSoundTest@@6BCRefCountTest@@@ DD FLAT:??_ECDirectSoundTest@@W7AEPAXI@Z ; CDirectSoundTest::`vftable'
	DD	FLAT:?AddRef@CDirectSoundTest@@UAGKXZ
	DD	FLAT:?Release@CDirectSoundTest@@UAGKXZ
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0CDirectSoundTest@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0CDirectSoundTest@@QAE@XZ PROC NEAR			; CDirectSoundTest::CDirectSoundTest, COMDAT
; _this$ = ecx

; 345  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$CValidObject@$0EEFDEOEE@@@QAE@XZ ; CValidObject<1146310212>::CValidObject<1146310212>
  0000f	6a 01		 push	 1
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 08	 add	 ecx, 8
  00017	e8 00 00 00 00	 call	 ??0CRefCountTest@@QAE@K@Z ; CRefCountTest::CRefCountTest
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDirectSoundTest@@6B?$CValidObject@$0EEFDEOEE@@@@
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], OFFSET FLAT:??_7CDirectSoundTest@@6BCRefCountTest@@@

; 346  :     DPF_ENTER();
; 347  : 
; 348  :     //
; 349  :     // Set the global DirectSound object pointer
; 350  :     //
; 351  : 
; 352  :     m_pDirectSound = this;

  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	89 15 00 00 00
	00		 mov	 DWORD PTR ?m_pDirectSound@CDirectSoundTest@@2PAV1@A, edx ; CDirectSoundTest::m_pDirectSound

; 353  : 
; 354  :     //
; 355  :     // Initialize defaults
; 356  :     //
; 357  : 
; 358  :     InitializeListHead(&m_lst3dVoices);

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	83 c0 18	 add	 eax, 24			; 00000018H
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0004d	89 4a 18	 mov	 DWORD PTR [edx+24], ecx

; 359  : 
; 360  :     DPF_LEAVE_VOID();
; 361  : }

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??0CDirectSoundTest@@QAE@XZ ENDP			; CDirectSoundTest::CDirectSoundTest
DSOUND	ENDS
PUBLIC	??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@ ; `string'
PUBLIC	??_C@_0BJ@GKNCNMBD@CDirectSoundTest?3?3AddRef?$AA@ ; `string'
PUBLIC	?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@@QAEXPBDK0@Z ; CValidObject<1146310212>::__AssertValidObject
;	COMDAT ??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.h
DSOUND_RD	SEGMENT
??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\initlib\dsapi.h', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
DSOUND_RD	SEGMENT
??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@ DB 'DirectSound'
	DB	' is in the final stages of shutting down.  No more API calls '
	DB	'are allowed.', 00H				; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@GKNCNMBD@CDirectSoundTest?3?3AddRef?$AA@
DSOUND_RD	SEGMENT
??_C@_0BJ@GKNCNMBD@CDirectSoundTest?3?3AddRef?$AA@ DB 'CDirectSoundTest::'
	DB	'AddRef', 00H				; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?AddRef@CDirectSoundTest@@UAGKXZ
DSOUND	SEGMENT
$T32428 = -12
$T32427 = -8
___AutoLockTest$ = -4
_this$ = 8
?AddRef@CDirectSoundTest@@UAGKXZ PROC NEAR		; CDirectSoundTest::AddRef, COMDAT

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 270  :     _ENTER_EXTERNAL_METHOD("CDirectSoundTest::AddRef");

  00006	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  00009	e8 00 00 00 00	 call	 ??0CAutoLockTest@@QAE@XZ ; CAutoLockTest::CAutoLockTest
  0000e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_fDirectSoundTestInFinalRelease, 0
  00015	74 3e		 je	 SHORT $L30749
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07CNKCBOKB@TESTSND?$AA@
  0001c	6a 00		 push	 0
  0001e	68 0e 01 00 00	 push	 270			; 0000010eH
  00023	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@
  00028	6a 03		 push	 3
  0002a	6a 09		 push	 9
  0002c	e8 00 00 00 00	 call	 _DwDbgSetContext
  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
  00039	e8 00 00 00 00	 call	 _DwDbgPrint
  0003e	83 c4 04	 add	 esp, 4
  00041	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR $T32427[ebp], -2147467259 ; 80004005H
  00048	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  0004b	e8 00 00 00 00	 call	 ??1CAutoLockTest@@QAE@XZ ; CAutoLockTest::~CAutoLockTest
  00050	8b 45 f8	 mov	 eax, DWORD PTR $T32427[ebp]
  00053	eb 31		 jmp	 SHORT $L30747
$L30749:
  00055	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GKNCNMBD@CDirectSoundTest?3?3AddRef?$AA@
  0005a	68 0e 01 00 00	 push	 270			; 0000010eH
  0005f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@
  00064	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 e9 08	 sub	 ecx, 8
  0006a	e8 00 00 00 00	 call	 ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@@QAEXPBDK0@Z ; CValidObject<1146310212>::__AssertValidObject

; 271  :     return CRefCountTest::AddRef();

  0006f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?AddRef@CRefCountTest@@UAGKXZ ; CRefCountTest::AddRef
  00078	89 45 f4	 mov	 DWORD PTR $T32428[ebp], eax
  0007b	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  0007e	e8 00 00 00 00	 call	 ??1CAutoLockTest@@QAE@XZ ; CAutoLockTest::~CAutoLockTest
  00083	8b 45 f4	 mov	 eax, DWORD PTR $T32428[ebp]
$L30747:

; 272  : }

  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?AddRef@CDirectSoundTest@@UAGKXZ ENDP			; CDirectSoundTest::AddRef
DSOUND	ENDS
PUBLIC	??_C@_0BK@KCMACBKL@CDirectSoundTest?3?3Release?$AA@ ; `string'
;	COMDAT ??_C@_0BK@KCMACBKL@CDirectSoundTest?3?3Release?$AA@
DSOUND_RD	SEGMENT
??_C@_0BK@KCMACBKL@CDirectSoundTest?3?3Release?$AA@ DB 'CDirectSoundTest:'
	DB	':Release', 00H				; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?Release@CDirectSoundTest@@UAGKXZ
DSOUND	SEGMENT
$T32433 = -12
$T32432 = -8
___AutoLockTest$ = -4
_this$ = 8
?Release@CDirectSoundTest@@UAGKXZ PROC NEAR		; CDirectSoundTest::Release, COMDAT

; 277  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 278  :     _ENTER_EXTERNAL_METHOD("CDirectSoundTest::Release");

  00006	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  00009	e8 00 00 00 00	 call	 ??0CAutoLockTest@@QAE@XZ ; CAutoLockTest::CAutoLockTest
  0000e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _g_fDirectSoundTestInFinalRelease, 0
  00015	74 3e		 je	 SHORT $L30762
  00017	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07CNKCBOKB@TESTSND?$AA@
  0001c	6a 00		 push	 0
  0001e	68 16 01 00 00	 push	 278			; 00000116H
  00023	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@
  00028	6a 03		 push	 3
  0002a	6a 09		 push	 9
  0002c	e8 00 00 00 00	 call	 _DwDbgSetContext
  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
  00039	e8 00 00 00 00	 call	 _DwDbgPrint
  0003e	83 c4 04	 add	 esp, 4
  00041	c7 45 f8 05 40
	00 80		 mov	 DWORD PTR $T32432[ebp], -2147467259 ; 80004005H
  00048	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  0004b	e8 00 00 00 00	 call	 ??1CAutoLockTest@@QAE@XZ ; CAutoLockTest::~CAutoLockTest
  00050	8b 45 f8	 mov	 eax, DWORD PTR $T32432[ebp]
  00053	eb 31		 jmp	 SHORT $L30760
$L30762:
  00055	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@KCMACBKL@CDirectSoundTest?3?3Release?$AA@
  0005a	68 16 01 00 00	 push	 278			; 00000116H
  0005f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@NAFPMNMN@c?3?2xbox?2private?2windows?2directx?2@
  00064	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 e9 08	 sub	 ecx, 8
  0006a	e8 00 00 00 00	 call	 ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@@QAEXPBDK0@Z ; CValidObject<1146310212>::__AssertValidObject

; 279  :     return CRefCountTest::Release();

  0006f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?Release@CRefCountTest@@UAGKXZ ; CRefCountTest::Release
  00078	89 45 f4	 mov	 DWORD PTR $T32433[ebp], eax
  0007b	8d 4d fc	 lea	 ecx, DWORD PTR ___AutoLockTest$[ebp]
  0007e	e8 00 00 00 00	 call	 ??1CAutoLockTest@@QAE@XZ ; CAutoLockTest::~CAutoLockTest
  00083	8b 45 f4	 mov	 eax, DWORD PTR $T32433[ebp]
$L30760:

; 280  : }

  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?Release@CDirectSoundTest@@UAGKXZ ENDP			; CDirectSoundTest::Release
DSOUND	ENDS
PUBLIC	??1CDirectSoundTest@@UAE@XZ			; CDirectSoundTest::~CDirectSoundTest
; Function compile flags: /Odt
;	COMDAT ??_GCDirectSoundTest@@UAEPAXI@Z
DSOUND	SEGMENT
_this$ = -4
___flags$ = 8
??_GCDirectSoundTest@@UAEPAXI@Z PROC NEAR		; CDirectSoundTest::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDirectSoundTest@@UAE@XZ ; CDirectSoundTest::~CDirectSoundTest
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L32139
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L32139:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCDirectSoundTest@@UAEPAXI@Z ENDP			; CDirectSoundTest::`scalar deleting destructor'
DSOUND	ENDS
PUBLIC	??1?$CValidObject@$0EEFDEOEE@@@UAE@XZ		; CValidObject<1146310212>::~CValidObject<1146310212>
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.cpp
;	COMDAT ??1CDirectSoundTest@@UAE@XZ
DSOUND	SEGMENT
tv68 = -8
_this$ = -4
??1CDirectSoundTest@@UAE@XZ PROC NEAR			; CDirectSoundTest::~CDirectSoundTest, COMDAT
; _this$ = ecx

; 386  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDirectSoundTest@@6B?$CValidObject@$0EEFDEOEE@@@@
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], OFFSET FLAT:??_7CDirectSoundTest@@6BCRefCountTest@@@

; 387  :     DPF_ENTER();
; 388  : 
; 389  :     //
; 390  :     // Release the global DirectSound object pointer
; 391  :     //
; 392  : 
; 393  :     m_pDirectSound = NULL;

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pDirectSound@CDirectSoundTest@@2PAV1@A, 0 ; CDirectSoundTest::m_pDirectSound

; 394  : 
; 395  :     //
; 396  :     // Free owned objects
; 397  :     //
; 398  : 
; 399  :     RELEASE(m_pDevice);

  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  0002d	74 1c		 je	 SHORT $L32144
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0003b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0003d	50		 push	 eax
  0003e	ff 51 08	 call	 DWORD PTR [ecx+8]
  00041	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00044	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
$L32144:

; 400  :     RELEASE(m_pSettings);

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00052	74 1c		 je	 SHORT $L32143
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00060	8b 12		 mov	 edx, DWORD PTR [edx]
  00062	51		 push	 ecx
  00063	ff 52 08	 call	 DWORD PTR [edx+8]
  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$L32143:

; 401  : 
; 402  :     DPF_LEAVE_VOID();
; 403  : }

  00070	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  00074	74 0b		 je	 SHORT $L32440
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	83 c1 08	 add	 ecx, 8
  0007c	89 4d f8	 mov	 DWORD PTR tv68[ebp], ecx
  0007f	eb 07		 jmp	 SHORT $L32441
$L32440:
  00081	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$L32441:
  00088	8b 4d f8	 mov	 ecx, DWORD PTR tv68[ebp]
  0008b	e8 00 00 00 00	 call	 ??1CRefCountTest@@UAE@XZ ; CRefCountTest::~CRefCountTest
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ??1?$CValidObject@$0EEFDEOEE@@@UAE@XZ ; CValidObject<1146310212>::~CValidObject<1146310212>
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
??1CDirectSoundTest@@UAE@XZ ENDP			; CDirectSoundTest::~CDirectSoundTest
DSOUND	ENDS
PUBLIC	??_C@_0BJ@JJMFDDDK@CDirectSoundTestSettings?$AA@ ; `string'
PUBLIC	??_C@_0BK@JBIFFKD@CMcpxAPUTest?$CIm_pSettings?$CJ?$AA@ ; `string'
EXTRN	??0CMcpxAPUTest@@QAE@PAVCDirectSoundTestSettings@@@Z:NEAR ; CMcpxAPUTest::CMcpxAPUTest
EXTRN	?Initialize@CMcpxAPUTest@@QAEJXZ:NEAR		; CMcpxAPUTest::Initialize
;	COMDAT ??_C@_0BJ@JJMFDDDK@CDirectSoundTestSettings?$AA@
DSOUND_RD	SEGMENT
??_C@_0BJ@JJMFDDDK@CDirectSoundTestSettings?$AA@ DB 'CDirectSoundTestSett'
	DB	'ings', 00H					; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@JBIFFKD@CMcpxAPUTest?$CIm_pSettings?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BK@JBIFFKD@CMcpxAPUTest?$CIm_pSettings?$CJ?$AA@ DB 'CMcpxAPUTest(m'
	DB	'_pSettings)', 00H				; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?Initialize@CDirectSoundTest@@QAGJXZ
DSOUND	SEGMENT
tv88 = -20
tv73 = -16
$T32448 = -12
$T32445 = -8
_hr$ = -4
_this$ = 8
?Initialize@CDirectSoundTest@@QAGJXZ PROC NEAR		; CDirectSoundTest::Initialize, COMDAT

; 477  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 478  : 
; 479  : #ifdef USE_KEEPALIVE_BUFFERS
; 480  : 
; 481  :     static const WAVEFORMATEX   wfxSilence              = INIT_PCM_WAVEFORMAT(1, 48000, 16);
; 482  :     static const SHORT          asSilence[32]           = { 0 };
; 483  :     DSBUFFERDESC                dsbd;
; 484  :     DSMIXBINVOLUMEPAIR          MixBinVolumePairs[8];
; 485  :     DSMIXBINS                   MixBins;
; 486  :     DWORD                       i, z;
; 487  : 
; 488  : #endif // USE_KEEPALIVE_BUFFERS
; 489  : 
; 490  :     HRESULT                     hr;
; 491  : 
; 492  :     DPF_ENTER();
; 493  : 
; 494  :     //
; 495  :     // Create the shared settings object
; 496  :     //
; 497  : 
; 498  :     hr = HRFROMP(m_pSettings = NEW(CDirectSoundTestSettings));

  00006	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@JJMFDDDK@CDirectSoundTestSettings?$AA@
  0000b	68 f2 01 00 00	 push	 498			; 000001f2H
  00010	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
  00015	68 a8 00 00 00	 push	 168			; 000000a8H
  0001a	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
  00022	89 45 f8	 mov	 DWORD PTR $T32445[ebp], eax
  00025	83 7d f8 00	 cmp	 DWORD PTR $T32445[ebp], 0
  00029	74 0d		 je	 SHORT $L32446
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR $T32445[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CDirectSoundTestSettings@@QAE@XZ ; CDirectSoundTestSettings::CDirectSoundTestSettings
  00033	89 45 f0	 mov	 DWORD PTR tv73[ebp], eax
  00036	eb 07		 jmp	 SHORT $L32447
$L32446:
  00038	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$L32447:
  0003f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 4d f0	 mov	 ecx, DWORD PTR tv73[ebp]
  00045	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00048	33 d2		 xor	 edx, edx
  0004a	83 7d f0 00	 cmp	 DWORD PTR tv73[ebp], 0
  0004e	0f 95 c2	 setne	 dl
  00051	4a		 dec	 edx
  00052	81 e2 0e 00 07
	80		 and	 edx, -2147024882	; 8007000eH
  00058	89 55 fc	 mov	 DWORD PTR _hr$[ebp], edx

; 499  : 
; 500  :     //
; 501  :     // Create the device object
; 502  :     //
; 503  : 
; 504  :     if(SUCCEEDED(hr))

  0005b	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0005f	7c 5c		 jl	 SHORT $L32157

; 505  :     {
; 506  :         hr = HRFROMP(m_pDevice = NEW(CMcpxAPUTest(m_pSettings)));

  00061	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@JBIFFKD@CMcpxAPUTest?$CIm_pSettings?$CJ?$AA@
  00066	68 fa 01 00 00	 push	 506			; 000001faH
  0006b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@DHEOFBPG@c?3?2xbox?2private?2windows?2directx?2@
  00070	68 40 01 00 00	 push	 320			; 00000140H
  00075	e8 00 00 00 00	 call	 ??2@YAPAXIPBDK0@Z	; operator new
  0007a	83 c4 10	 add	 esp, 16			; 00000010H
  0007d	89 45 f4	 mov	 DWORD PTR $T32448[ebp], eax
  00080	83 7d f4 00	 cmp	 DWORD PTR $T32448[ebp], 0
  00084	74 14		 je	 SHORT $L32449
  00086	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0008c	51		 push	 ecx
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR $T32448[ebp]
  00090	e8 00 00 00 00	 call	 ??0CMcpxAPUTest@@QAE@PAVCDirectSoundTestSettings@@@Z ; CMcpxAPUTest::CMcpxAPUTest
  00095	89 45 ec	 mov	 DWORD PTR tv88[ebp], eax
  00098	eb 07		 jmp	 SHORT $L32450
$L32449:
  0009a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$L32450:
  000a1	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	8b 45 ec	 mov	 eax, DWORD PTR tv88[ebp]
  000a7	89 42 14	 mov	 DWORD PTR [edx+20], eax
  000aa	33 c9		 xor	 ecx, ecx
  000ac	83 7d ec 00	 cmp	 DWORD PTR tv88[ebp], 0
  000b0	0f 95 c1	 setne	 cl
  000b3	49		 dec	 ecx
  000b4	81 e1 0e 00 07
	80		 and	 ecx, -2147024882	; 8007000eH
  000ba	89 4d fc	 mov	 DWORD PTR _hr$[ebp], ecx
$L32157:

; 507  :     }
; 508  : 
; 509  :     if(SUCCEEDED(hr))

  000bd	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c1	7c 0e		 jl	 SHORT $L32164

; 510  :     {
; 511  :         hr = m_pDevice->Initialize();

  000c3	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  000c6	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  000c9	e8 00 00 00 00	 call	 ?Initialize@CMcpxAPUTest@@QAEJXZ ; CMcpxAPUTest::Initialize
  000ce	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax
$L32164:

; 512  :     }
; 513  : 
; 514  : #ifdef USE_KEEPALIVE_BUFFERS
; 515  : 
; 516  :     //
; 517  :     // Create dummy buffers.  The MCPX refuses to output any data at least 
; 518  :     // one voice writes to the speaker mixbins.  We'll burn voices in order 
; 519  :     // to write silence to all the mixbins all the time.
; 520  :     //
; 521  : 
; 522  :     if(SUCCEEDED(hr))
; 523  :     {
; 524  :         ZeroMemory(&dsbd, sizeof(dsbd));
; 525  :         ZeroMemory(&MixBinVolumePairs, sizeof(MixBinVolumePairs));
; 526  : 
; 527  :         dsbd.dwSize = sizeof(dsbd);
; 528  :         dsbd.lpwfxFormat = (LPWAVEFORMATEX)&wfxSilence;
; 529  :         dsbd.lpMixBins = &MixBins;
; 530  : 
; 531  :         MixBins.dwMixBinCount = NUMELMS(MixBinVolumePairs);
; 532  :         MixBins.lpMixBinVolumePairs = MixBinVolumePairs;
; 533  : 
; 534  :         for(i = 0; SUCCEEDED(hr) && (i < NUMELMS(m_apKeepAliveBuffers)); i++)
; 535  :         {
; 536  :             for(z = 0; z < NUMELMS(MixBinVolumePairs); z++)
; 537  :             {
; 538  :                 MixBinVolumePairs[z].dwMixBin = (i * NUMELMS(MixBinVolumePairs)) + z;
; 539  :             }
; 540  : 
; 541  :             if(DSMIXBIN_SUBMIX == MixBinVolumePairs[NUMELMS(MixBinVolumePairs) - 1].dwMixBin)
; 542  :             {
; 543  :                 MixBins.dwMixBinCount--;
; 544  :             }
; 545  : 
; 546  :             hr = CreateSoundBuffer(&dsbd, &m_apKeepAliveBuffers[i], NULL);
; 547  : 
; 548  :             if(SUCCEEDED(hr))
; 549  :             {
; 550  :                 hr = m_apKeepAliveBuffers[i]->SetBufferData((LPVOID)asSilence, sizeof(asSilence));
; 551  :             }
; 552  : 
; 553  :             if(SUCCEEDED(hr))
; 554  :             {
; 555  :                 hr = m_apKeepAliveBuffers[i]->Play(0, 0, DSBPLAY_LOOPING);
; 556  :             }
; 557  :         }
; 558  :     }
; 559  : 
; 560  : #endif // USE_KEEPALIVE_BUFFERS
; 561  : 
; 562  :     DPF_LEAVE_HRESULT(hr);
; 563  : 
; 564  :     return hr;

  000d1	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]

; 565  : }

  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 04 00	 ret	 4
?Initialize@CDirectSoundTest@@QAGJXZ ENDP		; CDirectSoundTest::Initialize
DSOUND	ENDS
PUBLIC	??_7?$CValidObject@$0EEFDEOEE@@@6B@		; CValidObject<1146310212>::`vftable'
PUBLIC	??_G?$CValidObject@$0EEFDEOEE@@@UAEPAXI@Z	; CValidObject<1146310212>::`scalar deleting destructor'
EXTRN	??_E?$CValidObject@$0EEFDEOEE@@@UAEPAXI@Z:NEAR	; CValidObject<1146310212>::`vector deleting destructor'
;	COMDAT ??_7?$CValidObject@$0EEFDEOEE@@@6B@
; File c:\xbox\private\windows\directx\dsound\initlib\dsapi.h
CONST	SEGMENT
??_7?$CValidObject@$0EEFDEOEE@@@6B@ DD FLAT:??_E?$CValidObject@$0EEFDEOEE@@@UAEPAXI@Z ; CValidObject<1146310212>::`vftable'
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT ??0?$CValidObject@$0EEFDEOEE@@@QAE@XZ
DSOUND	SEGMENT
_this$ = -4
??0?$CValidObject@$0EEFDEOEE@@@QAE@XZ PROC NEAR		; CValidObject<1146310212>::CValidObject<1146310212>, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7?$CValidObject@$0EEFDEOEE@@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 44 4e
	53 44		 mov	 DWORD PTR [ecx+4], 1146310212 ; 44534e44H

; 89   : }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0?$CValidObject@$0EEFDEOEE@@@QAE@XZ ENDP		; CValidObject<1146310212>::CValidObject<1146310212>
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDEOEE@@@UAE@XZ
DSOUND	SEGMENT
_this$ = -4
??1?$CValidObject@$0EEFDEOEE@@@UAE@XZ PROC NEAR		; CValidObject<1146310212>::~CValidObject<1146310212>, COMDAT
; _this$ = ecx

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7?$CValidObject@$0EEFDEOEE@@@6B@

; 93   : }

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1?$CValidObject@$0EEFDEOEE@@@UAE@XZ ENDP		; CValidObject<1146310212>::~CValidObject<1146310212>
DSOUND	ENDS
PUBLIC	??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@ ; `string'
;	COMDAT ??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@ DB 'NU'
	DB	'LL "this" pointer (%x)', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@
DSOUND_RD	SEGMENT
??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@ DB 'I'
	DB	'nvalid "this" pointer (%x != %x)', 00H	; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@@QAEXPBDK0@Z
DSOUND	SEGMENT
_this$ = -4
_pszFile$ = 8
_dwLine$ = 12
_pszFunction$ = 16
?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@@QAEXPBDK0@Z PROC NEAR ; CValidObject<1146310212>::__AssertValidObject, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 97   :     if(!this)

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 30		 jne	 SHORT $L32179

; 98   :     {
; 99   :         DwDbgSetContext(DPRINTF_DEFAULT, DPFLVL_ERROR, pszFile, dwLine, pszFunction, DPF_LIBRARY);

  0000d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07CNKCBOKB@TESTSND?$AA@
  00012	8b 45 10	 mov	 eax, DWORD PTR _pszFunction$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _dwLine$[ebp]
  00019	51		 push	 ecx
  0001a	8b 55 08	 mov	 edx, DWORD PTR _pszFile$[ebp]
  0001d	52		 push	 edx
  0001e	6a 01		 push	 1
  00020	6a 09		 push	 9
  00022	e8 00 00 00 00	 call	 _DwDbgSetContext
  00027	83 c4 18	 add	 esp, 24			; 00000018H

; 100  :         DwDbgPrint("NULL \"this\" pointer (%x)", this);

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	50		 push	 eax
  0002e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@
  00033	e8 00 00 00 00	 call	 _DwDbgPrint
  00038	83 c4 08	 add	 esp, 8

; 101  :     }
; 102  :     else if(m_dwSignature != dwSignature)

  0003b	eb 42		 jmp	 SHORT $L32178
$L32179:
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	81 79 04 44 4e
	53 44		 cmp	 DWORD PTR [ecx+4], 1146310212 ; 44534e44H
  00047	74 36		 je	 SHORT $L32178

; 103  :     {
; 104  :         DwDbgSetContext(DPRINTF_DEFAULT, DPFLVL_ERROR, pszFile, dwLine, pszFunction, DPF_LIBRARY);

  00049	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07CNKCBOKB@TESTSND?$AA@
  0004e	8b 55 10	 mov	 edx, DWORD PTR _pszFunction$[ebp]
  00051	52		 push	 edx
  00052	8b 45 0c	 mov	 eax, DWORD PTR _dwLine$[ebp]
  00055	50		 push	 eax
  00056	8b 4d 08	 mov	 ecx, DWORD PTR _pszFile$[ebp]
  00059	51		 push	 ecx
  0005a	6a 01		 push	 1
  0005c	6a 09		 push	 9
  0005e	e8 00 00 00 00	 call	 _DwDbgSetContext
  00063	83 c4 18	 add	 esp, 24			; 00000018H

; 105  :         DwDbgPrint("Invalid \"this\" pointer (%x != %x)", m_dwSignature, dwSignature);

  00066	68 44 4e 53 44	 push	 1146310212		; 44534e44H
  0006b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00071	50		 push	 eax
  00072	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@
  00077	e8 00 00 00 00	 call	 _DwDbgPrint
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH
$L32178:

; 106  :     }
; 107  : }

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 0c 00	 ret	 12			; 0000000cH
?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@@QAEXPBDK0@Z ENDP ; CValidObject<1146310212>::__AssertValidObject
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\initlib\refcount.h
DSOUND	ENDS
;	COMDAT ?__AddRef@@YGPAVCDirectSoundTest@@PAV1@@Z
DSOUND	SEGMENT
_p$ = 8
?__AddRef@@YGPAVCDirectSoundTest@@PAV1@@Z PROC NEAR	; __AddRef, COMDAT

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   :     if(p)

  00003	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00007	74 10		 je	 SHORT $L32185

; 68   :     {
; 69   :         p->AddRef();

  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	83 c0 08	 add	 eax, 8
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00012	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00015	50		 push	 eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L32185:

; 70   :     }
; 71   : 
; 72   :     return p;

  00019	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]

; 73   : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?__AddRef@@YGPAVCDirectSoundTest@@PAV1@@Z ENDP		; __AddRef
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDEOEE@@@UAEPAXI@Z
DSOUND	SEGMENT
_this$ = -4
___flags$ = 8
??_G?$CValidObject@$0EEFDEOEE@@@UAEPAXI@Z PROC NEAR	; CValidObject<1146310212>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$CValidObject@$0EEFDEOEE@@@UAE@XZ ; CValidObject<1146310212>::~CValidObject<1146310212>
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L32189
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L32189:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CValidObject@$0EEFDEOEE@@@UAEPAXI@Z ENDP		; CValidObject<1146310212>::`scalar deleting destructor'
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ??_ECDirectSoundTest@@W7AEPAXI@Z
_TEXT	SEGMENT
??_ECDirectSoundTest@@W7AEPAXI@Z PROC NEAR		; CDirectSoundTest::`vector deleting destructor', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ??_ECDirectSoundTest@@UAEPAXI@Z
??_ECDirectSoundTest@@W7AEPAXI@Z ENDP			; CDirectSoundTest::`vector deleting destructor'
_TEXT	ENDS
END
