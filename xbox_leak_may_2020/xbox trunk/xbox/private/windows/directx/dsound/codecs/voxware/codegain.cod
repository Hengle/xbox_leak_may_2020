; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\codegain.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _QuanGainSC3@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _UnQuanGainSC3@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_XVoiceBuildNumberD
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT
_XVoiceBuildNumberD DW 05658H
	DW	0494fH
	DW	04543H
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
CONST	SEGMENT
_GainCodeBook DD 0c02b6bf8r			; -2.67846
	DD	0bfe94eb1r			; -1.82271
	DD	0bfb11c9fr			; -1.38369
	DD	0bf896ce8r			; -1.07364
	DD	0bf4273f7r			; -0.759582
	DD	0bef036car			; -0.469168
	DD	0be459f2cr			; -0.19299
	DD	03dc53198r			; 0.096286
	DD	03eacb5fer			; 0.337326
	DD	03f0ceb25r			; 0.550463
	DD	03f3fa98fr			; 0.748681
	DD	03f76a023r			; 0.963381
	DD	03f980ab7r			; 1.18783
	DD	03fb49d5ar			; 1.41105
	DD	03fd4eaf2r			; 1.66342
	DD	03ff692cdr			; 1.92636
	DD	0400aff6dr			; 2.17184
	DD	0401683ber			; 2.35179
	DD	0402115a9r			; 2.51695
	DD	0402bf6cfr			; 2.68694
	DD	04036593ar			; 2.8492
	DD	040410e1fr			; 3.01649
	DD	0404c7a63r			; 3.19497
	DD	04058a3f9r			; 3.38501
	DD	040653516r			; 3.58137
	DD	0407167d3r			; 3.77196
	DD	0407c67cbr			; 3.94384
	DD	04083cc30r			; 4.11868
	DD	040897dfar			; 4.29663
	DD	0408ee719r			; 4.46571
	DD	040944888r			; 4.63385
	DD	0409a5515r			; 4.82289
	DD	0409f8ed2r			; 4.98618
	DD	040a529c7r			; 5.16135
	DD	040aa7584r			; 5.32685
	DD	040b02ee0r			; 5.50572
	DD	040b57889r			; 5.67096
	DD	040bab6d6r			; 5.83482
	DD	040c0274ar			; 6.0048
	DD	040c52b7cr			; 6.16156
	DD	040ca831br			; 6.3285
	DD	040cfb7dcr			; 6.49119
	DD	040d4f8dfr			; 6.65538
	DD	040da9aaer			; 6.83138
	DD	040e0365br			; 7.00664
	DD	040e60512r			; 7.18812
	DD	040eba62br			; 7.36403
	DD	040f19e95r			; 7.55061
	DD	040f7527cr			; 7.72882
	DD	040fd10acr			; 7.90829
	DD	041016035r			; 8.08599
	DD	041044b3fr			; 8.26837
	DD	0410753f5r			; 8.458
	DD	0410a6fa6r			; 8.65226
	DD	0410df36fr			; 8.87193
	DD	04111a945r			; 9.10383
	DD	04115709cr			; 9.33999
	DD	041196ce1r			; 9.58908
	DD	0411db8c5r			; 9.85761
	DD	04122694er			; 10.1507
	DD	0412742acr			; 10.4538
	DD	0412d00dcr			; 10.8127
	DD	04133a732r			; 11.2283
	DD	0413b9d98r			; 11.726
CONST	ENDS
PUBLIC	_QuanGainSC3@4
EXTRN	_ScalarQuant@12:NEAR
EXTRN	__fltused:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\codecs\voxware\codegain.c
;	COMDAT _QuanGainSC3@4
_TEXT	SEGMENT
_iIndex$ = -4
_flog2Gain$ = 8
_QuanGainSC3@4 PROC NEAR				; COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 85   :   int iIndex;
; 86   : 
; 87   :   iIndex = ScalarQuant(flog2Gain, GainCodeBook, LENGTH_Gain_CB);

  00004	6a 40		 push	 64			; 00000040H
  00006	68 00 00 00 00	 push	 OFFSET FLAT:_GainCodeBook
  0000b	8b 45 08	 mov	 eax, DWORD PTR _flog2Gain$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 _ScalarQuant@12
  00014	89 45 fc	 mov	 DWORD PTR _iIndex$[ebp], eax

; 88   : 
; 89   :   return iIndex;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _iIndex$[ebp]

; 90   : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
_QuanGainSC3@4 ENDP
_TEXT	ENDS
PUBLIC	_UnQuanGainSC3@4
EXTRN	_ScalarLUT@12:NEAR
; Function compile flags: /Odt
;	COMDAT _UnQuanGainSC3@4
_TEXT	SEGMENT
_flog2Gain$ = -4
_iIndex$ = 8
_UnQuanGainSC3@4 PROC NEAR				; COMDAT

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 123  :   float flog2Gain;
; 124  : 
; 125  :   flog2Gain = ScalarLUT( GainCodeBook, LENGTH_Gain_CB, (unsigned int) iIndex);

  00004	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00007	50		 push	 eax
  00008	6a 40		 push	 64			; 00000040H
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:_GainCodeBook
  0000f	e8 00 00 00 00	 call	 _ScalarLUT@12
  00014	d9 55 fc	 fst	 DWORD PTR _flog2Gain$[ebp]

; 126  :   
; 127  :   return flog2Gain;
; 128  : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
_UnQuanGainSC3@4 ENDP
_TEXT	ENDS
END
