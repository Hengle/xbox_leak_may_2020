; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\qenrgy12.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _VoxQuanEnergyVR12@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _VoxUnQuanEnergyVR12@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_XVoiceBuildNumberD
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT
_XVoiceBuildNumberD DW 05658H
	DW	0494fH
	DW	04543H
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	__real@00000000
PUBLIC	_VoxQuanEnergyVR12@16
EXTRN	__fltused:NEAR
EXTRN	_log10:NEAR
EXTRN	_ScalarQuant@12:NEAR
;	COMDAT __real@00000000
; File c:\xbox\private\windows\directx\dsound\codecs\voxware\qenrgy12.c
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _VoxQuanEnergyVR12@16
_TEXT	SEGMENT
_iIndex$ = -4
_fEnergy$ = 8
_pfCodeBook$ = 12
_size$ = 16
_index$ = 20
_VoxQuanEnergyVR12@16 PROC NEAR				; COMDAT

; 66   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 67   :    unsigned int iIndex;
; 68   : 
; 69   :    if (fEnergy==0.0F) 

  00004	d9 45 08	 fld	 DWORD PTR _fEnergy$[ebp]
  00007	d8 1d 00 00 00
	00		 fcomp	 DWORD PTR __real@00000000
  0000d	df e0		 fnstsw	 ax
  0000f	f6 c4 44	 test	 ah, 68			; 00000044H
  00012	7a 07		 jp	 SHORT $L1014

; 70   :       fEnergy = 0.0000001F;

  00014	c7 45 08 95 bf
	d6 33		 mov	 DWORD PTR _fEnergy$[ebp], 869711765 ; 33d6bf95H
$L1014:

; 71   :    fEnergy = (float)log10((double)fEnergy);

  0001b	d9 45 08	 fld	 DWORD PTR _fEnergy$[ebp]
  0001e	83 ec 08	 sub	 esp, 8
  00021	dd 1c 24	 fstp	 QWORD PTR [esp]
  00024	e8 00 00 00 00	 call	 _log10
  00029	83 c4 08	 add	 esp, 8
  0002c	d9 5d 08	 fstp	 DWORD PTR _fEnergy$[ebp]

; 72   :    iIndex = ScalarQuant(fEnergy, pfCodeBook, (int) size);

  0002f	0f bf 45 10	 movsx	 eax, WORD PTR _size$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _pfCodeBook$[ebp]
  00037	51		 push	 ecx
  00038	8b 55 08	 mov	 edx, DWORD PTR _fEnergy$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 _ScalarQuant@12
  00041	89 45 fc	 mov	 DWORD PTR _iIndex$[ebp], eax

; 73   : 
; 74   :    *index = (unsigned short) iIndex;

  00044	8b 45 14	 mov	 eax, DWORD PTR _index$[ebp]
  00047	66 8b 4d fc	 mov	 cx, WORD PTR _iIndex$[ebp]
  0004b	66 89 08	 mov	 WORD PTR [eax], cx

; 75   : }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 10 00	 ret	 16			; 00000010H
_VoxQuanEnergyVR12@16 ENDP
_TEXT	ENDS
PUBLIC	_VoxUnQuanEnergyVR12@12
EXTRN	_pow:NEAR
EXTRN	_ScalarLUT@12:NEAR
; Function compile flags: /Odt
;	COMDAT _VoxUnQuanEnergyVR12@12
_TEXT	SEGMENT
_fEnergy$ = -4
_pfCodeBook$ = 8
_size$ = 12
_index$ = 16
_VoxUnQuanEnergyVR12@12 PROC NEAR			; COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 83   :    float fEnergy;
; 84   : 
; 85   :    fEnergy = ScalarLUT(pfCodeBook, (int) size, (unsigned int) index);

  00004	0f b7 45 10	 movzx	 eax, WORD PTR _index$[ebp]
  00008	50		 push	 eax
  00009	0f bf 4d 0c	 movsx	 ecx, WORD PTR _size$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 08	 mov	 edx, DWORD PTR _pfCodeBook$[ebp]
  00011	52		 push	 edx
  00012	e8 00 00 00 00	 call	 _ScalarLUT@12
  00017	d9 55 fc	 fst	 DWORD PTR _fEnergy$[ebp]

; 86   :    fEnergy = (float)pow((double)10.0, (double)fEnergy);

  0001a	83 ec 08	 sub	 esp, 8
  0001d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00020	68 00 00 24 40	 push	 1076101120		; 40240000H
  00025	6a 00		 push	 0
  00027	e8 00 00 00 00	 call	 _pow
  0002c	83 c4 10	 add	 esp, 16			; 00000010H
  0002f	d9 55 fc	 fst	 DWORD PTR _fEnergy$[ebp]

; 87   : 
; 88   :    return(fEnergy);
; 89   : 
; 90   : }

  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 0c 00	 ret	 12			; 0000000cH
_VoxUnQuanEnergyVR12@12 ENDP
_TEXT	ENDS
END
