; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\stftpks.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _VoxSTFTpeaks@24
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_XVoiceBuildNumberD
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT
_XVoiceBuildNumberD DW 05658H
	DW	0494fH
	DW	04543H
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	_VoxSTFTpeaks@24
EXTRN	_PeakPick@24:NEAR
EXTRN	_QuadraticPeak@16:NEAR
EXTRN	_MagSq@16:NEAR
EXTRN	__fltused:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\codecs\voxware\stftpks.c
;	COMDAT _VoxSTFTpeaks@24
_TEXT	SEGMENT
_fFreq$ = -424
_fDeltaFreq$ = -420
_fPitch$ = -416
_iFreq$ = -412
_i$ = -408
_n$ = -404
_iPeakFreqs$ = -400
_pfSWR$ = 8
_pfSWI$ = 12
_pfMagSq$ = 16
_pfPkPwr$ = 20
_pfPkFrq$ = 24
_piPeakCount$ = 28
_VoxSTFTpeaks@24 PROC NEAR				; COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 01 00
	00		 sub	 esp, 424		; 000001a8H
  00009	56		 push	 esi

; 95   :    int   i, n;
; 96   :    int   iFreq;
; 97   :    float fDeltaFreq;
; 98   :    float fPitch;
; 99   :    float fFreq;
; 100  : 
; 101  : STACK_INIT
; 102  :    int   iPeakFreqs[MAXHARM];
; 103  : STACK_INIT_END
; 104  : 
; 105  :    STACK_ATTACH(int *, iPeakFreqs)
; 106  : 
; 107  :    /*-------------------------------------------------------
; 108  :      Compute magintude squared of the STFT
; 109  :    -------------------------------------------------------*/
; 110  :    MagSq( pfSWR, pfSWI, NFFT_2, pfMagSq);

  0000a	8b 45 10	 mov	 eax, DWORD PTR _pfMagSq$[ebp]
  0000d	50		 push	 eax
  0000e	68 00 01 00 00	 push	 256			; 00000100H
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pfSWI$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _pfSWR$[ebp]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 _MagSq@16

; 111  : 
; 112  :    STACK_START
; 113  : 
; 114  :    /*-------------------------------------------------------
; 115  :      Find the locations of the peaks
; 116  :    -------------------------------------------------------*/
; 117  :    PeakPick( pfMagSq, 0, NFFT_2, MAXHARM, iPeakFreqs, piPeakCount );

  00020	8b 45 1c	 mov	 eax, DWORD PTR _piPeakCount$[ebp]
  00023	50		 push	 eax
  00024	8d 8d 70 fe ff
	ff		 lea	 ecx, DWORD PTR _iPeakFreqs$[ebp]
  0002a	51		 push	 ecx
  0002b	6a 64		 push	 100			; 00000064H
  0002d	68 00 01 00 00	 push	 256			; 00000100H
  00032	6a 00		 push	 0
  00034	8b 55 10	 mov	 edx, DWORD PTR _pfMagSq$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 _PeakPick@24

; 118  : 
; 119  :    /*-------------------------------------------------------
; 120  :      Do quadratic interpolation to improve the peak 
; 121  :       locations and magnitudes.
; 122  :    -------------------------------------------------------*/
; 123  :    for (i=0; i<*piPeakCount; i++)

  0003d	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$[ebp], 0
  00047	eb 0f		 jmp	 SHORT $L744
$L745:
  00049	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  0004f	83 c0 01	 add	 eax, 1
  00052	89 85 68 fe ff
	ff		 mov	 DWORD PTR _i$[ebp], eax
$L744:
  00058	8b 4d 1c	 mov	 ecx, DWORD PTR _piPeakCount$[ebp]
  0005b	8b 95 68 fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  00061	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00063	7d 71		 jge	 SHORT $L746

; 124  :    {
; 125  :      n = iPeakFreqs[i];

  00065	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  0006b	8b 8c 85 70 fe
	ff ff		 mov	 ecx, DWORD PTR _iPeakFreqs$[ebp+eax*4]
  00072	89 8d 6c fe ff
	ff		 mov	 DWORD PTR _n$[ebp], ecx

; 126  : 
; 127  :      fDeltaFreq = QuadraticPeak( pfMagSq[n-1], pfMagSq[n], pfMagSq[n+1], 
; 128  :                                  &(pfPkPwr[i]));

  00078	8b 95 68 fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  0007e	8b 45 14	 mov	 eax, DWORD PTR _pfPkPwr$[ebp]
  00081	8d 0c 90	 lea	 ecx, DWORD PTR [eax+edx*4]
  00084	51		 push	 ecx
  00085	8b 95 6c fe ff
	ff		 mov	 edx, DWORD PTR _n$[ebp]
  0008b	8b 45 10	 mov	 eax, DWORD PTR _pfMagSq$[ebp]
  0008e	8b 4c 90 04	 mov	 ecx, DWORD PTR [eax+edx*4+4]
  00092	51		 push	 ecx
  00093	8b 95 6c fe ff
	ff		 mov	 edx, DWORD PTR _n$[ebp]
  00099	8b 45 10	 mov	 eax, DWORD PTR _pfMagSq$[ebp]
  0009c	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0009f	51		 push	 ecx
  000a0	8b 95 6c fe ff
	ff		 mov	 edx, DWORD PTR _n$[ebp]
  000a6	8b 45 10	 mov	 eax, DWORD PTR _pfMagSq$[ebp]
  000a9	8b 4c 90 fc	 mov	 ecx, DWORD PTR [eax+edx*4-4]
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 _QuadraticPeak@16
  000b3	d9 9d 5c fe ff
	ff		 fstp	 DWORD PTR _fDeltaFreq$[ebp]

; 129  :      pfPkFrq[i] = n + fDeltaFreq;

  000b9	db 85 6c fe ff
	ff		 fild	 DWORD PTR _n$[ebp]
  000bf	d8 85 5c fe ff
	ff		 fadd	 DWORD PTR _fDeltaFreq$[ebp]
  000c5	8b 95 68 fe ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  000cb	8b 45 18	 mov	 eax, DWORD PTR _pfPkFrq$[ebp]
  000ce	d9 1c 90	 fstp	 DWORD PTR [eax+edx*4]

; 130  :  
; 131  :    }      

  000d1	e9 73 ff ff ff	 jmp	 $L745
$L746:

; 132  : 
; 133  :    STACK_END
; 134  : 
; 135  :    /*----------------------------------------------------------------
; 136  :      If there are not enough peaks, then arbitrarily sample the 
; 137  :        pfMagSq[] using a pitch of DEFAULT_PITCH.
; 138  :    ----------------------------------------------------------------*/
; 139  :    if (*piPeakCount <= MIN_PEAKS)

  000d6	8b 4d 1c	 mov	 ecx, DWORD PTR _piPeakCount$[ebp]
  000d9	83 39 03	 cmp	 DWORD PTR [ecx], 3
  000dc	0f 8f 9a 00 00
	00		 jg	 $L736

; 140  :    {
; 141  :       fPitch = (float) DEFAULT_PITCH;

  000e2	c7 85 60 fe ff
	ff 00 00 e0 40	 mov	 DWORD PTR _fPitch$[ebp], 1088421888 ; 40e00000H

; 142  :       fFreq = fPitch;

  000ec	8b 95 60 fe ff
	ff		 mov	 edx, DWORD PTR _fPitch$[ebp]
  000f2	89 95 58 fe ff
	ff		 mov	 DWORD PTR _fFreq$[ebp], edx

; 143  :       iFreq = DEFAULT_PITCH;

  000f8	c7 85 64 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR _iFreq$[ebp], 7

; 144  :       for (n=0; n<DEFAULT_PEAKS; n++)

  00102	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _n$[ebp], 0
  0010c	eb 0f		 jmp	 SHORT $L749
$L750:
  0010e	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _n$[ebp]
  00114	83 c0 01	 add	 eax, 1
  00117	89 85 6c fe ff
	ff		 mov	 DWORD PTR _n$[ebp], eax
$L749:
  0011d	83 bd 6c fe ff
	ff 24		 cmp	 DWORD PTR _n$[ebp], 36	; 00000024H
  00124	7d 4d		 jge	 SHORT $L751

; 145  :       {
; 146  :          pfPkFrq[n] = fFreq;

  00126	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR _n$[ebp]
  0012c	8b 55 18	 mov	 edx, DWORD PTR _pfPkFrq$[ebp]
  0012f	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _fFreq$[ebp]
  00135	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 147  :          fFreq += fPitch;

  00138	d9 85 58 fe ff
	ff		 fld	 DWORD PTR _fFreq$[ebp]
  0013e	d8 85 60 fe ff
	ff		 fadd	 DWORD PTR _fPitch$[ebp]
  00144	d9 9d 58 fe ff
	ff		 fstp	 DWORD PTR _fFreq$[ebp]

; 148  :          pfPkPwr[n] = pfMagSq[iFreq];

  0014a	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR _n$[ebp]
  00150	8b 55 14	 mov	 edx, DWORD PTR _pfPkPwr$[ebp]
  00153	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _iFreq$[ebp]
  00159	8b 75 10	 mov	 esi, DWORD PTR _pfMagSq$[ebp]
  0015c	8b 04 86	 mov	 eax, DWORD PTR [esi+eax*4]
  0015f	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 149  :          iFreq += DEFAULT_PITCH;

  00162	8b 8d 64 fe ff
	ff		 mov	 ecx, DWORD PTR _iFreq$[ebp]
  00168	83 c1 07	 add	 ecx, 7
  0016b	89 8d 64 fe ff
	ff		 mov	 DWORD PTR _iFreq$[ebp], ecx

; 150  :       }

  00171	eb 9b		 jmp	 SHORT $L750
$L751:

; 151  :       *piPeakCount = DEFAULT_PEAKS;

  00173	8b 55 1c	 mov	 edx, DWORD PTR _piPeakCount$[ebp]
  00176	c7 02 24 00 00
	00		 mov	 DWORD PTR [edx], 36	; 00000024H
$L736:

; 152  :    }
; 153  : 
; 154  : } /*VoxSTFTpeaks()*/

  0017c	5e		 pop	 esi
  0017d	8b e5		 mov	 esp, ebp
  0017f	5d		 pop	 ebp
  00180	c2 18 00	 ret	 24			; 00000018H
_VoxSTFTpeaks@24 ENDP
_TEXT	ENDS
END
