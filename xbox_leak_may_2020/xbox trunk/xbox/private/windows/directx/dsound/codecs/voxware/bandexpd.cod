; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\bandexpd.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _BandExpand@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_XVoiceBuildNumberD
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT
_XVoiceBuildNumberD DW 05658H
	DW	0494fH
	DW	04543H
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	_BandExpand@16
EXTRN	__fltused:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\codecs\voxware\bandexpd.c
;	COMDAT _BandExpand@16
_TEXT	SEGMENT
_dMultiplier$ = -8
_i$ = -4
_pIn$ = 8
_pOut$ = 12
_iLPCOrder$ = 16
_fExpandCoeff$ = 20
_BandExpand@16 PROC NEAR				; COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 75   :    int   i;
; 76   :    float dMultiplier;
; 77   :  
; 78   :    dMultiplier = 1.0F;

  00006	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR _dMultiplier$[ebp], 1065353216 ; 3f800000H

; 79   :    for(i=0;i<=iLPCOrder;i++) 

  0000d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00014	eb 09		 jmp	 SHORT $L519
$L520:
  00016	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00019	83 c0 01	 add	 eax, 1
  0001c	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$L519:
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00022	3b 4d 10	 cmp	 ecx, DWORD PTR _iLPCOrder$[ebp]
  00025	7f 2a		 jg	 SHORT $L516

; 80   :    {
; 81   :      *pOut++ = (float)(*pIn++ * dMultiplier);

  00027	8b 55 08	 mov	 edx, DWORD PTR _pIn$[ebp]
  0002a	d9 45 f8	 fld	 DWORD PTR _dMultiplier$[ebp]
  0002d	d8 0a		 fmul	 DWORD PTR [edx]
  0002f	8b 45 0c	 mov	 eax, DWORD PTR _pOut$[ebp]
  00032	d9 18		 fstp	 DWORD PTR [eax]
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _pOut$[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	89 4d 0c	 mov	 DWORD PTR _pOut$[ebp], ecx
  0003d	8b 55 08	 mov	 edx, DWORD PTR _pIn$[ebp]
  00040	83 c2 04	 add	 edx, 4
  00043	89 55 08	 mov	 DWORD PTR _pIn$[ebp], edx

; 82   :      dMultiplier *= (float)fExpandCoeff;

  00046	d9 45 f8	 fld	 DWORD PTR _dMultiplier$[ebp]
  00049	d8 4d 14	 fmul	 DWORD PTR _fExpandCoeff$[ebp]
  0004c	d9 5d f8	 fstp	 DWORD PTR _dMultiplier$[ebp]

; 83   :    }

  0004f	eb c5		 jmp	 SHORT $L520
$L516:

; 84   : }

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 10 00	 ret	 16			; 00000010H
_BandExpand@16 ENDP
_TEXT	ENDS
END
