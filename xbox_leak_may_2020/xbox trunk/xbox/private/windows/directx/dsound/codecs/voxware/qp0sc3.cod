; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\qp0sc3.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0DP@FOBNJNOG@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DA@NPCDFMKK@?$CIiIndex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiIndex?5?$DM?5?$CI1?$DM?$DMB@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _VoxQuanPitchSC3@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _VoxUnQuanPitchSC3@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _UnQuanMidPitchSC3@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_XVoiceBuildNumberD
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT
_XVoiceBuildNumberD DW 05658H
	DW	0494fH
	DW	04543H
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	__real@42aa3e00
PUBLIC	_VoxQuanPitchSC3@4
PUBLIC	__real@41000000
PUBLIC	__real@43200000
PUBLIC	__real@40144cfa60000000
EXTRN	__fltused:NEAR
EXTRN	_log:NEAR
;	COMDAT __real@41000000
; File c:\xbox\private\windows\directx\dsound\codecs\voxware\qp0sc3.c
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@43200000
CONST	SEGMENT
__real@43200000 DD 043200000r			; 160
CONST	ENDS
;	COMDAT __real@40144cfa60000000
CONST	SEGMENT
__real@40144cfa60000000 DQ 040144cfa60000000r	; 5.07517
CONST	ENDS
;	COMDAT __real@42aa3e00
CONST	SEGMENT
__real@42aa3e00 DD 042aa3e00r			; 85.1211
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _VoxQuanPitchSC3@4
_TEXT	SEGMENT
tv90 = -20
tv67 = -16
tv65 = -12
_iIndex$ = -8
_fLevel$ = -4
_fPitch$ = 8
_VoxQuanPitchSC3@4 PROC NEAR				; COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 82   :   float fLevel;
; 83   :   int iIndex;
; 84   : 
; 85   :   /* truncate pitch value */
; 86   :   fPitch = VoxMAX(fPitch, MIN_QUAN_PITCH_PERIOD_SC3);

  00006	d9 45 08	 fld	 DWORD PTR _fPitch$[ebp]
  00009	d8 1d 00 00 00
	00		 fcomp	 DWORD PTR __real@41000000
  0000f	df e0		 fnstsw	 ax
  00011	f6 c4 41	 test	 ah, 65			; 00000041H
  00014	75 08		 jne	 SHORT $L1015
  00016	8b 45 08	 mov	 eax, DWORD PTR _fPitch$[ebp]
  00019	89 45 f4	 mov	 DWORD PTR tv65[ebp], eax
  0001c	eb 07		 jmp	 SHORT $L1016
$L1015:
  0001e	c7 45 f4 00 00
	00 41		 mov	 DWORD PTR tv65[ebp], 1090519040 ; 41000000H
$L1016:
  00025	8b 4d f4	 mov	 ecx, DWORD PTR tv65[ebp]
  00028	89 4d 08	 mov	 DWORD PTR _fPitch$[ebp], ecx

; 87   :   fPitch = VoxMIN(fPitch, MAX_QUAN_PITCH_PERIOD_SC3);

  0002b	d9 45 08	 fld	 DWORD PTR _fPitch$[ebp]
  0002e	d8 1d 00 00 00
	00		 fcomp	 DWORD PTR __real@43200000
  00034	df e0		 fnstsw	 ax
  00036	f6 c4 41	 test	 ah, 65			; 00000041H
  00039	75 09		 jne	 SHORT $L1017
  0003b	c7 45 f0 00 00
	20 43		 mov	 DWORD PTR tv67[ebp], 1126170624 ; 43200000H
  00042	eb 06		 jmp	 SHORT $L1018
$L1017:
  00044	8b 55 08	 mov	 edx, DWORD PTR _fPitch$[ebp]
  00047	89 55 f0	 mov	 DWORD PTR tv67[ebp], edx
$L1018:
  0004a	8b 45 f0	 mov	 eax, DWORD PTR tv67[ebp]
  0004d	89 45 08	 mov	 DWORD PTR _fPitch$[ebp], eax

; 88   : 
; 89   :   /* convert pitch to level */
; 90   :   fLevel = (float) (LOGExpPMAX - log(fPitch))*INV_LOGExpSTEP;

  00050	d9 45 08	 fld	 DWORD PTR _fPitch$[ebp]
  00053	83 ec 08	 sub	 esp, 8
  00056	dd 1c 24	 fstp	 QWORD PTR [esp]
  00059	e8 00 00 00 00	 call	 _log
  0005e	83 c4 08	 add	 esp, 8
  00061	dc 2d 00 00 00
	00		 fsubr	 QWORD PTR __real@40144cfa60000000
  00067	d9 55 ec	 fst	 DWORD PTR tv90[ebp]
  0006a	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@42aa3e00
  00070	d9 5d fc	 fstp	 DWORD PTR _fLevel$[ebp]

; 91   : 
; 92   :   /* round to integer level */
; 93   :   VoxROUND2(fLevel, iIndex);

  00073	d9 45 fc	 fld	 DWORD PTR _fLevel$[ebp]
  00076	db 5d f8	 fistp	 DWORD PTR _iIndex$[ebp]

; 94   : 
; 95   :   return iIndex;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _iIndex$[ebp]

; 96   : }

  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
_VoxQuanPitchSC3@4 ENDP
_TEXT	ENDS
PUBLIC	__real@3c407a8f
PUBLIC	__real@40a267d3
PUBLIC	_VoxUnQuanPitchSC3@4
PUBLIC	??_C@_0DP@FOBNJNOG@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0DA@NPCDFMKK@?$CIiIndex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiIndex?5?$DM?5?$CI1?$DM?$DMB@ ; `string'
EXTRN	_exp:NEAR
EXTRN	__assert:NEAR
;	COMDAT ??_C@_0DP@FOBNJNOG@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT
??_C@_0DP@FOBNJNOG@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\codecs\voxware\qp0sc3.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NPCDFMKK@?$CIiIndex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiIndex?5?$DM?5?$CI1?$DM?$DMB@
CONST	SEGMENT
??_C@_0DA@NPCDFMKK@?$CIiIndex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiIndex?5?$DM?5?$CI1?$DM?$DMB@ DB '('
	DB	'iIndex >= 0) && (iIndex < (1<<BITS_PITCH_SC3))', 00H ; `string'
CONST	ENDS
;	COMDAT __real@3c407a8f
CONST	SEGMENT
__real@3c407a8f DD 03c407a8fr			; 0.011748
CONST	ENDS
;	COMDAT __real@40a267d3
CONST	SEGMENT
__real@40a267d3 DD 040a267d3r			; 5.07517
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _VoxUnQuanPitchSC3@4
_TEXT	SEGMENT
_fPitch$ = -4
_iIndex$ = 8
_VoxUnQuanPitchSC3@4 PROC NEAR				; COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 135  :   float fPitch;
; 136  : 
; 137  :   assert((iIndex >= 0) && (iIndex < (1<<BITS_PITCH_SC3)));

  00004	83 7d 08 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  00008	7c 09		 jl	 SHORT $L1031
  0000a	81 7d 08 00 01
	00 00		 cmp	 DWORD PTR _iIndex$[ebp], 256 ; 00000100H
  00011	7c 17		 jl	 SHORT $L1032
$L1031:
  00013	68 89 00 00 00	 push	 137			; 00000089H
  00018	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@FOBNJNOG@c?3?2xbox?2private?2windows?2directx?2@
  0001d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DA@NPCDFMKK@?$CIiIndex?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIiIndex?5?$DM?5?$CI1?$DM?$DMB@
  00022	e8 00 00 00 00	 call	 __assert
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH
$L1032:

; 138  : 
; 139  :   fPitch = (float)exp(LOGExpPMAX-(float)iIndex*LOGExpSTEP);

  0002a	db 45 08	 fild	 DWORD PTR _iIndex$[ebp]
  0002d	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3c407a8f
  00033	d8 2d 00 00 00
	00		 fsubr	 DWORD PTR __real@40a267d3
  00039	83 ec 08	 sub	 esp, 8
  0003c	dd 1c 24	 fstp	 QWORD PTR [esp]
  0003f	e8 00 00 00 00	 call	 _exp
  00044	83 c4 08	 add	 esp, 8
  00047	d9 55 fc	 fst	 DWORD PTR _fPitch$[ebp]

; 140  : 
; 141  :   return fPitch;
; 142  : }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
_VoxUnQuanPitchSC3@4 ENDP
_TEXT	ENDS
PUBLIC	_UnQuanMidPitchSC3@16
EXTRN	_MidEstPitch@16:NEAR
; Function compile flags: /Odt
;	COMDAT _UnQuanMidPitchSC3@16
_TEXT	SEGMENT
_fPitch_1$ = 8
_fPitch$ = 12
_fPv_1$ = 16
_fPv$ = 20
_UnQuanMidPitchSC3@16 PROC NEAR				; COMDAT

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 174  :   return MidEstPitch(fPitch_1, fPitch, fPv_1, fPv);

  00003	8b 45 14	 mov	 eax, DWORD PTR _fPv$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _fPv_1$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _fPitch$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR _fPitch_1$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _MidEstPitch@16

; 175  : }

  00018	5d		 pop	 ebp
  00019	c2 10 00	 ret	 16			; 00000010H
_UnQuanMidPitchSC3@16 ENDP
_TEXT	ENDS
END
