; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\qpvvr12.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _VoxQuanPvVR12@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _VoxUnQuanPvVR12@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_XVoiceBuildNumberD
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT
_XVoiceBuildNumberD DW 05658H
	DW	0494fH
	DW	04543H
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	_VoxQuanPvVR12@4
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@402589d89d89d89e
PUBLIC	__real@3fd0000000000000
EXTRN	_VoxPosRound@4:NEAR
EXTRN	__fltused:NEAR
;	COMDAT __real@3fa999999999999a
; File c:\xbox\private\windows\directx\dsound\codecs\voxware\qpvvr12.c
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@402589d89d89d89e
CONST	SEGMENT
__real@402589d89d89d89e DQ 0402589d89d89d89er	; 10.7692
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _VoxQuanPvVR12@4
_TEXT	SEGMENT
tv74 = -8
_index$ = -4
_pv$ = 8
_VoxQuanPvVR12@4 PROC NEAR				; COMDAT

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 64   :   unsigned short index;
; 65   : 
; 66   :   index = (unsigned short) VoxPosRound((float)((pv-PV_RESET)*(1.0/PV_STEP)+PV_BIAS));

  00006	d9 45 08	 fld	 DWORD PTR _pv$[ebp]
  00009	dc 25 00 00 00
	00		 fsub	 QWORD PTR __real@3fa999999999999a
  0000f	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@402589d89d89d89e
  00015	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fd0000000000000
  0001b	d9 55 f8	 fst	 DWORD PTR tv74[ebp]
  0001e	51		 push	 ecx
  0001f	d9 1c 24	 fstp	 DWORD PTR [esp]
  00022	e8 00 00 00 00	 call	 _VoxPosRound@4
  00027	66 89 45 fc	 mov	 WORD PTR _index$[ebp], ax

; 67   :   
; 68   :   return(index);

  0002b	66 8b 45 fc	 mov	 ax, WORD PTR _index$[ebp]

; 69   : }

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
_VoxQuanPvVR12@4 ENDP
_TEXT	ENDS
PUBLIC	_VoxUnQuanPvVR12@4
PUBLIC	__real@3fb7c57c57c57c57
;	COMDAT __real@3fb7c57c57c57c57
CONST	SEGMENT
__real@3fb7c57c57c57c57 DQ 03fb7c57c57c57c57r	; 0.0928571
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _VoxUnQuanPvVR12@4
_TEXT	SEGMENT
tv71 = -8
_Pv$ = -4
_index$ = 8
_VoxUnQuanPvVR12@4 PROC NEAR				; COMDAT

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 73   :    float Pv;
; 74   : 
; 75   :    Pv = (float)((PV_STEP*index)+PV_RESET);

  00006	0f b7 45 08	 movzx	 eax, WORD PTR _index$[ebp]
  0000a	89 45 f8	 mov	 DWORD PTR tv71[ebp], eax
  0000d	db 45 f8	 fild	 DWORD PTR tv71[ebp]
  00010	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fb7c57c57c57c57
  00016	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fa999999999999a
  0001c	d9 55 fc	 fst	 DWORD PTR _Pv$[ebp]

; 76   :    return(Pv);
; 77   : 
; 78   : }

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
_VoxUnQuanPvVR12@4 ENDP
_TEXT	ENDS
END
