; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\jitter.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0DP@BCNFMAGA@c?3?2xbox?2private?2windows?2directx?2@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLINMDHH@pfPhase?5?$CB?$DN?5NULL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _PhaseJitter@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_XVoiceBuildNumberD
;	COMDAT _XVoiceBuildNumberD
XBLD$V	SEGMENT
_XVoiceBuildNumberD DW 05658H
	DW	0494fH
	DW	04543H
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	_PhaseJitter@16
PUBLIC	??_C@_0DP@BCNFMAGA@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0BA@HLINMDHH@pfPhase?5?$CB?$DN?5NULL?$AA@	; `string'
PUBLIC	__real@3e400000
PUBLIC	__real@3c826136
PUBLIC	__real@3ea2f983
EXTRN	__assert:NEAR
EXTRN	__ftol2:NEAR
EXTRN	__fltused:NEAR
;	COMDAT ??_C@_0DP@BCNFMAGA@c?3?2xbox?2private?2windows?2directx?2@
; File c:\xbox\private\windows\directx\dsound\codecs\voxware\jitter.c
CONST	SEGMENT
??_C@_0DP@BCNFMAGA@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\codecs\voxware\jitter.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLINMDHH@pfPhase?5?$CB?$DN?5NULL?$AA@
CONST	SEGMENT
??_C@_0BA@HLINMDHH@pfPhase?5?$CB?$DN?5NULL?$AA@ DB 'pfPhase != NULL', 00H ; `string'
CONST	ENDS
;	COMDAT __real@3e400000
CONST	SEGMENT
__real@3e400000 DD 03e400000r			; 0.1875
CONST	ENDS
;	COMDAT __real@3c826136
CONST	SEGMENT
__real@3c826136 DD 03c826136r			; 0.0159155
CONST	ENDS
;	COMDAT __real@3ea2f983
CONST	SEGMENT
__real@3ea2f983 DD 03ea2f983r			; 0.31831
; Function compile flags: /Odt
CONST	ENDS
;	COMDAT _PhaseJitter@16
_TEXT	SEGMENT
tv94 = -16
_fPerturb$ = -12
_iJitterHarm$ = -8
_n$ = -4
_fPitch$ = 8
_pfPhase$ = 12
_iBasePeaks$ = 16
_iHarmonics$ = 20
_PhaseJitter@16 PROC NEAR				; COMDAT

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 80   :    int   n;
; 81   :    int iJitterHarm;
; 82   :    float fPerturb = PERTURB_FACTOR;

  00006	c7 45 f4 83 f9
	a2 3e		 mov	 DWORD PTR _fPerturb$[ebp], 1050868099 ; 3ea2f983H

; 83   : 
; 84   :    assert(pfPhase != NULL);

  0000d	83 7d 0c 00	 cmp	 DWORD PTR _pfPhase$[ebp], 0
  00011	75 14		 jne	 SHORT $L987
  00013	6a 54		 push	 84			; 00000054H
  00015	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@BCNFMAGA@c?3?2xbox?2private?2windows?2directx?2@
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@HLINMDHH@pfPhase?5?$CB?$DN?5NULL?$AA@
  0001f	e8 00 00 00 00	 call	 __assert
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH
$L987:

; 85   : 
; 86   :    iJitterHarm = VoxFLOORpos(JITTER_CUTOFF * fPitch);

  00027	d9 05 00 00 00
	00		 fld	 DWORD PTR __real@3e400000
  0002d	d8 4d 08	 fmul	 DWORD PTR _fPitch$[ebp]
  00030	e8 00 00 00 00	 call	 __ftol2
  00035	89 45 f8	 mov	 DWORD PTR _iJitterHarm$[ebp], eax

; 87   : 
; 88   :    if (iJitterHarm < iBasePeaks)

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _iJitterHarm$[ebp]
  0003b	3b 4d 10	 cmp	 ecx, DWORD PTR _iBasePeaks$[ebp]
  0003e	7d 1b		 jge	 SHORT $L971

; 89   :      fPerturb = PERTURB_FACTOR + (float)(iBasePeaks-iJitterHarm)*PERTURB_SLOPE;

  00040	8b 55 10	 mov	 edx, DWORD PTR _iBasePeaks$[ebp]
  00043	2b 55 f8	 sub	 edx, DWORD PTR _iJitterHarm$[ebp]
  00046	89 55 f0	 mov	 DWORD PTR tv94[ebp], edx
  00049	db 45 f0	 fild	 DWORD PTR tv94[ebp]
  0004c	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3c826136
  00052	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@3ea2f983
  00058	d9 5d f4	 fstp	 DWORD PTR _fPerturb$[ebp]
$L971:

; 90   : 
; 91   :    for (n = iBasePeaks; n < iHarmonics; n++)

  0005b	8b 45 10	 mov	 eax, DWORD PTR _iBasePeaks$[ebp]
  0005e	89 45 fc	 mov	 DWORD PTR _n$[ebp], eax
  00061	eb 09		 jmp	 SHORT $L973
$L974:
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _n$[ebp]
  00066	83 c1 01	 add	 ecx, 1
  00069	89 4d fc	 mov	 DWORD PTR _n$[ebp], ecx
$L973:
  0006c	8b 55 fc	 mov	 edx, DWORD PTR _n$[ebp]
  0006f	3b 55 14	 cmp	 edx, DWORD PTR _iHarmonics$[ebp]
  00072	7d 35		 jge	 SHORT $L961

; 92   :      {
; 93   :        if (n >= iJitterHarm)  /* increase perturbation factor */

  00074	8b 45 fc	 mov	 eax, DWORD PTR _n$[ebp]
  00077	3b 45 f8	 cmp	 eax, DWORD PTR _iJitterHarm$[ebp]
  0007a	7c 0c		 jl	 SHORT $L976

; 94   :          fPerturb += PERTURB_SLOPE;

  0007c	d9 45 f4	 fld	 DWORD PTR _fPerturb$[ebp]
  0007f	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@3c826136
  00085	d9 5d f4	 fstp	 DWORD PTR _fPerturb$[ebp]
$L976:

; 95   :        
; 96   :        if (( n & 1) == 0)  /* only apply to odd harmonics */

  00088	8b 4d fc	 mov	 ecx, DWORD PTR _n$[ebp]
  0008b	83 e1 01	 and	 ecx, 1
  0008e	85 c9		 test	 ecx, ecx
  00090	75 15		 jne	 SHORT $L977

; 97   :          pfPhase[n] += fPerturb;

  00092	8b 55 fc	 mov	 edx, DWORD PTR _n$[ebp]
  00095	8b 45 0c	 mov	 eax, DWORD PTR _pfPhase$[ebp]
  00098	d9 45 f4	 fld	 DWORD PTR _fPerturb$[ebp]
  0009b	d8 04 90	 fadd	 DWORD PTR [eax+edx*4]
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _n$[ebp]
  000a1	8b 55 0c	 mov	 edx, DWORD PTR _pfPhase$[ebp]
  000a4	d9 1c 8a	 fstp	 DWORD PTR [edx+ecx*4]
$L977:

; 98   :      }

  000a7	eb ba		 jmp	 SHORT $L974
$L961:

; 99   : } /* PhaseJitter */

  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 10 00	 ret	 16			; 00000010H
_PhaseJitter@16 ENDP
_TEXT	ENDS
END
