; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\testmem.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
DSOUND_URW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_URW	ENDS
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@HLNMLIHP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_09GPGAJHPD@?$CIunknown?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@IMPCONDJ@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@PGACJKHL@?$CB?$CIx?5?$CG?5?$CIx?5?9?51?$CJ?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@KHLJBLPM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@MLMBNMPN@nLength?5?$DO?5sizeof?$CI?$CKpRunMarker?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@GEBIDJGO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@DHEFJAIP@IsValidAlgorithm?$CI?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@FFGMCHMA@m_pfnGetFilterPair?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06DHEFHAJP@TESTDS?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DG@DIPNMLMO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BF@JCCIJAPA@CDirectSound?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IDOOAHKJ@CDirectSoundBuffer?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IJJNEHOC@CDirectSoundBuffer?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@PKKBNDKL@CDirectSoundBuffer?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@PPDEBFDO@CDirectSoundBuffer?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@INMBMDIC@CDirectSoundBuffer?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@FNHOKAIC@CDirectSoundBuffer?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BGJIIJJH@CDirectSoundBuffer?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@EOPIEBA@CDirectSoundBuffer?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@IPGKAOBK@CDirectSoundBuffer?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@EJJCKIBH@CDirectSoundBuffer?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@IJCIHAHO@CDirectSoundBuffer?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@ENFJENBA@CDirectSoundBuffer?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@GMNMDMFI@CDirectSoundBuffer?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CFIEOKFB@CDirectSoundBuffer?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@GKILFNCM@CDirectSoundBuffer?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@BJHPKLFJ@CDirectSoundBuffer?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@FPOKJAEF@CDirectSoundBuffer?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@LECKPDBD@CDirectSoundBuffer?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@CEFJODPJ@CDirectSoundBuffer?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KCLFGBIJ@CDirectSoundBuffer?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@CJDDDDA@CDirectSoundBuffer?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@GALGNKNN@CDirectSoundBuffer?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@OMPMKPGG@CDirectSoundBuffer?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@DNKDAAOC@CDirectSoundBuffer?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CEGGDJFO@CDirectSoundBuffer?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@LIPCEEAM@CDirectSoundBuffer?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HPKGJBBG@CDirectSoundBuffer?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IGCEBFCD@CDirectSoundStream?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IEPFOHMO@CDirectSoundStream?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@BFEGBGIF@CDirectSoundStream?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@EFAECKOL@CDirectSoundStream?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@GPKLKEMB@CDirectSoundStream?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GCCGAGKM@CDirectSoundStream?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BDFCJLBN@CDirectSoundStream?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@MOKKBNNH@CDirectSoundStream?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GAINMLDE@CDirectSoundStream?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@KJJLHIOD@CDirectSoundStream?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@HMGNJNIP@CDirectSoundStream?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@JBGAKHBK@CDirectSoundStream?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@KGJDLLDP@CDirectSoundStream?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OPMLGNDG@CDirectSoundStream?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@JMIIELEI@CDirectSoundStream?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@EABPIKPF@CDirectSoundStream?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@BBDBCKJO@CDirectSoundStream?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@POADFFEE@CDirectSoundStream?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@GOHAEFKO@CDirectSoundStream?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KPNNMBKF@CDirectSoundStream?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@OCJKODME@CDirectSoundStream?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@IALPAKCJ@CDirectSoundStream?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@DPOABEBK@CDirectSoundStream?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@PHOMIHIF@CDirectSoundStream?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OOCJLODJ@CDirectSoundStream?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ENLHKJPN@CDirectSoundStream?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@DFIPDHEB@CDirectSoundStream?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@JNKFENGM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@JCBGLFIF@?$CBm_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@JLKNBNJM@?$CBm_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@BMLCBDGO@m_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ELEAODJN@dwNotifierIndex?5?$DM?5m_dwNotifierCo@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@MEDKFNKN@Unexpected?5notifier?5status?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BC@NHNIONPC@m_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@NBALOMF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BA@IANIBDAF@m_pGpDspManager?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@ONCKHILO@m_dwState?5?$CG?5MCPX_APUSTATE_GPIMAG@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@FGGNHBE@KeGetCurrentIrql?$CI?$CJ?5?$DO?$DN?5DISPATCH_L@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@IECLLDN@m_dwVoiceMapLock?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@FFOHIBNC@m_dwVoiceMapLock?5?$DO?$DN?51?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@MEFGGIAF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DB@IBOGJEGG@WAVE_FORMAT_PCM?5?$DN?$DN?5m_pSettings?9?$DO@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CP@IDFLDLJM@?$CB?$CIm_pSettings?9?$DOm_dwFlags?5?$CG?5DSBCA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0EJ@DJPLDOLH@m_pSettings?9?$DOm_pMixinBuffer?9?$DOm_p@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@MBLALCOP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@CELCEBLE@CAc97MediaObject?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@OKDMHHHN@CAc97MediaObject?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0M@FINCCBCF@?$CFlu?4?$CFlu?4?$CFlu?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_08BKKEJEEI@TESTDS?3?5?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0EA@DFAKIEEE@?$CFs?3?5?$CFld?5pool?0?5?$CFld?5physical?5?$CI?$CFld?5@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BC@GKIGDBEH@DirectSoundCreate?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_07INOAFJDJ@dsstdfx?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@HACLMDLM@DownloadEffectsImage?5?$CIdsstdfx?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@MDLCHEIF@CreateSoundBuffer?5?$CI2D?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@HLAOBDOA@CreateSoundBuffer?5?$CI3D?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@GAIHKNAH@CreateSoundStream?5?$CI2D?0?54?5packets@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@NJHMHGOP@CreateSoundStream?5?$CI3D?0?54?5packets@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@HDFHHNHJ@?$CBMemory?4dwPool?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@LHEPCHMO@?$CBMemory?4dwPhysical?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@MADFPFBK@?$CBMemory?4dwSlop?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@PFPIGEBA@?$CBMemory?4dwRecovered?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@LDNAEHIO@Ac97CreateMediaObject?5?$CIfirst?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@JHHCLGGF@Ac97CreateMediaObject?5?$CIsecond?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
DSOUND_RW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RW	ENDS
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _IsEqualGUID@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _==@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeGetCurrentIrql@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeIsExecutingDpc@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_AddRef@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_Release@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_BeginScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_EndScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DPalette_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _log10f@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _sqrtf@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@IDirectSound@@QAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?CreateSoundBuffer@IDirectSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?CreateSoundStream@IDirectSound@@QAGJPBU_DSSTREAMDESC@@PAPAUIDirectSoundStream@@PAUIUnknown@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@IDirectSoundBuffer@@QAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _wmemchr@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?InsertHeadListUninit@@YGXPAU_LIST_ENTRY@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??3@YAXPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CIrql@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Raise@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Lower@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Save@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Restore@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?FloatToLong@Math@DirectSound@@YGJM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?lsb@Math@DirectSound@@YIII@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?IsValidAlgorithm@CHrtfSource@DirectSound@@SGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ReleaseChannel@CAc97Device@DirectSound@@QAEXPAVCAc97Channel@2@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundEnterCriticalSection@@YGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundLeaveCriticalSection@@YGXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Initialize@CMcpxNotifier@DirectSound@@QAEXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Free@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Reset@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetScratchSpaceLinAddr@CMcpxDspScratchDma@DirectSound@@QAEPAXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ValidateResult@@YGJJ@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DPF_TEST@@YAXPBDZZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _TestMemoryUsage@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDEOEE@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDECCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDECCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDFDCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDFDCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EBEDDJDH@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EBEDDJDH@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDEOEE@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDECCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDFDCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EBEDDJDH@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?dwMajor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ?dwBuild@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDECCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EBEDDJDH@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDEOEE@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDFDCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ?dwMinor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V, DSOUND_RW
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
PUBLIC	_DSoundBuildNumberD
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
DSOUND_RD	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT
_DSoundBuildNumberD DW 05344H
	DW	0554fH
	DW	0444eH
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z	; GetCurrentMemoryUsage
PUBLIC	?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
PUBLIC	??_C@_0EA@DFAKIEEE@?$CFs?3?5?$CFld?5pool?0?5?$CFld?5physical?5?$CI?$CFld?5@ ; `string'
;	COMDAT ??_C@_0EA@DFAKIEEE@?$CFs?3?5?$CFld?5pool?0?5?$CFld?5physical?5?$CI?$CFld?5@
; File c:\xbox\private\windows\directx\dsound\test\testmem.cpp
DSOUND_RD	SEGMENT
??_C@_0EA@DFAKIEEE@?$CFs?3?5?$CFld?5pool?0?5?$CFld?5physical?5?$CI?$CFld?5@ DB '%'
	DB	's: %ld pool, %ld physical (%ld slop), %ld recovered, %ld tota'
	DB	'l', 00H					; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z
DSOUND	SEGMENT
_Diff$ = -32
_After$ = -16
_pszTest$ = 8
_pBefore$ = 12
?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z PROC NEAR ; DumpCurrentMemoryUsage, COMDAT

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 86   :     DSMEMUSAGE              After;
; 87   :     DSMEMUSAGE              Diff;
; 88   : 
; 89   :     GetCurrentMemoryUsage(&After);

  00006	8d 45 f0	 lea	 eax, DWORD PTR _After$[ebp]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z ; GetCurrentMemoryUsage

; 90   : 
; 91   :     Diff.dwPool = After.dwPool - pBefore->dwPool;

  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR _pBefore$[ebp]
  00012	8b 55 f0	 mov	 edx, DWORD PTR _After$[ebp]
  00015	2b 11		 sub	 edx, DWORD PTR [ecx]
  00017	89 55 e0	 mov	 DWORD PTR _Diff$[ebp], edx

; 92   :     Diff.dwPhysical = After.dwPhysical - pBefore->dwPhysical;

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _pBefore$[ebp]
  0001d	8b 4d f4	 mov	 ecx, DWORD PTR _After$[ebp+4]
  00020	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00023	89 4d e4	 mov	 DWORD PTR _Diff$[ebp+4], ecx

; 93   :     Diff.dwSlop = After.dwSlop - pBefore->dwSlop;

  00026	8b 55 0c	 mov	 edx, DWORD PTR _pBefore$[ebp]
  00029	8b 45 f8	 mov	 eax, DWORD PTR _After$[ebp+8]
  0002c	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  0002f	89 45 e8	 mov	 DWORD PTR _Diff$[ebp+8], eax

; 94   :     Diff.dwRecovered = After.dwRecovered - pBefore->dwRecovered;

  00032	8b 4d 0c	 mov	 ecx, DWORD PTR _pBefore$[ebp]
  00035	8b 55 fc	 mov	 edx, DWORD PTR _After$[ebp+12]
  00038	2b 51 0c	 sub	 edx, DWORD PTR [ecx+12]
  0003b	89 55 ec	 mov	 DWORD PTR _Diff$[ebp+12], edx

; 95   : 
; 96   :     DPF_TEST("%s: %ld pool, %ld physical (%ld slop), %ld recovered, %ld total", pszTest, Diff.dwPool, Diff.dwPhysical, Diff.dwSlop, Diff.dwRecovered, Diff.dwPool + Diff.dwPhysical + Diff.dwRecovered);

  0003e	8b 45 e0	 mov	 eax, DWORD PTR _Diff$[ebp]
  00041	03 45 e4	 add	 eax, DWORD PTR _Diff$[ebp+4]
  00044	03 45 ec	 add	 eax, DWORD PTR _Diff$[ebp+12]
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _Diff$[ebp+12]
  0004b	51		 push	 ecx
  0004c	8b 55 e8	 mov	 edx, DWORD PTR _Diff$[ebp+8]
  0004f	52		 push	 edx
  00050	8b 45 e4	 mov	 eax, DWORD PTR _Diff$[ebp+4]
  00053	50		 push	 eax
  00054	8b 4d e0	 mov	 ecx, DWORD PTR _Diff$[ebp]
  00057	51		 push	 ecx
  00058	8b 55 08	 mov	 edx, DWORD PTR _pszTest$[ebp]
  0005b	52		 push	 edx
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@DFAKIEEE@?$CFs?3?5?$CFld?5pool?0?5?$CFld?5physical?5?$CI?$CFld?5@
  00061	e8 00 00 00 00	 call	 ?DPF_TEST@@YAXPBDZZ	; DPF_TEST
  00066	83 c4 1c	 add	 esp, 28			; 0000001cH

; 97   : 
; 98   :     *pBefore = After;

  00069	8b 45 0c	 mov	 eax, DWORD PTR _pBefore$[ebp]
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _After$[ebp]
  0006f	89 08		 mov	 DWORD PTR [eax], ecx
  00071	8b 55 f4	 mov	 edx, DWORD PTR _After$[ebp+4]
  00074	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _After$[ebp+8]
  0007a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0007d	8b 55 fc	 mov	 edx, DWORD PTR _After$[ebp+12]
  00080	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 99   : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ENDP	; DumpCurrentMemoryUsage
DSOUND	ENDS
PUBLIC	??_C@_08BKKEJEEI@TESTDS?3?5?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
EXTRN	_vsprintf:NEAR
EXTRN	_OutputDebugStringA@4:NEAR
;	COMDAT ??_C@_08BKKEJEEI@TESTDS?3?5?$AA@
; File c:\xbox\private\windows\directx\dsound\test\testds.h
DSOUND_RD	SEGMENT
??_C@_08BKKEJEEI@TESTDS?3?5?$AA@ DB 'TESTDS: ', 00H	; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
DSOUND_RD	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?DPF_TEST@@YAXPBDZZ
DSOUND	SEGMENT
_va$ = -260
_szString$ = -256
_pszFormat$ = 8
?DPF_TEST@@YAXPBDZZ PROC NEAR				; DPF_TEST, COMDAT

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H

; 34   :     CHAR                    szString[0x100];
; 35   :     va_list                 va;
; 36   : 
; 37   :     va_start(va, pszFormat);

  00009	8d 45 0c	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  0000c	89 85 fc fe ff
	ff		 mov	 DWORD PTR _va$[ebp], eax

; 38   :     vsprintf(szString, pszFormat, va);

  00012	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _va$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR _pszFormat$[ebp]
  0001c	52		 push	 edx
  0001d	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szString$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _vsprintf
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH

; 39   :     va_end(va);

  0002c	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _va$[ebp], 0

; 40   : 
; 41   :     OutputDebugStringA("TESTDS: ");

  00036	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08BKKEJEEI@TESTDS?3?5?$AA@
  0003b	e8 00 00 00 00	 call	 _OutputDebugStringA@4

; 42   :     OutputDebugStringA(szString);

  00040	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szString$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 _OutputDebugStringA@4

; 43   :     OutputDebugStringA("\n");

  0004c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  00051	e8 00 00 00 00	 call	 _OutputDebugStringA@4

; 44   : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?DPF_TEST@@YAXPBDZZ ENDP				; DPF_TEST
DSOUND	ENDS
EXTRN	_g_dwDirectSoundPoolMemoryUsage:DWORD
EXTRN	_g_dwDirectSoundPhysicalMemoryUsage:DWORD
EXTRN	_g_dwDirectSoundPhysicalMemorySlop:DWORD
EXTRN	_g_dwDirectSoundPhysicalMemoryRecovered:DWORD
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\test\testmem.cpp
;	COMDAT ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z
DSOUND	SEGMENT
_pMemory$ = 8
?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z PROC NEAR	; GetCurrentMemoryUsage, COMDAT

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 52   :     pMemory->dwPool = g_dwDirectSoundPoolMemoryUsage;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pMemory$[ebp]
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_dwDirectSoundPoolMemoryUsage
  0000c	89 08		 mov	 DWORD PTR [eax], ecx

; 53   :     pMemory->dwPhysical = g_dwDirectSoundPhysicalMemoryUsage;

  0000e	8b 55 08	 mov	 edx, DWORD PTR _pMemory$[ebp]
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR _g_dwDirectSoundPhysicalMemoryUsage
  00016	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 54   :     pMemory->dwSlop = g_dwDirectSoundPhysicalMemorySlop;

  00019	8b 4d 08	 mov	 ecx, DWORD PTR _pMemory$[ebp]
  0001c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _g_dwDirectSoundPhysicalMemorySlop
  00022	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 55   :     pMemory->dwRecovered = g_dwDirectSoundPhysicalMemoryRecovered;

  00025	8b 45 08	 mov	 eax, DWORD PTR _pMemory$[ebp]
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _g_dwDirectSoundPhysicalMemoryRecovered
  0002e	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 56   : }

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z ENDP	; GetCurrentMemoryUsage
DSOUND	ENDS
PUBLIC	?ValidateResult@@YGJJ@Z				; ValidateResult
PUBLIC	_TestMemoryUsage@0
PUBLIC	??_C@_0BC@GKIGDBEH@DirectSoundCreate?$AA@	; `string'
PUBLIC	??_C@_07INOAFJDJ@dsstdfx?$AA@			; `string'
PUBLIC	??_C@_0BP@HACLMDLM@DownloadEffectsImage?5?$CIdsstdfx?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@MDLCHEIF@CreateSoundBuffer?5?$CI2D?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@HLAOBDOA@CreateSoundBuffer?5?$CI3D?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0CC@GAIHKNAH@CreateSoundStream?5?$CI2D?0?54?5packets@ ; `string'
PUBLIC	??_C@_0CC@NJHMHGOP@CreateSoundStream?5?$CI3D?0?54?5packets@ ; `string'
PUBLIC	??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0P@HDFHHNHJ@?$CBMemory?4dwPool?$AA@	; `string'
PUBLIC	??_C@_0BD@LHEPCHMO@?$CBMemory?4dwPhysical?$AA@	; `string'
PUBLIC	??_C@_0P@MADFPFBK@?$CBMemory?4dwSlop?$AA@	; `string'
PUBLIC	??_C@_0BE@PFPIGEBA@?$CBMemory?4dwRecovered?$AA@	; `string'
PUBLIC	??_C@_0BO@LDNAEHIO@Ac97CreateMediaObject?5?$CIfirst?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BP@JHHCLGGF@Ac97CreateMediaObject?5?$CIsecond?$CJ?$AA@ ; `string'
PUBLIC	?Release@IDirectSound@@QAGKXZ			; IDirectSound::Release
PUBLIC	?CreateSoundBuffer@IDirectSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z ; IDirectSound::CreateSoundBuffer
PUBLIC	?CreateSoundStream@IDirectSound@@QAGJPBU_DSSTREAMDESC@@PAPAUIDirectSoundStream@@PAUIUnknown@@@Z ; IDirectSound::CreateSoundStream
PUBLIC	?Release@IDirectSoundBuffer@@QAGKXZ		; IDirectSoundBuffer::Release
EXTRN	_DirectSoundCreate@12:NEAR
EXTRN	_DirectSoundUseLightHRTF@0:NEAR
EXTRN	_DirectSoundDumpMemoryUsage@4:NEAR
EXTRN	?LoadEffectsImage@@YGJPBDK@Z:NEAR		; LoadEffectsImage
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
EXTRN	_Ac97CreateMediaObject@16:NEAR
EXTRN	_memset:NEAR
;	COMDAT ??_C@_0BC@GKIGDBEH@DirectSoundCreate?$AA@
DSOUND_RD	SEGMENT
??_C@_0BC@GKIGDBEH@DirectSoundCreate?$AA@ DB 'DirectSoundCreate', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_07INOAFJDJ@dsstdfx?$AA@
DSOUND_RD	SEGMENT
??_C@_07INOAFJDJ@dsstdfx?$AA@ DB 'dsstdfx', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@HACLMDLM@DownloadEffectsImage?5?$CIdsstdfx?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BP@HACLMDLM@DownloadEffectsImage?5?$CIdsstdfx?$CJ?$AA@ DB 'Downloa'
	DB	'dEffectsImage (dsstdfx)', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@MDLCHEIF@CreateSoundBuffer?5?$CI2D?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BH@MDLCHEIF@CreateSoundBuffer?5?$CI2D?$CJ?$AA@ DB 'CreateSoundBuff'
	DB	'er (2D)', 00H				; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@HLAOBDOA@CreateSoundBuffer?5?$CI3D?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BH@HLAOBDOA@CreateSoundBuffer?5?$CI3D?$CJ?$AA@ DB 'CreateSoundBuff'
	DB	'er (3D)', 00H				; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@GAIHKNAH@CreateSoundStream?5?$CI2D?0?54?5packets@
DSOUND_RD	SEGMENT
??_C@_0CC@GAIHKNAH@CreateSoundStream?5?$CI2D?0?54?5packets@ DB 'CreateSou'
	DB	'ndStream (2D, 4 packets)', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@NJHMHGOP@CreateSoundStream?5?$CI3D?0?54?5packets@
DSOUND_RD	SEGMENT
??_C@_0CC@NJHMHGOP@CreateSoundStream?5?$CI3D?0?54?5packets@ DB 'CreateSou'
	DB	'ndStream (3D, 4 packets)', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT
??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\test\testmem.cpp', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@HDFHHNHJ@?$CBMemory?4dwPool?$AA@
DSOUND_RD	SEGMENT
??_C@_0P@HDFHHNHJ@?$CBMemory?4dwPool?$AA@ DB '!Memory.dwPool', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@LHEPCHMO@?$CBMemory?4dwPhysical?$AA@
DSOUND_RD	SEGMENT
??_C@_0BD@LHEPCHMO@?$CBMemory?4dwPhysical?$AA@ DB '!Memory.dwPhysical', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@MADFPFBK@?$CBMemory?4dwSlop?$AA@
DSOUND_RD	SEGMENT
??_C@_0P@MADFPFBK@?$CBMemory?4dwSlop?$AA@ DB '!Memory.dwSlop', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@PFPIGEBA@?$CBMemory?4dwRecovered?$AA@
DSOUND_RD	SEGMENT
??_C@_0BE@PFPIGEBA@?$CBMemory?4dwRecovered?$AA@ DB '!Memory.dwRecovered', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@LDNAEHIO@Ac97CreateMediaObject?5?$CIfirst?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BO@LDNAEHIO@Ac97CreateMediaObject?5?$CIfirst?$CJ?$AA@ DB 'Ac97Crea'
	DB	'teMediaObject (first)', 00H			; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@JHHCLGGF@Ac97CreateMediaObject?5?$CIsecond?$CJ?$AA@
DSOUND_RD	SEGMENT
??_C@_0BP@JHHCLGGF@Ac97CreateMediaObject?5?$CIsecond?$CJ?$AA@ DB 'Ac97Cre'
	DB	'ateMediaObject (second)', 00H		; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT _TestMemoryUsage@0
DSOUND	SEGMENT
_dssd$ = -108
_hr$ = -84
_pAnalogAc97$ = -80
_pDigitalAc97$ = -76
_dsbd$ = -72
_pDirectSound$ = -48
_Memory$ = -44
_wfxFormat$ = -28
_pStream$ = -8
_pBuffer$ = -4
_TestMemoryUsage@0 PROC NEAR				; COMDAT

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH

; 126  :     WAVEFORMATEX            wfxFormat       = INIT_PCM_WAVEFORMAT(1, 48000, 16);

  00006	66 c7 45 e4 01
	00		 mov	 WORD PTR _wfxFormat$[ebp], 1
  0000c	66 c7 45 e6 01
	00		 mov	 WORD PTR _wfxFormat$[ebp+2], 1
  00012	c7 45 e8 80 bb
	00 00		 mov	 DWORD PTR _wfxFormat$[ebp+4], 48000 ; 0000bb80H
  00019	c7 45 ec 00 77
	01 00		 mov	 DWORD PTR _wfxFormat$[ebp+8], 96000 ; 00017700H
  00020	66 c7 45 f0 02
	00		 mov	 WORD PTR _wfxFormat$[ebp+12], 2
  00026	66 c7 45 f2 10
	00		 mov	 WORD PTR _wfxFormat$[ebp+14], 16 ; 00000010H
  0002c	66 c7 45 f4 00
	00		 mov	 WORD PTR _wfxFormat$[ebp+16], 0

; 127  :     LPDIRECTSOUND           pDirectSound    = NULL;

  00032	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pDirectSound$[ebp], 0

; 128  :     LPDIRECTSOUNDBUFFER     pBuffer         = NULL;

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pBuffer$[ebp], 0

; 129  :     LPDIRECTSOUNDSTREAM     pStream         = NULL;

  00040	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pStream$[ebp], 0

; 130  :     LPAC97MEDIAOBJECT       pAnalogAc97     = NULL;

  00047	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _pAnalogAc97$[ebp], 0

; 131  :     LPAC97MEDIAOBJECT       pDigitalAc97    = NULL;

  0004e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _pDigitalAc97$[ebp], 0

; 132  :     DSMEMUSAGE              Memory;
; 133  :     DSBUFFERDESC            dsbd;
; 134  :     DSSTREAMDESC            dssd;
; 135  :     HRESULT                 hr;
; 136  : 
; 137  :     DirectSoundUseLightHRTF();

  00055	e8 00 00 00 00	 call	 _DirectSoundUseLightHRTF@0

; 138  : 
; 139  :     GetCurrentMemoryUsage(&Memory);

  0005a	8d 45 d4	 lea	 eax, DWORD PTR _Memory$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z ; GetCurrentMemoryUsage

; 140  : 
; 141  :     hr = ValidateResult(DirectSoundCreate(NULL, &pDirectSound, NULL));

  00063	6a 00		 push	 0
  00065	8d 4d d0	 lea	 ecx, DWORD PTR _pDirectSound$[ebp]
  00068	51		 push	 ecx
  00069	6a 00		 push	 0
  0006b	e8 00 00 00 00	 call	 _DirectSoundCreate@12
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00076	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax

; 142  : 
; 143  :     if(SUCCEEDED(hr))

  00079	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0007d	7c 0e		 jl	 SHORT $L36134

; 144  :     {
; 145  :         DumpCurrentMemoryUsage("DirectSoundCreate", &Memory);

  0007f	8d 55 d4	 lea	 edx, DWORD PTR _Memory$[ebp]
  00082	52		 push	 edx
  00083	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@GKIGDBEH@DirectSoundCreate?$AA@
  00088	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36134:

; 146  :     }
; 147  : 
; 148  :     if(SUCCEEDED(hr))

  0008d	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00091	7c 15		 jl	 SHORT $L36137

; 149  :     {
; 150  :         hr = ValidateResult(LoadEffectsImage("dsstdfx", XAUDIO_DOWNLOADFX_XBESECTION));

  00093	6a 01		 push	 1
  00095	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07INOAFJDJ@dsstdfx?$AA@
  0009a	e8 00 00 00 00	 call	 ?LoadEffectsImage@@YGJPBDK@Z ; LoadEffectsImage
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  000a5	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
$L36137:

; 151  :     }
; 152  : 
; 153  :     if(SUCCEEDED(hr))

  000a8	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ac	7c 0e		 jl	 SHORT $L36140

; 154  :     {
; 155  :         DumpCurrentMemoryUsage("DownloadEffectsImage (dsstdfx)", &Memory);

  000ae	8d 45 d4	 lea	 eax, DWORD PTR _Memory$[ebp]
  000b1	50		 push	 eax
  000b2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@HACLMDLM@DownloadEffectsImage?5?$CIdsstdfx?$CJ?$AA@
  000b7	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36140:

; 156  :     }
; 157  : 
; 158  :     if(SUCCEEDED(hr))

  000bc	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c0	7c 39		 jl	 SHORT $L36143

; 159  :     {
; 160  :         ZeroMemory(&dsbd, sizeof(dsbd));

  000c2	6a 18		 push	 24			; 00000018H
  000c4	6a 00		 push	 0
  000c6	8d 4d b8	 lea	 ecx, DWORD PTR _dsbd$[ebp]
  000c9	51		 push	 ecx
  000ca	e8 00 00 00 00	 call	 _memset
  000cf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 
; 162  :         dsbd.dwSize = sizeof(dsbd);

  000d2	c7 45 b8 18 00
	00 00		 mov	 DWORD PTR _dsbd$[ebp], 24 ; 00000018H

; 163  :         dsbd.lpwfxFormat = &wfxFormat;

  000d9	8d 55 e4	 lea	 edx, DWORD PTR _wfxFormat$[ebp]
  000dc	89 55 c4	 mov	 DWORD PTR _dsbd$[ebp+12], edx

; 164  : 
; 165  :         hr = ValidateResult(pDirectSound->CreateSoundBuffer(&dsbd, &pBuffer, NULL));

  000df	6a 00		 push	 0
  000e1	8d 45 fc	 lea	 eax, DWORD PTR _pBuffer$[ebp]
  000e4	50		 push	 eax
  000e5	8d 4d b8	 lea	 ecx, DWORD PTR _dsbd$[ebp]
  000e8	51		 push	 ecx
  000e9	8b 55 d0	 mov	 edx, DWORD PTR _pDirectSound$[ebp]
  000ec	52		 push	 edx
  000ed	e8 00 00 00 00	 call	 ?CreateSoundBuffer@IDirectSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z ; IDirectSound::CreateSoundBuffer
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  000f8	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
$L36143:

; 166  :     }
; 167  : 
; 168  :     if(SUCCEEDED(hr))

  000fb	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ff	7c 0e		 jl	 SHORT $L36145

; 169  :     {
; 170  :         DumpCurrentMemoryUsage("CreateSoundBuffer (2D)", &Memory);

  00101	8d 45 d4	 lea	 eax, DWORD PTR _Memory$[ebp]
  00104	50		 push	 eax
  00105	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@MDLCHEIF@CreateSoundBuffer?5?$CI2D?$CJ?$AA@
  0010a	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36145:

; 171  :     }
; 172  : 
; 173  :     RELEASE(pBuffer);

  0010f	83 7d fc 00	 cmp	 DWORD PTR _pBuffer$[ebp], 0
  00113	74 10		 je	 SHORT $L36147
  00115	8b 4d fc	 mov	 ecx, DWORD PTR _pBuffer$[ebp]
  00118	51		 push	 ecx
  00119	e8 00 00 00 00	 call	 ?Release@IDirectSoundBuffer@@QAGKXZ ; IDirectSoundBuffer::Release
  0011e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pBuffer$[ebp], 0
$L36147:

; 174  : 
; 175  :     GetCurrentMemoryUsage(&Memory);

  00125	8d 55 d4	 lea	 edx, DWORD PTR _Memory$[ebp]
  00128	52		 push	 edx
  00129	e8 00 00 00 00	 call	 ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z ; GetCurrentMemoryUsage

; 176  : 
; 177  :     if(SUCCEEDED(hr))

  0012e	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00132	7c 25		 jl	 SHORT $L36149

; 178  :     {
; 179  :         dsbd.dwFlags |= DSBCAPS_CTRL3D;

  00134	8b 45 bc	 mov	 eax, DWORD PTR _dsbd$[ebp+4]
  00137	83 c8 10	 or	 eax, 16			; 00000010H
  0013a	89 45 bc	 mov	 DWORD PTR _dsbd$[ebp+4], eax

; 180  :         
; 181  :         hr = ValidateResult(pDirectSound->CreateSoundBuffer(&dsbd, &pBuffer, NULL));

  0013d	6a 00		 push	 0
  0013f	8d 4d fc	 lea	 ecx, DWORD PTR _pBuffer$[ebp]
  00142	51		 push	 ecx
  00143	8d 55 b8	 lea	 edx, DWORD PTR _dsbd$[ebp]
  00146	52		 push	 edx
  00147	8b 45 d0	 mov	 eax, DWORD PTR _pDirectSound$[ebp]
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?CreateSoundBuffer@IDirectSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z ; IDirectSound::CreateSoundBuffer
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00156	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
$L36149:

; 182  :     }
; 183  : 
; 184  :     if(SUCCEEDED(hr))

  00159	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0015d	7c 0e		 jl	 SHORT $L36151

; 185  :     {
; 186  :         DumpCurrentMemoryUsage("CreateSoundBuffer (3D)", &Memory);

  0015f	8d 4d d4	 lea	 ecx, DWORD PTR _Memory$[ebp]
  00162	51		 push	 ecx
  00163	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@HLAOBDOA@CreateSoundBuffer?5?$CI3D?$CJ?$AA@
  00168	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36151:

; 187  :     }
; 188  :         
; 189  :     RELEASE(pBuffer);

  0016d	83 7d fc 00	 cmp	 DWORD PTR _pBuffer$[ebp], 0
  00171	74 10		 je	 SHORT $L36153
  00173	8b 55 fc	 mov	 edx, DWORD PTR _pBuffer$[ebp]
  00176	52		 push	 edx
  00177	e8 00 00 00 00	 call	 ?Release@IDirectSoundBuffer@@QAGKXZ ; IDirectSoundBuffer::Release
  0017c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pBuffer$[ebp], 0
$L36153:

; 190  : 
; 191  :     GetCurrentMemoryUsage(&Memory);

  00183	8d 45 d4	 lea	 eax, DWORD PTR _Memory$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z ; GetCurrentMemoryUsage

; 192  : 
; 193  :     if(SUCCEEDED(hr))

  0018c	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00190	7c 39		 jl	 SHORT $L36155

; 194  :     {
; 195  :         ZeroMemory(&dssd, sizeof(dssd));

  00192	6a 18		 push	 24			; 00000018H
  00194	6a 00		 push	 0
  00196	8d 4d 94	 lea	 ecx, DWORD PTR _dssd$[ebp]
  00199	51		 push	 ecx
  0019a	e8 00 00 00 00	 call	 _memset
  0019f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 196  : 
; 197  :         dssd.lpwfxFormat = &wfxFormat;

  001a2	8d 55 e4	 lea	 edx, DWORD PTR _wfxFormat$[ebp]
  001a5	89 55 9c	 mov	 DWORD PTR _dssd$[ebp+8], edx

; 198  :         dssd.dwMaxAttachedPackets = 4;

  001a8	c7 45 98 04 00
	00 00		 mov	 DWORD PTR _dssd$[ebp+4], 4

; 199  : 
; 200  :         hr = ValidateResult(pDirectSound->CreateSoundStream(&dssd, &pStream, NULL));

  001af	6a 00		 push	 0
  001b1	8d 45 f8	 lea	 eax, DWORD PTR _pStream$[ebp]
  001b4	50		 push	 eax
  001b5	8d 4d 94	 lea	 ecx, DWORD PTR _dssd$[ebp]
  001b8	51		 push	 ecx
  001b9	8b 55 d0	 mov	 edx, DWORD PTR _pDirectSound$[ebp]
  001bc	52		 push	 edx
  001bd	e8 00 00 00 00	 call	 ?CreateSoundStream@IDirectSound@@QAGJPBU_DSSTREAMDESC@@PAPAUIDirectSoundStream@@PAUIUnknown@@@Z ; IDirectSound::CreateSoundStream
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  001c8	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
$L36155:

; 201  :     }
; 202  : 
; 203  :     if(SUCCEEDED(hr))

  001cb	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001cf	7c 0e		 jl	 SHORT $L36157

; 204  :     {
; 205  :         DumpCurrentMemoryUsage("CreateSoundStream (2D, 4 packets)", &Memory);

  001d1	8d 45 d4	 lea	 eax, DWORD PTR _Memory$[ebp]
  001d4	50		 push	 eax
  001d5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@GAIHKNAH@CreateSoundStream?5?$CI2D?0?54?5packets@
  001da	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36157:

; 206  :     }
; 207  : 
; 208  :     RELEASE(pStream);

  001df	83 7d f8 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  001e3	74 13		 je	 SHORT $L36159
  001e5	8b 4d f8	 mov	 ecx, DWORD PTR _pStream$[ebp]
  001e8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001ea	8b 45 f8	 mov	 eax, DWORD PTR _pStream$[ebp]
  001ed	50		 push	 eax
  001ee	ff 52 04	 call	 DWORD PTR [edx+4]
  001f1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pStream$[ebp], 0
$L36159:

; 209  : 
; 210  :     GetCurrentMemoryUsage(&Memory);

  001f8	8d 4d d4	 lea	 ecx, DWORD PTR _Memory$[ebp]
  001fb	51		 push	 ecx
  001fc	e8 00 00 00 00	 call	 ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z ; GetCurrentMemoryUsage

; 211  : 
; 212  :     if(SUCCEEDED(hr))

  00201	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00205	7c 25		 jl	 SHORT $L36161

; 213  :     {
; 214  :         dssd.dwFlags |= DSBCAPS_CTRL3D;

  00207	8b 55 94	 mov	 edx, DWORD PTR _dssd$[ebp]
  0020a	83 ca 10	 or	 edx, 16			; 00000010H
  0020d	89 55 94	 mov	 DWORD PTR _dssd$[ebp], edx

; 215  : 
; 216  :         hr = ValidateResult(pDirectSound->CreateSoundStream(&dssd, &pStream, NULL));

  00210	6a 00		 push	 0
  00212	8d 45 f8	 lea	 eax, DWORD PTR _pStream$[ebp]
  00215	50		 push	 eax
  00216	8d 4d 94	 lea	 ecx, DWORD PTR _dssd$[ebp]
  00219	51		 push	 ecx
  0021a	8b 55 d0	 mov	 edx, DWORD PTR _pDirectSound$[ebp]
  0021d	52		 push	 edx
  0021e	e8 00 00 00 00	 call	 ?CreateSoundStream@IDirectSound@@QAGJPBU_DSSTREAMDESC@@PAPAUIDirectSoundStream@@PAUIUnknown@@@Z ; IDirectSound::CreateSoundStream
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00229	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
$L36161:

; 217  :     }
; 218  : 
; 219  :     if(SUCCEEDED(hr))

  0022c	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00230	7c 0e		 jl	 SHORT $L36163

; 220  :     {
; 221  :         DumpCurrentMemoryUsage("CreateSoundStream (3D, 4 packets)", &Memory);

  00232	8d 45 d4	 lea	 eax, DWORD PTR _Memory$[ebp]
  00235	50		 push	 eax
  00236	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@NJHMHGOP@CreateSoundStream?5?$CI3D?0?54?5packets@
  0023b	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36163:

; 222  :     }
; 223  : 
; 224  :     RELEASE(pStream);

  00240	83 7d f8 00	 cmp	 DWORD PTR _pStream$[ebp], 0
  00244	74 13		 je	 SHORT $L36165
  00246	8b 4d f8	 mov	 ecx, DWORD PTR _pStream$[ebp]
  00249	8b 11		 mov	 edx, DWORD PTR [ecx]
  0024b	8b 45 f8	 mov	 eax, DWORD PTR _pStream$[ebp]
  0024e	50		 push	 eax
  0024f	ff 52 04	 call	 DWORD PTR [edx+4]
  00252	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pStream$[ebp], 0
$L36165:

; 225  :     RELEASE(pDirectSound);

  00259	83 7d d0 00	 cmp	 DWORD PTR _pDirectSound$[ebp], 0
  0025d	74 10		 je	 SHORT $L36166
  0025f	8b 4d d0	 mov	 ecx, DWORD PTR _pDirectSound$[ebp]
  00262	51		 push	 ecx
  00263	e8 00 00 00 00	 call	 ?Release@IDirectSound@@QAGKXZ ; IDirectSound::Release
  00268	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pDirectSound$[ebp], 0
$L36166:

; 226  : 
; 227  :     GetCurrentMemoryUsage(&Memory);

  0026f	8d 55 d4	 lea	 edx, DWORD PTR _Memory$[ebp]
  00272	52		 push	 edx
  00273	e8 00 00 00 00	 call	 ?GetCurrentMemoryUsage@@YGXPAUDSMEMUSAGE@@@Z ; GetCurrentMemoryUsage

; 228  : 
; 229  :     ASSERT(!Memory.dwPool);

  00278	68 e5 00 00 00	 push	 229			; 000000e5H
  0027d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@
  00282	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@HDFHHNHJ@?$CBMemory?4dwPool?$AA@
  00287	33 c0		 xor	 eax, eax
  00289	83 7d d4 00	 cmp	 DWORD PTR _Memory$[ebp], 0
  0028d	0f 95 c0	 setne	 al
  00290	50		 push	 eax
  00291	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00296	83 c4 10	 add	 esp, 16			; 00000010H

; 230  :     ASSERT(!Memory.dwPhysical);

  00299	68 e6 00 00 00	 push	 230			; 000000e6H
  0029e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@
  002a3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@LHEPCHMO@?$CBMemory?4dwPhysical?$AA@
  002a8	33 c9		 xor	 ecx, ecx
  002aa	83 7d d8 00	 cmp	 DWORD PTR _Memory$[ebp+4], 0
  002ae	0f 95 c1	 setne	 cl
  002b1	51		 push	 ecx
  002b2	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  002b7	83 c4 10	 add	 esp, 16			; 00000010H

; 231  :     ASSERT(!Memory.dwSlop);

  002ba	68 e7 00 00 00	 push	 231			; 000000e7H
  002bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@
  002c4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@MADFPFBK@?$CBMemory?4dwSlop?$AA@
  002c9	33 d2		 xor	 edx, edx
  002cb	83 7d dc 00	 cmp	 DWORD PTR _Memory$[ebp+8], 0
  002cf	0f 95 c2	 setne	 dl
  002d2	52		 push	 edx
  002d3	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  002d8	83 c4 10	 add	 esp, 16			; 00000010H

; 232  :     ASSERT(!Memory.dwRecovered);

  002db	68 e8 00 00 00	 push	 232			; 000000e8H
  002e0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@KLKOIFBB@c?3?2xbox?2private?2windows?2directx?2@
  002e5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@PFPIGEBA@?$CBMemory?4dwRecovered?$AA@
  002ea	33 c0		 xor	 eax, eax
  002ec	83 7d e0 00	 cmp	 DWORD PTR _Memory$[ebp+12], 0
  002f0	0f 95 c0	 setne	 al
  002f3	50		 push	 eax
  002f4	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  002f9	83 c4 10	 add	 esp, 16			; 00000010H

; 233  : 
; 234  :     if(SUCCEEDED(hr))

  002fc	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00300	7c 18		 jl	 SHORT $L36173

; 235  :     {
; 236  :         hr = ValidateResult(Ac97CreateMediaObject(DSAC97_CHANNEL_ANALOG, NULL, NULL, &pAnalogAc97));

  00302	8d 4d b0	 lea	 ecx, DWORD PTR _pAnalogAc97$[ebp]
  00305	51		 push	 ecx
  00306	6a 00		 push	 0
  00308	6a 00		 push	 0
  0030a	6a 00		 push	 0
  0030c	e8 00 00 00 00	 call	 _Ac97CreateMediaObject@16
  00311	50		 push	 eax
  00312	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00317	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
$L36173:

; 237  :     }
; 238  : 
; 239  :     if(SUCCEEDED(hr))

  0031a	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0031e	7c 0e		 jl	 SHORT $L36175

; 240  :     {
; 241  :         DumpCurrentMemoryUsage("Ac97CreateMediaObject (first)", &Memory);

  00320	8d 55 d4	 lea	 edx, DWORD PTR _Memory$[ebp]
  00323	52		 push	 edx
  00324	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@LDNAEHIO@Ac97CreateMediaObject?5?$CIfirst?$CJ?$AA@
  00329	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36175:

; 242  :     }
; 243  :         
; 244  :     if(SUCCEEDED(hr))

  0032e	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00332	7c 18		 jl	 SHORT $L36178

; 245  :     {
; 246  :         hr = ValidateResult(Ac97CreateMediaObject(DSAC97_CHANNEL_DIGITAL, NULL, NULL, &pDigitalAc97));

  00334	8d 45 b4	 lea	 eax, DWORD PTR _pDigitalAc97$[ebp]
  00337	50		 push	 eax
  00338	6a 00		 push	 0
  0033a	6a 00		 push	 0
  0033c	6a 01		 push	 1
  0033e	e8 00 00 00 00	 call	 _Ac97CreateMediaObject@16
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00349	89 45 ac	 mov	 DWORD PTR _hr$[ebp], eax
$L36178:

; 247  :     }
; 248  : 
; 249  :     if(SUCCEEDED(hr))

  0034c	83 7d ac 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00350	7c 0e		 jl	 SHORT $L36180

; 250  :     {
; 251  :         DumpCurrentMemoryUsage("Ac97CreateMediaObject (second)", &Memory);

  00352	8d 4d d4	 lea	 ecx, DWORD PTR _Memory$[ebp]
  00355	51		 push	 ecx
  00356	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@JHHCLGGF@Ac97CreateMediaObject?5?$CIsecond?$CJ?$AA@
  0035b	e8 00 00 00 00	 call	 ?DumpCurrentMemoryUsage@@YGXPBDPAUDSMEMUSAGE@@@Z ; DumpCurrentMemoryUsage
$L36180:

; 252  :     }
; 253  : 
; 254  :     RELEASE(pAnalogAc97);

  00360	83 7d b0 00	 cmp	 DWORD PTR _pAnalogAc97$[ebp], 0
  00364	74 13		 je	 SHORT $L36182
  00366	8b 55 b0	 mov	 edx, DWORD PTR _pAnalogAc97$[ebp]
  00369	8b 02		 mov	 eax, DWORD PTR [edx]
  0036b	8b 4d b0	 mov	 ecx, DWORD PTR _pAnalogAc97$[ebp]
  0036e	51		 push	 ecx
  0036f	ff 50 04	 call	 DWORD PTR [eax+4]
  00372	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _pAnalogAc97$[ebp], 0
$L36182:

; 255  :     RELEASE(pDigitalAc97);

  00379	83 7d b4 00	 cmp	 DWORD PTR _pDigitalAc97$[ebp], 0
  0037d	74 13		 je	 SHORT $L36183
  0037f	8b 55 b4	 mov	 edx, DWORD PTR _pDigitalAc97$[ebp]
  00382	8b 02		 mov	 eax, DWORD PTR [edx]
  00384	8b 4d b4	 mov	 ecx, DWORD PTR _pDigitalAc97$[ebp]
  00387	51		 push	 ecx
  00388	ff 50 04	 call	 DWORD PTR [eax+4]
  0038b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _pDigitalAc97$[ebp], 0
$L36183:

; 256  :         
; 257  :     DirectSoundDumpMemoryUsage(TRUE);

  00392	6a 01		 push	 1
  00394	e8 00 00 00 00	 call	 _DirectSoundDumpMemoryUsage@4

; 258  : 
; 259  :     return hr;

  00399	8b 45 ac	 mov	 eax, DWORD PTR _hr$[ebp]

; 260  : }

  0039c	8b e5		 mov	 esp, ebp
  0039e	5d		 pop	 ebp
  0039f	c3		 ret	 0
_TestMemoryUsage@0 ENDP
DSOUND	ENDS
EXTRN	_IDirectSound_Release@4:NEAR
; Function compile flags: /Odt
; File c:\xbox\private\inc\dsoundp.h
;	COMDAT ?Release@IDirectSound@@QAGKXZ
DSOUND	SEGMENT
_this$ = 8
?Release@IDirectSound@@QAGKXZ PROC NEAR			; IDirectSound::Release, COMDAT

; 1711 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1712 :         return IDirectSound_Release(this);

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 _IDirectSound_Release@4

; 1713 :     }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?Release@IDirectSound@@QAGKXZ ENDP			; IDirectSound::Release
DSOUND	ENDS
EXTRN	_IDirectSound_CreateSoundBuffer@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?CreateSoundBuffer@IDirectSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z
DSOUND	SEGMENT
_this$ = 8
_pdsbd$ = 12
_ppBuffer$ = 16
_pUnkOuter$ = 20
?CreateSoundBuffer@IDirectSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z PROC NEAR ; IDirectSound::CreateSoundBuffer, COMDAT

; 1721 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1722 :         return IDirectSound_CreateSoundBuffer(this, pdsbd, ppBuffer, pUnkOuter);

  00003	8b 45 14	 mov	 eax, DWORD PTR _pUnkOuter$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _ppBuffer$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _pdsbd$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _IDirectSound_CreateSoundBuffer@16

; 1723 :     }

  00018	5d		 pop	 ebp
  00019	c2 10 00	 ret	 16			; 00000010H
?CreateSoundBuffer@IDirectSound@@QAGJPBU_DSBUFFERDESC@@PAPAUIDirectSoundBuffer@@PAUIUnknown@@@Z ENDP ; IDirectSound::CreateSoundBuffer
DSOUND	ENDS
EXTRN	_IDirectSound_CreateSoundStream@16:NEAR
; Function compile flags: /Odt
;	COMDAT ?CreateSoundStream@IDirectSound@@QAGJPBU_DSSTREAMDESC@@PAPAUIDirectSoundStream@@PAUIUnknown@@@Z
DSOUND	SEGMENT
_this$ = 8
_pdssd$ = 12
_ppStream$ = 16
_pUnkOuter$ = 20
?CreateSoundStream@IDirectSound@@QAGJPBU_DSSTREAMDESC@@PAPAUIDirectSoundStream@@PAUIUnknown@@@Z PROC NEAR ; IDirectSound::CreateSoundStream, COMDAT

; 1726 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1727 :         return IDirectSound_CreateSoundStream(this, pdssd, ppStream, pUnkOuter);

  00003	8b 45 14	 mov	 eax, DWORD PTR _pUnkOuter$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _ppStream$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR _pdssd$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _IDirectSound_CreateSoundStream@16

; 1728 :     }

  00018	5d		 pop	 ebp
  00019	c2 10 00	 ret	 16			; 00000010H
?CreateSoundStream@IDirectSound@@QAGJPBU_DSSTREAMDESC@@PAPAUIDirectSoundStream@@PAUIUnknown@@@Z ENDP ; IDirectSound::CreateSoundStream
DSOUND	ENDS
EXTRN	_IDirectSoundBuffer_Release@4:NEAR
; Function compile flags: /Odt
;	COMDAT ?Release@IDirectSoundBuffer@@QAGKXZ
DSOUND	SEGMENT
_this$ = 8
?Release@IDirectSoundBuffer@@QAGKXZ PROC NEAR		; IDirectSoundBuffer::Release, COMDAT

; 1932 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1933 :         return IDirectSoundBuffer_Release(this);

  00003	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 _IDirectSoundBuffer_Release@4

; 1934 :     }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?Release@IDirectSoundBuffer@@QAGKXZ ENDP		; IDirectSoundBuffer::Release
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\test\util.h
DSOUND	ENDS
;	COMDAT ?ValidateResult@@YGJJ@Z
DSOUND	SEGMENT
_hr$ = 8
?ValidateResult@@YGJJ@Z PROC NEAR			; ValidateResult, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   :     if(FAILED(hr))

  00003	83 7d 08 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00007	7d 01		 jge	 SHORT $L35860

; 33   :     {
; 34   :         __asm int 3;

  00009	cc		 int	 3
$L35860:

; 35   :     }
; 36   : 
; 37   :     return hr;

  0000a	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]

; 38   : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?ValidateResult@@YGJJ@Z ENDP				; ValidateResult
DSOUND	ENDS
END
