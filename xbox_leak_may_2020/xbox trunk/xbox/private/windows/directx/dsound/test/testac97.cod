; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\testac97.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
DSOUND_URW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_URW	ENDS
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@MLBFKIOK@NULL?5list?5entry?5pointer?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@FLABCILB@List?5entry?5contains?5NULL?5pointer@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@FMEINEKN@List?5entry?5partially?5points?5to?5i@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BH@JIBNMDFM@List?5entry?5not?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@MCAPMFFH@List?5entry?5in?5list?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@HLNMLIHP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_09GPGAJHPD@?$CIunknown?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06GGPOMPNM@?$CInone?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@LDJKBAOD@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@GGBLDHEI@?$CBm_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BE@DAEOBIBM@m_dwRefCount?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@OILPJBKD@m_dwRefCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@IMPCONDJ@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0P@PGACJKHL@?$CB?$CIx?5?$CG?5?$CIx?5?9?51?$CJ?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@KHLJBLPM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@MLMBNMPN@nLength?5?$DO?5sizeof?$CI?$CKpRunMarker?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DF@GEBIDJGO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@DHEFJAIP@IsValidAlgorithm?$CI?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@FFGMCHMA@m_pfnGetFilterPair?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_06DHEFHAJP@TESTDS?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DG@DIPNMLMO@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0FF@CEBOEHDG@DirectSound?5is?5in?5the?5final?5stag@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BF@JCCIJAPA@CDirectSound?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IDOOAHKJ@CDirectSoundBuffer?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IJJNEHOC@CDirectSoundBuffer?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@PKKBNDKL@CDirectSoundBuffer?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@PPDEBFDO@CDirectSoundBuffer?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@INMBMDIC@CDirectSoundBuffer?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@FNHOKAIC@CDirectSoundBuffer?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BGJIIJJH@CDirectSoundBuffer?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@EOPIEBA@CDirectSoundBuffer?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@IPGKAOBK@CDirectSoundBuffer?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@EJJCKIBH@CDirectSoundBuffer?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@IJCIHAHO@CDirectSoundBuffer?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@ENFJENBA@CDirectSoundBuffer?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@GMNMDMFI@CDirectSoundBuffer?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CFIEOKFB@CDirectSoundBuffer?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@GKILFNCM@CDirectSoundBuffer?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@BJHPKLFJ@CDirectSoundBuffer?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@FPOKJAEF@CDirectSoundBuffer?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@LECKPDBD@CDirectSoundBuffer?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@CEFJODPJ@CDirectSoundBuffer?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KCLFGBIJ@CDirectSoundBuffer?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@CJDDDDA@CDirectSoundBuffer?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@GALGNKNN@CDirectSoundBuffer?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@OMPMKPGG@CDirectSoundBuffer?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@DNKDAAOC@CDirectSoundBuffer?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@CEGGDJFO@CDirectSoundBuffer?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@LIPCEEAM@CDirectSoundBuffer?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@HPKGJBBG@CDirectSoundBuffer?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@IGCEBFCD@CDirectSoundStream?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@IEPFOHMO@CDirectSoundStream?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@BFEGBGIF@CDirectSoundStream?3?3SetFormat?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CB@EFAECKOL@CDirectSoundStream?3?3SetFrequency@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BN@GPKLKEMB@CDirectSoundStream?3?3SetPitch?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GCCGAGKM@CDirectSoundStream?3?3SetVolume?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@BDFCJLBN@CDirectSoundStream?3?3SetLFO?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@MOKKBNNH@CDirectSoundStream?3?3SetEG?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BO@GAINMLDE@CDirectSoundStream?3?3SetFilter?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@KJJLHIOD@CDirectSoundStream?3?3SetHeadroom?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@HMGNJNIP@CDirectSoundStream?3?3SetOutputBuf@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BP@JBGAKHBK@CDirectSoundStream?3?3SetMixBins?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@KGJDLLDP@CDirectSoundStream?3?3SetMixBinVol@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OPMLGNDG@CDirectSoundStream?3?3SetAllParame@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@JMIIELEI@CDirectSoundStream?3?3SetConeAngle@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CH@EABPIKPF@CDirectSoundStream?3?3SetConeOrien@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CJ@BBDBCKJO@CDirectSoundStream?3?3SetConeOutsi@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@POADFFEE@CDirectSoundStream?3?3SetMaxDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@GOHAEFKO@CDirectSoundStream?3?3SetMinDistan@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@KPNNMBKF@CDirectSoundStream?3?3SetMode?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@OCJKODME@CDirectSoundStream?3?3SetPosition?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@IALPAKCJ@CDirectSoundStream?3?3SetVelocity?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CG@DPOABEBK@CDirectSoundStream?3?3SetDistanceF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@PHOMIHIF@CDirectSoundStream?3?3SetDopplerFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@OOCJLODJ@CDirectSoundStream?3?3SetRolloffFa@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ENLHKJPN@CDirectSoundStream?3?3SetRolloffCu@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@DFIPDHEB@CDirectSoundStream?3?3SetI3DL2Sour@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@JNKFENGM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0O@JCBGLFIF@?$CBm_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BD@JLKNBNJM@?$CBm_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0N@BMLCBDGO@m_paNotifier?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CE@ELEAODJN@dwNotifierIndex?5?$DM?5m_dwNotifierCo@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BL@MEDKFNKN@Unexpected?5notifier?5status?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BC@NHNIONPC@m_dwNotifierCount?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DH@NBALOMF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BA@IANIBDAF@m_pGpDspManager?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@ONCKHILO@m_dwState?5?$CG?5MCPX_APUSTATE_GPIMAG@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CF@FGGNHBE@KeGetCurrentIrql?$CI?$CJ?5?$DO?$DN?5DISPATCH_L@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BI@IECLLDN@m_dwVoiceMapLock?5?$DM?5?$HO0UL?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BG@FFOHIBNC@m_dwVoiceMapLock?5?$DO?$DN?51?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@MEFGGIAF@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DB@IBOGJEGG@WAVE_FORMAT_PCM?5?$DN?$DN?5m_pSettings?9?$DO@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CP@IDFLDLJM@?$CB?$CIm_pSettings?9?$DOm_dwFlags?5?$CG?5DSBCA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0EJ@DJPLDOLH@m_pSettings?9?$DOm_pMixinBuffer?9?$DOm_p@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DI@MBLALCOP@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@CELCEBLE@CAc97MediaObject?3?3AddRef?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BK@OKDMHHHN@CAc97MediaObject?3?3Release?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0M@FINCCBCF@?$CFlu?4?$CFlu?4?$CFlu?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_08BKKEJEEI@TESTDS?3?5?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@BIDPBBPE@t?3?2media?2audio?2ac3?2dd?9broadway?4w@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@HEPDPHGM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@GICKFJAF@i?5?$DM?5DSAC97_MAX_ATTACHED_PACKETS?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@POOMFOEN@submitted?5?$CFlu?0?5position?5?$CFlu?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@NJHCKJCD@FINAL?3?5submitted?5?$CFlu?0?5position?5?$CF@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BJ@GLKFBKGJ@NULL?5?$CCthis?$CC?5pointer?5?$CI?$CFx?$CJ?$AA@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CC@LEKIOFPG@Invalid?5?$CCthis?$CC?5pointer?5?$CI?$CFx?5?$CB?$DN?5?$CFx@
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
DSOUND_RW	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RW	ENDS
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _IsEqualGUID@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _==@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeGetCurrentIrql@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _KeIsExecutingDpc@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_AddRef@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_Release@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_BeginScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_EndScene@0
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DPalette_Unlock@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _log10f@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _sqrtf@4
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _wmemchr@12
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidEntryList@@YGXPAU_LIST_ENTRY@@W4ASSERT_VALID_ENTRY_LIST@@PBDI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?InsertHeadListUninit@@YGXPAU_LIST_ENTRY@@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?MoveEntryTailList@@YGPAU_LIST_ENTRY@@PAU1@0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??3@YAXPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CIrql@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Raise@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Lower@CIrql@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Save@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Restore@CFpState@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_GCRefCount@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CRefCount@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?AddRef@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Release@CRefCount@DirectSound@@UAGKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataOffset@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDataSize@CRiffChunk@WaveLoader@@QAEKXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetDuration@CWaveFile@WaveLoader@@QAEJPAK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetFormat@CWaveFile@WaveLoader@@QAEJPAPBUtWAVEFORMATEX@@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?FloatToLong@Math@DirectSound@@YGJM@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?lsb@Math@DirectSound@@YIII@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?IsValidAlgorithm@CHrtfSource@DirectSound@@SGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister8@CAc97Device@DirectSound@@KGEK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister8@CAc97Device@DirectSound@@KGXKE@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister16@CAc97Device@DirectSound@@KGGK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister16@CAc97Device@DirectSound@@KGXKG@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PeekAciRegister32@CAc97Device@DirectSound@@KGKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?PokeAciRegister32@CAc97Device@DirectSound@@KGXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ReleaseChannel@CAc97Device@DirectSound@@QAEXPAVCAc97Channel@2@@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundEnterCriticalSection@@YGHXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DirectSoundLeaveCriticalSection@@YGXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??0CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1CAutoLock@DirectSound@@QAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Initialize@CMcpxNotifier@DirectSound@@QAEXKK@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Free@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?Reset@CMcpxNotifier@DirectSound@@QAEXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?GetScratchSpaceLinAddr@CMcpxDspScratchDma@DirectSound@@QAEPAXXZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ValidateResult@@YGJJ@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?ValidatePtr@@YGJPAX@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?DPF_TEST@@YAXPBDZZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?TestAc97XmoCallback@@YGXPAX0K@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT _TestAc97Xmo@8
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDEOEE@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDEOEE@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDECCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDECCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EEFDFDCA@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EEFDFDCA@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??1?$CValidObject@$0EBEDDJDH@@DirectSound@@UAE@XZ
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?__AssertValidObject@?$CValidObject@$0EBEDDJDH@@DirectSound@@QAEXPBDK0@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDEOEE@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDECCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EEFDFDCA@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ??_G?$CValidObject@$0EBEDDJDH@@DirectSound@@UAEPAXI@Z
DSOUND	SEGMENT PARA USE32 PUBLIC ''
DSOUND	ENDS
;	COMDAT ?dwMajor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ?dwPacketSize@?1??TestAc97Xmo@@9@8@4KB
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT DWORD USE32 PUBLIC ''
XBLD$V	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ?dwBuild@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDECCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EBEDDJDH@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDEOEE@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRefCount@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CValidObject@$0EEFDFDCA@@DirectSound@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
;	COMDAT ?dwMinor@?1??GetWaveBundlerVersion@@YGXPAD@Z@4KB
DSOUND_RD	SEGMENT DWORD USE32 PUBLIC ''
DSOUND_RD	ENDS
FLAT	GROUP _DATA, CONST, _BSS, XBLD$V, DSOUND_RW
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
PUBLIC	_DSoundBuildNumberD
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
DSOUND_RD	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
DSOUND_RD	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
DSOUND_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
DSOUND_RD	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
DSOUND_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
DSOUND_RD	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
DSOUND_RD	ENDS
;	COMDAT _DSoundBuildNumberD
XBLD$V	SEGMENT
_DSoundBuildNumberD DW 05344H
	DW	0554fH
	DW	0444eH
	DW	044H
	DW	01H
	DW	00H
	DW	01130H
	DW	08001H
XBLD$V	ENDS
PUBLIC	?TestAc97XmoCallback@@YGXPAX0K@Z		; TestAc97XmoCallback
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\test\testac97.cpp
;	COMDAT ?TestAc97XmoCallback@@YGXPAX0K@Z
DSOUND	SEGMENT
_dwPacketIndex$ = -8
_pdwSubmittedMask$ = -4
_pvStreamContext$ = 8
_pvPacketContext$ = 12
_dwStatus$ = 16
?TestAc97XmoCallback@@YGXPAX0K@Z PROC NEAR		; TestAc97XmoCallback, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 45   :     LPDWORD                 pdwSubmittedMask    = (LPDWORD)pvStreamContext;

  00006	8b 45 08	 mov	 eax, DWORD PTR _pvStreamContext$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR _pdwSubmittedMask$[ebp], eax

; 46   :     DWORD                   dwPacketIndex       = (DWORD)pvPacketContext;

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _pvPacketContext$[ebp]
  0000f	89 4d f8	 mov	 DWORD PTR _dwPacketIndex$[ebp], ecx

; 47   : 
; 48   :     *pdwSubmittedMask &= ~(1UL << dwPacketIndex);

  00012	ba 01 00 00 00	 mov	 edx, 1
  00017	8b 4d f8	 mov	 ecx, DWORD PTR _dwPacketIndex$[ebp]
  0001a	d3 e2		 shl	 edx, cl
  0001c	f7 d2		 not	 edx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _pdwSubmittedMask$[ebp]
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	23 ca		 and	 ecx, edx
  00025	8b 55 fc	 mov	 edx, DWORD PTR _pdwSubmittedMask$[ebp]
  00028	89 0a		 mov	 DWORD PTR [edx], ecx

; 49   : }    

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
?TestAc97XmoCallback@@YGXPAX0K@Z ENDP			; TestAc97XmoCallback
DSOUND	ENDS
PUBLIC	?ValidateResult@@YGJJ@Z				; ValidateResult
PUBLIC	?ValidatePtr@@YGJPAX@Z				; ValidatePtr
PUBLIC	_TestAc97Xmo@8
PUBLIC	??_C@_0CD@BIDPBBPE@t?3?2media?2audio?2ac3?2dd?9broadway?4w@ ; `string'
PUBLIC	??_C@_0DJ@HEPDPHGM@c?3?2xbox?2private?2windows?2directx?2@ ; `string'
PUBLIC	??_C@_0CA@GICKFJAF@i?5?$DM?5DSAC97_MAX_ATTACHED_PACKETS?$AA@ ; `string'
PUBLIC	??_C@_0BM@POOMFOEN@submitted?5?$CFlu?0?5position?5?$CFlu?$AA@ ; `string'
PUBLIC	??_C@_0CD@NJHCKJCD@FINAL?3?5submitted?5?$CFlu?0?5position?5?$CF@ ; `string'
EXTRN	?OpenWaveFile@@YGJPBDPAPBUtWAVEFORMATEX@@PAPAUXFileMediaObject@@@Z:NEAR ; OpenWaveFile
EXTRN	?OpenStdWaveFile@@YGJPBUtWAVEFORMATEX@@PAPAUXFileMediaObject@@@Z:NEAR ; OpenStdWaveFile
EXTRN	?CreateFormat@@YGPBUtWAVEFORMATEX@@KKKK@Z:NEAR	; CreateFormat
EXTRN	?Assert@CDebug@DirectSound@@SAXHPBD0I@Z:NEAR	; DirectSound::CDebug::Assert
EXTRN	_Ac97CreateMediaObject@16:NEAR
EXTRN	_XPhysicalAlloc@16:NEAR
EXTRN	_XPhysicalFree@4:NEAR
;	COMDAT ??_C@_0CD@BIDPBBPE@t?3?2media?2audio?2ac3?2dd?9broadway?4w@
DSOUND_RD	SEGMENT
??_C@_0CD@BIDPBBPE@t?3?2media?2audio?2ac3?2dd?9broadway?4w@ DB 't:\media\'
	DB	'audio\ac3\dd-broadway.wav', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0DJ@HEPDPHGM@c?3?2xbox?2private?2windows?2directx?2@
DSOUND_RD	SEGMENT
??_C@_0DJ@HEPDPHGM@c?3?2xbox?2private?2windows?2directx?2@ DB 'c:\xbox\pr'
	DB	'ivate\windows\directx\dsound\test\testac97.cpp', 00H ; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CA@GICKFJAF@i?5?$DM?5DSAC97_MAX_ATTACHED_PACKETS?$AA@
DSOUND_RD	SEGMENT
??_C@_0CA@GICKFJAF@i?5?$DM?5DSAC97_MAX_ATTACHED_PACKETS?$AA@ DB 'i < DSAC'
	DB	'97_MAX_ATTACHED_PACKETS', 00H		; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0BM@POOMFOEN@submitted?5?$CFlu?0?5position?5?$CFlu?$AA@
DSOUND_RD	SEGMENT
??_C@_0BM@POOMFOEN@submitted?5?$CFlu?0?5position?5?$CFlu?$AA@ DB 'submitt'
	DB	'ed %lu, position %lu', 00H			; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_0CD@NJHCKJCD@FINAL?3?5submitted?5?$CFlu?0?5position?5?$CF@
DSOUND_RD	SEGMENT
??_C@_0CD@NJHCKJCD@FINAL?3?5submitted?5?$CFlu?0?5position?5?$CF@ DB 'FINA'
	DB	'L: submitted %lu, position %lu', 00H	; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT _TestAc97Xmo@8
DSOUND	SEGMENT
_pvBufferData$ = -60
_dwSubmittedMask$ = -56
_xmp$ = -52
_dwRead$ = -28
_dwPosition$ = -24
_hr$ = -20
_dwSubmittedSize$ = -16
_pWaveFile$ = -12
_i$ = -8
_pDevice$ = -4
_dwChannel$ = 8
_dwMode$ = 12
_TestAc97Xmo@8 PROC NEAR				; COMDAT

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH

; 78   :     static const DWORD      dwPacketSize        = 0x1000;
; 79   :     XAc97MediaObject *      pDevice             = NULL;

  00006	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pDevice$[ebp], 0

; 80   :     XFileMediaObject *      pWaveFile           = NULL;

  0000d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pWaveFile$[ebp], 0

; 81   :     LPVOID                  pvBufferData        = NULL;

  00014	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _pvBufferData$[ebp], 0

; 82   :     volatile DWORD          dwSubmittedMask     = 0;

  0001b	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _dwSubmittedMask$[ebp], 0

; 83   :     DWORD                   dwSubmittedSize     = 0;

  00022	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dwSubmittedSize$[ebp], 0

; 84   :     XMEDIAPACKET            xmp;
; 85   :     DWORD                   dwRead;
; 86   :     DWORD                   dwPosition;
; 87   :     DWORD                   i;
; 88   :     HRESULT                 hr;
; 89   : 
; 90   :     hr = ValidateResult(Ac97CreateMediaObject(dwChannel, TestAc97XmoCallback, (LPVOID)&dwSubmittedMask, &pDevice));

  00029	8d 45 fc	 lea	 eax, DWORD PTR _pDevice$[ebp]
  0002c	50		 push	 eax
  0002d	8d 4d c8	 lea	 ecx, DWORD PTR _dwSubmittedMask$[ebp]
  00030	51		 push	 ecx
  00031	68 00 00 00 00	 push	 OFFSET FLAT:?TestAc97XmoCallback@@YGXPAX0K@Z ; TestAc97XmoCallback
  00036	8b 55 08	 mov	 edx, DWORD PTR _dwChannel$[ebp]
  00039	52		 push	 edx
  0003a	e8 00 00 00 00	 call	 _Ac97CreateMediaObject@16
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00045	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 91   : 
; 92   :     if(SUCCEEDED(hr))

  00048	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0004c	7c 19		 jl	 SHORT $L36114

; 93   :     {
; 94   :         hr = ValidateResult(pDevice->SetMode(dwMode));

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _dwMode$[ebp]
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _pDevice$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	8b 45 fc	 mov	 eax, DWORD PTR _pDevice$[ebp]
  0005a	50		 push	 eax
  0005b	ff 52 1c	 call	 DWORD PTR [edx+28]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00064	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
$L36114:

; 95   :     }
; 96   : 
; 97   :     if(SUCCEEDED(hr))

  00067	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0006b	7c 47		 jl	 SHORT $L36116

; 98   :     {
; 99   :         if(DSAC97_MODE_ENCODED == dwMode)

  0006d	81 7d 0c 02 00
	00 02		 cmp	 DWORD PTR _dwMode$[ebp], 33554434 ; 02000002H
  00074	75 1b		 jne	 SHORT $L36117

; 100  :         {
; 101  :             hr = ValidateResult(OpenWaveFile("t:\\media\\audio\\ac3\\dd-broadway.wav", NULL, &pWaveFile));

  00076	8d 4d f4	 lea	 ecx, DWORD PTR _pWaveFile$[ebp]
  00079	51		 push	 ecx
  0007a	6a 00		 push	 0
  0007c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@BIDPBBPE@t?3?2media?2audio?2ac3?2dd?9broadway?4w@
  00081	e8 00 00 00 00	 call	 ?OpenWaveFile@@YGJPBDPAPBUtWAVEFORMATEX@@PAPAUXFileMediaObject@@@Z ; OpenWaveFile
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  0008c	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 102  :         }
; 103  :         else

  0008f	eb 23		 jmp	 SHORT $L36116
$L36117:

; 104  :         {
; 105  :             hr = ValidateResult(OpenStdWaveFile(CreateFormat(WAVE_FORMAT_PCM, 48000, 16, 2), &pWaveFile));

  00091	8d 55 f4	 lea	 edx, DWORD PTR _pWaveFile$[ebp]
  00094	52		 push	 edx
  00095	6a 02		 push	 2
  00097	6a 10		 push	 16			; 00000010H
  00099	68 80 bb 00 00	 push	 48000			; 0000bb80H
  0009e	6a 01		 push	 1
  000a0	e8 00 00 00 00	 call	 ?CreateFormat@@YGPBUtWAVEFORMATEX@@KKKK@Z ; CreateFormat
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?OpenStdWaveFile@@YGJPBUtWAVEFORMATEX@@PAPAUXFileMediaObject@@@Z ; OpenStdWaveFile
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  000b1	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
$L36116:

; 106  :         }
; 107  :     }
; 108  : 
; 109  :     if(SUCCEEDED(hr))

  000b4	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000b8	7c 22		 jl	 SHORT $L36123

; 110  :     {
; 111  :         hr = ValidatePtr(pvBufferData = XPhysicalAlloc(dwPacketSize * DSAC97_MAX_ATTACHED_PACKETS, ~0UL, PAGE_SIZE, PAGE_READWRITE));

  000ba	6a 04		 push	 4
  000bc	68 00 10 00 00	 push	 4096			; 00001000H
  000c1	6a ff		 push	 -1
  000c3	68 00 f0 01 00	 push	 126976			; 0001f000H
  000c8	e8 00 00 00 00	 call	 _XPhysicalAlloc@16
  000cd	89 45 c4	 mov	 DWORD PTR _pvBufferData$[ebp], eax
  000d0	8b 45 c4	 mov	 eax, DWORD PTR _pvBufferData$[ebp]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ?ValidatePtr@@YGJPAX@Z	; ValidatePtr
  000d9	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
$L36123:

; 112  :     }
; 113  : 
; 114  :     while(SUCCEEDED(hr))

  000dc	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000e0	0f 8c 8c 01 00
	00		 jl	 $L36124
$L36127:

; 115  :     {
; 116  :         while(((1UL << DSAC97_MAX_ATTACHED_PACKETS) - 1) == dwSubmittedMask);

  000e6	81 7d c8 ff ff
	ff 7f		 cmp	 DWORD PTR _dwSubmittedMask$[ebp], 2147483647 ; 7fffffffH
  000ed	75 02		 jne	 SHORT $L36128
  000ef	eb f5		 jmp	 SHORT $L36127
$L36128:

; 117  : 
; 118  :         for(i = 0; i < DSAC97_MAX_ATTACHED_PACKETS; i++)

  000f1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  000f8	eb 09		 jmp	 SHORT $L36129
$L36130:
  000fa	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  000fd	83 c1 01	 add	 ecx, 1
  00100	89 4d f8	 mov	 DWORD PTR _i$[ebp], ecx
$L36129:
  00103	83 7d f8 1f	 cmp	 DWORD PTR _i$[ebp], 31	; 0000001fH
  00107	73 17		 jae	 SHORT $L36131

; 119  :         {
; 120  :             if(!(dwSubmittedMask & (1UL << i)))

  00109	ba 01 00 00 00	 mov	 edx, 1
  0010e	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00111	d3 e2		 shl	 edx, cl
  00113	8b 45 c8	 mov	 eax, DWORD PTR _dwSubmittedMask$[ebp]
  00116	23 c2		 and	 eax, edx
  00118	85 c0		 test	 eax, eax
  0011a	75 02		 jne	 SHORT $L36132

; 121  :             {
; 122  :                 break;

  0011c	eb 02		 jmp	 SHORT $L36131
$L36132:

; 123  :             }
; 124  :         }

  0011e	eb da		 jmp	 SHORT $L36130
$L36131:

; 125  : 
; 126  :         ASSERT(i < DSAC97_MAX_ATTACHED_PACKETS);

  00120	6a 7e		 push	 126			; 0000007eH
  00122	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@HEPDPHGM@c?3?2xbox?2private?2windows?2directx?2@
  00127	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@GICKFJAF@i?5?$DM?5DSAC97_MAX_ATTACHED_PACKETS?$AA@
  0012c	83 7d f8 1f	 cmp	 DWORD PTR _i$[ebp], 31	; 0000001fH
  00130	1b c9		 sbb	 ecx, ecx
  00132	41		 inc	 ecx
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ?Assert@CDebug@DirectSound@@SAXHPBD0I@Z ; DirectSound::CDebug::Assert
  00139	83 c4 10	 add	 esp, 16			; 00000010H

; 127  : 
; 128  :         xmp.pvBuffer = (LPBYTE)pvBufferData + (dwPacketSize * i);

  0013c	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  0013f	c1 e2 0c	 shl	 edx, 12			; 0000000cH
  00142	8b 45 c4	 mov	 eax, DWORD PTR _pvBufferData$[ebp]
  00145	03 c2		 add	 eax, edx
  00147	89 45 cc	 mov	 DWORD PTR _xmp$[ebp], eax

; 129  :         xmp.dwMaxSize = dwPacketSize;

  0014a	c7 45 d0 00 10
	00 00		 mov	 DWORD PTR _xmp$[ebp+4], 4096 ; 00001000H

; 130  :         xmp.pdwCompletedSize = &dwRead;

  00151	8d 4d e4	 lea	 ecx, DWORD PTR _dwRead$[ebp]
  00154	89 4d d4	 mov	 DWORD PTR _xmp$[ebp+8], ecx

; 131  :         xmp.pdwStatus = NULL;

  00157	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _xmp$[ebp+12], 0

; 132  :         xmp.pContext = NULL;

  0015e	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _xmp$[ebp+16], 0

; 133  :         xmp.prtTimestamp = NULL;

  00165	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _xmp$[ebp+20], 0

; 134  : 
; 135  :         hr = ValidateResult(pWaveFile->Process(NULL, &xmp));

  0016c	8d 55 cc	 lea	 edx, DWORD PTR _xmp$[ebp]
  0016f	52		 push	 edx
  00170	6a 00		 push	 0
  00172	8b 45 f4	 mov	 eax, DWORD PTR _pWaveFile$[ebp]
  00175	8b 08		 mov	 ecx, DWORD PTR [eax]
  00177	8b 55 f4	 mov	 edx, DWORD PTR _pWaveFile$[ebp]
  0017a	52		 push	 edx
  0017b	ff 51 10	 call	 DWORD PTR [ecx+16]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  00184	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 136  : 
; 137  :         if(SUCCEEDED(hr))

  00187	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0018b	0f 8c dc 00 00
	00		 jl	 $L36137

; 138  :         {
; 139  :             if(dwRead)

  00191	83 7d e4 00	 cmp	 DWORD PTR _dwRead$[ebp], 0
  00195	0f 84 9a 00 00
	00		 je	 $L36149

; 140  :             {
; 141  :                 dwSubmittedMask |= 1UL << i;

  0019b	b8 01 00 00 00	 mov	 eax, 1
  001a0	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  001a3	d3 e0		 shl	 eax, cl
  001a5	8b 4d c8	 mov	 ecx, DWORD PTR _dwSubmittedMask$[ebp]
  001a8	0b c8		 or	 ecx, eax
  001aa	89 4d c8	 mov	 DWORD PTR _dwSubmittedMask$[ebp], ecx

; 142  : 
; 143  :                 xmp.dwMaxSize = dwRead;

  001ad	8b 55 e4	 mov	 edx, DWORD PTR _dwRead$[ebp]
  001b0	89 55 d0	 mov	 DWORD PTR _xmp$[ebp+4], edx

; 144  :                 xmp.pdwCompletedSize = NULL;

  001b3	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _xmp$[ebp+8], 0

; 145  :                 xmp.pContext = (LPVOID)i;

  001ba	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  001bd	89 45 dc	 mov	 DWORD PTR _xmp$[ebp+16], eax

; 146  : 
; 147  :                 dwSubmittedSize += dwRead;

  001c0	8b 4d f0	 mov	 ecx, DWORD PTR _dwSubmittedSize$[ebp]
  001c3	03 4d e4	 add	 ecx, DWORD PTR _dwRead$[ebp]
  001c6	89 4d f0	 mov	 DWORD PTR _dwSubmittedSize$[ebp], ecx

; 148  : 
; 149  :                 hr = ValidateResult(pDevice->Process(&xmp, NULL));

  001c9	6a 00		 push	 0
  001cb	8d 55 cc	 lea	 edx, DWORD PTR _xmp$[ebp]
  001ce	52		 push	 edx
  001cf	8b 45 fc	 mov	 eax, DWORD PTR _pDevice$[ebp]
  001d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d4	8b 55 fc	 mov	 edx, DWORD PTR _pDevice$[ebp]
  001d7	52		 push	 edx
  001d8	ff 51 10	 call	 DWORD PTR [ecx+16]
  001db	50		 push	 eax
  001dc	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  001e1	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 150  : 
; 151  :                 if(SUCCEEDED(hr))

  001e4	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001e8	7c 15		 jl	 SHORT $L36141

; 152  :                 {
; 153  :                     hr = ValidateResult(pDevice->Discontinuity());

  001ea	8b 45 fc	 mov	 eax, DWORD PTR _pDevice$[ebp]
  001ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ef	8b 55 fc	 mov	 edx, DWORD PTR _pDevice$[ebp]
  001f2	52		 push	 edx
  001f3	ff 51 14	 call	 DWORD PTR [ecx+20]
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?ValidateResult@@YGJJ@Z	; ValidateResult
  001fc	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
$L36141:

; 154  :                 }
; 155  : 
; 156  :                 if(SUCCEEDED(hr))

  001ff	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00203	7c 13		 jl	 SHORT $L36143

; 157  :                 {
; 158  :                     hr = pDevice->GetCurrentPosition(&dwPosition);

  00205	8d 45 e8	 lea	 eax, DWORD PTR _dwPosition$[ebp]
  00208	50		 push	 eax
  00209	8b 4d fc	 mov	 ecx, DWORD PTR _pDevice$[ebp]
  0020c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020e	8b 45 fc	 mov	 eax, DWORD PTR _pDevice$[ebp]
  00211	50		 push	 eax
  00212	ff 52 20	 call	 DWORD PTR [edx+32]
  00215	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
$L36143:

; 159  :                 }
; 160  : 
; 161  :                 if(SUCCEEDED(hr))

  00218	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0021c	7c 15		 jl	 SHORT $L36145

; 162  :                 {
; 163  :                     DPF_TEST("submitted %lu, position %lu", dwSubmittedSize, dwPosition);

  0021e	8b 4d e8	 mov	 ecx, DWORD PTR _dwPosition$[ebp]
  00221	51		 push	 ecx
  00222	8b 55 f0	 mov	 edx, DWORD PTR _dwSubmittedSize$[ebp]
  00225	52		 push	 edx
  00226	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@POOMFOEN@submitted?5?$CFlu?0?5position?5?$CFlu?$AA@
  0022b	e8 00 00 00 00	 call	 ?DPF_TEST@@YAXPBDZZ	; DPF_TEST
  00230	83 c4 0c	 add	 esp, 12			; 0000000cH
$L36145:

; 164  :                 }
; 165  :             }
; 166  :             else

  00233	eb 38		 jmp	 SHORT $L36137
$L36149:

; 167  :             {
; 168  :                 while(dwSubmittedMask);

  00235	83 7d c8 00	 cmp	 DWORD PTR _dwSubmittedMask$[ebp], 0
  00239	74 02		 je	 SHORT $L36150
  0023b	eb f8		 jmp	 SHORT $L36149
$L36150:

; 169  : 
; 170  :                 hr = pDevice->GetCurrentPosition(&dwPosition);

  0023d	8d 45 e8	 lea	 eax, DWORD PTR _dwPosition$[ebp]
  00240	50		 push	 eax
  00241	8b 4d fc	 mov	 ecx, DWORD PTR _pDevice$[ebp]
  00244	8b 11		 mov	 edx, DWORD PTR [ecx]
  00246	8b 45 fc	 mov	 eax, DWORD PTR _pDevice$[ebp]
  00249	50		 push	 eax
  0024a	ff 52 20	 call	 DWORD PTR [edx+32]
  0024d	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax

; 171  : 
; 172  :                 if(SUCCEEDED(hr))

  00250	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00254	7c 15		 jl	 SHORT $L36152

; 173  :                 {
; 174  :                     DPF_TEST("FINAL: submitted %lu, position %lu", dwSubmittedSize, dwPosition);

  00256	8b 4d e8	 mov	 ecx, DWORD PTR _dwPosition$[ebp]
  00259	51		 push	 ecx
  0025a	8b 55 f0	 mov	 edx, DWORD PTR _dwSubmittedSize$[ebp]
  0025d	52		 push	 edx
  0025e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@NJHCKJCD@FINAL?3?5submitted?5?$CFlu?0?5position?5?$CF@
  00263	e8 00 00 00 00	 call	 ?DPF_TEST@@YAXPBDZZ	; DPF_TEST
  00268	83 c4 0c	 add	 esp, 12			; 0000000cH
$L36152:

; 175  :                 }
; 176  : 
; 177  :                 break;

  0026b	eb 05		 jmp	 SHORT $L36124
$L36137:

; 178  :             }
; 179  :         }
; 180  :     }

  0026d	e9 6a fe ff ff	 jmp	 $L36123
$L36124:

; 181  : 
; 182  :     if(pvBufferData)

  00272	83 7d c4 00	 cmp	 DWORD PTR _pvBufferData$[ebp], 0
  00276	74 09		 je	 SHORT $L36154

; 183  :     {
; 184  :         XPhysicalFree(pvBufferData);

  00278	8b 45 c4	 mov	 eax, DWORD PTR _pvBufferData$[ebp]
  0027b	50		 push	 eax
  0027c	e8 00 00 00 00	 call	 _XPhysicalFree@4
$L36154:

; 185  :     }
; 186  : 
; 187  :     RELEASE(pWaveFile);

  00281	83 7d f4 00	 cmp	 DWORD PTR _pWaveFile$[ebp], 0
  00285	74 13		 je	 SHORT $L36155
  00287	8b 4d f4	 mov	 ecx, DWORD PTR _pWaveFile$[ebp]
  0028a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0028c	8b 45 f4	 mov	 eax, DWORD PTR _pWaveFile$[ebp]
  0028f	50		 push	 eax
  00290	ff 52 04	 call	 DWORD PTR [edx+4]
  00293	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pWaveFile$[ebp], 0
$L36155:

; 188  :     RELEASE(pDevice);

  0029a	83 7d fc 00	 cmp	 DWORD PTR _pDevice$[ebp], 0
  0029e	74 13		 je	 SHORT $L36156
  002a0	8b 4d fc	 mov	 ecx, DWORD PTR _pDevice$[ebp]
  002a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a5	8b 45 fc	 mov	 eax, DWORD PTR _pDevice$[ebp]
  002a8	50		 push	 eax
  002a9	ff 52 04	 call	 DWORD PTR [edx+4]
  002ac	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pDevice$[ebp], 0
$L36156:

; 189  : 
; 190  :     return hr;

  002b3	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]

; 191  : }

  002b6	8b e5		 mov	 esp, ebp
  002b8	5d		 pop	 ebp
  002b9	c2 08 00	 ret	 8
_TestAc97Xmo@8 ENDP
; Function compile flags: /Odt
; File c:\xbox\private\windows\directx\dsound\test\util.h
DSOUND	ENDS
;	COMDAT ?ValidateResult@@YGJJ@Z
DSOUND	SEGMENT
_hr$ = 8
?ValidateResult@@YGJJ@Z PROC NEAR			; ValidateResult, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   :     if(FAILED(hr))

  00003	83 7d 08 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00007	7d 01		 jge	 SHORT $L35860

; 33   :     {
; 34   :         __asm int 3;

  00009	cc		 int	 3
$L35860:

; 35   :     }
; 36   : 
; 37   :     return hr;

  0000a	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]

; 38   : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?ValidateResult@@YGJJ@Z ENDP				; ValidateResult
; Function compile flags: /Odt
DSOUND	ENDS
;	COMDAT ?ValidatePtr@@YGJPAX@Z
DSOUND	SEGMENT
_pv$ = 8
?ValidatePtr@@YGJPAX@Z PROC NEAR			; ValidatePtr, COMDAT

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 42   :     if(!pv)

  00003	83 7d 08 00	 cmp	 DWORD PTR _pv$[ebp], 0
  00007	75 01		 jne	 SHORT $L35864

; 43   :     {
; 44   :         __asm int 3;

  00009	cc		 int	 3
$L35864:

; 45   :     }
; 46   : 
; 47   :     return pv ? DS_OK : DSERR_OUTOFMEMORY;

  0000a	33 c0		 xor	 eax, eax
  0000c	83 7d 08 00	 cmp	 DWORD PTR _pv$[ebp], 0
  00010	0f 95 c0	 setne	 al
  00013	48		 dec	 eax
  00014	25 0e 00 07 80	 and	 eax, -2147024882	; 8007000eH

; 48   : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?ValidatePtr@@YGJPAX@Z ENDP				; ValidatePtr
DSOUND	ENDS
PUBLIC	??_C@_08BKKEJEEI@TESTDS?3?5?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
EXTRN	_vsprintf:NEAR
EXTRN	_OutputDebugStringA@4:NEAR
;	COMDAT ??_C@_08BKKEJEEI@TESTDS?3?5?$AA@
; File c:\xbox\private\windows\directx\dsound\test\testds.h
DSOUND_RD	SEGMENT
??_C@_08BKKEJEEI@TESTDS?3?5?$AA@ DB 'TESTDS: ', 00H	; `string'
DSOUND_RD	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
DSOUND_RD	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
; Function compile flags: /Odt
DSOUND_RD	ENDS
;	COMDAT ?DPF_TEST@@YAXPBDZZ
DSOUND	SEGMENT
_va$ = -260
_szString$ = -256
_pszFormat$ = 8
?DPF_TEST@@YAXPBDZZ PROC NEAR				; DPF_TEST, COMDAT

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H

; 34   :     CHAR                    szString[0x100];
; 35   :     va_list                 va;
; 36   : 
; 37   :     va_start(va, pszFormat);

  00009	8d 45 0c	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  0000c	89 85 fc fe ff
	ff		 mov	 DWORD PTR _va$[ebp], eax

; 38   :     vsprintf(szString, pszFormat, va);

  00012	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _va$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR _pszFormat$[ebp]
  0001c	52		 push	 edx
  0001d	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _szString$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _vsprintf
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH

; 39   :     va_end(va);

  0002c	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _va$[ebp], 0

; 40   : 
; 41   :     OutputDebugStringA("TESTDS: ");

  00036	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08BKKEJEEI@TESTDS?3?5?$AA@
  0003b	e8 00 00 00 00	 call	 _OutputDebugStringA@4

; 42   :     OutputDebugStringA(szString);

  00040	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _szString$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 _OutputDebugStringA@4

; 43   :     OutputDebugStringA("\n");

  0004c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  00051	e8 00 00 00 00	 call	 _OutputDebugStringA@4

; 44   : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?DPF_TEST@@YAXPBDZZ ENDP				; DPF_TEST
DSOUND	ENDS
END
