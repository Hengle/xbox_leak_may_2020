;
; vstune.ini
;

[options]
; Which type of test to run. Also selectable by trigger on gamepad.
;   0 - DoQuickTimedTest
;   1 - DoPushBufferCallTest
;   2 - RandomVsh (generate random vertex shader, test that)
;   3 - nop-timer (tiems code with 1 - 8 nops before/after the code)
g_iCurTest = 0;

; total time (ms) to run the test
testtime = 1000;

dwRndShaderMin = 20;
dwRndShaderMax = 51;
dwRndShaderNops = 0;
dwRndShaderType	= 1;      //1 == SASMT_VERTEXSHADER, 2 == SASMT_READWRITE_VERTEXSHADER.
bRndShaderWriteConsts = 0;
bRndShaderXvs = 1;
bRndShaderIndex = 1;
bRndShaderAllowPair = 0;
bRndShaderScreenspace = 1;
bRndShaderAllowNop = 1;

; number of vertex buffers to draw per scene
vbdrawcount = 1;

; Precompiled avoids the CPU overhead of copying the indices by
; using a 32MB pre-compiled push-buffer.
precompiled = 1;

; 0 - blocks main thread until gpu completes
; 1 - does wc writes with main thread while gpu works
; 2 - does wc writes with low prio background thread while gpu works
wcwritesinbkgnd = 0;

; Maximum number of frames allowed per push buffer. This allows you
; to test smaller pushbuffers vs. the default 32MB dude.
;   0 - no limit. Use all 32 megs
framesperpushbuffermax = 0;

; Insert noops into the pushbuffer instead of draw routines. This
; is to test the pushbuffer call costs.
; Only works when precompiled = 1.
;   0 - uses indices
;   1 - uses Kelvin Nop command
pushbuffernops = 0;

; RunUsingCpuCopy flag passed to CreatePushBuffer when precompiled = 1
runusingcpucopy = 0;

; Number of pushbuffers to alloc and use. Maximum of 300. This should
; allow one to test smaller pushbuffers which don't all reside in the
; cpu cache.
numberofpushbuffers = 1;

primitivetype = D3DPT_TRIANGLELIST

; total count of indices per DrawIndexedPrimitive call
;   indices go from 0,1,2 .. indexcount-1
indexcount = 1494 ;was 14994

; total vertices in VB.
;  anything <= 24 should be run entirely from the post t&l file cache
vertcount = 500

; use d:\vstune.xvu instead of fixed function pipe
uservertexshader = 1

; FVF code. If FVF == 0 stream definitions defined below are used
FVF = D3DFVF_XYZ | D3DFVF_DIFFUSE;// D3DFVF_SPECULAR; // | D3DFVF_TEX2 | T0_SIZE1 | T1_SIZE2;

; degenerates == 0 will pass little triangles in screenspace so you can
; verify things are drawing
degenerates = 1

AutoDepthStencilFormat = D3DFMT_D24S8
BackBufferFormat = D3DFMT_X8R8G8B8

MSType = D3DMS_NONE
MSFormat = D3DMS_PREFILTER_FORMAT_DEFAULT

zenable = 0
zwriteenable = 0
d3dcmpfunc = D3DCMP_NOTEQUAL
cullmode = D3DCULL_NONE
d3dfillmode = D3DFILL_SOLID

alphablendenable = 0
alphatestenable = 0

colorvertex = 0
normalizenormals = 0
fogenable = 0

specularenable = 0
localviewer = 0

lighting = 0
numDirectionalLights = 0
numSpotLights = 0
numPointLights = 0

numtextures = 1

clearflags = D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER | D3DCLEAR_STENCIL
zclearval = 1.0f
sclearval = 0
cclearval = 0x00006688

runtestonreload = 1
verboselevel = 2
verboseinireads = 1

;
; Streams section. Used if FVF == 0
;

; Example:
;   [stream0]
;   Decl0 = 5 | VSDT_FLOAT2;    // register:5, type:float2
;   Decl1 = 0x10000000 | 2;     // skip 2 dwords
;   [stream1]
;   Decl0 = 0x18000000 | 3;     // skip 3 bytes

[stream0]
Decl0 = 1 | VSDT_FLOAT1;
;Decl1 = 2 | VSDT_FLOAT1
;Decl2 = 3 | VSDT_FLOAT3

[stream1]
Decl0 = 2 | VSDT_FLOAT3;
//Decl0 = 2 | VSDT_D3DCOLOR

[stream2]
Decl0 = 3 | VSDT_FLOAT2;

[stream3]
Decl0 = 4 | VSDT_FLOAT2;
//Decl0 = 4 | VSDT_SHORT2;

[stream4]
Decl0 = 5 | VSDT_FLOAT3;
Decl1 = 6 | VSDT_FLOAT3;
Decl2 = 7 | VSDT_FLOAT3;
//Decl0 = 5 | VSDT_D3DCOLOR;
//Decl1 = 6 | VSDT_D3DCOLOR;
//Decl2 = 7 | VSDT_D3DCOLOR;

[XXstream0]
Decl0 = 0 | VSDT_FLOAT3;
Decl1 = 0x18000000 | 3;
Decl2 = 1 | VSDT_FLOAT1;
Decl3 = 0x18000000 | 3;
Decl4 = 4 | VSDT_FLOAT2;
Decl5 = 0x18000000 | 3;
Decl6 = 5 | VSDT_FLOAT4;

[XXstream1]
Decl0 = 2 | VSDT_FLOAT3;
Decl1 = 3 | VSDT_FLOAT3;
Decl2 = 5 | VSDT_FLOAT3;

[pushbuffercalltest]
// default: 50,100,250,500,1000,1500,2000,2500,5000,10000,20000,40000;
indices = 50,100,250,500,1000,1500,2000,2500,5000,10000;//,20000,40000;

