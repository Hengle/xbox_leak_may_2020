xvss.1.1
; Largest legal program
; 272 instructions
; which collapse down to 136 microcode instructions

; Count by 10s

// 0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 10

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 20

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 30

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 40

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 50

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 60

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 70

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 80

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 90

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 100

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 110

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 120

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 130

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 140

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 150

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 160

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 170

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 180

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 190

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 200

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 210

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 220

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 230

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 240

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 250

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 260

dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0
dp3 r0,v0,c[0]
rsq r1.x,v0

// 270

mov c[0],r0     ;; To make this a valid vertex state shader, have to write to a c register.
rsq r1.x,v0
