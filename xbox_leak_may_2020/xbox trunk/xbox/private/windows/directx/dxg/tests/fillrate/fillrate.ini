;
; fillrate.ini
;

;
; some simple mappings
;

[defines]
$TEXINPUT = PS_REGISTER_T0
$COMPAREMODE = PS_COMPAREMODE_S_LT

;
; main fillrate options
;

[options]
; Which type of test to run. Also selectable by l/r triggers on gamepad.
;   0 - DoQuickTimedTest
;   1 - DoMultiSampleTimedTest
;   2 - DoCompleteTimedTest
;   3 - DoTextureTest
g_iCurTest = 0;

AutoDepthStencilFormat = D3DFMT_D24S8
BackBufferFormat = D3DFMT_A8R8G8B8;     // D3DFMT_R5G6B5

;; Number of samples, sample type, and filter:
;
;D3DMS_NONE
;D3DMS_2_SAMPLES_MULTISAMPLE_LINEAR
;D3DMS_2_SAMPLES_MULTISAMPLE_QUINCUNX
;D3DMS_4_SAMPLES_MULTISAMPLE_LINEAR
;D3DMS_4_SAMPLES_MULTISAMPLE_GAUSSIAN
;D3DMS_9_SAMPLES_MULTISAMPLE_GAUSSIAN
;D3DMS_2_SAMPLES_SUPERSAMPLE_HORIZONTAL_LINEAR
;D3DMS_2_SAMPLES_SUPERSAMPLE_VERTICAL_LINEAR
;D3DMS_4_SAMPLES_SUPERSAMPLE_LINEAR
;D3DMS_4_SAMPLES_SUPERSAMPLE_GAUSSIAN
;D3DMS_9_SAMPLES_SUPERSAMPLE_GAUSSIAN

;; Format of the pre-filter (big) color buffer
;D3DMS_PREFILTER_FORMAT_DEFAULT
;D3DMS_PREFILTER_FORMAT_X1R5G5B5
;D3DMS_PREFILTER_FORMAT_R5G6B5
;D3DMS_PREFILTER_FORMAT_X8R8G8B8
;D3DMS_PREFILTER_FORMAT_A8R8G8B8

MSType = D3DMS_NONE
MSFormat = D3DMS_PREFILTER_FORMAT_DEFAULT

numberscenes = 0        ; # of scenes to draw
                        ; (set to 0 to use testtime instead)
testtime = 5000         ; test time (ms)
timeflags = TIME_Render ; what to time (TIME_Present | TIME_Render)

zenable = 0
zwriteenable = 0
d3dcmpfunc = D3DCMP_NOTEQUAL

primez = 0;
primezcmpfunc = D3DCMP_ALWAYS;

alphablendenable = 0
alphatestenable = 0

tiltz = 0
rotatetex = 0
SwathWidth = D3DSWATH_128

clearflags = D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER | D3DCLEAR_STENCIL
zclearval = 1.0f
sclearval = 0
cclearval = 0x00006688

specularenable = 0

quadwidth = 640
quadheight = 480
quadx = 0
quady = 0

FVF = D3DFVF_XYZRHW | D3DFVF_TEX4;// | D3DFVF_DIFFUSE;

userpixelshader = 0
runtestonreload = 1
verboselevel = 1
verboseinireads = 1

colorwriteenable = D3DCOLORWRITEENABLE_ALL;

;
; Texture stages
;

[texture0]
type        = TEX_2d;     ; TEX_None, TEX_2d, TEX_Cubemap, TEX_Volume
texsize     = 32
d3dFormat   = D3DFMT_A8R8G8B8
filtertype  = D3DTEXF_POINT
mipfilter   = D3DTEXF_NONE

[texture1]
type        = TEX_None
texsize     = 256
d3dFormat   = D3DFMT_A4R4G4B4
filtertype  = D3DTEXF_LINEAR
mipfilter   = D3DTEXF_NONE

[texture2]
type        = TEX_None
texsize     = 256
d3dFormat   = D3DFMT_A4R4G4B4
filtertype  = D3DTEXF_LINEAR
mipfilter   = D3DTEXF_NONE

[texture3]
type        = TEX_None
texsize     = 256
d3dFormat   = D3DFMT_A4R4G4B4
filtertype  = D3DTEXF_LINEAR
mipfilter   = D3DTEXF_NONE

;
; Texture addressing modes (user pixel shaders)
;

[PSTextureModes]
t0 = PS_TEXTUREMODES_PROJECT3D
t1 = PS_TEXTUREMODES_NONE
t2 = PS_TEXTUREMODES_NONE
t3 = PS_TEXTUREMODES_NONE

; Texture source for some texture modes
[PSInputTexture]
t2 = 0
t3 = 0

; Compare modes for clipplane texture mode
[PSCompareMode]
t0 = $COMPAREMODE
t1 = $COMPAREMODE
t2 = $COMPAREMODE
t3 = $COMPAREMODE

; Input mapping for dot product modes
[PSDotMapping]
t0 = PS_DOTMAPPING_MINUS1_TO_1_D3D
t1 = PS_DOTMAPPING_MINUS1_TO_1_D3D
t2 = PS_DOTMAPPING_MINUS1_TO_1_D3D
t3 = PS_DOTMAPPING_MINUS1_TO_1_D3D

; Active combiner count (Stages 0-7)
[PSCombinerCount]
count = 1
flags = PS_COMBINERCOUNT_MUX_LSB | PS_COMBINERCOUNT_SAME_C0 | PS_COMBINERCOUNT_SAME_C1

; C0 for each stage
[PSConstant0]
C0 = 0
C1 = 0
C2 = 0
C3 = 0
C4 = 0
C5 = 0
C6 = 0
C7 = 0

; C1 for each stage
[PSConstant1]
C0 = 0
C1 = 0
C2 = 0
C3 = 0
C4 = 0
C5 = 0
C6 = 0
C7 = 0

; RGB inputs for each stage
[PSRGBInputs]
A0 = $TEXINPUT | PS_INPUTMAPPING_SIGNED_IDENTITY | PS_CHANNEL_RGB
B0 = PS_REGISTER_ZERO | PS_INPUTMAPPING_UNSIGNED_INVERT
C0 = PS_REGISTER_ZERO
D0 = PS_REGISTER_ZERO
A1 = PS_REGISTER_ZERO
B1 = PS_REGISTER_ZERO
C1 = PS_REGISTER_ZERO
D1 = PS_REGISTER_ZERO
A2 = PS_REGISTER_ZERO
B2 = PS_REGISTER_ZERO
C2 = PS_REGISTER_ZERO
D2 = PS_REGISTER_ZERO
A3 = PS_REGISTER_ZERO
B3 = PS_REGISTER_ZERO
C3 = PS_REGISTER_ZERO
D3 = PS_REGISTER_ZERO
A4 = PS_REGISTER_ZERO
B4 = PS_REGISTER_ZERO
C4 = PS_REGISTER_ZERO
D4 = PS_REGISTER_ZERO
A5 = PS_REGISTER_ZERO
B5 = PS_REGISTER_ZERO
C5 = PS_REGISTER_ZERO
D5 = PS_REGISTER_ZERO
A6 = PS_REGISTER_ZERO
B6 = PS_REGISTER_ZERO
C6 = PS_REGISTER_ZERO
D6 = PS_REGISTER_ZERO
A7 = PS_REGISTER_ZERO
B7 = PS_REGISTER_ZERO
C7 = PS_REGISTER_ZERO
D7 = PS_REGISTER_ZERO

; Alpha inputs for each stage
[PSAlphaInputs]
A0 = $TEXINPUT | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_ALPHA
B0 = PS_REGISTER_ZERO | PS_INPUTMAPPING_UNSIGNED_INVERT
C0 = PS_REGISTER_ZERO
D0 = PS_REGISTER_ZERO
A1 = PS_REGISTER_ZERO
B1 = PS_REGISTER_ZERO
C1 = PS_REGISTER_ZERO
D1 = PS_REGISTER_ZERO
A2 = PS_REGISTER_ZERO
B2 = PS_REGISTER_ZERO
C2 = PS_REGISTER_ZERO
D2 = PS_REGISTER_ZERO
A3 = PS_REGISTER_ZERO
B3 = PS_REGISTER_ZERO
C3 = PS_REGISTER_ZERO
D3 = PS_REGISTER_ZERO
A4 = PS_REGISTER_ZERO
B4 = PS_REGISTER_ZERO
C4 = PS_REGISTER_ZERO
D4 = PS_REGISTER_ZERO
A5 = PS_REGISTER_ZERO
B5 = PS_REGISTER_ZERO
C5 = PS_REGISTER_ZERO
D5 = PS_REGISTER_ZERO
A6 = PS_REGISTER_ZERO
B6 = PS_REGISTER_ZERO
C6 = PS_REGISTER_ZERO
D6 = PS_REGISTER_ZERO
A7 = PS_REGISTER_ZERO
B7 = PS_REGISTER_ZERO
C7 = PS_REGISTER_ZERO
D7 = PS_REGISTER_ZERO

; Stage 0 RGB outputs
[PSRGBOutputs]
ab0         = PS_REGISTER_R0
cd0         = PS_REGISTER_DISCARD
mux_sum0    = PS_REGISTER_DISCARD
flags0      = PS_COMBINEROUTPUT_IDENTITY | PS_COMBINEROUTPUT_AB_MULTIPLY
ab1         = PS_REGISTER_ZERO
cd1         = PS_REGISTER_ZERO
mux_sum1    = PS_REGISTER_DISCARD
flags1      = PS_COMBINEROUTPUT_IDENTITY
ab2         = PS_REGISTER_ZERO
cd2         = PS_REGISTER_ZERO
mux_sum2    = PS_REGISTER_DISCARD
flags2      = PS_COMBINEROUTPUT_IDENTITY
ab3         = PS_REGISTER_ZERO
cd3         = PS_REGISTER_ZERO
mux_sum3    = PS_REGISTER_DISCARD
flags3      = PS_COMBINEROUTPUT_IDENTITY
ab4         = PS_REGISTER_ZERO
cd4         = PS_REGISTER_ZERO
mux_sum4    = PS_REGISTER_DISCARD
flags4      = PS_COMBINEROUTPUT_IDENTITY
ab5         = PS_REGISTER_ZERO
cd5         = PS_REGISTER_ZERO
mux_sum5    = PS_REGISTER_DISCARD
flags5      = PS_COMBINEROUTPUT_IDENTITY
ab6         = PS_REGISTER_ZERO
cd6         = PS_REGISTER_ZERO
mux_sum6    = PS_REGISTER_DISCARD
flags6      = PS_COMBINEROUTPUT_IDENTITY
ab7         = PS_REGISTER_ZERO
cd7         = PS_REGISTER_ZERO
mux_sum7    = PS_REGISTER_DISCARD
flags7      = PS_COMBINEROUTPUT_IDENTITY

; Alpha output for each stage
[PSAlphaOutputs]
ab0         = PS_REGISTER_R0
cd0         = PS_REGISTER_DISCARD
mux_sum0    = PS_REGISTER_DISCARD
flags0      = PS_COMBINEROUTPUT_IDENTITY | PS_COMBINEROUTPUT_AB_MULTIPLY
ab1         = PS_REGISTER_ZERO
cd1         = PS_REGISTER_ZERO
mux_sum1    = PS_REGISTER_DISCARD
flags1      = PS_COMBINEROUTPUT_IDENTITY
ab2         = PS_REGISTER_ZERO
cd2         = PS_REGISTER_ZERO
mux_sum2    = PS_REGISTER_DISCARD
flags2      = PS_COMBINEROUTPUT_IDENTITY
ab3         = PS_REGISTER_ZERO
cd3         = PS_REGISTER_ZERO
mux_sum3    = PS_REGISTER_DISCARD
flags3      = PS_COMBINEROUTPUT_IDENTITY
ab4         = PS_REGISTER_ZERO
cd4         = PS_REGISTER_ZERO
mux_sum4    = PS_REGISTER_DISCARD
flags4      = PS_COMBINEROUTPUT_IDENTITY
ab5         = PS_REGISTER_ZERO
cd5         = PS_REGISTER_ZERO
mux_sum5    = PS_REGISTER_DISCARD
flags5      = PS_COMBINEROUTPUT_IDENTITY
ab6         = PS_REGISTER_ZERO
cd6         = PS_REGISTER_ZERO
mux_sum6    = PS_REGISTER_DISCARD
flags6      = PS_COMBINEROUTPUT_IDENTITY
ab7         = PS_REGISTER_ZERO
cd7         = PS_REGISTER_ZERO
mux_sum7    = PS_REGISTER_DISCARD
flags7      = PS_COMBINEROUTPUT_IDENTITY

[PSFinalCombinerConstant0]
C = 0

[PSFinalCombinerConstant1]
C = 0

; Final combiner inputs (AB + (1-A)C + D)
[PSFinalCombinerInputsABCD]
A = PS_REGISTER_ZERO
B = PS_REGISTER_R0 | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_RGB
C = PS_REGISTER_R0 | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_RGB
D = PS_REGISTER_ZERO

; Final combiner inputs (continued)
[PSFinalCombinerInputsEFG]
E = PS_REGISTER_ZERO
F = PS_REGISTER_ZERO
G = PS_REGISTER_R0 | PS_INPUTMAPPING_UNSIGNED_IDENTITY | PS_CHANNEL_ALPHA
flags = PS_FINALCOMBINERSETTING_CLAMP_SUM

