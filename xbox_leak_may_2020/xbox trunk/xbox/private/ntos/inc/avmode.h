/*
 * AV modes and tables.  
 */

#pragma once

// Update when we add modes after release.

#define AV_MODE_TABLE_VERSION  0

//
// Mode enum values where:
//
//  0xC0000000 - output mode mask:
//
//    0x00000000 - 480 line SDTV
//    0x40000000 - 525 line SDTV
//    0x80000000 - HDTV
//    0xC0000000 - VGA
//
//  0x20000000 - use SCART output
//  0x10000000 - enable WSS
//
//  0x08000000 - disable DAC D
//  0x04000000 - disable DAC C
//  0x02000000 - disable DAC B
//  0x01000000 - disable DAC A
//
//  0x00FF0000 - register table index
//  0x0000FF00 - CRTC table index
//  0x000000FF - TV table index, based on output mode mask above
//

#define AV_MODE_OFF                                 0x00000000

#define AV_MODE_640x480_TO_NTSC_M_YC                0x04010101
#define AV_MODE_640x480_TO_NTSC_M_YC_16x9           0x14010101
#define AV_MODE_720x480_TO_NTSC_M_YC                0x04020202
#define AV_MODE_720x480_TO_NTSC_M_YC_16x9           0x14020202
#define AV_MODE_640x480_TO_NTSC_M_RGB               0x20010101
#define AV_MODE_640x480_TO_NTSC_M_RGB_16x9          0x30010101
#define AV_MODE_720x480_TO_NTSC_M_RGB               0x20020202
#define AV_MODE_720x480_TO_NTSC_M_RGB_16x9          0x30020202

#define AV_MODE_640x480_TO_NTSC_J_YC                0x04010103
#define AV_MODE_640x480_TO_NTSC_J_YC_16x9           0x14010103
#define AV_MODE_720x480_TO_NTSC_J_YC                0x04020204
#define AV_MODE_720x480_TO_NTSC_J_YC_16x9           0x14020204
#define AV_MODE_640x480_TO_NTSC_J_RGB               0x20010103
#define AV_MODE_640x480_TO_NTSC_J_RGB_16x9          0x30010103
#define AV_MODE_720x480_TO_NTSC_J_RGB               0x20020204
#define AV_MODE_720x480_TO_NTSC_J_RGB_16x9          0x30020204

#define AV_MODE_640x480_TO_PAL_M_YC                 0x04010105
#define AV_MODE_640x480_TO_PAL_M_YC_16x9            0x14010105
#define AV_MODE_720x480_TO_PAL_M_YC                 0x04020206
#define AV_MODE_720x480_TO_PAL_M_YC_16x9            0x14020206
#define AV_MODE_640x480_TO_PAL_M_RGB                0x20010105
#define AV_MODE_640x480_TO_PAL_M_RGB_16x9           0x30010105
#define AV_MODE_720x480_TO_PAL_M_RGB                0x20020206
#define AV_MODE_720x480_TO_PAL_M_RGB_16x9           0x30020206

#define AV_MODE_640x480_TO_PAL_I_YC                 0x44030307
#define AV_MODE_640x480_TO_PAL_I_YC_16x9            0x54030307
#define AV_MODE_720x480_TO_PAL_I_YC                 0x44040408
#define AV_MODE_720x480_TO_PAL_I_YC_16x9            0x54040408
#define AV_MODE_640x576_TO_PAL_I_YC                 0x44050509
#define AV_MODE_640x576_TO_PAL_I_YC_16x9            0x54050509
#define AV_MODE_720x576_TO_PAL_I_YC                 0x4406060A
#define AV_MODE_720x576_TO_PAL_I_YC_16x9            0x5406060A
#define AV_MODE_640x480_TO_PAL_I_RGB                0x60030307
#define AV_MODE_640x480_TO_PAL_I_RGB_16x9           0x70030307
#define AV_MODE_720x480_TO_PAL_I_RGB                0x60040408
#define AV_MODE_720x480_TO_PAL_I_RGB_16x9           0x70040408
#define AV_MODE_640x576_TO_PAL_I_RGB                0x60050509
#define AV_MODE_640x576_TO_PAL_I_RGB_16x9           0x70050509
#define AV_MODE_720x576_TO_PAL_I_RGB                0x6006060A
#define AV_MODE_720x576_TO_PAL_I_RGB_16x9           0x7006060A
                                                    
#define AV_MODE_640x480_TO_PAL_60_YC                0x0401010B
#define AV_MODE_640x480_TO_PAL_60_YC_16x9           0x1401010B
#define AV_MODE_720x480_TO_PAL_60_YC                0x0402020C
#define AV_MODE_720x480_TO_PAL_60_YC_16x9           0x1402020C
#define AV_MODE_640x480_TO_PAL_60_RGB               0x2001010B
#define AV_MODE_640x480_TO_PAL_60_RGB_16x9          0x3001010B
#define AV_MODE_720x480_TO_PAL_60_RGB               0x2002020C
#define AV_MODE_720x480_TO_PAL_60_RGB_16x9          0x3002020C

#define AV_MODE_640x480_TO_NTSC_YPrPb               0x0801010D
#define AV_MODE_640x480_TO_NTSC_YPrPb_16x9          0x1801010D
#define AV_MODE_720x480_TO_NTSC_YPrPb               0x0802020E
#define AV_MODE_720x480_TO_NTSC_YPrPb_16x9          0x1802020E

#define AV_MODE_640x480_FPAR_TO_NTSC_M_YC           0x040F0D0F
#define AV_MODE_640x480_FPAR_TO_NTSC_M_YC_16x9      0x140F0D0F
#define AV_MODE_640x480_FPAR_TO_NTSC_M_RGB          0x200F0D0F
#define AV_MODE_640x480_FPAR_TO_NTSC_M_RGB_16x9     0x300F0D0F

#define AV_MODE_640x480_FPAR_TO_NTSC_J_YC           0x040F0D10
#define AV_MODE_640x480_FPAR_TO_NTSC_J_YC_16x9      0x140F0D10
#define AV_MODE_640x480_FPAR_TO_NTSC_J_RGB          0x200F0D10
#define AV_MODE_640x480_FPAR_TO_NTSC_J_RGB_16x9     0x300F0D10

#define AV_MODE_640x480_FPAR_TO_PAL_60_YC           0x040F0D11
#define AV_MODE_640x480_FPAR_TO_PAL_60_YC_16x9      0x140F0D11
#define AV_MODE_640x480_FPAR_TO_PAL_60_RGB          0x200F0D11
#define AV_MODE_640x480_FPAR_TO_PAL_60_RGB_16x9     0x300F0D11

#define AV_MODE_640x480_FPAR_TO_NTSC_YPrPb          0x080F0D12
#define AV_MODE_640x480_FPAR_TO_NTSC_YPrPb_16x9     0x180F0D12

#define AV_MODE_640x480_FPAR_TO_PAL_I_YC            0x44100E13
#define AV_MODE_640x480_FPAR_TO_PAL_I_YC_16x9       0x54100E13
#define AV_MODE_640x480_FPAR_TO_PAL_I_RGB           0x60100E13
#define AV_MODE_640x480_FPAR_TO_PAL_I_RGB_16x9      0x70100E13

#define AV_MODE_640x480_TO_PAL_I_YPrPb              0x48030314
#define AV_MODE_640x480_TO_PAL_I_YPrPb_16x9         0x58030314
#define AV_MODE_720x480_TO_PAL_I_YPrPb              0x48040415
#define AV_MODE_720x480_TO_PAL_I_YPrPb_16x9         0x58040415
#define AV_MODE_640x576_TO_PAL_I_YPrPb              0x48050516
#define AV_MODE_640x576_TO_PAL_I_YPrPb_16x9         0x58050516
#define AV_MODE_720x576_TO_PAL_I_YPrPb              0x48060617
#define AV_MODE_720x576_TO_PAL_I_YPrPb_16x9         0x58060617
#define AV_MODE_640x480_FPAR_TO_PAL_I_YPrPb         0x48100E18
#define AV_MODE_640x480_FPAR_TO_PAL_I_YPrPb_16x9    0x58100E18

#define AV_MODE_640x480_TO_PAL_60_YPrPb             0x08010119
#define AV_MODE_640x480_TO_PAL_60_YPrPb_16x9        0x18010119
#define AV_MODE_720x480_TO_PAL_60_YPrPb             0x0802021A
#define AV_MODE_720x480_TO_PAL_60_YPrPb_16x9        0x1802021A
#define AV_MODE_640x480_FPAR_TO_PAL_60_YPrPb        0x080F0D1B
#define AV_MODE_640x480_FPAR_TO_PAL_60_YPrPb_16x9   0x180F0D1B

#define AV_MODE_640x576_FPAR_TO_PAL_I_YC            0x4412101C
#define AV_MODE_640x576_FPAR_TO_PAL_I_YC_16x9       0x5412101C
#define AV_MODE_640x576_FPAR_TO_PAL_I_RGB           0x6012101C
#define AV_MODE_640x576_FPAR_TO_PAL_I_RGB_16x9      0x7012101C
#define AV_MODE_640x576_FPAR_TO_PAL_I_YPrPb         0x4812101D
#define AV_MODE_640x576_FPAR_TO_PAL_I_YPrPb_16x9    0x5812101D

#define AV_MODE_640x480_TO_VGA                      0x88070701
#define AV_MODE_720x480_TO_VGA                      0x88080801
#define AV_MODE_1280x720_TO_VGA                     0x880B0A02
#define AV_MODE_1920x1080_TO_VGA                    0x880E0C03

#define AV_MODE_640x480_TO_480P                     0x88070701
#define AV_MODE_720x480_TO_480P                     0x88080801
#define AV_MODE_1280x720P_TO_720P                   0x880B0A02
#define AV_MODE_1920x1080I_TO_1080I                 0x880E0C03

#define AV_MODE_640x480_FPAR_TO_480P                0x88110F01

#define AV_MODE_FLAGS_DACA_DISABLE                  0x01000000
#define AV_MODE_FLAGS_DACB_DISABLE                  0x02000000
#define AV_MODE_FLAGS_DACC_DISABLE                  0x04000000
#define AV_MODE_FLAGS_DACD_DISABLE                  0x08000000

#define AV_MODE_FLAGS_WSS                           0x10000000
#define AV_MODE_FLAGS_SCART                         0x20000000
#define AV_MODE_FLAGS_NTSCJ                         0x00000080

#define AV_MODE_OUT_MASK                            0xC0000000
#define AV_MODE_OUT_480SDTV                         0x00000000

// BAH!  This should be 576SDTV, but it's too late to change it now.
#define AV_MODE_OUT_525SDTV                         0x40000000
#define AV_MODE_OUT_HDTV                            0x80000000
#define AV_MODE_OUT_VGA                             0xC0000000

#ifdef DEFINE_REGISTERS

#define AVP_MV_NTSC_MODE_0           1
#define AVP_MV_NTSC_MODE_1           2
#define AVP_MV_NTSC_MODE_2           3
#define AVP_MV_NTSC_MODE_3           4
#define AVP_MV_PAL_MODE_0            1
#define AVP_MV_PAL_MODE_1            2

//
// FOCUS
//

#ifdef FOCUS

const UCHAR AvpFocusFPGAPLLRegisters[ ][9] =
{
    { /* offset */ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08}, /* offset */
    { /*      1 */ 0x41, 0x01, 0x78, 0x00, 0x00, 0xff, 0x03, 0x00, 0x5a}, /*      1 */
};


const UCHAR AvpTVRegisters[ ][137] =
{
    { /* offset */ 0x7e, 0x0c, 0x0d, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x26, 0x27, 0x38, 0x39, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x80, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x92, 0x93, 0x9a, 0x9b, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xb2, 0xb3, 0xb6, 0xb7, 0xc0, 0xc1, 0x0c, 0x0d, 0x0c, 0x0d, 0x7e}, /* offset */
    { /*     01 */ 0x01, 0x01, 0x00, 0xb0, 0x00, 0x18, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x47, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     01 */
    { /*     02 */ 0x01, 0x01, 0x00, 0x88, 0x00, 0x18, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x47, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     02 */
    { /*     03 */ 0x01, 0x01, 0x00, 0xb0, 0x00, 0x18, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x3c, 0x01, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     03 */
    { /*     04 */ 0x01, 0x01, 0x00, 0x88, 0x00, 0x18, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x3c, 0x01, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     04 */
    { /*     05 */ 0x01, 0x01, 0x00, 0xb0, 0x00, 0x18, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xe6, 0xef, 0xe3, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x29, 0x1d, 0x01, 0x3f, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x12, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x40, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     05 */
    { /*     06 */ 0x01, 0x01, 0x00, 0x88, 0x00, 0x18, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xe6, 0xef, 0xe3, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x29, 0x1d, 0x01, 0x3f, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x12, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x40, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     06 */
    { /*     07 */ 0x01, 0x01, 0x01, 0x8c, 0x00, 0x17, 0x00, 0x80, 0x02, 0xc3, 0x30, 0x00, 0x10, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0xd7, 0x0d, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0xa4, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     07 */
    { /*     08 */ 0x01, 0x01, 0x01, 0x64, 0x00, 0x17, 0x00, 0xd0, 0x02, 0xc3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0xd7, 0x0d, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0xa4, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     08 */
    { /*     09 */ 0x01, 0x01, 0x01, 0x8c, 0x00, 0x1a, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0x7a, 0x10, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     09 */
    { /*     0a */ 0x01, 0x01, 0x01, 0x64, 0x00, 0x1a, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0x7a, 0x10, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     0a */
    { /*     0b */ 0x01, 0x01, 0x00, 0xb0, 0x00, 0x18, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x91, 0x04, 0x91, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x1a, 0xff, 0x03, 0x1e, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x41, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     0b */
    { /*     0c */ 0x01, 0x01, 0x00, 0x88, 0x00, 0x18, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x91, 0x04, 0x91, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x1a, 0xff, 0x03, 0x1e, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x41, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     0c */
    { /*     0d */ 0x01, 0x01, 0x00, 0xb0, 0x00, 0x18, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x47, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     0d */
    { /*     0e */ 0x01, 0x01, 0x00, 0x88, 0x00, 0x18, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x47, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     0e */
    { /*     0f */ 0x01, 0x01, 0x00, 0xab, 0x00, 0x18, 0x00, 0x88, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x47, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     0f */
    { /*     10 */ 0x01, 0x01, 0x00, 0xab, 0x00, 0x18, 0x00, 0x88, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x3c, 0x01, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     10 */
    { /*     11 */ 0x01, 0x01, 0x00, 0xab, 0x00, 0x18, 0x00, 0x88, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x91, 0x04, 0x91, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x1a, 0xff, 0x03, 0x1e, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x41, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     11 */
    { /*     12 */ 0x01, 0x01, 0x00, 0xab, 0x00, 0x18, 0x00, 0x88, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x21, 0xf0, 0x7c, 0x1f, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x40, 0x80, 0x3b, 0x00, 0x01, 0x47, 0x00, 0x3c, 0x00, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x03, 0x89, 0x04, 0x89, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x19, 0xff, 0x03, 0x24, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x04, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x6f, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     12 */
    { /*     13 */ 0x01, 0x01, 0x01, 0x87, 0x00, 0x17, 0x00, 0x88, 0x02, 0xc3, 0x30, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0xd7, 0x0d, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0xa4, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     13 */
    { /*     14 */ 0x01, 0x01, 0x01, 0x8c, 0x00, 0x17, 0x00, 0x80, 0x02, 0xc3, 0x30, 0x00, 0x10, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0xd7, 0x0d, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0xa4, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     14 */
    { /*     15 */ 0x01, 0x01, 0x01, 0x64, 0x00, 0x17, 0x00, 0xd0, 0x02, 0xc3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0xd7, 0x0d, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0xa4, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     15 */
    { /*     16 */ 0x01, 0x01, 0x01, 0x8c, 0x00, 0x1a, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0x7a, 0x10, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     16 */
    { /*     17 */ 0x01, 0x01, 0x01, 0x64, 0x00, 0x1a, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0x7a, 0x10, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     17 */
    { /*     18 */ 0x01, 0x01, 0x01, 0x87, 0x00, 0x17, 0x00, 0x88, 0x02, 0xc3, 0x30, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0xd7, 0x0d, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0xa4, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     18 */
    { /*     19 */ 0x01, 0x01, 0x00, 0xb0, 0x00, 0x18, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x91, 0x04, 0x91, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x1a, 0xff, 0x03, 0x1e, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x41, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     19 */
    { /*     1a */ 0x01, 0x01, 0x00, 0x88, 0x00, 0x18, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x91, 0x04, 0x91, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x1a, 0xff, 0x03, 0x1e, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x41, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     1a */
    { /*     1b */ 0x01, 0x01, 0x00, 0xab, 0x00, 0x18, 0x00, 0x88, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x00, 0x15, 0x00, 0x10, 0xff, 0x0e, 0x00, 0x90, 0xfc, 0x36, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1d, 0x25, 0x1b, 0x1b, 0x24, 0x00, 0x0f, 0x0f, 0x60, 0x01, 0xcd, 0x01, 0x91, 0x04, 0x91, 0x01, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x1a, 0xff, 0x03, 0x1e, 0x0f, 0x78, 0x00, 0x00, 0x14, 0x41, 0x08, 0x00, 0xa3, 0xc8, 0x11, 0x07, 0x11, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x55, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     1b */
    { /*     1c */ 0x01, 0x01, 0x01, 0x87, 0x00, 0x1a, 0x00, 0x88, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0x7a, 0x10, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x00, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc4, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     1c */
    { /*     1d */ 0x01, 0x01, 0x01, 0x87, 0x00, 0x1a, 0x00, 0x88, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x01, 0x15, 0x00, 0xc0, 0x7a, 0x10, 0x00, 0x00, 0xeb, 0x41, 0x00, 0xef, 0x07, 0x7f, 0x00, 0x03, 0x03, 0x0c, 0x00, 0x82, 0x00, 0x2a, 0x09, 0x8a, 0xcb, 0x00, 0x00, 0x89, 0x04, 0x7a, 0x3c, 0x9a, 0x2c, 0x1f, 0x01, 0x3f, 0x00, 0x3e, 0x03, 0x1a, 0x2a, 0x1c, 0x3d, 0x14, 0x00, 0xfe, 0x7e, 0x60, 0x05, 0xcd, 0x01, 0x91, 0x07, 0x91, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x1a, 0x55, 0x01, 0x1e, 0x07, 0x7e, 0x02, 0x54, 0x16, 0x49, 0x08, 0x00, 0xa3, 0xc8, 0x22, 0x02, 0x22, 0x3e, 0x03, 0x77, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x13, 0x13, 0x9c, 0x03, 0xc5, 0x48, 0x00, 0x80, 0xe4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xd7, 0x05, 0xf0, 0x00, 0xa0, 0xa0, 0x03, 0x01, 0x00, 0x01, 0x00}, /*     1d */
};


const UCHAR AvpFocusFPGAHDPLLRegisters[ ][9] =
{
    { /* offset */ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08}, /* offset */
    { /*     01 */ 0x41, 0x01, 0x78, 0x00, 0x00, 0xff, 0x03, 0x00, 0x5a}, /*     01 */
    { /*     02 */ 0x41, 0x01, 0xf8, 0x00, 0x00, 0xff, 0x03, 0x00, 0x5a}, /*     02 */
    { /*     03 */ 0x41, 0x01, 0xf8, 0x00, 0x00, 0xff, 0x03, 0x00, 0x5a}, /*     03 */
};


//##
const UCHAR AvpHDTVRegisters[ ][66] =
{
    { /* offset */ 0x7e, 0x0c, 0x0d, 0x0a, 0x0b, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x26, 0x27, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xb2, 0xb3, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, 0x0c, 0x0d, 0x0c, 0x0d, 0x7e}, /* offset */
    { /*     01 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0x03, 0x7f, 0x00, 0x07, 0x07, 0x0c, 0x00, 0x3e, 0x48, 0x3f, 0x3f, 0x3b, 0x00, 0x1b, 0x03, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x00, 0xa0, 0x00, 0x92, 0x00, 0x00, 0x00, 0xf0, 0x00, 0xb7, 0x00, 0xd0, 0x02, 0x23, 0x00, 0xe0, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     01 */
    { /*     02 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x04, 0xc7, 0x00, 0x01, 0x01, 0x0c, 0x00, 0x2e, 0x58, 0x28, 0x46, 0xdc, 0x00, 0x2c, 0x06, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x00, 0xa0, 0x00, 0x92, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x72, 0x01, 0x00, 0x05, 0x18, 0x00, 0xd0, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     02 */
    { /*     03 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x04, 0xc7, 0x00, 0x01, 0x01, 0x0c, 0x00, 0xae, 0x58, 0x2c, 0x2c, 0x58, 0x00, 0x6c, 0x08, 0x01, 0x00, 0xe4, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x00, 0xa0, 0x00, 0x92, 0x00, 0x00, 0x00, 0xf0, 0x00, 0xe5, 0x00, 0x80, 0x07, 0x14, 0x00, 0x1c, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00}, /*     03 */
};


const UCHAR AvpFocusRGBEnable[ ][16] =
{
    { /* offset */ 0x4E, 0x4F, 0x92, 0x93, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad}, /* offset */
    { /*  mask  */ 0xFF, 0xFF, 0x07, 0x40, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff}, /*   mask */
    { /*    RGB */ 0x3C, 0x01, 0x01, 0x00, 0x4d, 0x00, 0x96, 0x00, 0x1d, 0x00, 0xa0, 0x00, 0xdb, 0x00, 0x7e, 0x00}, /*    RGB */
};


// The setup value here is wrong if we're in RGB mode.  This needs
// to be whacked in some way...waiting for info from Ron.  Ron does
// not remmember what this note means but will validate these values.
//
const UCHAR AvpMacrovision[ ][15] =
{
    { /* offset */ 0x4e, 0x50, 0x52, 0x53, 0x59, 0x5d, 0x5e, 0x64, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0xb2, 0xb3}, /* offset */
    { /*    Off */ 0x47, 0x3c, 0x1d, 0x25, 0x00, 0x01, 0xcd, 0x00, 0x11, 0x07, 0x11, 0x3c, 0x00, 0x55, 0x05}, /*    Off */
    { /*    AGC */ 0x38, 0x2d, 0x1d, 0x25, 0x36, 0x01, 0xbe, 0x00, 0x11, 0x07, 0x11, 0x3b, 0x03, 0x4d, 0x03}, /*    AGC */
    { /* AGC+2L */ 0x38, 0x2d, 0x1d, 0x25, 0x3e, 0x01, 0xbe, 0x00, 0x11, 0x07, 0x11, 0x3b, 0x03, 0x4d, 0x03}, /* AGC+2L */
    { /* AGC+4L */ 0x38, 0x2d, 0x17, 0x21, 0x3e, 0x05, 0xbe, 0x02, 0x15, 0x05, 0x15, 0x3b, 0x03, 0x4d, 0x03}, /* AGC+4L */
};

const UCHAR AvpMacrovisionPAL[ ][7] =
{
    { /* offset */ 0x4e, 0x50, 0x59, 0x5e, 0x7d, 0xb2, 0xb3}, /* offset */
    { /*PAL Off */ 0x3f, 0x3e, 0x00, 0xcd, 0x03, 0xd7, 0x05}, /*PAL Off */
    { /* PAL On */ 0x33, 0x32, 0x3e, 0xc1, 0x02, 0x0c, 0x03}, /* PAL On */
};

// 0x00680880 - NV_PRAMDAC_FP_DEBUG_0
// 0x00680898 - NV_PRAMDAC_FP_DEBUG_6
// 0x0068089C - NV_PRAMDAC_FP_DEBUG_7
// 0x006808C0 - NV_PRAMDAC_TVO_SETUP
// 0x006808C4 - NV_PRAMDAC_TVO_BLANK_COLOR
// 0x0068084C - NV_PRAMDAC_FP_INACTIVE_PXL_COLOR
// 0x00680630 - NV_PRAMDAC_COMPOSITE
// 0x00680800 - NV_PRAMDAC_FP_VDISPLAY_END
// 0x00680804 - NV_PRAMDAC_FP_VTOTAL
// 0x00680808 - NV_PRAMDAC_FP_VCRTC
// 0x0068080C - NV_PRAMDAC_FP_VSYNC_START
// 0x00680810 - NV_PRAMDAC_FP_VSYNC_END
// 0x00680814 - NV_PRAMDAC_FP_VVALID_START
// 0x00680818 - NV_PRAMDAC_FP_VVALID_END
// 0x00680820 - NV_PRAMDAC_FP_HDISPLAY_END
// 0x00680824 - NV_PRAMDAC_FP_HTOTAL
// 0x00680828 - NV_PRAMDAC_FP_HCRTC
// 0x0068082C - NV_PRAMDAC_FP_HSYNC_START
// 0x00680830 - NV_PRAMDAC_FP_HSYNC_END
// 0x00680834 - NV_PRAMDAC_FP_HVALID_START
// 0x00680838 - NV_PRAMDAC_FP_HVALID_END
// 0x00680848 - NV_PRAMDAC_FP_TG_CONTROL
// 0x00680680 - NV_PRAMDAC_LGS_HSYNC_NUMERATOR
// 0x00680684 - NV_PRAMDAC_LGS_HSYNC_DENOMINATOR
// 0x00680688 - NV_PRAMDAC_LGS_HSYNC_HIGH
// 0x0068068C - NV_PRAMDAC_LGS_HSYNC_HIGH_VSYNC
// 0x00680690 - NV_PRAMDAC_LGS_SWITCHES
//
const ULONG _declspec(selectany) AvpRegisters[][26] =
{
    { /* offset */ 0x00680898, 0x0068089C, 0x006808C0, 0x006808C4, 0x0068084C, 0x00680630, 0x00680800, 0x00680804, 0x00680808, 0x0068080C, 0x00680810, 0x00680814, 0x00680818, 0x00680820, 0x00680824, 0x00680828, 0x0068082C, 0x00680830, 0x00680834, 0x00680838, 0x00680848, 0x00680680, 0x00680684, 0x00680688, 0x0068068C, 0x00680690 }, /* offset */
    { /*      1 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001F2, 0x000001F4, 0x00000000, 0x000001DF, 0x0000027F, 0x000003A7, 0x00000257, 0x000002F3, 0x00000333, 0x00000000, 0x0000027F, 0x10100111, 0x000C6ED0, 0x0000020D, 0x0000009B, 0x0000026C, 0x00000000 }, /*  1 */
    { /*      2 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001F2, 0x000001F4, 0x00000000, 0x000001DF, 0x000002CF, 0x000003A7, 0x000002A7, 0x0000031B, 0x0000035B, 0x00000000, 0x000002CF, 0x10100111, 0x000DF05C, 0x0000020D, 0x000000AE, 0x000002B8, 0x00000000 }, /*  2 */
    { /*      3 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001F4, 0x000001F6, 0x00000000, 0x000001DF, 0x0000027F, 0x0000035F, 0x00000257, 0x000002CF, 0x0000030F, 0x00000000, 0x0000027F, 0x10100111, 0x000F387C, 0x00000271, 0x000000BE, 0x000002F8, 0x00000000 }, /*  3 */
    { /*      4 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001F4, 0x000001F6, 0x00000000, 0x000001DF, 0x000002CF, 0x0000035F, 0x000002AF, 0x0000030B, 0x0000034B, 0x00000000, 0x000002CF, 0x10100111, 0x0010D2A4, 0x00000271, 0x000000D2, 0x00000348, 0x00000000 }, /*  4 */
    { /*      5 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x0000023F, 0x00000270, 0x0000023F, 0x00000256, 0x00000258, 0x00000000, 0x0000023F, 0x0000027F, 0x0000035F, 0x00000257, 0x000002CF, 0x0000030F, 0x00000000, 0x0000027F, 0x10100111, 0x000F07A8, 0x00000271, 0x0000009D, 0x00000276, 0x00000000 }, /*  5 */
    { /*      6 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x0000023F, 0x00000270, 0x0000023F, 0x00000256, 0x00000258, 0x00000000, 0x0000023F, 0x000002CF, 0x0000035F, 0x000002AF, 0x0000030B, 0x0000034B, 0x00000000, 0x000002CF, 0x10100111, 0x0010E62C, 0x00000271, 0x000000B1, 0x000002C4, 0x00000000 }, /*  6 */
    { /*      7 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EE, 0x00000000, 0x000001DF, 0x000002CF, 0x00000359, 0x0000029F, 0x000002E1, 0x00000320, 0x00000000, 0x000002CF, 0x10100011, 0x0000035A, 0x00000001, 0x000000AB, 0x000002AE, 0x00000001 }, /*  7 */
    { /*      8 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EE, 0x00000000, 0x000001DF, 0x000002CF, 0x00000359, 0x0000029F, 0x000002E1, 0x00000320, 0x00000000, 0x000002CF, 0x10100111, 0x0000035A, 0x00000001, 0x000000AB, 0x000002AE, 0x00000001 }, /*  8 */
    { /*      9 */ 0x0AA94000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x000002CF, 0x000002ED, 0x000002CF, 0x000002D4, 0x000002D9, 0x00000000, 0x000002CF, 0x000004FF, 0x00000671, 0x000004FF, 0x00000545, 0x00000595, 0x000000A0, 0x0000045F, 0x10100011, 0x00000672, 0x00000001, 0x0000014A, 0x00000528, 0x00000001 }, /*  9 */
    { /*      A */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x000002CF, 0x000002ED, 0x000002CF, 0x000002D4, 0x000002D9, 0x00000000, 0x000002CF, 0x000004FF, 0x00000671, 0x000004CF, 0x00000545, 0x00000595, 0x00000000, 0x000004FF, 0x10100011, 0x00000672, 0x00000001, 0x0000014A, 0x00000528, 0x00000001 }, /*  A */
    { /*      B */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x000002CF, 0x000002ED, 0x000002CF, 0x000002D4, 0x000002D9, 0x00000000, 0x000002CF, 0x000004FF, 0x00000671, 0x000004FF, 0x00000545, 0x00000595, 0x00000000, 0x000004FF, 0x10100111, 0x00000672, 0x00000001, 0x0000014A, 0x00000528, 0x00000001 }, /*  B */
    { /*      C */ 0x071AE000, 0x07183800, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x00000437, 0x00000464, 0x0000043C, 0x0000043C, 0x00000446, 0x00000000, 0x00000437, 0x0000077F, 0x00000897, 0x000007AA, 0x000007AB, 0x00000803, 0x000000F0, 0x0000068F, 0x10133011, 0x00000898, 0x00000001, 0x000001B8, 0x000006E0, 0x00000001 }, /*  C */
    { /*      D */ 0x10000000, 0x07183800, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x00000437, 0x00000464, 0x0000043C, 0x0000043C, 0x00000446, 0x00000000, 0x00000437, 0x0000077F, 0x00000897, 0x00000759, 0x000007AB, 0x00000803, 0x00000000, 0x0000077F, 0x10133011, 0x00000898, 0x00000001, 0x000001B8, 0x000006E0, 0x00000001 }, /*  D */
    { /*      E */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x00000437, 0x00000464, 0x0000043B, 0x0000043B, 0x00000445, 0x00000000, 0x00000437, 0x0000077F, 0x00000897, 0x000007AB, 0x000007AC, 0x00000804, 0x00000000, 0x0000077F, 0x10133111, 0x00000898, 0x00000001, 0x000001B8, 0x000006E0, 0x00000001 }, /*  E */
    { /*      F */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001F2, 0x000001F4, 0x00000000, 0x000001DF, 0x0000027F, 0x000003A7, 0x000002A7, 0x000002F3, 0x00000333, 0x00000000, 0x0000027F, 0x10100111, 0x000DF05C, 0x0000020D, 0x000000AE, 0x000002B8, 0x00000000 }, /*  F */
    { /*     10 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001F4, 0x000001F6, 0x00000000, 0x000001DF, 0x0000027F, 0x0000035F, 0x000002A7, 0x000002CF, 0x0000030F, 0x00000000, 0x0000027F, 0x10100111, 0x000DF05C, 0x0000020D, 0x000000AE, 0x000002B8, 0x00000000 }, /* 10 */
    { /*     11 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EE, 0x00000000, 0x000001DF, 0x000002CF, 0x00000359, 0x000002CF, 0x000002DF, 0x0000031E, 0x00000020, 0x000002AD, 0x10100011, 0x0000035A, 0x00000001, 0x000000AB, 0x000002AE, 0x00000001 }, /* 11 */
    { /*     12 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x0000023F, 0x00000270, 0x0000023F, 0x00000256, 0x00000258, 0x00000000, 0x0000023F, 0x0000027F, 0x0000035F, 0x00000257, 0x000002CF, 0x0000030F, 0x00000000, 0x0000027F, 0x10100111, 0x000F07A8, 0x00000271, 0x0000009D, 0x00000276, 0x00000000 }, /* 12 */
};

const UCHAR _declspec(selectany) AvpCRTCRegisters[][34] =
{
    { /* offset */ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x20, 0x25, 0x2D, 0x33, 0x39, 0x41 }, /* offset */
    { /*      1 */ 0x70, 0x4F, 0x4F, 0x94, 0x5D, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x04, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      1 */
    { /*      2 */ 0x70, 0x59, 0x59, 0x94, 0x62, 0xA4, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x04, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      2 */
    { /*      3 */ 0x67, 0x4F, 0x4F, 0x8B, 0x59, 0xBB, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x06, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      3 */
    { /*      4 */ 0x67, 0x59, 0x59, 0x8B, 0x5E, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x06, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      4 */
    { /*      5 */ 0x67, 0x4F, 0x4F, 0x8B, 0x59, 0xBB, 0x6F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x08, 0x3F, 0x00, 0x00, 0x3F, 0x70, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      5 */
    { /*      6 */ 0x67, 0x59, 0x59, 0x8B, 0x5E, 0xBF, 0x6F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x08, 0x3F, 0x00, 0x00, 0x3F, 0x70, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      6 */
    { /*      7 */ 0x59, 0x4F, 0x4F, 0x9D, 0x51, 0x39, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0E, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      7 */
    { /*      8 */ 0x63, 0x59, 0x59, 0x87, 0x5B, 0xA3, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0E, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      8 */
    { /*      9 */ 0x78, 0x4F, 0x4F, 0x9C, 0x57, 0xA1, 0xFC, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x09, 0xDF, 0x00, 0x00, 0xDF, 0xFD, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      9 */
    { /*      A */ 0xC8, 0x9F, 0x9F, 0x8C, 0xA7, 0x31, 0xEC, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD4, 0x09, 0xCF, 0x00, 0x00, 0xCF, 0xED, 0xE3, 0xFF, 0x00, 0x38, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      A */
    { /*      B */ 0x67, 0x4F, 0x4F, 0x8B, 0x54, 0xBF, 0x03, 0x11, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x06, 0xEF, 0x00, 0x00, 0xEF, 0x04, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0x36, 0x00 }, /*      B */
    { /*      C */ 0x04, 0xEF, 0xEF, 0x88, 0xF4, 0x3F, 0x2F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x02, 0x1B, 0x00, 0x00, 0x1B, 0x30, 0xE3, 0xFF, 0x00, 0x38, 0x05, 0x80, 0x00, 0x01, 0x11, 0x10, 0x00 }, /*      C */
    { /*      D */ 0x70, 0x4F, 0x4F, 0x94, 0x5D, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x04, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      D */
    { /*      E */ 0x67, 0x4F, 0x4F, 0x8B, 0x59, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x06, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x00, 0x00, 0x11, 0xFF, 0x00 }, /*      E */
    { /*      F */ 0x61, 0x57, 0x57, 0x85, 0x59, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0E, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      F */
    { /*     10 */ 0x67, 0x4F, 0x4F, 0x94, 0x59, 0xBF, 0x6F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x08, 0x3F, 0x00, 0x00, 0x3F, 0x70, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*     10 */
};

#else !FOCUS

//
// CONEXTANT
//

const UCHAR _declspec(selectany) AvpCommonTVRegisters[][22] =
{
    { /* offset */ 0x2E, 0x30, 0x32, 0x34, 0x38, 0x3A, 0x3C, 0x40, 0x60, 0x62, 0x64, 0x6C, 0x6E, 0x70, 0x72, 0x74, 0xC4, 0xC6, 0xC8, 0xCA, 0xCC, 0xD8 }, /* offset */
    { /*      1 */ 0x00, 0x00, 0x28, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x46, 0x00, 0x0F, 0x00, 0x01, 0x01, 0x9C, 0x9B, 0xC0, 0xC0, 0x40 }, /*      1 */
};

const UCHAR _declspec(selectany) AvpTVRegisters[][63] =
{
    { /* offset */ 0xD6, 0x36, 0x3E, 0x5A, 0x5C, 0x66, 0x68, 0x6A, 0x76, 0x78, 0x7A, 0x7C, 0x7E, 0x80, 0x82, 0x84, 0x86, 0x88, 0x8A, 0x8C, 0x8E, 0x90, 0x92, 0x94, 0x96, 0x98, 0x9A, 0x9C, 0x9E, 0xA0, 0xA2, 0xA4, 0xA6, 0xA8, 0xAA, 0xAC, 0xAE, 0xB0, 0xB2, 0xB4, 0xB6, 0xCE, 0xDA, 0xDC, 0xDE, 0xE0, 0xE2, 0xE4, 0xE6, 0xE8, 0xEA, 0xEC, 0xEE, 0xF0, 0xF2, 0xF4, 0xF6, 0xF8, 0xFA, 0xFC, }, /* offset */
    { /*      1 */ 0x00, 0xA4, 0x80, 0xFF, 0x01, 0x15, 0x4B, 0x00, 0x10, 0x88, 0x72, 0x85, 0x44, 0xED, 0x13, 0xF2, 0x26, 0x00, 0x08, 0x73, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x10, 0x68, 0xDA, 0x0A, 0x0A, 0xE4, 0x7C, 0xCB, 0x8F, 0x9A, 0x12, 0x99, 0x86, 0x25, 0x5A, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      1 */
    { /*      2 */ 0x00, 0xA4, 0x80, 0xFF, 0x01, 0xF8, 0x42, 0x00, 0xCC, 0xD8, 0x80, 0x98, 0x5C, 0x07, 0x13, 0xF2, 0x26, 0x00, 0x66, 0x7F, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xF7, 0x2A, 0x0C, 0x0A, 0xE4, 0x7B, 0xCA, 0x8E, 0x9A, 0xC8, 0xA4, 0x78, 0x21, 0x5E, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      2 */
    { /*      3 */ 0x00, 0xA4, 0x80, 0xFF, 0x01, 0x15, 0x4B, 0x00, 0x10, 0x88, 0x72, 0x85, 0x44, 0xED, 0x13, 0xF2, 0x26, 0x00, 0x08, 0x73, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x10, 0x68, 0xDA, 0x0A, 0x08, 0xE4, 0x7C, 0xDC, 0x9A, 0xA7, 0x12, 0x99, 0x86, 0x25, 0x5A, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      3 */
    { /*      4 */ 0x00, 0xA4, 0x80, 0xFF, 0x01, 0xF8, 0x42, 0x00, 0xCC, 0xD8, 0x80, 0x98, 0x5C, 0x07, 0x13, 0xF2, 0x26, 0x00, 0x66, 0x7F, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xF7, 0x2A, 0x0C, 0x08, 0xE4, 0x7B, 0xDB, 0x9A, 0xA7, 0xC8, 0xA4, 0x78, 0x21, 0x5E, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      4 */
    { /*      5 */ 0x00, 0xA4, 0x80, 0x00, 0x00, 0x15, 0x4B, 0x00, 0x10, 0x88, 0x72, 0x8E, 0x4C, 0xED, 0x13, 0xF2, 0x26, 0x00, 0x08, 0x73, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x10, 0x68, 0xDA, 0x0A, 0x2A, 0xF0, 0x58, 0xCD, 0x92, 0xA4, 0x8F, 0x0A, 0x7C, 0x25, 0x5A, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      5 */
    { /*      6 */ 0x00, 0xA4, 0x80, 0x00, 0x00, 0xF8, 0x42, 0x00, 0xCC, 0xD8, 0x80, 0x9F, 0x64, 0x07, 0x13, 0xF2, 0x26, 0x00, 0x66, 0x7F, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xF7, 0x2A, 0x0C, 0x0A, 0xF0, 0x57, 0x80, 0x48, 0x8C, 0x43, 0x3A, 0x6F, 0x21, 0x5A, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      6 */
    { /*      7 */ 0x00, 0xE4, 0x80, 0x00, 0x00, 0x41, 0x35, 0x03, 0x3C, 0x88, 0x76, 0x8C, 0x44, 0x15, 0x16, 0x20, 0xA6, 0x00, 0xB6, 0xF7, 0x03, 0x0D, 0x23, 0xE0, 0x06, 0xE1, 0x4A, 0x55, 0x15, 0x0B, 0x24, 0xF0, 0x5E, 0xD9, 0x9B, 0xA3, 0x33, 0x98, 0x83, 0x2D, 0x52, 0x19, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*      7 */
    { /*      8 */ 0x00, 0xE4, 0x80, 0xFF, 0x00, 0x08, 0xE7, 0x02, 0xE4, 0xD8, 0x82, 0x9A, 0x58, 0x27, 0x16, 0x20, 0xA6, 0x00, 0x1A, 0x08, 0x0C, 0x0D, 0x23, 0xE0, 0x06, 0xE1, 0x4A, 0x00, 0x40, 0x0C, 0x24, 0xF0, 0x5C, 0xD7, 0x99, 0xA4, 0x3A, 0xEB, 0x2D, 0x29, 0x56, 0x19, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*      8 */
    { /*      9 */ 0x00, 0xD2, 0x80, 0xFF, 0x00, 0xAD, 0x3F, 0x03, 0x28, 0x88, 0x74, 0x8A, 0x42, 0x0A, 0x16, 0x22, 0xA6, 0x00, 0x14, 0x7E, 0x03, 0x71, 0x2A, 0x40, 0x0A, 0x00, 0x50, 0xC7, 0xF1, 0x0A, 0x24, 0xF0, 0x5E, 0xD9, 0x9A, 0xA4, 0x18, 0x75, 0x17, 0x2E, 0x00, 0x19, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*      9 */
    { /*      A */ 0x00, 0xD2, 0x80, 0x00, 0x00, 0xAF, 0xE3, 0x02, 0xEC, 0xD8, 0x82, 0x9C, 0x5A, 0x2B, 0x16, 0x22, 0xA6, 0x00, 0x76, 0x8D, 0x03, 0x71, 0x2A, 0x40, 0x0A, 0x00, 0x50, 0x39, 0x4E, 0x0C, 0x24, 0xF0, 0x5D, 0xD7, 0x99, 0xA3, 0x57, 0x53, 0xFE, 0x28, 0x56, 0x19, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*      A */
    { /*      B */ 0x00, 0xA4, 0x80, 0x00, 0x00, 0x15, 0x4B, 0x00, 0x10, 0x88, 0x72, 0x88, 0x40, 0xED, 0x13, 0xF2, 0x26, 0x00, 0x08, 0x73, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x10, 0x68, 0xDA, 0x0A, 0x20, 0xF0, 0x5E, 0xD9, 0x9B, 0xA3, 0x7D, 0xB7, 0x7A, 0x2E, 0x55, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      B */
    { /*      C */ 0x00, 0xC0, 0x80, 0x00, 0x00, 0xF8, 0x42, 0x00, 0xCC, 0xD8, 0x80, 0x9A, 0x56, 0x07, 0x13, 0xF2, 0x26, 0x00, 0x66, 0x7F, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xF7, 0x2A, 0x0C, 0x20, 0xF0, 0x5C, 0xD7, 0x98, 0xA3, 0xB7, 0x1B, 0x75, 0x29, 0x55, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      C */
    { /*      D */ 0x08, 0xA4, 0x90, 0x00, 0x03, 0x15, 0x4B, 0x00, 0x10, 0x88, 0x72, 0x86, 0x44, 0xED, 0x13, 0xF2, 0x26, 0x00, 0x08, 0x73, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x10, 0x68, 0xDA, 0x0A, 0x0A, 0xE4, 0x77, 0x9E, 0x8D, 0x9A, 0x12, 0x99, 0x86, 0x25, 0x5A, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      D */
    { /*      E */ 0x08, 0xA4, 0x90, 0x00, 0x03, 0xF8, 0x42, 0x00, 0xCC, 0xD8, 0x80, 0x97, 0x5B, 0x07, 0x13, 0xF2, 0x26, 0x00, 0x66, 0x7F, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xF7, 0x2A, 0x0C, 0x0A, 0xE4, 0x76, 0x9E, 0x8D, 0x9A, 0xC8, 0xA4, 0x78, 0x21, 0x5A, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      E */
    { /*      F */ 0x00, 0xA4, 0x80, 0xFF, 0x01, 0x39, 0x44, 0x00, 0xAC, 0xC0, 0x7E, 0x95, 0x56, 0x0D, 0x13, 0xF2, 0x26, 0x00, 0x56, 0x83, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xAE, 0xF1, 0x0B, 0x0A, 0xE4, 0x7B, 0xCA, 0x8E, 0x9A, 0x2A, 0x2E, 0x19, 0x22, 0x5D, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*      F */
    { /*     10 */ 0x00, 0xA4, 0x80, 0xFF, 0x01, 0x39, 0x44, 0x00, 0xAC, 0xC0, 0x7E, 0x95, 0x56, 0x0D, 0x13, 0xF2, 0x26, 0x00, 0x56, 0x83, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xAE, 0xF1, 0x0B, 0x08, 0xE4, 0x7B, 0xDA, 0x9A, 0xA7, 0x2A, 0x2E, 0x19, 0x22, 0x5D, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     10 */
    { /*     11 */ 0x00, 0xA4, 0x80, 0x00, 0x00, 0x39, 0x44, 0x00, 0xAC, 0xC0, 0x7E, 0x96, 0x52, 0x0D, 0x13, 0xF2, 0x26, 0x00, 0x56, 0x83, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xAE, 0xF1, 0x0B, 0x20, 0xF0, 0x5D, 0xD7, 0x99, 0xA3, 0xDE, 0xF2, 0x3B, 0x2A, 0x55, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     11 */    
    { /*     12 */ 0x08, 0xA4, 0x90, 0x00, 0x03, 0x39, 0x44, 0x00, 0xAC, 0xC0, 0x7E, 0x8E, 0x56, 0x0D, 0x13, 0xF2, 0x26, 0x00, 0x56, 0x83, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xAE, 0xF1, 0x0B, 0x0A, 0xE4, 0x76, 0x9E, 0x8D, 0x9A, 0x2A, 0x2E, 0x19, 0x22, 0x5A, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     12 */
    { /*     13 */ 0x00, 0xD2, 0x80, 0xFF, 0x00, 0x40, 0x35, 0x03, 0xE4, 0xC0, 0x82, 0x9A, 0x58, 0x3B, 0x16, 0x20, 0xA6, 0x00, 0x1A, 0x1B, 0x0C, 0x0D, 0x23, 0xE0, 0x06, 0xE1, 0x4A, 0x00, 0x40, 0x0C, 0x24, 0xF0, 0x5C, 0xD7, 0x99, 0xA4, 0x3A, 0xEB, 0x2D, 0x29, 0x56, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     13 */
    { /*     14 */ 0x08, 0xE4, 0x90, 0x00, 0x00, 0x41, 0x35, 0x03, 0x3C, 0x88, 0x76, 0x8C, 0x44, 0x15, 0x16, 0x20, 0xA6, 0x00, 0xB6, 0xF7, 0x03, 0x0D, 0x23, 0xE0, 0x06, 0xE1, 0x4A, 0x55, 0x15, 0x0B, 0x24, 0xF0, 0x59, 0x9E, 0x8E, 0xA3, 0x33, 0x98, 0x83, 0x2D, 0x51, 0xE1, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*     14 */
    { /*     15 */ 0x08, 0xE4, 0x90, 0x00, 0x00, 0x08, 0xE7, 0x02, 0xE4, 0xD8, 0x82, 0x9A, 0x58, 0x27, 0x16, 0x20, 0xA6, 0x00, 0x1A, 0x08, 0x0C, 0x0D, 0x23, 0xE0, 0x06, 0xE1, 0x4A, 0x00, 0x40, 0x0C, 0x24, 0xF0, 0x59, 0x9E, 0x8E, 0xA3, 0x3A, 0xEB, 0x2D, 0x29, 0x55, 0xE1, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*     15 */
    { /*     16 */ 0x08, 0xD2, 0x90, 0x00, 0x00, 0xAD, 0x3F, 0x03, 0x28, 0x88, 0x74, 0x8A, 0x42, 0x0A, 0x16, 0x22, 0xA6, 0x00, 0x14, 0x7E, 0x03, 0x71, 0x2A, 0x40, 0x0A, 0x00, 0x50, 0xC7, 0xF1, 0x0A, 0x24, 0xF0, 0x5A, 0x9E, 0x8E, 0xA3, 0x18, 0x75, 0x17, 0x2E, 0x00, 0xE1, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*     16 */
    { /*     17 */ 0x08, 0xD2, 0x90, 0x00, 0x00, 0xAF, 0xE3, 0x02, 0xEC, 0xD8, 0x82, 0x9C, 0x5A, 0x2B, 0x16, 0x22, 0xA6, 0x00, 0x76, 0x8D, 0x03, 0x71, 0x2A, 0x40, 0x0A, 0x00, 0x50, 0x39, 0x4E, 0x0C, 0x24, 0xF0, 0x59, 0x9E, 0x8E, 0xA3, 0x57, 0x53, 0xFE, 0x28, 0x56, 0xE1, 0x05, 0x57, 0x20, 0x40, 0x6E, 0x7E, 0xF4, 0x51, 0x0F, 0xF1, 0x05, 0xD3, 0x78, 0xA2, 0x25, 0x54, 0xA5, 0x00, }, /*     17 */
    { /*     18 */ 0x08, 0xD2, 0x90, 0x00, 0x00, 0x40, 0x35, 0x03, 0xE4, 0xC0, 0x82, 0x9A, 0x58, 0x3B, 0x16, 0x20, 0xA6, 0x00, 0x1A, 0x1B, 0x0C, 0x0D, 0x23, 0xE0, 0x06, 0xE1, 0x4A, 0x00, 0x40, 0x0C, 0x24, 0xF0, 0x59, 0x9E, 0x8E, 0xA3, 0x3A, 0xEB, 0x2D, 0x29, 0x56, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     18 */
    { /*     19 */ 0x08, 0xA4, 0x90, 0x00, 0x00, 0x15, 0x4B, 0x00, 0x10, 0x88, 0x72, 0x88, 0x40, 0xED, 0x13, 0xF2, 0x26, 0x00, 0x08, 0x73, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x10, 0x68, 0xDA, 0x0A, 0x20, 0xF0, 0x5A, 0x84, 0x4A, 0x8C, 0x7D, 0xB7, 0x7A, 0x2E, 0x5A, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     19 */
    { /*     1A */ 0x08, 0xC0, 0x90, 0x00, 0x00, 0xF8, 0x42, 0x00, 0xCC, 0xD8, 0x80, 0x9A, 0x56, 0x07, 0x13, 0xF2, 0x26, 0x00, 0x66, 0x7F, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xF7, 0x2A, 0x0C, 0x20, 0xF0, 0x59, 0x82, 0x49, 0x8C, 0xB7, 0x1B, 0x75, 0x29, 0x5A, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     1A */
    { /*     1B */ 0x08, 0xA4, 0x90, 0x00, 0x00, 0x39, 0x44, 0x00, 0xAC, 0xC0, 0x7E, 0x96, 0x52, 0x0D, 0x13, 0xF2, 0x26, 0x00, 0x56, 0x83, 0x03, 0x0D, 0x24, 0xE0, 0x06, 0x00, 0x50, 0xAE, 0xF1, 0x0B, 0x20, 0xF0, 0x59, 0x82, 0x49, 0x8C, 0xDE, 0xF2, 0x3B, 0x2A, 0x5A, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     1B */    
    { /*     1C */ 0x00, 0xD2, 0x80, 0xFF, 0x00, 0x05, 0xF3, 0x02, 0xC8, 0xC0, 0x80, 0x98, 0x54, 0x2B, 0x16, 0x22, 0xA6, 0x00, 0x64, 0x8F, 0x03, 0x71, 0x2A, 0x40, 0x0A, 0x00, 0x50, 0x39, 0x0E, 0x0C, 0x24, 0xF0, 0x5D, 0xD7, 0x99, 0xA4, 0x26, 0xF3, 0xD7, 0x29, 0x55, 0x19, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     1C */
    { /*     1D */ 0x08, 0xD2, 0x90, 0x00, 0x00, 0x05, 0xF3, 0x02, 0xC8, 0xC0, 0x80, 0x98, 0x54, 0x28, 0x16, 0x22, 0xA6, 0x00, 0x64, 0x8F, 0x03, 0x71, 0x2A, 0x40, 0x0A, 0x00, 0x50, 0x39, 0x0E, 0x0C, 0x24, 0xF0, 0x59, 0x9E, 0x8E, 0xA3, 0x26, 0xF3, 0xD7, 0x29, 0x00, 0xE1, 0x0F, 0xFC, 0x20, 0xD0, 0x6F, 0x0F, 0x00, 0x00, 0x0C, 0xF3, 0x09, 0xBD, 0x66, 0xB5, 0x90, 0xB2, 0x7D, 0x00, }, /*     1D */
};

const UCHAR _declspec(selectany) AvpHDTVRegisters[][13] =
{
    { /* offset */ 0xD6, 0x2E, 0x32, 0x3C, 0x3E, 0x40, 0xC4, 0xC6, 0xCE, 0xA0, 0x9E, 0x9C, 0x6C }, /* offset */
    { /*      1 */ 0x0C, 0xAD, 0x48, 0x90, 0x8C, 0x8C, 0x01, 0x9C, 0xE1, 0x8C, 0x00, 0x00, 0x46 }, /*      1 */
    { /*      2 */ 0x0C, 0xAA, 0x49, 0x90, 0x8C, 0x8C, 0x01, 0x9C, 0xE1, 0x21, 0x00, 0x00, 0x46 }, /*      2 */
    { /*      3 */ 0x0C, 0xAB, 0x49, 0x90, 0x8C, 0x8C, 0x01, 0x9C, 0xE1, 0x21, 0x00, 0x00, 0x46 }, /*      3 */
};

//
// SCART
//

const UCHAR _declspec(selectany) AvpSCARTEnable[][12] =
{
    { /* offset */ 0x5A, 0x6C, 0xA2, 0xA4, 0xA6, 0xA8, 0xAA, 0xAC, 0xBA, 0xC6, 0xCE, 0xD6, }, /* offset */
    { /*      1 */ 0xFF, 0x4E, 0x08, 0xE7, 0x77, 0x7B, 0x45, 0x87, 0x20, 0x98, 0xE1, 0x0C, }, /*      1 */ 
    { /*      2 */ 0xFF, 0x4E, 0x08, 0xE7, 0x76, 0x7B, 0x45, 0x87, 0x20, 0x98, 0xE1, 0x0C, }, /*      2 */ 
    { /*      3 */ 0xFF, 0x4E, 0x08, 0xE7, 0x77, 0x7B, 0x45, 0x87, 0x20, 0x98, 0xE1, 0x0C, }, /*      3 */ 
    { /*      4 */ 0xFF, 0x4E, 0x08, 0xE7, 0x76, 0x7B, 0x45, 0x87, 0x20, 0x98, 0xE1, 0x0C, }, /*      4 */ 
    { /*      5 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*      5 */ 
    { /*      6 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*      6 */ 
    { /*      7 */ 0x00, 0x4E, 0x24, 0xE8, 0x5B, 0x7B, 0x45, 0x87, 0x20, 0x98, 0xE1, 0x0C, }, /*      7 */ 
    { /*      8 */ 0xFF, 0x4E, 0x24, 0xE8, 0x5A, 0x7C, 0x46, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*      8 */ 
    { /*      9 */ 0xFF, 0x4E, 0x24, 0xE8, 0x5B, 0x7B, 0x45, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*      9 */ 
    { /*      A */ 0x00, 0x4E, 0x24, 0xE8, 0x5A, 0x7B, 0x45, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*      A */ 
    { /*      B */ 0x00, 0x4E, 0x20, 0xE8, 0x5B, 0x7B, 0x45, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*      B */ 
    { /*      C */ 0x00, 0x4E, 0x20, 0xE8, 0x5A, 0x7B, 0x45, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*      C */ 
    { /*      D */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*      D */ 
    { /*      E */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*      E */ 
    { /*      F */ 0xFF, 0x4E, 0x08, 0xE7, 0x76, 0x7B, 0x46, 0x87, 0x20, 0x98, 0xE1, 0x0C, }, /*      F */ 
    { /*     10 */ 0xFF, 0x4E, 0x08, 0xE7, 0x76, 0x7B, 0x45, 0x87, 0x20, 0x98, 0xE1, 0x0C, }, /*     10 */ 
    { /*     11 */ 0x00, 0x4E, 0x20, 0xE8, 0x5A, 0x7B, 0x45, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*     11 */ 
    { /*     12 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     12 */ 
    { /*     13 */ 0xFF, 0x4E, 0x24, 0xE8, 0x5A, 0x7C, 0x46, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*     13 */ 
    { /*     14 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     14 */ 
    { /*     15 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     15 */ 
    { /*     16 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     16 */ 
    { /*     17 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     17 */ 
    { /*     18 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     18 */ 
    { /*     19 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     19 */ 
    { /*     1A */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     1A */ 
    { /*     1B */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     1B */ 
    { /*     1C */ 0xFF, 0x4E, 0x24, 0xE8, 0x5A, 0x7C, 0x46, 0x88, 0x20, 0x98, 0xE1, 0x0C, }, /*     1C */ 
    { /*     1D */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }, /*     1D */ 
};

//
// Closed captioning
//

const UCHAR _declspec(selectany) AvpCCRegisters[][4] =
{
    { /* offset */ 0x5E, 0xD0, 0xD2, 0xD4, }, /* offset */
    { /*      1 */ 0x44, 0x2F, 0x8E, 0x1A, }, /*      1 */
    { /*      2 */ 0x44, 0x4C, 0x60, 0x19, }, /*      2 */
    { /*      3 */ 0x44, 0x2F, 0x8E, 0x1A, }, /*      3 */
    { /*      4 */ 0x44, 0x4C, 0x60, 0x19, }, /*      4 */
    { /*      5 */ 0x44, 0x2F, 0x8E, 0x1A, }, /*      5 */
    { /*      6 */ 0x44, 0x4C, 0x60, 0x19, }, /*      6 */
    { /*      7 */ 0x22, 0x35, 0x57, 0x1A, }, /*      7 */
    { /*      8 */ 0x22, 0x4D, 0x55, 0x19, }, /*      8 */
    { /*      9 */ 0x22, 0x2E, 0x78, 0x1A, }, /*      9 */
    { /*      A */ 0x22, 0x4E, 0x55, 0x19, }, /*      A */
    { /*      B */ 0x44, 0x2F, 0x8E, 0x1A, }, /*      B */
    { /*      C */ 0x44, 0x4C, 0x60, 0x19, }, /*      C */
    { /*      D */ 0x44, 0x2F, 0x8E, 0x1A, }, /*      D */
    { /*      E */ 0x44, 0x4C, 0x60, 0x19, }, /*      E */
    { /*      F */ 0x44, 0x47, 0xA0, 0x19, }, /*      F */
    { /*     10 */ 0x44, 0x47, 0xA0, 0x19, }, /*     10 */
    { /*     11 */ 0x44, 0x47, 0xA0, 0x19, }, /*     11 */
    { /*     12 */ 0x44, 0x47, 0xA0, 0x19, }, /*     12 */
    { /*     13 */ 0x22, 0x4E, 0x60, 0x19, }, /*     13 */
};

//
// Macrovision.
//

const UCHAR _declspec(selectany) AvpMacrovision[][6] =
{
    { /* offset */ 0xFC, 0xF2, 0xF4, 0xF6, 0xF8, 0xFA }, /* offset */
    { /*      1 */ 0x00, 0x66, 0xB5, 0x90, 0xB2, 0x7D }, /* 1 */
    { /*      2 */ 0x00, 0x66, 0xB5, 0x90, 0xB2, 0x7D }, /* 2 */
    { /*      3 */ 0x00, 0x6C, 0x31, 0x92, 0x32, 0xDD }, /* 3 */
    { /*      4 */ 0x00, 0x66, 0xB5, 0x90, 0xB2, 0x7D }, /* 4 */
};

const UCHAR _declspec(selectany) AvpMacrovisionEnable[][1] =
{
    { /* offset */ 0xFC }, /* offset */
    { /*      1 */ 0x00 }, /* 1 */
    { /*      2 */ 0x63 }, /* 2 */
    { /*      3 */ 0xE3 }, /* 3 */
    { /*      4 */ 0xE3 }, /* 4 */
};

const UCHAR _declspec(selectany) AvpMacrovisionPAL[][1] =
{
    { /* offset */ 0xFC }, /* offset */
    { /*      0 */ 0x00 }, /* 5 */
    { /*      1 */ 0x63 }, /* 6 */
};

// 0x00680880 - NV_PRAMDAC_FP_DEBUG_0
// 0x00680898 - NV_PRAMDAC_FP_DEBUG_6
// 0x0068089C - NV_PRAMDAC_FP_DEBUG_7
// 0x006808C0 - NV_PRAMDAC_TVO_SETUP
// 0x006808C4 - NV_PRAMDAC_TVO_BLANK_COLOR
// 0x0068084C - NV_PRAMDAC_FP_INACTIVE_PXL_COLOR
// 0x00680630 - NV_PRAMDAC_COMPOSITE
// 0x00680800 - NV_PRAMDAC_FP_VDISPLAY_END
// 0x00680804 - NV_PRAMDAC_FP_VTOTAL
// 0x00680808 - NV_PRAMDAC_FP_VCRTC
// 0x0068080C - NV_PRAMDAC_FP_VSYNC_START
// 0x00680810 - NV_PRAMDAC_FP_VSYNC_END
// 0x00680814 - NV_PRAMDAC_FP_VVALID_START
// 0x00680818 - NV_PRAMDAC_FP_VVALID_END
// 0x00680820 - NV_PRAMDAC_FP_HDISPLAY_END
// 0x00680824 - NV_PRAMDAC_FP_HTOTAL
// 0x00680828 - NV_PRAMDAC_FP_HCRTC
// 0x0068082C - NV_PRAMDAC_FP_HSYNC_START
// 0x00680830 - NV_PRAMDAC_FP_HSYNC_END
// 0x00680834 - NV_PRAMDAC_FP_HVALID_START
// 0x00680838 - NV_PRAMDAC_FP_HVALID_END
// 0x00680848 - NV_PRAMDAC_FP_TG_CONTROL
// 0x00680680 - NV_PRAMDAC_LGS_HSYNC_NUMERATOR
// 0x00680684 - NV_PRAMDAC_LGS_HSYNC_DENOMINATOR
// 0x00680688 - NV_PRAMDAC_LGS_HSYNC_HIGH
// 0x0068068C - NV_PRAMDAC_LGS_HSYNC_HIGH_VSYNC
// 0x00680690 - NV_PRAMDAC_LGS_SWITCHES
//
const ULONG _declspec(selectany) AvpRegisters[][26] =
{
    { /* offset */ 0x00680898, 0x0068089C, 0x006808C0, 0x006808C4, 0x0068084C, 0x00680630, 0x00680800, 0x00680804, 0x00680808, 0x0068080C, 0x00680810, 0x00680814, 0x00680818, 0x00680820, 0x00680824, 0x00680828, 0x0068082C, 0x00680830, 0x00680834, 0x00680838, 0x00680848, 0x00680680, 0x00680684, 0x00680688, 0x0068068C, 0x00680690 }, /* offset */
    { /*      1 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001EA, 0x000001ED, 0x00000000, 0x000001DF, 0x0000027F, 0x00000307, 0x00000257, 0x0000028D, 0x000002AD, 0x00000000, 0x0000027F, 0x10100111, 0x000C6ED0, 0x0000020D, 0x0000009B, 0x0000026C, 0x00000000 }, /*  1 */
    { /*      2 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001EA, 0x000001ED, 0x00000000, 0x000001DF, 0x000002CF, 0x00000365, 0x000002A7, 0x000002DF, 0x000002FF, 0x00000000, 0x000002CF, 0x10100111, 0x000DF05C, 0x0000020D, 0x000000AE, 0x000002B8, 0x00000000 }, /*  2 */
    { /*      3 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EB, 0x00000000, 0x000001DF, 0x0000027F, 0x000003B5, 0x00000257, 0x000002B7, 0x000002D7, 0x00000000, 0x0000027F, 0x10100111, 0x000F387C, 0x00000271, 0x000000BE, 0x000002F8, 0x00000000 }, /*  3 */
    { /*      4 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EB, 0x00000000, 0x000001DF, 0x000002CF, 0x00000419, 0x000002AF, 0x0000030B, 0x0000032B, 0x00000000, 0x000002CF, 0x10100111, 0x0010D2A4, 0x00000271, 0x000000D2, 0x00000348, 0x00000000 }, /*  4 */
    { /*      5 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x0000023F, 0x00000270, 0x0000023F, 0x00000249, 0x0000024C, 0x00000000, 0x0000023F, 0x0000027F, 0x00000313, 0x00000257, 0x0000028F, 0x000002AF, 0x00000000, 0x0000027F, 0x10100111, 0x000F07A8, 0x00000271, 0x0000009D, 0x00000276, 0x00000000 }, /*  5 */
    { /*      6 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x0000023F, 0x00000270, 0x0000023F, 0x00000249, 0x0000024C, 0x00000000, 0x0000023F, 0x000002CF, 0x00000375, 0x000002AF, 0x000002E1, 0x00000302, 0x00000000, 0x000002CF, 0x10100111, 0x0010E62C, 0x00000271, 0x000000B1, 0x000002C4, 0x00000000 }, /*  6 */
    { /*      7 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EE, 0x00000000, 0x000001DF, 0x000002CF, 0x00000359, 0x0000029F, 0x000002E1, 0x00000320, 0x00000000, 0x000002CF, 0x10100011, 0x0000035A, 0x00000001, 0x000000AB, 0x000002AE, 0x00000001 }, /*  7 */
    { /*      8 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EE, 0x00000000, 0x000001DF, 0x000002CF, 0x00000359, 0x0000029F, 0x000002E1, 0x00000320, 0x00000000, 0x000002CF, 0x10100111, 0x0000035A, 0x00000001, 0x000000AB, 0x000002AE, 0x00000001 }, /*  8 */
    { /*      9 */ 0x0AA94000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x000002CF, 0x000002ED, 0x000002CF, 0x000002D4, 0x000002D9, 0x00000000, 0x000002CF, 0x000004FF, 0x00000671, 0x000004FF, 0x00000545, 0x00000595, 0x000000A0, 0x0000045F, 0x10100011, 0x00000672, 0x00000001, 0x0000014A, 0x00000528, 0x00000001 }, /*  9 */
    { /*      A */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x000002CF, 0x000002ED, 0x000002CF, 0x000002D4, 0x000002D9, 0x00000000, 0x000002CF, 0x000004FF, 0x00000671, 0x000004CF, 0x00000545, 0x00000595, 0x00000000, 0x000004FF, 0x10100011, 0x00000672, 0x00000001, 0x0000014A, 0x00000528, 0x00000001 }, /*  A */
    { /*      B */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x000002CF, 0x000002ED, 0x000002CF, 0x000002D4, 0x000002D9, 0x00000000, 0x000002CF, 0x000004FF, 0x00000671, 0x000004FF, 0x00000545, 0x00000595, 0x00000000, 0x000004FF, 0x10100111, 0x00000672, 0x00000001, 0x0000014A, 0x00000528, 0x00000001 }, /*  B */
    { /*      C */ 0x071AE000, 0x07183800, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x00000437, 0x00000464, 0x0000043C, 0x0000043C, 0x00000446, 0x00000000, 0x00000437, 0x0000077F, 0x00000897, 0x000007AA, 0x000007AB, 0x00000803, 0x000000F0, 0x0000068F, 0x10133011, 0x00000898, 0x00000001, 0x000001B8, 0x000006E0, 0x00000001 }, /*  C */
    { /*      D */ 0x10000000, 0x07183800, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x00000437, 0x00000464, 0x0000043C, 0x0000043C, 0x00000446, 0x00000000, 0x00000437, 0x0000077F, 0x00000897, 0x00000759, 0x000007AB, 0x00000803, 0x00000000, 0x0000077F, 0x10133011, 0x00000898, 0x00000001, 0x000001B8, 0x000006E0, 0x00000001 }, /*  D */
    { /*      E */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000003, 0x00000437, 0x00000464, 0x0000043B, 0x0000043B, 0x00000445, 0x00000000, 0x00000437, 0x0000077F, 0x00000897, 0x000007AB, 0x000007AC, 0x00000804, 0x00000000, 0x0000077F, 0x10133111, 0x00000898, 0x00000001, 0x000001B8, 0x000006E0, 0x00000001 }, /*  E */
    { /*      F */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001EA, 0x000001ED, 0x00000000, 0x000001DF, 0x0000027F, 0x00000355, 0x000002A7, 0x000002B0, 0x000002D0, 0x00000000, 0x0000027F, 0x10100111, 0x000DF05C, 0x0000020D, 0x000000AE, 0x000002B8, 0x00000000 }, /*  F */
    { /*     10 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001EA, 0x000001ED, 0x00000000, 0x000001DF, 0x0000027F, 0x00000419, 0x000002A7, 0x000002DB, 0x000002FB, 0x00000000, 0x0000027F, 0x10100111, 0x000DF05C, 0x0000020D, 0x000000AE, 0x000002B8, 0x00000000 }, /* 10 */
    { /*     11 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x000001DF, 0x0000020C, 0x000001DF, 0x000001E8, 0x000001EE, 0x00000000, 0x000001DF, 0x000002CF, 0x00000359, 0x000002CF, 0x000002DF, 0x0000031E, 0x00000020, 0x000002AD, 0x10100011, 0x0000035A, 0x00000001, 0x000000AB, 0x000002AE, 0x00000001 }, /* 11 */
    { /*     12 */ 0x10000000, 0x10000000, 0x00000000, 0x40801080, 0x00801080, 0x00000002, 0x0000023F, 0x00000270, 0x0000023F, 0x00000249, 0x0000024C, 0x00000000, 0x0000023F, 0x0000027F, 0x00000363, 0x00000257, 0x000002B0, 0x000002D0, 0x00000000, 0x0000027F, 0x10100111, 0x000F07A8, 0x00000271, 0x0000009D, 0x00000276, 0x00000000 }, /* 12 */
};

const UCHAR _declspec(selectany) AvpCRTCRegisters[][34] =
{
    { /* offset */ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x20, 0x25, 0x2D, 0x33, 0x39, 0x41 }, /* offset */
    { /*      1 */ 0x56, 0x4F, 0x4F, 0x9C, 0x51, 0x35, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x0E, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      1 */
    { /*      2 */ 0x65, 0x59, 0x59, 0x89, 0x5B, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0B, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      2 */
    { /*      3 */ 0x6F, 0x4F, 0x4F, 0x93, 0x55, 0xB9, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0B, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      3 */
    { /*      4 */ 0x6F, 0x59, 0x59, 0x93, 0x5B, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0B, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      4 */
    { /*      5 */ 0x56, 0x4F, 0x4F, 0x9C, 0x51, 0x35, 0x6F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x08, 0x3F, 0x00, 0x00, 0x3F, 0x70, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      5 */
    { /*      6 */ 0x65, 0x59, 0x59, 0x89, 0x5B, 0xBF, 0x6F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x08, 0x3F, 0x00, 0x00, 0x3F, 0x70, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      6 */
    { /*      7 */ 0x59, 0x4F, 0x4F, 0x9D, 0x51, 0x39, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0E, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      7 */
    { /*      8 */ 0x63, 0x59, 0x59, 0x87, 0x5B, 0xA3, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0E, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      8 */
    { /*      9 */ 0x78, 0x4F, 0x4F, 0x9C, 0x57, 0xA1, 0xFC, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x09, 0xDF, 0x00, 0x00, 0xDF, 0xFD, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      9 */
    { /*      A */ 0xC8, 0x9F, 0x9F, 0x8C, 0xA7, 0x31, 0xEC, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD4, 0x09, 0xCF, 0x00, 0x00, 0xCF, 0xED, 0xE3, 0xFF, 0x00, 0x38, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      A */
    { /*      B */ 0x67, 0x4F, 0x4F, 0x8B, 0x54, 0xBF, 0x03, 0x11, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x06, 0xEF, 0x00, 0x00, 0xEF, 0x04, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0x36, 0x00 }, /*      B */
    { /*      C */ 0x04, 0xEF, 0xEF, 0x88, 0xF4, 0x3F, 0x2F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x02, 0x1B, 0x00, 0x00, 0x1B, 0x30, 0xE3, 0xFF, 0x00, 0x38, 0x05, 0x80, 0x00, 0x01, 0x11, 0x10, 0x00 }, /*      C */
    { /*      D */ 0x65, 0x4F, 0x4F, 0x89, 0x5B, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0B, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      D */
    { /*      E */ 0x7E, 0x4F, 0x4F, 0x82, 0x5B, 0x3F, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0B, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x00, 0x00, 0x11, 0xFF, 0x00 }, /*      E */
    { /*      F */ 0x61, 0x57, 0x57, 0x85, 0x59, 0xBF, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x0E, 0xDF, 0x00, 0x00, 0xDF, 0x0C, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*      F */
    { /*     10 */ 0x65, 0x4F, 0x4F, 0x9C, 0x51, 0x35, 0x6F, 0xF0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x08, 0x3F, 0x00, 0x00, 0x3F, 0x70, 0xE3, 0xFF, 0x00, 0x3A, 0x05, 0x80, 0x10, 0x00, 0x11, 0xFF, 0x00 }, /*     10 */
};

#endif !FOCUS

//
// Common registers
//

const ULONG _declspec(selectany) AvpFpDebug0[] =
{
    /* offset */ 0x00680880,
    /*      1 */ 0x21101100,
    /*      2 */ 0x21101100,
    /*      3 */ 0x21101100,
    /*      4 */ 0x21101100,
    /*      5 */ 0x21101100,
    /*      6 */ 0x21101100,
    /*      7 */ 0x21101101,
    /*      8 */ 0x21101100,
    /*      9 */ 0x21101115,
    /*      A */ 0x21101111,
    /*      B */ 0x21101100,
    /*      C */ 0x21101155,
    /*      D */ 0x21101151,
    /*      E */ 0x21101100,
    /*      F */ 0x21101100,
    /*     10 */ 0x21101100,
    /*     11 */ 0x21101101,
    /*     12 */ 0x21101100,
};

const UCHAR _declspec(selectany) AvpSRXRegisters[] =
{
 // SR0   SR1   SR2   SR3   SR4   
    0x03, 0x21, 0x0F, 0x00, 0x06, 
};

const UCHAR _declspec(selectany) AvpGRXRegisters[] =
{
 // GR0   GR1   GR2   GR3   GR4   GR5   GR6   GR7   GR8   
    0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0x0F, 0xFF, 
};

const UCHAR _declspec(selectany) AvpARXRegisters[] =
{
 // AR0   AR1   AR2   AR3   AR4   AR5   AR6   AR7   AR8   AR9   ARA   ARB   ARC   ARD   ARE   ARF   AR10  AR11  AR12  AR13  AR14  
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x01, 0x4A, 0x0F, 0x00, 0x00, 
};


#endif DEFINE_REGISTERS

