; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9254.1 

	TITLE	.\main.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BB@MHLIAMID@?$CFs?5failed?3?5?$CF08lX?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_07KGMMFLDN@Warning?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BO@IFMJNDEI@Scratch?5Memory?5already?5in?5use?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BO@MGIFJFHM@c?3?2xbox?2private?2online?2xonp?4h?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0P@IBPNHKBE@m_pbStart?5?$DN?$DN?50?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CJ@OHOBBEHP@Scratch?5Memory?5Initialize?5_alloc@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0P@CEONAAJH@m_pbStart?5?$CB?$DN?50?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BD@BNMOMHKM@tempBufferSize?5?$DO?50?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BE@PJMOEBBF@tempBufferSize?5?$DN?$DN?50?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CE@OLNLEBPI@Destructing?0?5peak?5?$CFd?5out?5of?5?$CFd?5u@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BF@IIHJKEAI@ScratchMemoryVerbose?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BC@LJJKOFAH@m_pbStart?5?$CB?$DN?5NULL?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CA@GJIPBBK@Alloc?5?$CFd?0?5now?5used?5?$CFd?5out?5of?5?$CFd?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BD@IBAPNNAG@ScratchMemoryAlloc?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BG@CLHGALMP@Out?5of?5Scratch?5Memory?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BH@LIPOEHIF@m_pbCurrent?5?$DM?$DN?5m_pbEnd?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CC@PAJIMFIO@ReAlloc?5?$CFd?0?5now?5used?5?$CFd?5out?5of?5?$CF@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CL@OKEJOEEF@ImmediateReAlloc?5?$CFd?0?5now?5used?5?$CFd@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BO@MNLBAFEO@Scratch?5Memory?5Stack?5Overflow?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BF@CDANCIOD@m_dwStackPointer?5?$DM?58?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BP@GKOHGEDP@Scratch?5Memory?5Stack?5Underflow?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BG@MOFAKGKA@m_dwStackPointer?5?$CB?$DN?50?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BF@CHFLBDCB@m_pbCurrent?5?$DM?$DN?5pTemp?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BN@FHBGJIEA@dwPreservedMemoryLength?5?$CB?$DN?50?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BI@OIBPPOPG@ppMemoryPointer?5?$CB?$DN?5NULL?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BJ@KOFCMBGP@?$CKppMemoryPointer?5?$CB?$DN?5NULL?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CE@EILPDHMK@Had?5Temp?5Buffer?0?5but?5not?5big?5eno@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CN@BGEENEPI@m_pScratchMemoryAllocator?9?$DOTempB@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0DF@HOMGIHHD@Temp?5Buffer?5can?8t?5fit?5PreserveTh@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BP@JKOBKFBK@m_dwPreservedMemoryLength?5?$CB?$DN?50?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0DC@NMNJHDJB@?$CK?$CI?$CIULONGLONG?$CK?$CJ?$CGCurrentTime?$CJ?5?$DO?5BA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0GM@JIICAGAN@?$CI?$CI?$CK?$CI?$CIULONGLONG?$CK?$CJ?$CGCurrentTime?$CJ?5?9?5@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0N@LJHJFPOH@Mar?12002?5SDK?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0EG@MPOKLBNP@XONLINE_MAX_SERVICE_REQUEST?5?$DN?$DN?5X@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BB@BIBKOPC@Creating?5user?5?$CFd?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_06KBMCJAHB@test?$CFx?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_05IKBANCEK@Earth?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0O@CBLFELMN@name?5?$CFd?3?5?$CFls?6?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_17CBGHINCI@?$AAD?$AAe?$AAv?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1M@CFCBANED@?$AAs?$AAl?$AAa?$AAm?$AAb?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BB@NJMOHMLE@tag?5?$CFd?3?5?$CFls?4?$CFls?6?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1O@POGJDFOD@?$AAU?$AAs?$AAe?$AAr?$AA?$CF?$AAx?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_17NHNKEEAN@?$AAJ?$AAo?$AAe?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_19JKHHOKBN@?$AAS?$AAh?$AAm?$AAo?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1CA@FLFLJGME@?$AA1?$AA?5?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAW?$AAa?$AAy?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1BA@NEPPNMDH@?$AAR?$AAe?$AAd?$AAm?$AAo?$AAn?$AAd?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_15HMBOFJEL@?$AAW?$AAA?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1M@LABOKDIL@?$AA9?$AA8?$AA0?$AA7?$AA2?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_17BFBNNDCE@?$AA4?$AA2?$AA5?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1BC@EEFEMLLJ@?$AA7?$AA0?$AA3?$AA?9?$AA8?$AA7?$AA1?$AA6?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1BC@BBAKCIMI@?$AAJ?$AAo?$AAe?$AA?5?$AAS?$AAh?$AAm?$AAo?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_1CC@ENAHBODF@?$AA4?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BO@HPPCKOMJ@Created?5user?5?$CFs?4?$CFs?5?$CI0x?$CF016x?$CJ?6?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BP@JOOCCHLN@Loading?5XBox?5network?5stack?4?4?4?6?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BM@NMPNAPD@Failed?5XNetStartup?5with?5?$CFd?6?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0BL@LLOLLLND@Calling?5XOnlineStartup?4?4?4?6?$AA@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CH@MLBBEAOE@Error?5?$CF08x?5returned?5by?5XOnlineSt@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT ??_C@_0CL@KNHIGDKJ@Cannot?5Logon?5?$CI?$CF08x?$CJ?0?5check?5c?3?2xo@
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _IsEqualGUID@8
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _==@8
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _KeGetCurrentIrql@0
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _KeGetCurrentThread@0
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _Direct3D_AddRef@0
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _Direct3D_Release@0
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _Direct3D_GetAdapterCount@0
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DDevice_BeginScene@0
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DDevice_EndScene@0
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DDevice_GetRenderState@8
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DDevice_GetTextureStageState@12
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DDevice_SetRenderState@8
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DDevice_SetTextureStageState@12
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DResource_MoveResourceMemory@8
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DTexture_UnlockRect@8
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DVolumeTexture_UnlockBox@8
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DCubeTexture_UnlockRect@12
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DVertexBuffer_Unlock@4
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DIndexBuffer_Lock@20
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DIndexBuffer_Unlock@4
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DPalette_Unlock@4
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DSurface_UnlockRect@4
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DVolume_UnlockBox@4
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _sqrtf@4
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ??0CXNet@@QAE@PAD@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?setsockopt@CXNet@@QAEHIHHPBDH@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?DbgBreak@@YGXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?TempBuffer@CScratchMemoryAllocator@@QAEPAXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?TempBufferSize@CScratchMemoryAllocator@@QAEKXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?Alloc@CScratchMemoryAllocator@@QAEPAXI@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?ReAlloc@CScratchMemoryAllocator@@QAEPAXPAXI@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?Push@CScratchMemoryAllocator@@QAEXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?Pop@CScratchMemoryAllocator@@QAEXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?XoSysAlloc@@YGPAXIK@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?XoSysFree@@YGXPAX@Z
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?CreateTempUsers@@YGXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?GetTags@@YGXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?ReserveName@@YGXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT ?CreateUsers@@YGXXZ
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _main
XONLINE	SEGMENT PARA USE32 PUBLIC ''
XONLINE	ENDS
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
XON_RD	SEGMENT DWORD USE32 PUBLIC ''
XON_RD	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?g_rgServices@@3PAKA				; g_rgServices
PUBLIC	_D3DPRIMITIVETOVERTEXCOUNT
PUBLIC	_D3DSIMPLERENDERSTATEENCODE
PUBLIC	_D3DTEXTUREDIRECTENCODE
PUBLIC	_D3DDIRTYFROMRENDERSTATE
PUBLIC	_D3DDIRTYFROMTEXTURESTATE
;	COMDAT _D3DPRIMITIVETOVERTEXCOUNT
XON_RD	SEGMENT
_D3DPRIMITIVETOVERTEXCOUNT DD 00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	04H
	DD	00H
	DD	02H
	DD	02H
	DD	00H
	DD	00H
XON_RD	ENDS
;	COMDAT _D3DSIMPLERENDERSTATEENCODE
XON_RD	SEGMENT
_D3DSIMPLERENDERSTATEENCODE DD 040260H
	DD	040264H
	DD	040268H
	DD	04026cH
	DD	040270H
	DD	040274H
	DD	040278H
	DD	04027cH
	DD	040288H
	DD	04028cH
	DD	040a60H
	DD	040a64H
	DD	040a68H
	DD	040a6cH
	DD	040a70H
	DD	040a74H
	DD	040a78H
	DD	040a7cH
	DD	040a80H
	DD	040a84H
	DD	040a88H
	DD	040a8cH
	DD	040a90H
	DD	040a94H
	DD	040a98H
	DD	040a9cH
	DD	040aa0H
	DD	040aa4H
	DD	040aa8H
	DD	040aacH
	DD	040ab0H
	DD	040ab4H
	DD	040ab8H
	DD	040abcH
	DD	040ac0H
	DD	040ac4H
	DD	040ac8H
	DD	040accH
	DD	040ad0H
	DD	040ad4H
	DD	040ad8H
	DD	040adcH
	DD	0417f8H
	DD	041e20H
	DD	041e24H
	DD	041e40H
	DD	041e44H
	DD	041e48H
	DD	041e4cH
	DD	041e50H
	DD	041e54H
	DD	041e58H
	DD	041e5cH
	DD	041e60H
	DD	041d90H
	DD	041e74H
	DD	041e78H
	DD	040354H
	DD	04033cH
	DD	040304H
	DD	040300H
	DD	040340H
	DD	040344H
	DD	040348H
	DD	04035cH
	DD	040310H
	DD	04037cH
	DD	040358H
	DD	040374H
	DD	040378H
	DD	040364H
	DD	040368H
	DD	04036cH
	DD	040360H
	DD	040350H
	DD	04034cH
	DD	0409f8H
	DD	040384H
	DD	040388H
	DD	040330H
	DD	040334H
	DD	040338H
XON_RD	ENDS
;	COMDAT _D3DTEXTUREDIRECTENCODE
XON_RD	SEGMENT
_D3DTEXTUREDIRECTENCODE DD 081b00H
	DD	081b40H
	DD	081b80H
	DD	081bc0H
XON_RD	ENDS
;	COMDAT _D3DDIRTYFROMRENDERSTATE
XON_RD	SEGMENT
_D3DDIRTYFROMRENDERSTATE DD 02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	02000H
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	01200H
	DD	03000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	0100H
	DD	0100H
	DD	0900H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
XON_RD	ENDS
;	COMDAT _D3DDIRTYFROMTEXTURESTATE
XON_RD	SEGMENT
_D3DDIRTYFROMTEXTURESTATE DD 0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0fH
	DD	0480fH
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0800H
	DD	0400H
XON_RD	ENDS
_DATA	SEGMENT
?g_rgServices@@3PAKA DD 05H				; g_rgServices
_DATA	ENDS
PUBLIC	?CreateTempUsers@@YGXXZ				; CreateTempUsers
PUBLIC	??_C@_0BB@BIBKOPC@Creating?5user?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_06KBMCJAHB@test?$CFx?$AA@			; `string'
PUBLIC	??_C@_05IKBANCEK@Earth?$AA@			; `string'
EXTRN	_wsprintfA:NEAR
EXTRN	_time:NEAR
EXTRN	__XOnlineAccountTempCreate@12:NEAR
EXTRN	__XOnlineAccountTempCreateGetResults@8:NEAR
EXTRN	_XOnlineTaskContinue@4:NEAR
EXTRN	_XOnlineTaskClose@4:NEAR
EXTRN	_memset:NEAR
EXTRN	_strcpy:NEAR
EXTRN	_rand:NEAR
EXTRN	_srand:NEAR
EXTRN	_DebugPrint:NEAR
;	COMDAT ??_C@_0BB@BIBKOPC@Creating?5user?5?$CFd?$AA@
; File c:\xbox\private\online\test\accounts\main.cpp
XON_RD	SEGMENT
??_C@_0BB@BIBKOPC@Creating?5user?5?$CFd?$AA@ DB 'Creating user %d', 00H ; `string'
XON_RD	ENDS
;	COMDAT ??_C@_06KBMCJAHB@test?$CFx?$AA@
XON_RD	SEGMENT
??_C@_06KBMCJAHB@test?$CFx?$AA@ DB 'test%x', 00H	; `string'
XON_RD	ENDS
;	COMDAT ??_C@_05IKBANCEK@Earth?$AA@
XON_RD	SEGMENT
??_C@_05IKBANCEK@Earth?$AA@ DB 'Earth', 00H		; `string'
; Function compile flags: /Odt
XON_RD	ENDS
;	COMDAT ?CreateTempUsers@@YGXXZ
XONLINE	SEGMENT
_buf$41306 = -176
_user$41305 = -144
_hr$ = -12
_hTask$ = -8
_cUsers$ = -4
?CreateTempUsers@@YGXXZ PROC NEAR			; CreateTempUsers, COMDAT

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	57		 push	 edi

; 15   :     HRESULT              hr     = S_OK;

  0000a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 16   :     XONLINETASK_HANDLE   hTask;
; 17   :     DWORD                cUsers = 0;

  00011	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _cUsers$[ebp], 0
$L41302:

; 18   :     
; 19   :     
; 20   :     while (true)

  00018	b8 01 00 00 00	 mov	 eax, 1
  0001d	85 c0		 test	 eax, eax
  0001f	0f 84 e2 00 00
	00		 je	 $L41296

; 21   :     {
; 22   :     
; 23   :         __asm int 3;

  00025	cc		 int	 3

; 24   :     
; 25   :         DebugPrint("Creating user %d", ++cUsers);

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _cUsers$[ebp]
  00029	83 c1 01	 add	 ecx, 1
  0002c	89 4d fc	 mov	 DWORD PTR _cUsers$[ebp], ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _cUsers$[ebp]
  00032	52		 push	 edx
  00033	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@BIBKOPC@Creating?5user?5?$CFd?$AA@
  00038	e8 00 00 00 00	 call	 _DebugPrint
  0003d	83 c4 08	 add	 esp, 8

; 26   :         
; 27   :         XONLINE_USER user;
; 28   :         WCHAR buf[16] = {0};

  00040	66 c7 85 50 ff
	ff ff 00 00	 mov	 WORD PTR _buf$41306[ebp], 0
  00049	b9 07 00 00 00	 mov	 ecx, 7
  0004e	33 c0		 xor	 eax, eax
  00050	8d bd 52 ff ff
	ff		 lea	 edi, DWORD PTR _buf$41306[ebp+2]
  00056	f3 ab		 rep stosd
  00058	66 ab		 stosw

; 29   :     
; 30   :         ZeroMemory(&user, sizeof(XONLINE_USER));

  0005a	68 80 00 00 00	 push	 128			; 00000080H
  0005f	6a 00		 push	 0
  00061	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _user$41305[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 _memset
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 31   :         
; 32   :         srand(time(NULL));

  00070	6a 00		 push	 0
  00072	e8 00 00 00 00	 call	 _time
  00077	83 c4 04	 add	 esp, 4
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 _srand
  00080	83 c4 04	 add	 esp, 4

; 33   :         wsprintfA(user.name, "test%x", rand());

  00083	e8 00 00 00 00	 call	 _rand
  00088	50		 push	 eax
  00089	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_06KBMCJAHB@test?$CFx?$AA@
  0008e	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _user$41305[ebp+12]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 _wsprintfA
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 34   :         strcpy(user.kingdom, "Earth");

  0009d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05IKBANCEK@Earth?$AA@
  000a2	8d 55 8c	 lea	 edx, DWORD PTR _user$41305[ebp+28]
  000a5	52		 push	 edx
  000a6	e8 00 00 00 00	 call	 _strcpy
  000ab	83 c4 08	 add	 esp, 8

; 35   :     
; 36   :     
; 37   :         hr = _XOnlineAccountTempCreate(&user, NULL, &hTask);

  000ae	8d 45 f8	 lea	 eax, DWORD PTR _hTask$[ebp]
  000b1	50		 push	 eax
  000b2	6a 00		 push	 0
  000b4	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _user$41305[ebp]
  000ba	51		 push	 ecx
  000bb	e8 00 00 00 00	 call	 __XOnlineAccountTempCreate@12
  000c0	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 38   :         if (FAILED(hr))

  000c3	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000c7	7d 01		 jge	 SHORT $L41312

; 39   :         {
; 40   :              __asm int 3;

  000c9	cc		 int	 3
$L41312:

; 41   :         }
; 42   :         
; 43   :         do
; 44   :         {
; 45   :             hr = XOnlineTaskContinue(hTask);

  000ca	8b 55 f8	 mov	 edx, DWORD PTR _hTask$[ebp]
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 _XOnlineTaskContinue@4
  000d3	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 46   :                
; 47   :             if (FAILED(hr))

  000d6	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000da	7d 01		 jge	 SHORT $L41313

; 48   :     
; 49   :             {
; 50   :     	            __asm int 3;

  000dc	cc		 int	 3
$L41313:

; 51   :             }
; 52   :         } while (hr == XONLINETASK_S_RUNNING);

  000dd	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000e1	74 e7		 je	 SHORT $L41312

; 53   :     
; 54   :     
; 55   :         if (SUCCEEDED(hr))

  000e3	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000e7	7c 10		 jl	 SHORT $L41319

; 56   :         {
; 57   :             _XOnlineAccountTempCreateGetResults(hTask, &user);

  000e9	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _user$41305[ebp]
  000ef	50		 push	 eax
  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _hTask$[ebp]
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 __XOnlineAccountTempCreateGetResults@8
$L41319:

; 58   :         }
; 59   :         
; 60   :         XOnlineTaskClose(hTask);

  000f9	8b 55 f8	 mov	 edx, DWORD PTR _hTask$[ebp]
  000fc	52		 push	 edx
  000fd	e8 00 00 00 00	 call	 _XOnlineTaskClose@4

; 61   :     
; 62   :     }

  00102	e9 11 ff ff ff	 jmp	 $L41302
$L41296:

; 63   :     
; 64   : }

  00107	5f		 pop	 edi
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c3		 ret	 0
?CreateTempUsers@@YGXXZ ENDP				; CreateTempUsers
XONLINE	ENDS
PUBLIC	?GetTags@@YGXXZ					; GetTags
PUBLIC	??_C@_0O@CBLFELMN@name?5?$CFd?3?5?$CFls?6?$AA@	; `string'
EXTRN	__XOnlineGetTags@20:NEAR
EXTRN	__XOnlineGetTagsResults@12:NEAR
;	COMDAT ??_C@_0O@CBLFELMN@name?5?$CFd?3?5?$CFls?6?$AA@
XON_RD	SEGMENT
??_C@_0O@CBLFELMN@name?5?$CFd?3?5?$CFls?6?$AA@ DB 'name %d: %ls', 0aH, 00H ; `string'
; Function compile flags: /Odt
XON_RD	ENDS
;	COMDAT ?GetTags@@YGXXZ
XONLINE	SEGMENT
_i$41342 = -20
_rgszTags$ = -16
_hr$ = -12
_hTask$ = -8
_wTagCount$ = -4
?GetTags@@YGXXZ PROC NEAR				; GetTags, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 69   :     HRESULT              hr                  = S_OK;

  00006	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 70   :     XONLINETASK_HANDLE   hTask;
; 71   :     LPWSTR               rgszTags            = NULL;

  0000d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rgszTags$[ebp], 0

; 72   :     WORD                 wTagCount           = 0;

  00014	66 c7 45 fc 00
	00		 mov	 WORD PTR _wTagCount$[ebp], 0
$L41328:

; 73   :     
; 74   :     while (true)

  0001a	b8 01 00 00 00	 mov	 eax, 1
  0001f	85 c0		 test	 eax, eax
  00021	0f 84 9f 00 00
	00		 je	 $L41321

; 75   :     {
; 76   :         __asm int 3;

  00027	cc		 int	 3

; 77   : 
; 78   : 		//hr = _XOnlineGetTags(103, 5, L"slamb", NULL, &hTask);
; 79   : 		hr = _XOnlineGetTags(103, 20, NULL, NULL, &hTask);

  00028	8d 4d f8	 lea	 ecx, DWORD PTR _hTask$[ebp]
  0002b	51		 push	 ecx
  0002c	6a 00		 push	 0
  0002e	6a 00		 push	 0
  00030	6a 14		 push	 20			; 00000014H
  00032	6a 67		 push	 103			; 00000067H
  00034	e8 00 00 00 00	 call	 __XOnlineGetTags@20
  00039	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 80   : 
; 81   :         if (FAILED(hr))

  0003c	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00040	7d 01		 jge	 SHORT $L41332

; 82   :         {
; 83   :              __asm int 3;

  00042	cc		 int	 3
$L41332:

; 84   :         }
; 85   :         
; 86   :         do
; 87   :         {
; 88   :             hr = XOnlineTaskContinue(hTask);

  00043	8b 55 f8	 mov	 edx, DWORD PTR _hTask$[ebp]
  00046	52		 push	 edx
  00047	e8 00 00 00 00	 call	 _XOnlineTaskContinue@4
  0004c	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 89   :         
; 90   :             if (FAILED(hr))

  0004f	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00053	7d 01		 jge	 SHORT $L41333

; 91   :             {
; 92   :     	            __asm int 3;

  00055	cc		 int	 3
$L41333:

; 93   :             }
; 94   :         } 
; 95   :         while (hr == XONLINETASK_S_RUNNING);

  00056	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0005a	74 e7		 je	 SHORT $L41332

; 96   : 		
; 97   :     
; 98   :         if (SUCCEEDED(hr))

  0005c	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00060	7c 56		 jl	 SHORT $L41339

; 99   :         {
; 100  :             hr = _XOnlineGetTagsResults(hTask, &rgszTags, &wTagCount);

  00062	8d 45 fc	 lea	 eax, DWORD PTR _wTagCount$[ebp]
  00065	50		 push	 eax
  00066	8d 4d f0	 lea	 ecx, DWORD PTR _rgszTags$[ebp]
  00069	51		 push	 ecx
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _hTask$[ebp]
  0006d	52		 push	 edx
  0006e	e8 00 00 00 00	 call	 __XOnlineGetTagsResults@12
  00073	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax

; 101  :             if (FAILED(hr))

  00076	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0007a	7d 01		 jge	 SHORT $L41341

; 102  :             {
; 103  :                 __asm int 3;

  0007c	cc		 int	 3
$L41341:

; 104  :             }
; 105  : 
; 106  :             for (int i = 0; i < wTagCount; i++)

  0007d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$41342[ebp], 0
  00084	eb 09		 jmp	 SHORT $L41343
$L41344:
  00086	8b 45 ec	 mov	 eax, DWORD PTR _i$41342[ebp]
  00089	83 c0 01	 add	 eax, 1
  0008c	89 45 ec	 mov	 DWORD PTR _i$41342[ebp], eax
$L41343:
  0008f	0f b7 4d fc	 movzx	 ecx, WORD PTR _wTagCount$[ebp]
  00093	39 4d ec	 cmp	 DWORD PTR _i$41342[ebp], ecx
  00096	7d 20		 jge	 SHORT $L41339

; 107  :             {
; 108  :                 DebugPrint("name %d: %ls\n", i, rgszTags + i*XONLINE_KINGDOM_SIZE);

  00098	8b 55 ec	 mov	 edx, DWORD PTR _i$41342[ebp]
  0009b	6b d2 0c	 imul	 edx, 12			; 0000000cH
  0009e	8b 45 f0	 mov	 eax, DWORD PTR _rgszTags$[ebp]
  000a1	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  000a4	51		 push	 ecx
  000a5	8b 55 ec	 mov	 edx, DWORD PTR _i$41342[ebp]
  000a8	52		 push	 edx
  000a9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@CBLFELMN@name?5?$CFd?3?5?$CFls?6?$AA@
  000ae	e8 00 00 00 00	 call	 _DebugPrint
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 109  :             }

  000b6	eb ce		 jmp	 SHORT $L41344
$L41339:

; 110  :         }
; 111  : 
; 112  :         
; 113  :         XOnlineTaskClose(hTask);

  000b8	8b 45 f8	 mov	 eax, DWORD PTR _hTask$[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 _XOnlineTaskClose@4

; 114  : 
; 115  : 
; 116  :     }

  000c1	e9 54 ff ff ff	 jmp	 $L41328
$L41321:

; 117  : }

  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c3		 ret	 0
?GetTags@@YGXXZ ENDP					; GetTags
XONLINE	ENDS
PUBLIC	?ReserveName@@YGXXZ				; ReserveName
PUBLIC	??_C@_17CBGHINCI@?$AAD?$AAe?$AAv?$AA?$AA@	; `string'
PUBLIC	??_C@_1M@CFCBANED@?$AAs?$AAl?$AAa?$AAm?$AAb?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BB@NJMOHMLE@tag?5?$CFd?3?5?$CFls?4?$CFls?6?$AA@ ; `string'
EXTRN	__XOnlineReserveName@24:NEAR
EXTRN	__XOnlineGetReserveNameResults@12:NEAR
;	COMDAT ??_C@_17CBGHINCI@?$AAD?$AAe?$AAv?$AA?$AA@
XON_RD	SEGMENT
??_C@_17CBGHINCI@?$AAD?$AAe?$AAv?$AA?$AA@ DB 'D', 00H, 'e', 00H, 'v', 00H
	DB	00H, 00H					; `string'
XON_RD	ENDS
;	COMDAT ??_C@_1M@CFCBANED@?$AAs?$AAl?$AAa?$AAm?$AAb?$AA?$AA@
XON_RD	SEGMENT
??_C@_1M@CFCBANED@?$AAs?$AAl?$AAa?$AAm?$AAb?$AA?$AA@ DB 's', 00H, 'l', 00H
	DB	'a', 00H, 'm', 00H, 'b', 00H, 00H, 00H	; `string'
XON_RD	ENDS
;	COMDAT ??_C@_0BB@NJMOHMLE@tag?5?$CFd?3?5?$CFls?4?$CFls?6?$AA@
XON_RD	SEGMENT
??_C@_0BB@NJMOHMLE@tag?5?$CFd?3?5?$CFls?4?$CFls?6?$AA@ DB 'tag %d: %ls.%l'
	DB	's', 0aH, 00H				; `string'
; Function compile flags: /Odt
XON_RD	ENDS
;	COMDAT ?ReserveName@@YGXXZ
XONLINE	SEGMENT
_i$41371 = -20
_hr$ = -16
_pNames$ = -12
_hTask$ = -8
_dwNameCount$ = -4
?ReserveName@@YGXXZ PROC NEAR				; ReserveName, COMDAT

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 123  :     HRESULT              hr                 = S_OK;

  00006	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0

; 124  :     XONLINETASK_HANDLE   hTask;
; 125  :     PUSER_XNAME          pNames              = NULL;

  0000d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pNames$[ebp], 0

; 126  :     DWORD                dwNameCount          = 0;

  00014	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dwNameCount$[ebp], 0
$L41355:

; 127  :     
; 128  :     while (true)

  0001b	b8 01 00 00 00	 mov	 eax, 1
  00020	85 c0		 test	 eax, eax
  00022	0f 84 b2 00 00
	00		 je	 $L41348

; 129  :     {
; 130  :         hr = _XOnlineReserveName(L"slamb", L"Dev", 5, 103, NULL, &hTask);

  00028	8d 4d f8	 lea	 ecx, DWORD PTR _hTask$[ebp]
  0002b	51		 push	 ecx
  0002c	6a 00		 push	 0
  0002e	6a 67		 push	 103			; 00000067H
  00030	6a 05		 push	 5
  00032	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_17CBGHINCI@?$AAD?$AAe?$AAv?$AA?$AA@
  00037	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1M@CFCBANED@?$AAs?$AAl?$AAa?$AAm?$AAb?$AA?$AA@
  0003c	e8 00 00 00 00	 call	 __XOnlineReserveName@24
  00041	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 131  : 
; 132  :         if (FAILED(hr))

  00044	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00048	7d 01		 jge	 SHORT $L41361

; 133  :         {
; 134  :              __asm int 3;

  0004a	cc		 int	 3
$L41361:

; 135  :         }
; 136  :         
; 137  :         do
; 138  :         {
; 139  :             hr = XOnlineTaskContinue(hTask);

  0004b	8b 55 f8	 mov	 edx, DWORD PTR _hTask$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 _XOnlineTaskContinue@4
  00054	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 140  :         
; 141  :             if (FAILED(hr))

  00057	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0005b	7d 01		 jge	 SHORT $L41362

; 142  :             {
; 143  :     	            __asm int 3;

  0005d	cc		 int	 3
$L41362:

; 144  :             }
; 145  :         } 
; 146  :         while (hr == XONLINETASK_S_RUNNING);

  0005e	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00062	74 e7		 je	 SHORT $L41361

; 147  :     
; 148  :     
; 149  :         if (SUCCEEDED(hr))

  00064	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00068	7c 62		 jl	 SHORT $L41368

; 150  :         {
; 151  :             hr = _XOnlineGetReserveNameResults(hTask, &pNames, &dwNameCount);

  0006a	8d 45 fc	 lea	 eax, DWORD PTR _dwNameCount$[ebp]
  0006d	50		 push	 eax
  0006e	8d 4d f4	 lea	 ecx, DWORD PTR _pNames$[ebp]
  00071	51		 push	 ecx
  00072	8b 55 f8	 mov	 edx, DWORD PTR _hTask$[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 __XOnlineGetReserveNameResults@12
  0007b	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 152  :             if (FAILED(hr))

  0007e	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00082	7d 01		 jge	 SHORT $L41370

; 153  :             {
; 154  :                 __asm int 3;

  00084	cc		 int	 3
$L41370:

; 155  :             }
; 156  : 
; 157  :             for (DWORD i = 0; i < dwNameCount; i++)

  00085	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$41371[ebp], 0
  0008c	eb 09		 jmp	 SHORT $L41372
$L41373:
  0008e	8b 45 ec	 mov	 eax, DWORD PTR _i$41371[ebp]
  00091	83 c0 01	 add	 eax, 1
  00094	89 45 ec	 mov	 DWORD PTR _i$41371[ebp], eax
$L41372:
  00097	8b 4d ec	 mov	 ecx, DWORD PTR _i$41371[ebp]
  0009a	3b 4d fc	 cmp	 ecx, DWORD PTR _dwNameCount$[ebp]
  0009d	73 2d		 jae	 SHORT $L41368

; 158  :             {
; 159  :                 DebugPrint("tag %d: %ls.%ls\n", i, pNames[i].wszNickname, pNames[i].wszRealm);

  0009f	8b 55 ec	 mov	 edx, DWORD PTR _i$41371[ebp]
  000a2	6b d2 38	 imul	 edx, 56			; 00000038H
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _pNames$[ebp]
  000a8	8d 4c 10 20	 lea	 ecx, DWORD PTR [eax+edx+32]
  000ac	51		 push	 ecx
  000ad	8b 55 ec	 mov	 edx, DWORD PTR _i$41371[ebp]
  000b0	6b d2 38	 imul	 edx, 56			; 00000038H
  000b3	8b 45 f4	 mov	 eax, DWORD PTR _pNames$[ebp]
  000b6	03 c2		 add	 eax, edx
  000b8	50		 push	 eax
  000b9	8b 4d ec	 mov	 ecx, DWORD PTR _i$41371[ebp]
  000bc	51		 push	 ecx
  000bd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@NJMOHMLE@tag?5?$CFd?3?5?$CFls?4?$CFls?6?$AA@
  000c2	e8 00 00 00 00	 call	 _DebugPrint
  000c7	83 c4 10	 add	 esp, 16			; 00000010H

; 160  :             }

  000ca	eb c2		 jmp	 SHORT $L41373
$L41368:

; 161  :         }
; 162  : 
; 163  :         
; 164  :         XOnlineTaskClose(hTask);

  000cc	8b 55 f8	 mov	 edx, DWORD PTR _hTask$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 _XOnlineTaskClose@4

; 165  : 
; 166  : 
; 167  :     }

  000d5	e9 41 ff ff ff	 jmp	 $L41355
$L41348:

; 168  : }

  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
?ReserveName@@YGXXZ ENDP				; ReserveName
XONLINE	ENDS
PUBLIC	?CreateUsers@@YGXXZ				; CreateUsers
PUBLIC	??_C@_1O@POGJDFOD@?$AAU?$AAs?$AAe?$AAr?$AA?$CF?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_17NHNKEEAN@?$AAJ?$AAo?$AAe?$AA?$AA@	; `string'
PUBLIC	??_C@_19JKHHOKBN@?$AAS?$AAh?$AAm?$AAo?$AA?$AA@	; `string'
PUBLIC	??_C@_1CA@FLFLJGME@?$AA1?$AA?5?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAW?$AAa?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@NEPPNMDH@?$AAR?$AAe?$AAd?$AAm?$AAo?$AAn?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_15HMBOFJEL@?$AAW?$AAA?$AA?$AA@		; `string'
PUBLIC	??_C@_1M@LABOKDIL@?$AA9?$AA8?$AA0?$AA7?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_17BFBNNDCE@?$AA4?$AA2?$AA5?$AA?$AA@	; `string'
PUBLIC	??_C@_1BC@EEFEMLLJ@?$AA7?$AA0?$AA3?$AA?9?$AA8?$AA7?$AA1?$AA6?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@BBAKCIMI@?$AAJ?$AAo?$AAe?$AA?5?$AAS?$AAh?$AAm?$AAo?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CC@ENAHBODF@?$AA4?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BO@HPPCKOMJ@Created?5user?5?$CFs?4?$CFs?5?$CI0x?$CF016x?$CJ?6?$AA@ ; `string'
EXTRN	_wsprintfW:NEAR
EXTRN	__XOnlineCreateAccount@12:NEAR
EXTRN	__XOnlineGetCreateAccountResults@8:NEAR
EXTRN	_SystemTimeToFileTime@8:NEAR
EXTRN	_wcscpy:NEAR
;	COMDAT ??_C@_1O@POGJDFOD@?$AAU?$AAs?$AAe?$AAr?$AA?$CF?$AAx?$AA?$AA@
XON_RD	SEGMENT
??_C@_1O@POGJDFOD@?$AAU?$AAs?$AAe?$AAr?$AA?$CF?$AAx?$AA?$AA@ DB 'U', 00H, 's'
	DB	00H, 'e', 00H, 'r', 00H, '%', 00H, 'x', 00H, 00H, 00H ; `string'
XON_RD	ENDS
;	COMDAT ??_C@_17NHNKEEAN@?$AAJ?$AAo?$AAe?$AA?$AA@
XON_RD	SEGMENT
??_C@_17NHNKEEAN@?$AAJ?$AAo?$AAe?$AA?$AA@ DB 'J', 00H, 'o', 00H, 'e', 00H
	DB	00H, 00H					; `string'
XON_RD	ENDS
;	COMDAT ??_C@_19JKHHOKBN@?$AAS?$AAh?$AAm?$AAo?$AA?$AA@
XON_RD	SEGMENT
??_C@_19JKHHOKBN@?$AAS?$AAh?$AAm?$AAo?$AA?$AA@ DB 'S', 00H, 'h', 00H, 'm', 00H
	DB	'o', 00H, 00H, 00H				; `string'
XON_RD	ENDS
;	COMDAT ??_C@_1CA@FLFLJGME@?$AA1?$AA?5?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAW?$AAa?$AAy?$AA?$AA@
XON_RD	SEGMENT
??_C@_1CA@FLFLJGME@?$AA1?$AA?5?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAW?$AAa?$AAy?$AA?$AA@ DB '1'
	DB	00H, ' ', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H
	DB	's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'W', 00H, 'a'
	DB	00H, 'y', 00H, 00H, 00H			; `string'
XON_RD	ENDS
;	COMDAT ??_C@_1BA@NEPPNMDH@?$AAR?$AAe?$AAd?$AAm?$AAo?$AAn?$AAd?$AA?$AA@
XON_RD	SEGMENT
??_C@_1BA@NEPPNMDH@?$AAR?$AAe?$AAd?$AAm?$AAo?$AAn?$AAd?$AA?$AA@ DB 'R', 00H
	DB	'e', 00H, 'd', 00H, 'm', 00H, 'o', 00H, 'n', 00H, 'd', 00H, 00H
	DB	00H						; `string'
XON_RD	ENDS
;	COMDAT ??_C@_15HMBOFJEL@?$AAW?$AAA?$AA?$AA@
XON_RD	SEGMENT
??_C@_15HMBOFJEL@?$AAW?$AAA?$AA?$AA@ DB 'W', 00H, 'A', 00H, 00H, 00H ; `string'
XON_RD	ENDS
;	COMDAT ??_C@_1M@LABOKDIL@?$AA9?$AA8?$AA0?$AA7?$AA2?$AA?$AA@
XON_RD	SEGMENT
??_C@_1M@LABOKDIL@?$AA9?$AA8?$AA0?$AA7?$AA2?$AA?$AA@ DB '9', 00H, '8', 00H
	DB	'0', 00H, '7', 00H, '2', 00H, 00H, 00H	; `string'
XON_RD	ENDS
;	COMDAT ??_C@_17BFBNNDCE@?$AA4?$AA2?$AA5?$AA?$AA@
XON_RD	SEGMENT
??_C@_17BFBNNDCE@?$AA4?$AA2?$AA5?$AA?$AA@ DB '4', 00H, '2', 00H, '5', 00H
	DB	00H, 00H					; `string'
XON_RD	ENDS
;	COMDAT ??_C@_1BC@EEFEMLLJ@?$AA7?$AA0?$AA3?$AA?9?$AA8?$AA7?$AA1?$AA6?$AA?$AA@
XON_RD	SEGMENT
??_C@_1BC@EEFEMLLJ@?$AA7?$AA0?$AA3?$AA?9?$AA8?$AA7?$AA1?$AA6?$AA?$AA@ DB '7'
	DB	00H, '0', 00H, '3', 00H, '-', 00H, '8', 00H, '7', 00H, '1', 00H
	DB	'6', 00H, 00H, 00H				; `string'
XON_RD	ENDS
;	COMDAT ??_C@_1BC@BBAKCIMI@?$AAJ?$AAo?$AAe?$AA?5?$AAS?$AAh?$AAm?$AAo?$AA?$AA@
XON_RD	SEGMENT
??_C@_1BC@BBAKCIMI@?$AAJ?$AAo?$AAe?$AA?5?$AAS?$AAh?$AAm?$AAo?$AA?$AA@ DB 'J'
	DB	00H, 'o', 00H, 'e', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'm', 00H
	DB	'o', 00H, 00H, 00H				; `string'
XON_RD	ENDS
;	COMDAT ??_C@_1CC@ENAHBODF@?$AA4?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA?$AA@
XON_RD	SEGMENT
??_C@_1CC@ENAHBODF@?$AA4?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA?$AA@ DB '4'
	DB	00H, '1', 00H, '1', 00H, '1', 00H, '1', 00H, '1', 00H, '1', 00H
	DB	'1', 00H, '1', 00H, '1', 00H, '1', 00H, '1', 00H, '1', 00H, '1'
	DB	00H, '1', 00H, '1', 00H, 00H, 00H		; `string'
XON_RD	ENDS
;	COMDAT ??_C@_0BO@HPPCKOMJ@Created?5user?5?$CFs?4?$CFs?5?$CI0x?$CF016x?$CJ?6?$AA@
XON_RD	SEGMENT
??_C@_0BO@HPPCKOMJ@Created?5user?5?$CFs?4?$CFs?5?$CI0x?$CF016x?$CJ?6?$AA@ DB 'C'
	DB	'reated user %s.%s (0x%016x)', 0aH, 00H	; `string'
; Function compile flags: /Odt
XON_RD	ENDS
;	COMDAT ?CreateUsers@@YGXXZ
XONLINE	SEGMENT
_st$41398 = -2436
_hr$ = -2420
_user$ = -2416
_hTask$ = -2284
_acctInfo$ = -2280
?CreateUsers@@YGXXZ PROC NEAR				; CreateUsers, COMDAT

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 09 00
	00		 sub	 esp, 2436		; 00000984H

; 172  :     HRESULT              hr                 = S_OK;

  00009	c7 85 8c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0
$L41384:

; 173  :     XONLINETASK_HANDLE   hTask;
; 174  :     USER_ACCOUNT_INFO    acctInfo;
; 175  :     XONLINE_USER         user;
; 176  : 
; 177  :     
; 178  :     while (true)

  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	85 c0		 test	 eax, eax
  0001a	0f 84 25 02 00
	00		 je	 $L41377

; 179  :     {
; 180  :         ZeroMemory(&acctInfo, sizeof(USER_ACCOUNT_INFO));

  00020	68 e4 08 00 00	 push	 2276			; 000008e4H
  00025	6a 00		 push	 0
  00027	8d 8d 18 f7 ff
	ff		 lea	 ecx, DWORD PTR _acctInfo$[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 _memset
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 181  : 
; 182  :         __asm int 3;

  00036	cc		 int	 3

; 183  :     
; 184  :         
; 185  :         srand(time(NULL));

  00037	6a 00		 push	 0
  00039	e8 00 00 00 00	 call	 _time
  0003e	83 c4 04	 add	 esp, 4
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 _srand
  00047	83 c4 04	 add	 esp, 4

; 186  :         wsprintfW(acctInfo.wszNickname, L"User%x", rand());

  0004a	e8 00 00 00 00	 call	 _rand
  0004f	50		 push	 eax
  00050	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1O@POGJDFOD@?$AAU?$AAs?$AAe?$AAr?$AA?$CF?$AAx?$AA?$AA@
  00055	8d 95 18 f7 ff
	ff		 lea	 edx, DWORD PTR _acctInfo$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 _wsprintfW
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH

; 187  :         wcscpy(acctInfo.wszKingdom, L"Dev");

  00064	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_17CBGHINCI@?$AAD?$AAe?$AAv?$AA?$AA@
  00069	8d 85 38 f7 ff
	ff		 lea	 eax, DWORD PTR _acctInfo$[ebp+32]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 _wcscpy
  00075	83 c4 08	 add	 esp, 8

; 188  : 
; 189  :         wcscpy(acctInfo.wszFirstName, L"Joe");

  00078	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_17NHNKEEAN@?$AAJ?$AAo?$AAe?$AA?$AA@
  0007d	8d 8d 54 f7 ff
	ff		 lea	 ecx, DWORD PTR _acctInfo$[ebp+60]
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 _wcscpy
  00089	83 c4 08	 add	 esp, 8

; 190  :         wcscpy(acctInfo.wszLastName, L"Shmo");

  0008c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_19JKHHOKBN@?$AAS?$AAh?$AAm?$AAo?$AA?$AA@
  00091	8d 95 d4 f7 ff
	ff		 lea	 edx, DWORD PTR _acctInfo$[ebp+188]
  00097	52		 push	 edx
  00098	e8 00 00 00 00	 call	 _wcscpy
  0009d	83 c4 08	 add	 esp, 8

; 191  :         wcscpy(acctInfo.wszStreet1, L"1 Microsoft Way");

  000a0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CA@FLFLJGME@?$AA1?$AA?5?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAW?$AAa?$AAy?$AA?$AA@
  000a5	8d 85 54 f8 ff
	ff		 lea	 eax, DWORD PTR _acctInfo$[ebp+316]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 _wcscpy
  000b1	83 c4 08	 add	 esp, 8

; 192  :         wcscpy(acctInfo.wszCity, L"Redmond");

  000b4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BA@NEPPNMDH@?$AAR?$AAe?$AAd?$AAm?$AAo?$AAn?$AAd?$AA?$AA@
  000b9	8d 8d 54 fb ff
	ff		 lea	 ecx, DWORD PTR _acctInfo$[ebp+1084]
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 _wcscpy
  000c5	83 c4 08	 add	 esp, 8

; 193  :         wcscpy(acctInfo.wszState, L"WA");

  000c8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_15HMBOFJEL@?$AAW?$AAA?$AA?$AA@
  000cd	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _acctInfo$[ebp+1212]
  000d3	52		 push	 edx
  000d4	e8 00 00 00 00	 call	 _wcscpy
  000d9	83 c4 08	 add	 esp, 8

; 194  :         acctInfo.bCountryId = 103;

  000dc	c6 85 54 fc ff
	ff 67		 mov	 BYTE PTR _acctInfo$[ebp+1340], 103 ; 00000067H

; 195  :         wcscpy(acctInfo.wszPostalCode, L"98072");

  000e3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1M@LABOKDIL@?$AA9?$AA8?$AA0?$AA7?$AA2?$AA?$AA@
  000e8	8d 85 56 fc ff
	ff		 lea	 eax, DWORD PTR _acctInfo$[ebp+1342]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 _wcscpy
  000f4	83 c4 08	 add	 esp, 8

; 196  :         wcscpy(acctInfo.wszPhonePrefix, L"425");

  000f7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_17BFBNNDCE@?$AA4?$AA2?$AA5?$AA?$AA@
  000fc	8d 8d 76 fc ff
	ff		 lea	 ecx, DWORD PTR _acctInfo$[ebp+1374]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 _wcscpy
  00108	83 c4 08	 add	 esp, 8

; 197  :         wcscpy(acctInfo.wszPhoneNumber, L"703-8716");

  0010b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BC@EEFEMLLJ@?$AA7?$AA0?$AA3?$AA?9?$AA8?$AA7?$AA1?$AA6?$AA?$AA@
  00110	8d 95 8e fc ff
	ff		 lea	 edx, DWORD PTR _acctInfo$[ebp+1398]
  00116	52		 push	 edx
  00117	e8 00 00 00 00	 call	 _wcscpy
  0011c	83 c4 08	 add	 esp, 8

; 198  :         
; 199  :         wcscpy(acctInfo.wszCardHolder, L"Joe Shmo");

  0011f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1BC@BBAKCIMI@?$AAJ?$AAo?$AAe?$AA?5?$AAS?$AAh?$AAm?$AAo?$AA?$AA@
  00124	8d 85 be fc ff
	ff		 lea	 eax, DWORD PTR _acctInfo$[ebp+1446]
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 _wcscpy
  00130	83 c4 08	 add	 esp, 8

; 200  :         wcscpy(acctInfo.wszCardNumber, L"4111111111111111");

  00133	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_1CC@ENAHBODF@?$AA4?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA1?$AA?$AA@
  00138	8d 8d 40 fd ff
	ff		 lea	 ecx, DWORD PTR _acctInfo$[ebp+1576]
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 _wcscpy
  00144	83 c4 08	 add	 esp, 8

; 201  : 
; 202  :         SYSTEMTIME st;
; 203  :         ZeroMemory(&st, sizeof(SYSTEMTIME));

  00147	6a 10		 push	 16			; 00000010H
  00149	6a 00		 push	 0
  0014b	8d 95 7c f6 ff
	ff		 lea	 edx, DWORD PTR _st$41398[ebp]
  00151	52		 push	 edx
  00152	e8 00 00 00 00	 call	 _memset
  00157	83 c4 0c	 add	 esp, 12			; 0000000cH

; 204  :         st.wYear = 2003;

  0015a	66 c7 85 7c f6
	ff ff d3 07	 mov	 WORD PTR _st$41398[ebp], 2003 ; 000007d3H

; 205  :         st.wMonth = 2;

  00163	66 c7 85 7e f6
	ff ff 02 00	 mov	 WORD PTR _st$41398[ebp+2], 2

; 206  :         
; 207  :         SystemTimeToFileTime(&st, &(acctInfo.ftCardExpiration));

  0016c	8d 85 70 fd ff
	ff		 lea	 eax, DWORD PTR _acctInfo$[ebp+1624]
  00172	50		 push	 eax
  00173	8d 8d 7c f6 ff
	ff		 lea	 ecx, DWORD PTR _st$41398[ebp]
  00179	51		 push	 ecx
  0017a	e8 00 00 00 00	 call	 _SystemTimeToFileTime@8

; 208  :         
; 209  :         hr = _XOnlineCreateAccount(&acctInfo, NULL, &hTask);

  0017f	8d 95 14 f7 ff
	ff		 lea	 edx, DWORD PTR _hTask$[ebp]
  00185	52		 push	 edx
  00186	6a 00		 push	 0
  00188	8d 85 18 f7 ff
	ff		 lea	 eax, DWORD PTR _acctInfo$[ebp]
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 __XOnlineCreateAccount@12
  00194	89 85 8c f6 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 210  :         if (FAILED(hr))

  0019a	83 bd 8c f6 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001a1	7d 01		 jge	 SHORT $L41402

; 211  :         {
; 212  :              __asm int 3;

  001a3	cc		 int	 3
$L41402:

; 213  :         }
; 214  :         
; 215  :         do
; 216  :         {
; 217  :             hr = XOnlineTaskContinue(hTask);

  001a4	8b 8d 14 f7 ff
	ff		 mov	 ecx, DWORD PTR _hTask$[ebp]
  001aa	51		 push	 ecx
  001ab	e8 00 00 00 00	 call	 _XOnlineTaskContinue@4
  001b0	89 85 8c f6 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 218  :         
; 219  :             if (FAILED(hr))

  001b6	83 bd 8c f6 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001bd	7d 01		 jge	 SHORT $L41403

; 220  :             {
; 221  :     	            __asm int 3;

  001bf	cc		 int	 3
$L41403:

; 222  :             }
; 223  :         } 
; 224  :         while (hr == XONLINETASK_S_RUNNING);

  001c0	83 bd 8c f6 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001c7	74 db		 je	 SHORT $L41402

; 225  :     
; 226  :     
; 227  :         if (SUCCEEDED(hr))

  001c9	83 bd 8c f6 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  001d0	7c 62		 jl	 SHORT $L41409

; 228  :         {
; 229  :             
; 230  :             ZeroMemory(&user, sizeof(XONLINE_USER));

  001d2	68 80 00 00 00	 push	 128			; 00000080H
  001d7	6a 00		 push	 0
  001d9	8d 95 90 f6 ff
	ff		 lea	 edx, DWORD PTR _user$[ebp]
  001df	52		 push	 edx
  001e0	e8 00 00 00 00	 call	 _memset
  001e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 231  :             hr = _XOnlineGetCreateAccountResults(hTask, &user);

  001e8	8d 85 90 f6 ff
	ff		 lea	 eax, DWORD PTR _user$[ebp]
  001ee	50		 push	 eax
  001ef	8b 8d 14 f7 ff
	ff		 mov	 ecx, DWORD PTR _hTask$[ebp]
  001f5	51		 push	 ecx
  001f6	e8 00 00 00 00	 call	 __XOnlineGetCreateAccountResults@8
  001fb	89 85 8c f6 ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 232  :             if (FAILED(hr))

  00201	83 bd 8c f6 ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  00208	7d 01		 jge	 SHORT $L41412

; 233  :             {
; 234  :                 __asm int 3;

  0020a	cc		 int	 3
$L41412:

; 235  :             }
; 236  : 
; 237  :             DebugPrint("Created user %s.%s (0x%016x)\n", user.name, user.kingdom, user.xuid.qwUserID);

  0020b	8b 95 94 f6 ff
	ff		 mov	 edx, DWORD PTR _user$[ebp+4]
  00211	52		 push	 edx
  00212	8b 85 90 f6 ff
	ff		 mov	 eax, DWORD PTR _user$[ebp]
  00218	50		 push	 eax
  00219	8d 8d ac f6 ff
	ff		 lea	 ecx, DWORD PTR _user$[ebp+28]
  0021f	51		 push	 ecx
  00220	8d 95 9c f6 ff
	ff		 lea	 edx, DWORD PTR _user$[ebp+12]
  00226	52		 push	 edx
  00227	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@HPPCKOMJ@Created?5user?5?$CFs?4?$CFs?5?$CI0x?$CF016x?$CJ?6?$AA@
  0022c	e8 00 00 00 00	 call	 _DebugPrint
  00231	83 c4 14	 add	 esp, 20			; 00000014H
$L41409:

; 238  :         }
; 239  : 
; 240  :         
; 241  :         XOnlineTaskClose(hTask);

  00234	8b 85 14 f7 ff
	ff		 mov	 eax, DWORD PTR _hTask$[ebp]
  0023a	50		 push	 eax
  0023b	e8 00 00 00 00	 call	 _XOnlineTaskClose@4

; 242  : 
; 243  : 
; 244  :     }

  00240	e9 ce fd ff ff	 jmp	 $L41384
$L41377:

; 245  : }

  00245	8b e5		 mov	 esp, ebp
  00247	5d		 pop	 ebp
  00248	c3		 ret	 0
?CreateUsers@@YGXXZ ENDP				; CreateUsers
XONLINE	ENDS
PUBLIC	_main
PUBLIC	??_C@_0BP@JOOCCHLN@Loading?5XBox?5network?5stack?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@NMPNAPD@Failed?5XNetStartup?5with?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@LLOLLLND@Calling?5XOnlineStartup?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CH@MLBBEAOE@Error?5?$CF08x?5returned?5by?5XOnlineSt@ ; `string'
PUBLIC	??_C@_0CL@KNHIGDKJ@Cannot?5Logon?5?$CI?$CF08x?$CJ?0?5check?5c?3?2xo@ ; `string'
EXTRN	_WSACleanup@0:NEAR
EXTRN	_XNetStartup@4:NEAR
EXTRN	_XNetCleanup@0:NEAR
EXTRN	_XOnlineStartup@4:NEAR
EXTRN	_XOnlineLogonWrapper@12:NEAR
;	COMDAT ??_C@_0BP@JOOCCHLN@Loading?5XBox?5network?5stack?4?4?4?6?$AA@
XON_RD	SEGMENT
??_C@_0BP@JOOCCHLN@Loading?5XBox?5network?5stack?4?4?4?6?$AA@ DB 'Loading'
	DB	' XBox network stack...', 0aH, 00H		; `string'
XON_RD	ENDS
;	COMDAT ??_C@_0BM@NMPNAPD@Failed?5XNetStartup?5with?5?$CFd?6?$AA@
XON_RD	SEGMENT
??_C@_0BM@NMPNAPD@Failed?5XNetStartup?5with?5?$CFd?6?$AA@ DB 'Failed XNet'
	DB	'Startup with %d', 0aH, 00H			; `string'
XON_RD	ENDS
;	COMDAT ??_C@_0BL@LLOLLLND@Calling?5XOnlineStartup?4?4?4?6?$AA@
XON_RD	SEGMENT
??_C@_0BL@LLOLLLND@Calling?5XOnlineStartup?4?4?4?6?$AA@ DB 'Calling XOnli'
	DB	'neStartup...', 0aH, 00H			; `string'
XON_RD	ENDS
;	COMDAT ??_C@_0CH@MLBBEAOE@Error?5?$CF08x?5returned?5by?5XOnlineSt@
XON_RD	SEGMENT
??_C@_0CH@MLBBEAOE@Error?5?$CF08x?5returned?5by?5XOnlineSt@ DB 'Error %08'
	DB	'x returned by XOnlineStartup', 0aH, 00H	; `string'
XON_RD	ENDS
;	COMDAT ??_C@_0CL@KNHIGDKJ@Cannot?5Logon?5?$CI?$CF08x?$CJ?0?5check?5c?3?2xo@
XON_RD	SEGMENT
??_C@_0CL@KNHIGDKJ@Cannot?5Logon?5?$CI?$CF08x?$CJ?0?5check?5c?3?2xo@ DB 'C'
	DB	'annot Logon (%08x), check c:\xonline.ini', 0aH, 00H ; `string'
; Function compile flags: /Odt
XON_RD	ENDS
;	COMDAT _main
XONLINE	SEGMENT
_hEvent$ = -1508
_hr$ = -1504
_dwError$ = -1500
_xnsp$ = -1496
_hLogon$ = -1040
_xosp$ = -4
_main	PROC NEAR					; COMDAT

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 05 00
	00		 sub	 esp, 1512		; 000005e8H

; 262  :     HRESULT              hr                = S_OK;

  00009	c7 85 20 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _hr$[ebp], 0

; 263  :     DWORD                dwError           = 0;

  00013	c7 85 24 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwError$[ebp], 0

; 264  :     HANDLE               hEvent            = NULL;

  0001d	c7 85 1c fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _hEvent$[ebp], 0

; 265  :     WSADATA              WsaData;
; 266  :     DWORD                dwWorkFlags;
; 267  :     DWORD i;
; 268  :     XNADDR xna;
; 269  :     XONLINETASK_HANDLE   hLogon;
; 270  :     DWORD n;
; 271  :     XONLINE_USER Users[8];
; 272  : 
; 273  : 	XONLINE_STARTUP_PARAMS	xosp = { 0 };

  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _xosp$[ebp], 0

; 274  : 
; 275  : 	XNetStartupParams 	xnsp = { sizeof(XNetStartupParams), 

  0002e	c6 85 28 fa ff
	ff 0c		 mov	 BYTE PTR _xnsp$[ebp], 12 ; 0000000cH

; 276  : 								XNET_STARTUP_BYPASS_SECURITY };

  00035	c6 85 29 fa ff
	ff 01		 mov	 BYTE PTR _xnsp$[ebp+1], 1
  0003c	33 c0		 xor	 eax, eax
  0003e	89 85 2a fa ff
	ff		 mov	 DWORD PTR _xnsp$[ebp+2], eax
  00044	89 85 2e fa ff
	ff		 mov	 DWORD PTR _xnsp$[ebp+6], eax
  0004a	66 89 85 32 fa
	ff ff		 mov	 WORD PTR _xnsp$[ebp+10], ax

; 277  : 
; 278  :     DebugPrint("Loading XBox network stack...\n");

  00051	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@JOOCCHLN@Loading?5XBox?5network?5stack?4?4?4?6?$AA@
  00056	e8 00 00 00 00	 call	 _DebugPrint
  0005b	83 c4 04	 add	 esp, 4

; 279  :     dwError = XNetStartup(&xnsp);

  0005e	8d 8d 28 fa ff
	ff		 lea	 ecx, DWORD PTR _xnsp$[ebp]
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 _XNetStartup@4
  0006a	89 85 24 fa ff
	ff		 mov	 DWORD PTR _dwError$[ebp], eax

; 280  :     if (dwError != NO_ERROR)

  00070	83 bd 24 fa ff
	ff 00		 cmp	 DWORD PTR _dwError$[ebp], 0
  00077	74 19		 je	 SHORT $L41433

; 281  :     {
; 282  : 	    DebugPrint("Failed XNetStartup with %d\n", dwError);

  00079	8b 95 24 fa ff
	ff		 mov	 edx, DWORD PTR _dwError$[ebp]
  0007f	52		 push	 edx
  00080	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@NMPNAPD@Failed?5XNetStartup?5with?5?$CFd?6?$AA@
  00085	e8 00 00 00 00	 call	 _DebugPrint
  0008a	83 c4 08	 add	 esp, 8

; 283  :         return;

  0008d	e9 8e 00 00 00	 jmp	 $L41417
$L41433:

; 284  :     }
; 285  : 
; 286  :     DebugPrint("Calling XOnlineStartup...\n");

  00092	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@LLOLLLND@Calling?5XOnlineStartup?4?4?4?6?$AA@
  00097	e8 00 00 00 00	 call	 _DebugPrint
  0009c	83 c4 04	 add	 esp, 4

; 287  :     hr = XOnlineStartup(&xosp);

  0009f	8d 45 fc	 lea	 eax, DWORD PTR _xosp$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 _XOnlineStartup@4
  000a8	89 85 20 fa ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 288  :     if (FAILED(hr))

  000ae	83 bd 20 fa ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000b5	7d 16		 jge	 SHORT $L41437

; 289  :     {
; 290  :         DebugPrint("Error %08x returned by XOnlineStartup\n", hr);

  000b7	8b 8d 20 fa ff
	ff		 mov	 ecx, DWORD PTR _hr$[ebp]
  000bd	51		 push	 ecx
  000be	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@MLBBEAOE@Error?5?$CF08x?5returned?5by?5XOnlineSt@
  000c3	e8 00 00 00 00	 call	 _DebugPrint
  000c8	83 c4 08	 add	 esp, 8

; 291  :         return;

  000cb	eb 53		 jmp	 SHORT $L41417
$L41437:

; 292  :     }
; 293  : 
; 294  :     	// Initialize services
; 295  : 	hr = XOnlineLogonWrapper(g_rgServices, NUM_SERVICES, &hLogon);

  000cd	8d 95 f0 fb ff
	ff		 lea	 edx, DWORD PTR _hLogon$[ebp]
  000d3	52		 push	 edx
  000d4	6a 01		 push	 1
  000d6	68 00 00 00 00	 push	 OFFSET FLAT:?g_rgServices@@3PAKA ; g_rgServices
  000db	e8 00 00 00 00	 call	 _XOnlineLogonWrapper@12
  000e0	89 85 20 fa ff
	ff		 mov	 DWORD PTR _hr$[ebp], eax

; 296  : 	if (FAILED(hr))

  000e6	83 bd 20 fa ff
	ff 00		 cmp	 DWORD PTR _hr$[ebp], 0
  000ed	7d 16		 jge	 SHORT $L41440

; 297  : 	{
; 298  :         DebugPrint("Cannot Logon (%08x), check c:\\xonline.ini\n", hr);

  000ef	8b 85 20 fa ff
	ff		 mov	 eax, DWORD PTR _hr$[ebp]
  000f5	50		 push	 eax
  000f6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CL@KNHIGDKJ@Cannot?5Logon?5?$CI?$CF08x?$CJ?0?5check?5c?3?2xo@
  000fb	e8 00 00 00 00	 call	 _DebugPrint
  00100	83 c4 08	 add	 esp, 8

; 299  :         return;

  00103	eb 1b		 jmp	 SHORT $L41417
$L41440:

; 300  : 	}
; 301  : 
; 302  :     // 
; 303  :     // tests
; 304  :     //
; 305  : 
; 306  :     //CreateTempUsers();
; 307  :     //CreateUsers();
; 308  :     //GetTags();
; 309  :     ReserveName();

  00105	e8 00 00 00 00	 call	 ?ReserveName@@YGXXZ	; ReserveName

; 310  : 
; 311  : 
; 312  :     
; 313  : 
; 314  :     // 
; 315  :     // cleanup
; 316  :     //
; 317  :    
; 318  :     XOnlineTaskClose(hLogon);

  0010a	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR _hLogon$[ebp]
  00110	51		 push	 ecx
  00111	e8 00 00 00 00	 call	 _XOnlineTaskClose@4

; 319  :     
; 320  :     WSACleanup();

  00116	e8 00 00 00 00	 call	 _WSACleanup@0

; 321  :     XNetCleanup();

  0011b	e8 00 00 00 00	 call	 _XNetCleanup@0
$L41417:

; 322  : }

  00120	33 c0		 xor	 eax, eax
  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c3		 ret	 0
_main	ENDP
XONLINE	ENDS
END
